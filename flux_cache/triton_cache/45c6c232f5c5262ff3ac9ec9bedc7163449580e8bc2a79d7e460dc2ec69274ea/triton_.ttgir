#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0), %arg4: i32 loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0), %arg5: i32 loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":18:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<512xbf16, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<512xf64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<6.250000e-02> : tensor<512xf64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg6 : i32 -> tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<512xi32, #blocked> loc(#loc6)
    %7 = arith.divsi %4, %cst_5 : tensor<512xi32, #blocked> loc(#loc7)
    %8 = arith.remsi %4, %cst_5 : tensor<512xi32, #blocked> loc(#loc8)
    %9 = tt.splat %arg4 : i32 -> tensor<512xi32, #blocked> loc(#loc9)
    %10 = arith.cmpi slt, %7, %9 : tensor<512xi32, #blocked> loc(#loc9)
    %11 = arith.muli %7, %cst_4 : tensor<512xi32, #blocked> loc(#loc10)
    %12 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %13 = tt.addptr %12, %11 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc11)
    %14 = arith.andi %10, %6 : tensor<512xi1, #blocked> loc(#loc12)
    %15 = tt.load %13, %14, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc13)
    %16 = arith.extf %15 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc14)
    %17 = arith.cmpi sge, %7, %9 : tensor<512xi32, #blocked> loc(#loc15)
    %18 = arith.muli %arg4, %c-1_i32 : i32 loc(#loc16)
    %19 = tt.splat %18 : i32 -> tensor<512xi32, #blocked> loc(#loc17)
    %20 = arith.addi %7, %19 : tensor<512xi32, #blocked> loc(#loc17)
    %21 = arith.muli %20, %cst_4 : tensor<512xi32, #blocked> loc(#loc18)
    %22 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc19)
    %23 = tt.addptr %22, %21 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %24 = arith.andi %17, %6 : tensor<512xi1, #blocked> loc(#loc20)
    %25 = tt.load %23, %24, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc21)
    %26 = arith.extf %25 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc22)
    %27 = arith.select %10, %16, %26 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc23)
    %28 = arith.extf %27 : tensor<512xf32, #blocked> to tensor<512xf64, #blocked> loc(#loc24)
    %29 = arith.sitofp %arg5 : i32 to f64 loc(#loc25)
    %30 = arith.divsi %8, %cst_3 : tensor<512xi32, #blocked> loc(#loc26)
    %31 = arith.muli %30, %cst_3 : tensor<512xi32, #blocked> loc(#loc27)
    %32 = arith.sitofp %31 : tensor<512xi32, #blocked> to tensor<512xf64, #blocked> loc(#loc28)
    %33 = arith.mulf %32, %cst_2 : tensor<512xf64, #blocked> loc(#loc29)
    %34 = tt.splat %29 : f64 -> tensor<512xf64, #blocked> loc(#loc30)
    %35 = tt.extern_elementwise %34, %33 {libname = "", libpath = "", pure = true, symbol = "__nv_pow"} : (tensor<512xf64, #blocked>, tensor<512xf64, #blocked>) -> tensor<512xf64, #blocked> loc(#loc30)
    %36 = arith.divf %cst_0, %35 : tensor<512xf64, #blocked> loc(#loc31)
    %37 = arith.mulf %28, %36 : tensor<512xf64, #blocked> loc(#loc32)
    %38 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_cos"} : (tensor<512xf64, #blocked>) -> tensor<512xf64, #blocked> loc(#loc33)
    %39 = arith.truncf %38 : tensor<512xf64, #blocked> to tensor<512xf32, #blocked> loc(#loc34)
    %40 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_sin"} : (tensor<512xf64, #blocked>) -> tensor<512xf64, #blocked> loc(#loc35)
    %41 = arith.truncf %40 : tensor<512xf64, #blocked> to tensor<512xf32, #blocked> loc(#loc36)
    %42 = arith.muli %7, %cst_1 : tensor<512xi32, #blocked> loc(#loc37)
    %43 = arith.addi %8, %42 : tensor<512xi32, #blocked> loc(#loc38)
    %44 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc39)
    %45 = tt.addptr %44, %43 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc39)
    tt.store %45, %39, %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %46 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc41)
    %47 = tt.addptr %46, %43 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc41)
    tt.store %47, %41, %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":19:28)
#loc3 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":19:33)
#loc4 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":20:36)
#loc5 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":20:23)
#loc6 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":21:21)
#loc7 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":22:20)
#loc8 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":23:18)
#loc9 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":28:18)
#loc10 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":29:32)
#loc11 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":29:30)
#loc12 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":29:44)
#loc13 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":29:37)
#loc14 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":29:95)
#loc15 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":30:19)
#loc16 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:44)
#loc17 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:39)
#loc18 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:33)
#loc19 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:30)
#loc20 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:59)
#loc21 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:52)
#loc22 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":33:110)
#loc23 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":34:33)
#loc24 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":36:21)
#loc25 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":37:37)
#loc26 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":39:21)
#loc27 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":39:15)
#loc28 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":40:21)
#loc29 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":42:20)
#loc30 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":43:33)
#loc31 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":45:20)
#loc32 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":49:20)
#loc33 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":50:26)
#loc34 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":51:21)
#loc35 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":52:26)
#loc36 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":53:21)
#loc37 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":54:35)
#loc38 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":54:31)
#loc39 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":54:25)
#loc40 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":54:48)
#loc41 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":55:25)
#loc42 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":55:48)
#loc43 = loc("/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py":55:4)
