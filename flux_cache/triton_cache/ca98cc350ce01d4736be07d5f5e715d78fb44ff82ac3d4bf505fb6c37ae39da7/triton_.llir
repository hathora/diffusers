; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = mul i32 %4, 12288, !dbg !10
  %7 = icmp eq i32 %6, 0, !dbg !11
  br i1 %7, label %common.ret, label %8, !dbg !11

common.ret:                                       ; preds = %5, %__nv_tanhf.exit2732
  ret void, !dbg !12

8:                                                ; preds = %5
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !13
  %10 = add i32 %4, 127, !dbg !14
  %11 = sdiv i32 %10, 128, !dbg !15
  %.frozen = freeze i32 %9
  %12 = sdiv i32 %.frozen, 768, !dbg !16
  %13 = shl nsw i32 %12, 3, !dbg !17
  %14 = sub nsw i32 %11, %13, !dbg !18
  %15 = tail call i32 @llvm.smin.i32(i32 %14, i32 8), !dbg !19
  %16 = srem i32 %9, %15, !dbg !20
  %17 = add nsw i32 %13, %16, !dbg !21
  %18 = mul i32 %12, 768
  %.decomposed = sub i32 %.frozen, %18
  %19 = sdiv i32 %.decomposed, %15, !dbg !22
  %20 = shl i32 %17, 7, !dbg !23
  %21 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !24
  %22 = lshr i32 %21, 5, !dbg !24
  %23 = lshr i32 %21, 3, !dbg !24
  %24 = and i32 %23, 15, !dbg !24
  %25 = or disjoint i32 %24, 16, !dbg !24
  %26 = or disjoint i32 %24, 32, !dbg !24
  %27 = or disjoint i32 %24, 48, !dbg !24
  %28 = or disjoint i32 %24, 64, !dbg !24
  %29 = or disjoint i32 %24, 80, !dbg !24
  %30 = or disjoint i32 %24, 96, !dbg !24
  %31 = or disjoint i32 %24, 112, !dbg !24
  %32 = lshr i32 %21, 4, !dbg !24
  %33 = and i32 %32, 7, !dbg !24
  %34 = shl i32 %21, 3, !dbg !24
  %35 = and i32 %34, 56, !dbg !24
  %36 = or disjoint i32 %20, %24, !dbg !25
  %37 = or disjoint i32 %20, %25, !dbg !25
  %38 = or disjoint i32 %20, %26, !dbg !25
  %39 = or disjoint i32 %20, %27, !dbg !25
  %40 = or disjoint i32 %20, %28, !dbg !25
  %41 = or disjoint i32 %20, %29, !dbg !25
  %42 = or disjoint i32 %20, %30, !dbg !25
  %43 = or disjoint i32 %20, %31, !dbg !25
  %44 = or disjoint i32 %20, %33, !dbg !24
  %45 = shl nsw i32 %19, 7, !dbg !26
  %46 = or disjoint i32 %45, %24, !dbg !27
  %47 = or disjoint i32 %45, %25, !dbg !27
  %48 = or disjoint i32 %45, %26, !dbg !27
  %49 = or disjoint i32 %45, %27, !dbg !27
  %50 = or disjoint i32 %45, %28, !dbg !27
  %51 = or disjoint i32 %45, %29, !dbg !27
  %52 = or disjoint i32 %45, %30, !dbg !27
  %53 = or disjoint i32 %45, %31, !dbg !27
  %54 = srem i32 %36, %4, !dbg !28
  %55 = srem i32 %37, %4, !dbg !28
  %56 = srem i32 %38, %4, !dbg !28
  %57 = srem i32 %39, %4, !dbg !28
  %58 = srem i32 %40, %4, !dbg !28
  %59 = srem i32 %41, %4, !dbg !28
  %60 = srem i32 %42, %4, !dbg !28
  %61 = srem i32 %43, %4, !dbg !28
  %62 = srem i32 %46, 12288, !dbg !29
  %63 = srem i32 %47, 12288, !dbg !29
  %64 = srem i32 %48, 12288, !dbg !29
  %65 = srem i32 %49, 12288, !dbg !29
  %66 = srem i32 %50, 12288, !dbg !29
  %67 = srem i32 %51, 12288, !dbg !29
  %68 = srem i32 %52, 12288, !dbg !29
  %69 = srem i32 %53, 12288, !dbg !29
  %70 = mul i32 %54, 3072, !dbg !30
  %71 = mul i32 %55, 3072, !dbg !30
  %72 = mul i32 %56, 3072, !dbg !30
  %73 = mul i32 %57, 3072, !dbg !30
  %74 = mul i32 %58, 3072, !dbg !30
  %75 = mul i32 %59, 3072, !dbg !30
  %76 = mul i32 %60, 3072, !dbg !30
  %77 = mul i32 %61, 3072, !dbg !30
  %78 = or disjoint i32 %70, %35, !dbg !31
  %79 = or disjoint i32 %71, %35, !dbg !31
  %80 = or disjoint i32 %72, %35, !dbg !31
  %81 = or disjoint i32 %73, %35, !dbg !31
  %82 = or disjoint i32 %74, %35, !dbg !31
  %83 = or disjoint i32 %75, %35, !dbg !31
  %84 = or disjoint i32 %76, %35, !dbg !31
  %85 = or disjoint i32 %77, %35, !dbg !31
  %86 = sext i32 %78 to i64, !dbg !32
  %87 = getelementptr i16, ptr addrspace(1) %0, i64 %86, !dbg !32
  %88 = sext i32 %79 to i64, !dbg !32
  %89 = getelementptr i16, ptr addrspace(1) %0, i64 %88, !dbg !32
  %90 = sext i32 %80 to i64, !dbg !32
  %91 = getelementptr i16, ptr addrspace(1) %0, i64 %90, !dbg !32
  %92 = sext i32 %81 to i64, !dbg !32
  %93 = getelementptr i16, ptr addrspace(1) %0, i64 %92, !dbg !32
  %94 = sext i32 %82 to i64, !dbg !32
  %95 = getelementptr i16, ptr addrspace(1) %0, i64 %94, !dbg !32
  %96 = sext i32 %83 to i64, !dbg !32
  %97 = getelementptr i16, ptr addrspace(1) %0, i64 %96, !dbg !32
  %98 = sext i32 %84 to i64, !dbg !32
  %99 = getelementptr i16, ptr addrspace(1) %0, i64 %98, !dbg !32
  %100 = sext i32 %85 to i64, !dbg !32
  %101 = getelementptr i16, ptr addrspace(1) %0, i64 %100, !dbg !32
  %102 = mul nsw i32 %62, 3072, !dbg !33
  %103 = mul nsw i32 %63, 3072, !dbg !33
  %104 = mul nsw i32 %64, 3072, !dbg !33
  %105 = mul nsw i32 %65, 3072, !dbg !33
  %106 = mul nsw i32 %66, 3072, !dbg !33
  %107 = mul nsw i32 %67, 3072, !dbg !33
  %108 = mul nsw i32 %68, 3072, !dbg !33
  %109 = mul nsw i32 %69, 3072, !dbg !33
  %110 = or disjoint i32 %102, %35, !dbg !34
  %111 = or disjoint i32 %103, %35, !dbg !34
  %112 = or disjoint i32 %104, %35, !dbg !34
  %113 = or disjoint i32 %105, %35, !dbg !34
  %114 = or disjoint i32 %106, %35, !dbg !34
  %115 = or disjoint i32 %107, %35, !dbg !34
  %116 = or disjoint i32 %108, %35, !dbg !34
  %117 = or disjoint i32 %109, %35, !dbg !34
  %118 = sext i32 %110 to i64, !dbg !35
  %119 = getelementptr i16, ptr addrspace(1) %1, i64 %118, !dbg !35
  %120 = sext i32 %111 to i64, !dbg !35
  %121 = getelementptr i16, ptr addrspace(1) %1, i64 %120, !dbg !35
  %122 = sext i32 %112 to i64, !dbg !35
  %123 = getelementptr i16, ptr addrspace(1) %1, i64 %122, !dbg !35
  %124 = sext i32 %113 to i64, !dbg !35
  %125 = getelementptr i16, ptr addrspace(1) %1, i64 %124, !dbg !35
  %126 = sext i32 %114 to i64, !dbg !35
  %127 = getelementptr i16, ptr addrspace(1) %1, i64 %126, !dbg !35
  %128 = sext i32 %115 to i64, !dbg !35
  %129 = getelementptr i16, ptr addrspace(1) %1, i64 %128, !dbg !35
  %130 = sext i32 %116 to i64, !dbg !35
  %131 = getelementptr i16, ptr addrspace(1) %1, i64 %130, !dbg !35
  %132 = sext i32 %117 to i64, !dbg !35
  %133 = getelementptr i16, ptr addrspace(1) %1, i64 %132, !dbg !35
  %134 = shl nuw nsw i32 %24, 6, !dbg !36
  %135 = xor i32 %34, %21, !dbg !36
  %136 = and i32 %135, 56, !dbg !36
  %137 = or disjoint i32 %134, %136, !dbg !36
  %138 = zext nneg i32 %137 to i64, !dbg !36
  %139 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %138, !dbg !36
  %140 = shl nuw nsw i32 %25, 6, !dbg !36
  %141 = or disjoint i32 %140, %136, !dbg !36
  %142 = zext nneg i32 %141 to i64, !dbg !36
  %143 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %142, !dbg !36
  %144 = shl nuw nsw i32 %26, 6, !dbg !36
  %145 = or disjoint i32 %144, %136, !dbg !36
  %146 = zext nneg i32 %145 to i64, !dbg !36
  %147 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %146, !dbg !36
  %148 = shl nuw nsw i32 %27, 6, !dbg !36
  %149 = or disjoint i32 %148, %136, !dbg !36
  %150 = zext nneg i32 %149 to i64, !dbg !36
  %151 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %150, !dbg !36
  %152 = shl nuw nsw i32 %28, 6, !dbg !36
  %153 = or disjoint i32 %152, %136, !dbg !36
  %154 = zext nneg i32 %153 to i64, !dbg !36
  %155 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %154, !dbg !36
  %156 = shl nuw nsw i32 %29, 6, !dbg !36
  %157 = or disjoint i32 %156, %136, !dbg !36
  %158 = zext nneg i32 %157 to i64, !dbg !36
  %159 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %158, !dbg !36
  %160 = shl nuw nsw i32 %30, 6, !dbg !36
  %161 = or disjoint i32 %160, %136, !dbg !36
  %162 = zext nneg i32 %161 to i64, !dbg !36
  %163 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %162, !dbg !36
  %164 = shl nuw nsw i32 %31, 6, !dbg !36
  %165 = or disjoint i32 %164, %136, !dbg !36
  %166 = zext nneg i32 %165 to i64, !dbg !36
  %167 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %166, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %139, ptr addrspace(1) %87, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %143, ptr addrspace(1) %89, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %147, ptr addrspace(1) %91, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %151, ptr addrspace(1) %93, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %155, ptr addrspace(1) %95, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %159, ptr addrspace(1) %97, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %163, ptr addrspace(1) %99, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %167, ptr addrspace(1) %101, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #5, !dbg !36
  %168 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %138, !dbg !37
  %169 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %142, !dbg !37
  %170 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %146, !dbg !37
  %171 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %150, !dbg !37
  %172 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %154, !dbg !37
  %173 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %158, !dbg !37
  %174 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %162, !dbg !37
  %175 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %166, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %168, ptr addrspace(1) %119, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %169, ptr addrspace(1) %121, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %170, ptr addrspace(1) %123, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %171, ptr addrspace(1) %125, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %172, ptr addrspace(1) %127, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %173, ptr addrspace(1) %129, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %174, ptr addrspace(1) %131, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %175, ptr addrspace(1) %133, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #5, !dbg !37
  %176 = getelementptr i8, ptr addrspace(1) %87, i64 128, !dbg !38
  %177 = getelementptr i8, ptr addrspace(1) %89, i64 128, !dbg !38
  %178 = getelementptr i8, ptr addrspace(1) %91, i64 128, !dbg !38
  %179 = getelementptr i8, ptr addrspace(1) %93, i64 128, !dbg !38
  %180 = getelementptr i8, ptr addrspace(1) %95, i64 128, !dbg !38
  %181 = getelementptr i8, ptr addrspace(1) %97, i64 128, !dbg !38
  %182 = getelementptr i8, ptr addrspace(1) %99, i64 128, !dbg !38
  %183 = getelementptr i8, ptr addrspace(1) %101, i64 128, !dbg !38
  %184 = getelementptr i8, ptr addrspace(1) %119, i64 128, !dbg !39
  %185 = getelementptr i8, ptr addrspace(1) %121, i64 128, !dbg !39
  %186 = getelementptr i8, ptr addrspace(1) %123, i64 128, !dbg !39
  %187 = getelementptr i8, ptr addrspace(1) %125, i64 128, !dbg !39
  %188 = getelementptr i8, ptr addrspace(1) %127, i64 128, !dbg !39
  %189 = getelementptr i8, ptr addrspace(1) %129, i64 128, !dbg !39
  %190 = getelementptr i8, ptr addrspace(1) %131, i64 128, !dbg !39
  %191 = getelementptr i8, ptr addrspace(1) %133, i64 128, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %192 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %138, !dbg !36
  %193 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %142, !dbg !36
  %194 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %146, !dbg !36
  %195 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %150, !dbg !36
  %196 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %154, !dbg !36
  %197 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %158, !dbg !36
  %198 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %162, !dbg !36
  %199 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %166, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %192, ptr addrspace(1) %176, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %193, ptr addrspace(1) %177, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %194, ptr addrspace(1) %178, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %195, ptr addrspace(1) %179, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %196, ptr addrspace(1) %180, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %197, ptr addrspace(1) %181, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %198, ptr addrspace(1) %182, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %199, ptr addrspace(1) %183, i32 16, i1 true) #5, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #5, !dbg !36
  %200 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %138, !dbg !37
  %201 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %142, !dbg !37
  %202 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %146, !dbg !37
  %203 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %150, !dbg !37
  %204 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %154, !dbg !37
  %205 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %158, !dbg !37
  %206 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %162, !dbg !37
  %207 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 65536), i64 %166, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %200, ptr addrspace(1) %184, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %201, ptr addrspace(1) %185, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %202, ptr addrspace(1) %186, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %203, ptr addrspace(1) %187, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %204, ptr addrspace(1) %188, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %205, ptr addrspace(1) %189, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %206, ptr addrspace(1) %190, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %207, ptr addrspace(1) %191, i32 16, i1 true) #5, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #5, !dbg !37
  %208 = and i32 %22, 134217724
  br label %209, !dbg !40

209:                                              ; preds = %8, %209
  %210 = phi i32 [ -1, %8 ], [ %344, %209 ]
  %211 = phi i32 [ 1, %8 ], [ %1046, %209 ]
  %.pn1442749 = phi ptr addrspace(1) [ %191, %8 ], [ %1043, %209 ]
  %.pn1602748 = phi ptr addrspace(1) [ %190, %8 ], [ %1042, %209 ]
  %.pn1762747 = phi ptr addrspace(1) [ %189, %8 ], [ %1041, %209 ]
  %.pn1922746 = phi ptr addrspace(1) [ %188, %8 ], [ %1040, %209 ]
  %.pn2082745 = phi ptr addrspace(1) [ %187, %8 ], [ %1039, %209 ]
  %.pn2242744 = phi ptr addrspace(1) [ %186, %8 ], [ %1038, %209 ]
  %.pn2402743 = phi ptr addrspace(1) [ %185, %8 ], [ %1037, %209 ]
  %.pn2562742 = phi ptr addrspace(1) [ %184, %8 ], [ %1036, %209 ]
  %.pn162741 = phi ptr addrspace(1) [ %183, %8 ], [ %1035, %209 ]
  %.pn322740 = phi ptr addrspace(1) [ %182, %8 ], [ %1034, %209 ]
  %.pn482739 = phi ptr addrspace(1) [ %181, %8 ], [ %1033, %209 ]
  %.pn642738 = phi ptr addrspace(1) [ %180, %8 ], [ %1032, %209 ]
  %.pn802737 = phi ptr addrspace(1) [ %179, %8 ], [ %1031, %209 ]
  %.pn962736 = phi ptr addrspace(1) [ %178, %8 ], [ %1030, %209 ]
  %.pn1122735 = phi ptr addrspace(1) [ %177, %8 ], [ %1029, %209 ]
  %.pn1282734 = phi ptr addrspace(1) [ %176, %8 ], [ %1028, %209 ]
  %212 = phi float [ 0.000000e+00, %8 ], [ %900, %209 ]
  %213 = phi float [ 0.000000e+00, %8 ], [ %901, %209 ]
  %214 = phi float [ 0.000000e+00, %8 ], [ %902, %209 ]
  %215 = phi float [ 0.000000e+00, %8 ], [ %903, %209 ]
  %216 = phi float [ 0.000000e+00, %8 ], [ %904, %209 ]
  %217 = phi float [ 0.000000e+00, %8 ], [ %905, %209 ]
  %218 = phi float [ 0.000000e+00, %8 ], [ %906, %209 ]
  %219 = phi float [ 0.000000e+00, %8 ], [ %907, %209 ]
  %220 = phi float [ 0.000000e+00, %8 ], [ %908, %209 ]
  %221 = phi float [ 0.000000e+00, %8 ], [ %909, %209 ]
  %222 = phi float [ 0.000000e+00, %8 ], [ %910, %209 ]
  %223 = phi float [ 0.000000e+00, %8 ], [ %911, %209 ]
  %224 = phi float [ 0.000000e+00, %8 ], [ %912, %209 ]
  %225 = phi float [ 0.000000e+00, %8 ], [ %913, %209 ]
  %226 = phi float [ 0.000000e+00, %8 ], [ %914, %209 ]
  %227 = phi float [ 0.000000e+00, %8 ], [ %915, %209 ]
  %228 = phi float [ 0.000000e+00, %8 ], [ %916, %209 ]
  %229 = phi float [ 0.000000e+00, %8 ], [ %917, %209 ]
  %230 = phi float [ 0.000000e+00, %8 ], [ %918, %209 ]
  %231 = phi float [ 0.000000e+00, %8 ], [ %919, %209 ]
  %232 = phi float [ 0.000000e+00, %8 ], [ %920, %209 ]
  %233 = phi float [ 0.000000e+00, %8 ], [ %921, %209 ]
  %234 = phi float [ 0.000000e+00, %8 ], [ %922, %209 ]
  %235 = phi float [ 0.000000e+00, %8 ], [ %923, %209 ]
  %236 = phi float [ 0.000000e+00, %8 ], [ %924, %209 ]
  %237 = phi float [ 0.000000e+00, %8 ], [ %925, %209 ]
  %238 = phi float [ 0.000000e+00, %8 ], [ %926, %209 ]
  %239 = phi float [ 0.000000e+00, %8 ], [ %927, %209 ]
  %240 = phi float [ 0.000000e+00, %8 ], [ %928, %209 ]
  %241 = phi float [ 0.000000e+00, %8 ], [ %929, %209 ]
  %242 = phi float [ 0.000000e+00, %8 ], [ %930, %209 ]
  %243 = phi float [ 0.000000e+00, %8 ], [ %931, %209 ]
  %244 = phi float [ 0.000000e+00, %8 ], [ %932, %209 ]
  %245 = phi float [ 0.000000e+00, %8 ], [ %933, %209 ]
  %246 = phi float [ 0.000000e+00, %8 ], [ %934, %209 ]
  %247 = phi float [ 0.000000e+00, %8 ], [ %935, %209 ]
  %248 = phi float [ 0.000000e+00, %8 ], [ %936, %209 ]
  %249 = phi float [ 0.000000e+00, %8 ], [ %937, %209 ]
  %250 = phi float [ 0.000000e+00, %8 ], [ %938, %209 ]
  %251 = phi float [ 0.000000e+00, %8 ], [ %939, %209 ]
  %252 = phi float [ 0.000000e+00, %8 ], [ %940, %209 ]
  %253 = phi float [ 0.000000e+00, %8 ], [ %941, %209 ]
  %254 = phi float [ 0.000000e+00, %8 ], [ %942, %209 ]
  %255 = phi float [ 0.000000e+00, %8 ], [ %943, %209 ]
  %256 = phi float [ 0.000000e+00, %8 ], [ %944, %209 ]
  %257 = phi float [ 0.000000e+00, %8 ], [ %945, %209 ]
  %258 = phi float [ 0.000000e+00, %8 ], [ %946, %209 ]
  %259 = phi float [ 0.000000e+00, %8 ], [ %947, %209 ]
  %260 = phi float [ 0.000000e+00, %8 ], [ %948, %209 ]
  %261 = phi float [ 0.000000e+00, %8 ], [ %949, %209 ]
  %262 = phi float [ 0.000000e+00, %8 ], [ %950, %209 ]
  %263 = phi float [ 0.000000e+00, %8 ], [ %951, %209 ]
  %264 = phi float [ 0.000000e+00, %8 ], [ %952, %209 ]
  %265 = phi float [ 0.000000e+00, %8 ], [ %953, %209 ]
  %266 = phi float [ 0.000000e+00, %8 ], [ %954, %209 ]
  %267 = phi float [ 0.000000e+00, %8 ], [ %955, %209 ]
  %268 = phi float [ 0.000000e+00, %8 ], [ %956, %209 ]
  %269 = phi float [ 0.000000e+00, %8 ], [ %957, %209 ]
  %270 = phi float [ 0.000000e+00, %8 ], [ %958, %209 ]
  %271 = phi float [ 0.000000e+00, %8 ], [ %959, %209 ]
  %272 = phi float [ 0.000000e+00, %8 ], [ %960, %209 ]
  %273 = phi float [ 0.000000e+00, %8 ], [ %961, %209 ]
  %274 = phi float [ 0.000000e+00, %8 ], [ %962, %209 ]
  %275 = phi float [ 0.000000e+00, %8 ], [ %963, %209 ]
  %276 = phi float [ 0.000000e+00, %8 ], [ %964, %209 ]
  %277 = phi float [ 0.000000e+00, %8 ], [ %965, %209 ]
  %278 = phi float [ 0.000000e+00, %8 ], [ %966, %209 ]
  %279 = phi float [ 0.000000e+00, %8 ], [ %967, %209 ]
  %280 = phi float [ 0.000000e+00, %8 ], [ %968, %209 ]
  %281 = phi float [ 0.000000e+00, %8 ], [ %969, %209 ]
  %282 = phi float [ 0.000000e+00, %8 ], [ %970, %209 ]
  %283 = phi float [ 0.000000e+00, %8 ], [ %971, %209 ]
  %284 = phi float [ 0.000000e+00, %8 ], [ %972, %209 ]
  %285 = phi float [ 0.000000e+00, %8 ], [ %973, %209 ]
  %286 = phi float [ 0.000000e+00, %8 ], [ %974, %209 ]
  %287 = phi float [ 0.000000e+00, %8 ], [ %975, %209 ]
  %288 = phi float [ 0.000000e+00, %8 ], [ %976, %209 ]
  %289 = phi float [ 0.000000e+00, %8 ], [ %977, %209 ]
  %290 = phi float [ 0.000000e+00, %8 ], [ %978, %209 ]
  %291 = phi float [ 0.000000e+00, %8 ], [ %979, %209 ]
  %292 = phi float [ 0.000000e+00, %8 ], [ %980, %209 ]
  %293 = phi float [ 0.000000e+00, %8 ], [ %981, %209 ]
  %294 = phi float [ 0.000000e+00, %8 ], [ %982, %209 ]
  %295 = phi float [ 0.000000e+00, %8 ], [ %983, %209 ]
  %296 = phi float [ 0.000000e+00, %8 ], [ %984, %209 ]
  %297 = phi float [ 0.000000e+00, %8 ], [ %985, %209 ]
  %298 = phi float [ 0.000000e+00, %8 ], [ %986, %209 ]
  %299 = phi float [ 0.000000e+00, %8 ], [ %987, %209 ]
  %300 = phi float [ 0.000000e+00, %8 ], [ %988, %209 ]
  %301 = phi float [ 0.000000e+00, %8 ], [ %989, %209 ]
  %302 = phi float [ 0.000000e+00, %8 ], [ %990, %209 ]
  %303 = phi float [ 0.000000e+00, %8 ], [ %991, %209 ]
  %304 = phi float [ 0.000000e+00, %8 ], [ %992, %209 ]
  %305 = phi float [ 0.000000e+00, %8 ], [ %993, %209 ]
  %306 = phi float [ 0.000000e+00, %8 ], [ %994, %209 ]
  %307 = phi float [ 0.000000e+00, %8 ], [ %995, %209 ]
  %308 = phi float [ 0.000000e+00, %8 ], [ %996, %209 ]
  %309 = phi float [ 0.000000e+00, %8 ], [ %997, %209 ]
  %310 = phi float [ 0.000000e+00, %8 ], [ %998, %209 ]
  %311 = phi float [ 0.000000e+00, %8 ], [ %999, %209 ]
  %312 = phi float [ 0.000000e+00, %8 ], [ %1000, %209 ]
  %313 = phi float [ 0.000000e+00, %8 ], [ %1001, %209 ]
  %314 = phi float [ 0.000000e+00, %8 ], [ %1002, %209 ]
  %315 = phi float [ 0.000000e+00, %8 ], [ %1003, %209 ]
  %316 = phi float [ 0.000000e+00, %8 ], [ %1004, %209 ]
  %317 = phi float [ 0.000000e+00, %8 ], [ %1005, %209 ]
  %318 = phi float [ 0.000000e+00, %8 ], [ %1006, %209 ]
  %319 = phi float [ 0.000000e+00, %8 ], [ %1007, %209 ]
  %320 = phi float [ 0.000000e+00, %8 ], [ %1008, %209 ]
  %321 = phi float [ 0.000000e+00, %8 ], [ %1009, %209 ]
  %322 = phi float [ 0.000000e+00, %8 ], [ %1010, %209 ]
  %323 = phi float [ 0.000000e+00, %8 ], [ %1011, %209 ]
  %324 = phi float [ 0.000000e+00, %8 ], [ %1012, %209 ]
  %325 = phi float [ 0.000000e+00, %8 ], [ %1013, %209 ]
  %326 = phi float [ 0.000000e+00, %8 ], [ %1014, %209 ]
  %327 = phi float [ 0.000000e+00, %8 ], [ %1015, %209 ]
  %328 = phi float [ 0.000000e+00, %8 ], [ %1016, %209 ]
  %329 = phi float [ 0.000000e+00, %8 ], [ %1017, %209 ]
  %330 = phi float [ 0.000000e+00, %8 ], [ %1018, %209 ]
  %331 = phi float [ 0.000000e+00, %8 ], [ %1019, %209 ]
  %332 = phi float [ 0.000000e+00, %8 ], [ %1020, %209 ]
  %333 = phi float [ 0.000000e+00, %8 ], [ %1021, %209 ]
  %334 = phi float [ 0.000000e+00, %8 ], [ %1022, %209 ]
  %335 = phi float [ 0.000000e+00, %8 ], [ %1023, %209 ]
  %336 = phi float [ 0.000000e+00, %8 ], [ %1024, %209 ]
  %337 = phi float [ 0.000000e+00, %8 ], [ %1025, %209 ]
  %338 = phi float [ 0.000000e+00, %8 ], [ %1026, %209 ]
  %339 = phi float [ 0.000000e+00, %8 ], [ %1027, %209 ]
  %340 = phi i32 [ 0, %8 ], [ %1068, %209 ]
  %341 = icmp ult i32 %340, 2944, !dbg !40
  %342 = add i32 %210, 1, !dbg !40
  %343 = icmp slt i32 %342, 3, !dbg !40
  %344 = select i1 %343, i32 %342, i32 0, !dbg !40
  %345 = shl i32 %344, 13, !dbg !36
  %346 = sext i32 %345 to i64, !dbg !36
  %347 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %346, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x2;", ""() #5, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %348 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %346, !dbg !37
  %349 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %208, i32 0, i32 31), !dbg !41
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #5, !dbg !41
  %350 = shl i32 %349, 7, !dbg !41
  %351 = and i32 %350, 384, !dbg !41
  %352 = zext nneg i32 %351 to i64, !dbg !41
  %353 = ptrtoint ptr addrspace(3) %347 to i64, !dbg !41
  %354 = lshr exact i64 %353, 4, !dbg !41
  %355 = and i64 %354, 16383, !dbg !41
  %356 = or disjoint i64 %355, 4611686293372403712, !dbg !41
  %357 = add nuw nsw i64 %356, %352, !dbg !41
  %358 = ptrtoint ptr addrspace(3) %348 to i64, !dbg !41
  %359 = lshr exact i64 %358, 4, !dbg !41
  %360 = and i64 %359, 16383, !dbg !41
  %361 = or disjoint i64 %360, 4611686293372403712, !dbg !41
  %362 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233, float %234, float %235, float %236, float %237, float %238, float %239, float %240, float %241, float %242, float %243, float %244, float %245, float %246, float %247, float %248, float %249, float %250, float %251, float %252, float %253, float %254, float %255, float %256, float %257, float %258, float %259, float %260, float %261, float %262, float %263, float %264, float %265, float %266, float %267, float %268, float %269, float %270, float %271, float %272, float %273, float %274, float %275, i64 %357, i64 %361) #5, !dbg !41
  %363 = add nuw nsw i64 %355, 4611686293372403714, !dbg !41
  %364 = add nuw nsw i64 %363, %352, !dbg !41
  %365 = add nuw nsw i64 %360, 4611686293372403714, !dbg !41
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 0, !dbg !41
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 1, !dbg !41
  %368 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 2, !dbg !41
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 3, !dbg !41
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 4, !dbg !41
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 5, !dbg !41
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 6, !dbg !41
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 7, !dbg !41
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 8, !dbg !41
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 9, !dbg !41
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 10, !dbg !41
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 11, !dbg !41
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 12, !dbg !41
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 13, !dbg !41
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 14, !dbg !41
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 15, !dbg !41
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 16, !dbg !41
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 17, !dbg !41
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 18, !dbg !41
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 19, !dbg !41
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 20, !dbg !41
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 21, !dbg !41
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 22, !dbg !41
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 23, !dbg !41
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 24, !dbg !41
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 25, !dbg !41
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 26, !dbg !41
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 27, !dbg !41
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 28, !dbg !41
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 29, !dbg !41
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 30, !dbg !41
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 31, !dbg !41
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 32, !dbg !41
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 33, !dbg !41
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 34, !dbg !41
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 35, !dbg !41
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 36, !dbg !41
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 37, !dbg !41
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 38, !dbg !41
  %405 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 39, !dbg !41
  %406 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 40, !dbg !41
  %407 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 41, !dbg !41
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 42, !dbg !41
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 43, !dbg !41
  %410 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 44, !dbg !41
  %411 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 45, !dbg !41
  %412 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 46, !dbg !41
  %413 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 47, !dbg !41
  %414 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 48, !dbg !41
  %415 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 49, !dbg !41
  %416 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 50, !dbg !41
  %417 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 51, !dbg !41
  %418 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 52, !dbg !41
  %419 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 53, !dbg !41
  %420 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 54, !dbg !41
  %421 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 55, !dbg !41
  %422 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 56, !dbg !41
  %423 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 57, !dbg !41
  %424 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 58, !dbg !41
  %425 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 59, !dbg !41
  %426 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 60, !dbg !41
  %427 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 61, !dbg !41
  %428 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 62, !dbg !41
  %429 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %362, 63, !dbg !41
  %430 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %366, float %367, float %368, float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388, float %389, float %390, float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, float %399, float %400, float %401, float %402, float %403, float %404, float %405, float %406, float %407, float %408, float %409, float %410, float %411, float %412, float %413, float %414, float %415, float %416, float %417, float %418, float %419, float %420, float %421, float %422, float %423, float %424, float %425, float %426, float %427, float %428, float %429, i64 %364, i64 %365) #5, !dbg !41
  %431 = add nuw nsw i64 %355, 4611686293372403716, !dbg !41
  %432 = add nuw nsw i64 %431, %352, !dbg !41
  %433 = add nuw nsw i64 %360, 4611686293372403716, !dbg !41
  %434 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 0, !dbg !41
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 1, !dbg !41
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 2, !dbg !41
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 3, !dbg !41
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 4, !dbg !41
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 5, !dbg !41
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 6, !dbg !41
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 7, !dbg !41
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 8, !dbg !41
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 9, !dbg !41
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 10, !dbg !41
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 11, !dbg !41
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 12, !dbg !41
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 13, !dbg !41
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 14, !dbg !41
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 15, !dbg !41
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 16, !dbg !41
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 17, !dbg !41
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 18, !dbg !41
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 19, !dbg !41
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 20, !dbg !41
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 21, !dbg !41
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 22, !dbg !41
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 23, !dbg !41
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 24, !dbg !41
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 25, !dbg !41
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 26, !dbg !41
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 27, !dbg !41
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 28, !dbg !41
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 29, !dbg !41
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 30, !dbg !41
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 31, !dbg !41
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 32, !dbg !41
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 33, !dbg !41
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 34, !dbg !41
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 35, !dbg !41
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 36, !dbg !41
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 37, !dbg !41
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 38, !dbg !41
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 39, !dbg !41
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 40, !dbg !41
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 41, !dbg !41
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 42, !dbg !41
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 43, !dbg !41
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 44, !dbg !41
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 45, !dbg !41
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 46, !dbg !41
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 47, !dbg !41
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 48, !dbg !41
  %483 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 49, !dbg !41
  %484 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 50, !dbg !41
  %485 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 51, !dbg !41
  %486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 52, !dbg !41
  %487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 53, !dbg !41
  %488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 54, !dbg !41
  %489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 55, !dbg !41
  %490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 56, !dbg !41
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 57, !dbg !41
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 58, !dbg !41
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 59, !dbg !41
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 60, !dbg !41
  %495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 61, !dbg !41
  %496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 62, !dbg !41
  %497 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 63, !dbg !41
  %498 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %434, float %435, float %436, float %437, float %438, float %439, float %440, float %441, float %442, float %443, float %444, float %445, float %446, float %447, float %448, float %449, float %450, float %451, float %452, float %453, float %454, float %455, float %456, float %457, float %458, float %459, float %460, float %461, float %462, float %463, float %464, float %465, float %466, float %467, float %468, float %469, float %470, float %471, float %472, float %473, float %474, float %475, float %476, float %477, float %478, float %479, float %480, float %481, float %482, float %483, float %484, float %485, float %486, float %487, float %488, float %489, float %490, float %491, float %492, float %493, float %494, float %495, float %496, float %497, i64 %432, i64 %433) #5, !dbg !41
  %499 = add nuw nsw i64 %355, 4611686293372403718, !dbg !41
  %500 = add nuw nsw i64 %499, %352, !dbg !41
  %501 = add nuw nsw i64 %360, 4611686293372403718, !dbg !41
  %502 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 0, !dbg !41
  %503 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 1, !dbg !41
  %504 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 2, !dbg !41
  %505 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 3, !dbg !41
  %506 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 4, !dbg !41
  %507 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 5, !dbg !41
  %508 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 6, !dbg !41
  %509 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 7, !dbg !41
  %510 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 8, !dbg !41
  %511 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 9, !dbg !41
  %512 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 10, !dbg !41
  %513 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 11, !dbg !41
  %514 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 12, !dbg !41
  %515 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 13, !dbg !41
  %516 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 14, !dbg !41
  %517 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 15, !dbg !41
  %518 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 16, !dbg !41
  %519 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 17, !dbg !41
  %520 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 18, !dbg !41
  %521 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 19, !dbg !41
  %522 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 20, !dbg !41
  %523 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 21, !dbg !41
  %524 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 22, !dbg !41
  %525 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 23, !dbg !41
  %526 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 24, !dbg !41
  %527 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 25, !dbg !41
  %528 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 26, !dbg !41
  %529 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 27, !dbg !41
  %530 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 28, !dbg !41
  %531 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 29, !dbg !41
  %532 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 30, !dbg !41
  %533 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 31, !dbg !41
  %534 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 32, !dbg !41
  %535 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 33, !dbg !41
  %536 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 34, !dbg !41
  %537 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 35, !dbg !41
  %538 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 36, !dbg !41
  %539 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 37, !dbg !41
  %540 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 38, !dbg !41
  %541 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 39, !dbg !41
  %542 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 40, !dbg !41
  %543 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 41, !dbg !41
  %544 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 42, !dbg !41
  %545 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 43, !dbg !41
  %546 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 44, !dbg !41
  %547 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 45, !dbg !41
  %548 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 46, !dbg !41
  %549 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 47, !dbg !41
  %550 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 48, !dbg !41
  %551 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 49, !dbg !41
  %552 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 50, !dbg !41
  %553 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 51, !dbg !41
  %554 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 52, !dbg !41
  %555 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 53, !dbg !41
  %556 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 54, !dbg !41
  %557 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 55, !dbg !41
  %558 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 56, !dbg !41
  %559 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 57, !dbg !41
  %560 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 58, !dbg !41
  %561 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 59, !dbg !41
  %562 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 60, !dbg !41
  %563 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 61, !dbg !41
  %564 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 62, !dbg !41
  %565 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %498, 63, !dbg !41
  %566 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %502, float %503, float %504, float %505, float %506, float %507, float %508, float %509, float %510, float %511, float %512, float %513, float %514, float %515, float %516, float %517, float %518, float %519, float %520, float %521, float %522, float %523, float %524, float %525, float %526, float %527, float %528, float %529, float %530, float %531, float %532, float %533, float %534, float %535, float %536, float %537, float %538, float %539, float %540, float %541, float %542, float %543, float %544, float %545, float %546, float %547, float %548, float %549, float %550, float %551, float %552, float %553, float %554, float %555, float %556, float %557, float %558, float %559, float %560, float %561, float %562, float %563, float %564, float %565, i64 %500, i64 %501) #5, !dbg !41
  %567 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 0, !dbg !41
  %568 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 1, !dbg !41
  %569 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 2, !dbg !41
  %570 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 3, !dbg !41
  %571 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 4, !dbg !41
  %572 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 5, !dbg !41
  %573 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 6, !dbg !41
  %574 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 7, !dbg !41
  %575 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 8, !dbg !41
  %576 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 9, !dbg !41
  %577 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 10, !dbg !41
  %578 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 11, !dbg !41
  %579 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 12, !dbg !41
  %580 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 13, !dbg !41
  %581 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 14, !dbg !41
  %582 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 15, !dbg !41
  %583 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 16, !dbg !41
  %584 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 17, !dbg !41
  %585 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 18, !dbg !41
  %586 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 19, !dbg !41
  %587 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 20, !dbg !41
  %588 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 21, !dbg !41
  %589 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 22, !dbg !41
  %590 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 23, !dbg !41
  %591 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 24, !dbg !41
  %592 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 25, !dbg !41
  %593 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 26, !dbg !41
  %594 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 27, !dbg !41
  %595 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 28, !dbg !41
  %596 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 29, !dbg !41
  %597 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 30, !dbg !41
  %598 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 31, !dbg !41
  %599 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 32, !dbg !41
  %600 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 33, !dbg !41
  %601 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 34, !dbg !41
  %602 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 35, !dbg !41
  %603 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 36, !dbg !41
  %604 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 37, !dbg !41
  %605 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 38, !dbg !41
  %606 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 39, !dbg !41
  %607 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 40, !dbg !41
  %608 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 41, !dbg !41
  %609 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 42, !dbg !41
  %610 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 43, !dbg !41
  %611 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 44, !dbg !41
  %612 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 45, !dbg !41
  %613 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 46, !dbg !41
  %614 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 47, !dbg !41
  %615 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 48, !dbg !41
  %616 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 49, !dbg !41
  %617 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 50, !dbg !41
  %618 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 51, !dbg !41
  %619 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 52, !dbg !41
  %620 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 53, !dbg !41
  %621 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 54, !dbg !41
  %622 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 55, !dbg !41
  %623 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 56, !dbg !41
  %624 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 57, !dbg !41
  %625 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 58, !dbg !41
  %626 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 59, !dbg !41
  %627 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 60, !dbg !41
  %628 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 61, !dbg !41
  %629 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 62, !dbg !41
  %630 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %566, 63, !dbg !41
  %631 = add nuw nsw i64 %355, 4611686293372404224, !dbg !41
  %632 = add nuw nsw i64 %631, %352, !dbg !41
  %633 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %276, float %277, float %278, float %279, float %280, float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, float %310, float %311, float %312, float %313, float %314, float %315, float %316, float %317, float %318, float %319, float %320, float %321, float %322, float %323, float %324, float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, i64 %632, i64 %361) #5, !dbg !41
  %634 = add nuw nsw i64 %355, 4611686293372404226, !dbg !41
  %635 = add nuw nsw i64 %634, %352, !dbg !41
  %636 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 0, !dbg !41
  %637 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 1, !dbg !41
  %638 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 2, !dbg !41
  %639 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 3, !dbg !41
  %640 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 4, !dbg !41
  %641 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 5, !dbg !41
  %642 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 6, !dbg !41
  %643 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 7, !dbg !41
  %644 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 8, !dbg !41
  %645 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 9, !dbg !41
  %646 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 10, !dbg !41
  %647 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 11, !dbg !41
  %648 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 12, !dbg !41
  %649 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 13, !dbg !41
  %650 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 14, !dbg !41
  %651 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 15, !dbg !41
  %652 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 16, !dbg !41
  %653 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 17, !dbg !41
  %654 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 18, !dbg !41
  %655 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 19, !dbg !41
  %656 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 20, !dbg !41
  %657 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 21, !dbg !41
  %658 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 22, !dbg !41
  %659 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 23, !dbg !41
  %660 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 24, !dbg !41
  %661 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 25, !dbg !41
  %662 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 26, !dbg !41
  %663 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 27, !dbg !41
  %664 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 28, !dbg !41
  %665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 29, !dbg !41
  %666 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 30, !dbg !41
  %667 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 31, !dbg !41
  %668 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 32, !dbg !41
  %669 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 33, !dbg !41
  %670 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 34, !dbg !41
  %671 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 35, !dbg !41
  %672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 36, !dbg !41
  %673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 37, !dbg !41
  %674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 38, !dbg !41
  %675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 39, !dbg !41
  %676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 40, !dbg !41
  %677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 41, !dbg !41
  %678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 42, !dbg !41
  %679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 43, !dbg !41
  %680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 44, !dbg !41
  %681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 45, !dbg !41
  %682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 46, !dbg !41
  %683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 47, !dbg !41
  %684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 48, !dbg !41
  %685 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 49, !dbg !41
  %686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 50, !dbg !41
  %687 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 51, !dbg !41
  %688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 52, !dbg !41
  %689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 53, !dbg !41
  %690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 54, !dbg !41
  %691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 55, !dbg !41
  %692 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 56, !dbg !41
  %693 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 57, !dbg !41
  %694 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 58, !dbg !41
  %695 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 59, !dbg !41
  %696 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 60, !dbg !41
  %697 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 61, !dbg !41
  %698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 62, !dbg !41
  %699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %633, 63, !dbg !41
  %700 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %636, float %637, float %638, float %639, float %640, float %641, float %642, float %643, float %644, float %645, float %646, float %647, float %648, float %649, float %650, float %651, float %652, float %653, float %654, float %655, float %656, float %657, float %658, float %659, float %660, float %661, float %662, float %663, float %664, float %665, float %666, float %667, float %668, float %669, float %670, float %671, float %672, float %673, float %674, float %675, float %676, float %677, float %678, float %679, float %680, float %681, float %682, float %683, float %684, float %685, float %686, float %687, float %688, float %689, float %690, float %691, float %692, float %693, float %694, float %695, float %696, float %697, float %698, float %699, i64 %635, i64 %365) #5, !dbg !41
  %701 = add nuw nsw i64 %355, 4611686293372404228, !dbg !41
  %702 = add nuw nsw i64 %701, %352, !dbg !41
  %703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 0, !dbg !41
  %704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 1, !dbg !41
  %705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 2, !dbg !41
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 3, !dbg !41
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 4, !dbg !41
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 5, !dbg !41
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 6, !dbg !41
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 7, !dbg !41
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 8, !dbg !41
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 9, !dbg !41
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 10, !dbg !41
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 11, !dbg !41
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 12, !dbg !41
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 13, !dbg !41
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 14, !dbg !41
  %718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 15, !dbg !41
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 16, !dbg !41
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 17, !dbg !41
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 18, !dbg !41
  %722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 19, !dbg !41
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 20, !dbg !41
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 21, !dbg !41
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 22, !dbg !41
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 23, !dbg !41
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 24, !dbg !41
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 25, !dbg !41
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 26, !dbg !41
  %730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 27, !dbg !41
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 28, !dbg !41
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 29, !dbg !41
  %733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 30, !dbg !41
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 31, !dbg !41
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 32, !dbg !41
  %736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 33, !dbg !41
  %737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 34, !dbg !41
  %738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 35, !dbg !41
  %739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 36, !dbg !41
  %740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 37, !dbg !41
  %741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 38, !dbg !41
  %742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 39, !dbg !41
  %743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 40, !dbg !41
  %744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 41, !dbg !41
  %745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 42, !dbg !41
  %746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 43, !dbg !41
  %747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 44, !dbg !41
  %748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 45, !dbg !41
  %749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 46, !dbg !41
  %750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 47, !dbg !41
  %751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 48, !dbg !41
  %752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 49, !dbg !41
  %753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 50, !dbg !41
  %754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 51, !dbg !41
  %755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 52, !dbg !41
  %756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 53, !dbg !41
  %757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 54, !dbg !41
  %758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 55, !dbg !41
  %759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 56, !dbg !41
  %760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 57, !dbg !41
  %761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 58, !dbg !41
  %762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 59, !dbg !41
  %763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 60, !dbg !41
  %764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 61, !dbg !41
  %765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 62, !dbg !41
  %766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 63, !dbg !41
  %767 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %703, float %704, float %705, float %706, float %707, float %708, float %709, float %710, float %711, float %712, float %713, float %714, float %715, float %716, float %717, float %718, float %719, float %720, float %721, float %722, float %723, float %724, float %725, float %726, float %727, float %728, float %729, float %730, float %731, float %732, float %733, float %734, float %735, float %736, float %737, float %738, float %739, float %740, float %741, float %742, float %743, float %744, float %745, float %746, float %747, float %748, float %749, float %750, float %751, float %752, float %753, float %754, float %755, float %756, float %757, float %758, float %759, float %760, float %761, float %762, float %763, float %764, float %765, float %766, i64 %702, i64 %433) #5, !dbg !41
  %768 = add nuw nsw i64 %355, 4611686293372404230, !dbg !41
  %769 = add nuw nsw i64 %768, %352, !dbg !41
  %770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 0, !dbg !41
  %771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 1, !dbg !41
  %772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 2, !dbg !41
  %773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 3, !dbg !41
  %774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 4, !dbg !41
  %775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 5, !dbg !41
  %776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 6, !dbg !41
  %777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 7, !dbg !41
  %778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 8, !dbg !41
  %779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 9, !dbg !41
  %780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 10, !dbg !41
  %781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 11, !dbg !41
  %782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 12, !dbg !41
  %783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 13, !dbg !41
  %784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 14, !dbg !41
  %785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 15, !dbg !41
  %786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 16, !dbg !41
  %787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 17, !dbg !41
  %788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 18, !dbg !41
  %789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 19, !dbg !41
  %790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 20, !dbg !41
  %791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 21, !dbg !41
  %792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 22, !dbg !41
  %793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 23, !dbg !41
  %794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 24, !dbg !41
  %795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 25, !dbg !41
  %796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 26, !dbg !41
  %797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 27, !dbg !41
  %798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 28, !dbg !41
  %799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 29, !dbg !41
  %800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 30, !dbg !41
  %801 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 31, !dbg !41
  %802 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 32, !dbg !41
  %803 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 33, !dbg !41
  %804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 34, !dbg !41
  %805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 35, !dbg !41
  %806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 36, !dbg !41
  %807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 37, !dbg !41
  %808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 38, !dbg !41
  %809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 39, !dbg !41
  %810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 40, !dbg !41
  %811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 41, !dbg !41
  %812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 42, !dbg !41
  %813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 43, !dbg !41
  %814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 44, !dbg !41
  %815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 45, !dbg !41
  %816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 46, !dbg !41
  %817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 47, !dbg !41
  %818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 48, !dbg !41
  %819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 49, !dbg !41
  %820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 50, !dbg !41
  %821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 51, !dbg !41
  %822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 52, !dbg !41
  %823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 53, !dbg !41
  %824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 54, !dbg !41
  %825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 55, !dbg !41
  %826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 56, !dbg !41
  %827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 57, !dbg !41
  %828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 58, !dbg !41
  %829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 59, !dbg !41
  %830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 60, !dbg !41
  %831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 61, !dbg !41
  %832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 62, !dbg !41
  %833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %767, 63, !dbg !41
  %834 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n128k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63}, $128, $129, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,l,l"(float %770, float %771, float %772, float %773, float %774, float %775, float %776, float %777, float %778, float %779, float %780, float %781, float %782, float %783, float %784, float %785, float %786, float %787, float %788, float %789, float %790, float %791, float %792, float %793, float %794, float %795, float %796, float %797, float %798, float %799, float %800, float %801, float %802, float %803, float %804, float %805, float %806, float %807, float %808, float %809, float %810, float %811, float %812, float %813, float %814, float %815, float %816, float %817, float %818, float %819, float %820, float %821, float %822, float %823, float %824, float %825, float %826, float %827, float %828, float %829, float %830, float %831, float %832, float %833, i64 %769, i64 %501) #5, !dbg !41
  %835 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 0, !dbg !41
  %836 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 1, !dbg !41
  %837 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 2, !dbg !41
  %838 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 3, !dbg !41
  %839 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 4, !dbg !41
  %840 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 5, !dbg !41
  %841 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 6, !dbg !41
  %842 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 7, !dbg !41
  %843 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 8, !dbg !41
  %844 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 9, !dbg !41
  %845 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 10, !dbg !41
  %846 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 11, !dbg !41
  %847 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 12, !dbg !41
  %848 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 13, !dbg !41
  %849 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 14, !dbg !41
  %850 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 15, !dbg !41
  %851 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 16, !dbg !41
  %852 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 17, !dbg !41
  %853 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 18, !dbg !41
  %854 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 19, !dbg !41
  %855 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 20, !dbg !41
  %856 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 21, !dbg !41
  %857 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 22, !dbg !41
  %858 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 23, !dbg !41
  %859 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 24, !dbg !41
  %860 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 25, !dbg !41
  %861 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 26, !dbg !41
  %862 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 27, !dbg !41
  %863 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 28, !dbg !41
  %864 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 29, !dbg !41
  %865 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 30, !dbg !41
  %866 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 31, !dbg !41
  %867 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 32, !dbg !41
  %868 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 33, !dbg !41
  %869 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 34, !dbg !41
  %870 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 35, !dbg !41
  %871 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 36, !dbg !41
  %872 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 37, !dbg !41
  %873 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 38, !dbg !41
  %874 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 39, !dbg !41
  %875 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 40, !dbg !41
  %876 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 41, !dbg !41
  %877 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 42, !dbg !41
  %878 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 43, !dbg !41
  %879 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 44, !dbg !41
  %880 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 45, !dbg !41
  %881 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 46, !dbg !41
  %882 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 47, !dbg !41
  %883 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 48, !dbg !41
  %884 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 49, !dbg !41
  %885 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 50, !dbg !41
  %886 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 51, !dbg !41
  %887 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 52, !dbg !41
  %888 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 53, !dbg !41
  %889 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 54, !dbg !41
  %890 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 55, !dbg !41
  %891 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 56, !dbg !41
  %892 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 57, !dbg !41
  %893 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 58, !dbg !41
  %894 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 59, !dbg !41
  %895 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 60, !dbg !41
  %896 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 61, !dbg !41
  %897 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 62, !dbg !41
  %898 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %834, 63, !dbg !41
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #5, !dbg !41
  %899 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71,$72,$73,$74,$75,$76,$77,$78,$79,$80,$81,$82,$83,$84,$85,$86,$87,$88,$89,$90,$91,$92,$93,$94,$95,$96,$97,$98,$99,$100,$101,$102,$103,$104,$105,$106,$107,$108,$109,$110,$111,$112,$113,$114,$115,$116,$117,$118,$119,$120,$121,$122,$123,$124,$125,$126,$127,$128,$129,$130,$131,$132,$133,$134,$135,$136,$137\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137"(float %567, float %568, float %569, float %570, float %571, float %572, float %573, float %574, float %575, float %576, float %577, float %578, float %579, float %580, float %581, float %582, float %583, float %584, float %585, float %586, float %587, float %588, float %589, float %590, float %591, float %592, float %593, float %594, float %595, float %596, float %597, float %598, float %599, float %600, float %601, float %602, float %603, float %604, float %605, float %606, float %607, float %608, float %609, float %610, float %611, float %612, float %613, float %614, float %615, float %616, float %617, float %618, float %619, float %620, float %621, float %622, float %623, float %624, float %625, float %626, float %627, float %628, float %629, float %630, float %835, float %836, float %837, float %838, float %839, float %840, float %841, float %842, float %843, float %844, float %845, float %846, float %847, float %848, float %849, float %850, float %851, float %852, float %853, float %854, float %855, float %856, float %857, float %858, float %859, float %860, float %861, float %862, float %863, float %864, float %865, float %866, float %867, float %868, float %869, float %870, float %871, float %872, float %873, float %874, float %875, float %876, float %877, float %878, float %879, float %880, float %881, float %882, float %883, float %884, float %885, float %886, float %887, float %888, float %889, float %890, float %891, float %892, float %893, float %894, float %895, float %896, float %897, float %898, ptr addrspace(3) %347, i32 64, i32 1, i32 0, i32 0, ptr addrspace(3) %348, i32 1, i32 64, i32 0, i32 0) #5, !dbg !41
  %900 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 0, !dbg !41
  %901 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 1, !dbg !41
  %902 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 2, !dbg !41
  %903 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 3, !dbg !41
  %904 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 4, !dbg !41
  %905 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 5, !dbg !41
  %906 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 6, !dbg !41
  %907 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 7, !dbg !41
  %908 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 8, !dbg !41
  %909 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 9, !dbg !41
  %910 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 10, !dbg !41
  %911 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 11, !dbg !41
  %912 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 12, !dbg !41
  %913 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 13, !dbg !41
  %914 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 14, !dbg !41
  %915 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 15, !dbg !41
  %916 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 16, !dbg !41
  %917 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 17, !dbg !41
  %918 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 18, !dbg !41
  %919 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 19, !dbg !41
  %920 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 20, !dbg !41
  %921 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 21, !dbg !41
  %922 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 22, !dbg !41
  %923 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 23, !dbg !41
  %924 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 24, !dbg !41
  %925 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 25, !dbg !41
  %926 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 26, !dbg !41
  %927 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 27, !dbg !41
  %928 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 28, !dbg !41
  %929 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 29, !dbg !41
  %930 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 30, !dbg !41
  %931 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 31, !dbg !41
  %932 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 32, !dbg !41
  %933 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 33, !dbg !41
  %934 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 34, !dbg !41
  %935 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 35, !dbg !41
  %936 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 36, !dbg !41
  %937 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 37, !dbg !41
  %938 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 38, !dbg !41
  %939 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 39, !dbg !41
  %940 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 40, !dbg !41
  %941 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 41, !dbg !41
  %942 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 42, !dbg !41
  %943 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 43, !dbg !41
  %944 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 44, !dbg !41
  %945 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 45, !dbg !41
  %946 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 46, !dbg !41
  %947 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 47, !dbg !41
  %948 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 48, !dbg !41
  %949 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 49, !dbg !41
  %950 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 50, !dbg !41
  %951 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 51, !dbg !41
  %952 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 52, !dbg !41
  %953 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 53, !dbg !41
  %954 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 54, !dbg !41
  %955 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 55, !dbg !41
  %956 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 56, !dbg !41
  %957 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 57, !dbg !41
  %958 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 58, !dbg !41
  %959 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 59, !dbg !41
  %960 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 60, !dbg !41
  %961 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 61, !dbg !41
  %962 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 62, !dbg !41
  %963 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 63, !dbg !41
  %964 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 64, !dbg !41
  %965 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 65, !dbg !41
  %966 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 66, !dbg !41
  %967 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 67, !dbg !41
  %968 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 68, !dbg !41
  %969 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 69, !dbg !41
  %970 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 70, !dbg !41
  %971 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 71, !dbg !41
  %972 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 72, !dbg !41
  %973 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 73, !dbg !41
  %974 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 74, !dbg !41
  %975 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 75, !dbg !41
  %976 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 76, !dbg !41
  %977 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 77, !dbg !41
  %978 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 78, !dbg !41
  %979 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 79, !dbg !41
  %980 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 80, !dbg !41
  %981 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 81, !dbg !41
  %982 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 82, !dbg !41
  %983 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 83, !dbg !41
  %984 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 84, !dbg !41
  %985 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 85, !dbg !41
  %986 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 86, !dbg !41
  %987 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 87, !dbg !41
  %988 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 88, !dbg !41
  %989 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 89, !dbg !41
  %990 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 90, !dbg !41
  %991 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 91, !dbg !41
  %992 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 92, !dbg !41
  %993 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 93, !dbg !41
  %994 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 94, !dbg !41
  %995 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 95, !dbg !41
  %996 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 96, !dbg !41
  %997 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 97, !dbg !41
  %998 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 98, !dbg !41
  %999 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 99, !dbg !41
  %1000 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 100, !dbg !41
  %1001 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 101, !dbg !41
  %1002 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 102, !dbg !41
  %1003 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 103, !dbg !41
  %1004 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 104, !dbg !41
  %1005 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 105, !dbg !41
  %1006 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 106, !dbg !41
  %1007 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 107, !dbg !41
  %1008 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 108, !dbg !41
  %1009 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 109, !dbg !41
  %1010 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 110, !dbg !41
  %1011 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 111, !dbg !41
  %1012 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 112, !dbg !41
  %1013 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 113, !dbg !41
  %1014 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 114, !dbg !41
  %1015 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 115, !dbg !41
  %1016 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 116, !dbg !41
  %1017 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 117, !dbg !41
  %1018 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 118, !dbg !41
  %1019 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 119, !dbg !41
  %1020 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 120, !dbg !41
  %1021 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 121, !dbg !41
  %1022 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 122, !dbg !41
  %1023 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 123, !dbg !41
  %1024 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 124, !dbg !41
  %1025 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 125, !dbg !41
  %1026 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 126, !dbg !41
  %1027 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %899, 127, !dbg !41
  %1028 = getelementptr i8, ptr addrspace(1) %.pn1282734, i64 128, !dbg !38
  %1029 = getelementptr i8, ptr addrspace(1) %.pn1122735, i64 128, !dbg !38
  %1030 = getelementptr i8, ptr addrspace(1) %.pn962736, i64 128, !dbg !38
  %1031 = getelementptr i8, ptr addrspace(1) %.pn802737, i64 128, !dbg !38
  %1032 = getelementptr i8, ptr addrspace(1) %.pn642738, i64 128, !dbg !38
  %1033 = getelementptr i8, ptr addrspace(1) %.pn482739, i64 128, !dbg !38
  %1034 = getelementptr i8, ptr addrspace(1) %.pn322740, i64 128, !dbg !38
  %1035 = getelementptr i8, ptr addrspace(1) %.pn162741, i64 128, !dbg !38
  %1036 = getelementptr i8, ptr addrspace(1) %.pn2562742, i64 128, !dbg !39
  %1037 = getelementptr i8, ptr addrspace(1) %.pn2402743, i64 128, !dbg !39
  %1038 = getelementptr i8, ptr addrspace(1) %.pn2242744, i64 128, !dbg !39
  %1039 = getelementptr i8, ptr addrspace(1) %.pn2082745, i64 128, !dbg !39
  %1040 = getelementptr i8, ptr addrspace(1) %.pn1922746, i64 128, !dbg !39
  %1041 = getelementptr i8, ptr addrspace(1) %.pn1762747, i64 128, !dbg !39
  %1042 = getelementptr i8, ptr addrspace(1) %.pn1602748, i64 128, !dbg !39
  %1043 = getelementptr i8, ptr addrspace(1) %.pn1442749, i64 128, !dbg !39
  %1044 = add i32 %211, 1, !dbg !40
  %1045 = icmp slt i32 %1044, 3, !dbg !40
  %1046 = select i1 %1045, i32 %1044, i32 0, !dbg !40
  %1047 = shl i32 %1046, 13, !dbg !36
  %1048 = sext i32 %1047 to i64, !dbg !36
  %1049 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %1048, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %1050 = getelementptr i16, ptr addrspace(3) %1049, i64 %138, !dbg !36
  %1051 = getelementptr i16, ptr addrspace(3) %1049, i64 %142, !dbg !36
  %1052 = getelementptr i16, ptr addrspace(3) %1049, i64 %146, !dbg !36
  %1053 = getelementptr i16, ptr addrspace(3) %1049, i64 %150, !dbg !36
  %1054 = getelementptr i16, ptr addrspace(3) %1049, i64 %154, !dbg !36
  %1055 = getelementptr i16, ptr addrspace(3) %1049, i64 %158, !dbg !36
  %1056 = getelementptr i16, ptr addrspace(3) %1049, i64 %162, !dbg !36
  %1057 = getelementptr i16, ptr addrspace(3) %1049, i64 %166, !dbg !36
  %1058 = select i1 %341, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1050, ptr addrspace(1) %1028, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1051, ptr addrspace(1) %1029, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1052, ptr addrspace(1) %1030, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1053, ptr addrspace(1) %1031, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1054, ptr addrspace(1) %1032, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1055, ptr addrspace(1) %1033, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1056, ptr addrspace(1) %1034, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1057, ptr addrspace(1) %1035, i32 %1058, i1 true) #5, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #5, !dbg !36
  %1059 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %1048, !dbg !37
  %1060 = getelementptr i16, ptr addrspace(3) %1059, i64 %138, !dbg !37
  %1061 = getelementptr i16, ptr addrspace(3) %1059, i64 %142, !dbg !37
  %1062 = getelementptr i16, ptr addrspace(3) %1059, i64 %146, !dbg !37
  %1063 = getelementptr i16, ptr addrspace(3) %1059, i64 %150, !dbg !37
  %1064 = getelementptr i16, ptr addrspace(3) %1059, i64 %154, !dbg !37
  %1065 = getelementptr i16, ptr addrspace(3) %1059, i64 %158, !dbg !37
  %1066 = getelementptr i16, ptr addrspace(3) %1059, i64 %162, !dbg !37
  %1067 = getelementptr i16, ptr addrspace(3) %1059, i64 %166, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1060, ptr addrspace(1) %1036, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1061, ptr addrspace(1) %1037, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1062, ptr addrspace(1) %1038, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1063, ptr addrspace(1) %1039, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1064, ptr addrspace(1) %1040, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1065, ptr addrspace(1) %1041, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1066, ptr addrspace(1) %1042, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %1067, ptr addrspace(1) %1043, i32 %1058, i1 true) #5, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #5, !dbg !37
  %1068 = add nuw nsw i32 %340, 64, !dbg !40
  %1069 = icmp ult i32 %340, 3008, !dbg !40
  br i1 %1069, label %209, label %1070, !dbg !40

1070:                                             ; preds = %209
  %1071 = and i32 %21, 31, !dbg !24
  %1072 = and i32 %34, 120, !dbg !24
  %1073 = or disjoint i32 %44, 8, !dbg !25
  %1074 = or disjoint i32 %44, 16, !dbg !25
  %1075 = or disjoint i32 %44, 24, !dbg !25
  %1076 = or disjoint i32 %44, 32, !dbg !25
  %1077 = or disjoint i32 %44, 40, !dbg !25
  %1078 = or disjoint i32 %44, 48, !dbg !25
  %1079 = or disjoint i32 %44, 56, !dbg !25
  %1080 = or disjoint i32 %44, 64, !dbg !25
  %1081 = or disjoint i32 %44, 72, !dbg !25
  %1082 = or disjoint i32 %44, 80, !dbg !25
  %1083 = or disjoint i32 %44, 88, !dbg !25
  %1084 = or disjoint i32 %44, 96, !dbg !25
  %1085 = or disjoint i32 %44, 104, !dbg !25
  %1086 = or disjoint i32 %44, 112, !dbg !25
  %1087 = or disjoint i32 %44, 120, !dbg !25
  %1088 = or disjoint i32 %1072, %45, !dbg !27
  %1089 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71,$72,$73,$74,$75,$76,$77,$78,$79,$80,$81,$82,$83,$84,$85,$86,$87,$88,$89,$90,$91,$92,$93,$94,$95,$96,$97,$98,$99,$100,$101,$102,$103,$104,$105,$106,$107,$108,$109,$110,$111,$112,$113,$114,$115,$116,$117,$118,$119,$120,$121,$122,$123,$124,$125,$126,$127\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127"(float %900, float %901, float %902, float %903, float %904, float %905, float %906, float %907, float %908, float %909, float %910, float %911, float %912, float %913, float %914, float %915, float %916, float %917, float %918, float %919, float %920, float %921, float %922, float %923, float %924, float %925, float %926, float %927, float %928, float %929, float %930, float %931, float %932, float %933, float %934, float %935, float %936, float %937, float %938, float %939, float %940, float %941, float %942, float %943, float %944, float %945, float %946, float %947, float %948, float %949, float %950, float %951, float %952, float %953, float %954, float %955, float %956, float %957, float %958, float %959, float %960, float %961, float %962, float %963, float %964, float %965, float %966, float %967, float %968, float %969, float %970, float %971, float %972, float %973, float %974, float %975, float %976, float %977, float %978, float %979, float %980, float %981, float %982, float %983, float %984, float %985, float %986, float %987, float %988, float %989, float %990, float %991, float %992, float %993, float %994, float %995, float %996, float %997, float %998, float %999, float %1000, float %1001, float %1002, float %1003, float %1004, float %1005, float %1006, float %1007, float %1008, float %1009, float %1010, float %1011, float %1012, float %1013, float %1014, float %1015, float %1016, float %1017, float %1018, float %1019, float %1020, float %1021, float %1022, float %1023, float %1024, float %1025, float %1026, float %1027) #5, !dbg !40
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #5, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %1090 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 0, !dbg !40
  %1091 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 1, !dbg !40
  %1092 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 2, !dbg !40
  %1093 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 3, !dbg !40
  %1094 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 4, !dbg !40
  %1095 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 5, !dbg !40
  %1096 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 6, !dbg !40
  %1097 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 7, !dbg !40
  %1098 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 8, !dbg !40
  %1099 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 9, !dbg !40
  %1100 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 10, !dbg !40
  %1101 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 11, !dbg !40
  %1102 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 12, !dbg !40
  %1103 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 13, !dbg !40
  %1104 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 14, !dbg !40
  %1105 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 15, !dbg !40
  %1106 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 16, !dbg !40
  %1107 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 17, !dbg !40
  %1108 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 18, !dbg !40
  %1109 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 19, !dbg !40
  %1110 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 20, !dbg !40
  %1111 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 21, !dbg !40
  %1112 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 22, !dbg !40
  %1113 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 23, !dbg !40
  %1114 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 24, !dbg !40
  %1115 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 25, !dbg !40
  %1116 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 26, !dbg !40
  %1117 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 27, !dbg !40
  %1118 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 28, !dbg !40
  %1119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 29, !dbg !40
  %1120 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 30, !dbg !40
  %1121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 31, !dbg !40
  %1122 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 32, !dbg !40
  %1123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 33, !dbg !40
  %1124 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 34, !dbg !40
  %1125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 35, !dbg !40
  %1126 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 36, !dbg !40
  %1127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 37, !dbg !40
  %1128 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 38, !dbg !40
  %1129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 39, !dbg !40
  %1130 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 40, !dbg !40
  %1131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 41, !dbg !40
  %1132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 42, !dbg !40
  %1133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 43, !dbg !40
  %1134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 44, !dbg !40
  %1135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 45, !dbg !40
  %1136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 46, !dbg !40
  %1137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 47, !dbg !40
  %1138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 48, !dbg !40
  %1139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 49, !dbg !40
  %1140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 50, !dbg !40
  %1141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 51, !dbg !40
  %1142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 52, !dbg !40
  %1143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 53, !dbg !40
  %1144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 54, !dbg !40
  %1145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 55, !dbg !40
  %1146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 56, !dbg !40
  %1147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 57, !dbg !40
  %1148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 58, !dbg !40
  %1149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 59, !dbg !40
  %1150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 60, !dbg !40
  %1151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 61, !dbg !40
  %1152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 62, !dbg !40
  %1153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 63, !dbg !40
  %1154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 64, !dbg !40
  %1155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 65, !dbg !40
  %1156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 66, !dbg !40
  %1157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 67, !dbg !40
  %1158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 68, !dbg !40
  %1159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 69, !dbg !40
  %1160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 70, !dbg !40
  %1161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 71, !dbg !40
  %1162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 72, !dbg !40
  %1163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 73, !dbg !40
  %1164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 74, !dbg !40
  %1165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 75, !dbg !40
  %1166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 76, !dbg !40
  %1167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 77, !dbg !40
  %1168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 78, !dbg !40
  %1169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 79, !dbg !40
  %1170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 80, !dbg !40
  %1171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 81, !dbg !40
  %1172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 82, !dbg !40
  %1173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 83, !dbg !40
  %1174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 84, !dbg !40
  %1175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 85, !dbg !40
  %1176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 86, !dbg !40
  %1177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 87, !dbg !40
  %1178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 88, !dbg !40
  %1179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 89, !dbg !40
  %1180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 90, !dbg !40
  %1181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 91, !dbg !40
  %1182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 92, !dbg !40
  %1183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 93, !dbg !40
  %1184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 94, !dbg !40
  %1185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 95, !dbg !40
  %1186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 96, !dbg !40
  %1187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 97, !dbg !40
  %1188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 98, !dbg !40
  %1189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 99, !dbg !40
  %1190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 100, !dbg !40
  %1191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 101, !dbg !40
  %1192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 102, !dbg !40
  %1193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 103, !dbg !40
  %1194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 104, !dbg !40
  %1195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 105, !dbg !40
  %1196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 106, !dbg !40
  %1197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 107, !dbg !40
  %1198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 108, !dbg !40
  %1199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 109, !dbg !40
  %1200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 110, !dbg !40
  %1201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 111, !dbg !40
  %1202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 112, !dbg !40
  %1203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 113, !dbg !40
  %1204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 114, !dbg !40
  %1205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 115, !dbg !40
  %1206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 116, !dbg !40
  %1207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 117, !dbg !40
  %1208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 118, !dbg !40
  %1209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 119, !dbg !40
  %1210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 120, !dbg !40
  %1211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 121, !dbg !40
  %1212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 122, !dbg !40
  %1213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 123, !dbg !40
  %1214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 124, !dbg !40
  %1215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 125, !dbg !40
  %1216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 126, !dbg !40
  %1217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1089, 127, !dbg !40
  %1218 = and i32 %22, 3, !dbg !40
  %1219 = lshr i32 %1071, 2, !dbg !40
  %1220 = shl i32 %21, 1, !dbg !40
  %1221 = and i32 %1220, 6, !dbg !40
  %1222 = shl nuw nsw i32 %1218, 4, !dbg !40
  %1223 = or disjoint i32 %1222, %1219, !dbg !40
  %1224 = mul nuw nsw i32 %1223, 136, !dbg !40
  %1225 = or disjoint i32 %1224, %1221, !dbg !40
  %1226 = zext nneg i32 %1225 to i64, !dbg !40
  %1227 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1226, !dbg !40
  %1228 = insertelement <2 x float> poison, float %1090, i64 0, !dbg !40
  %1229 = insertelement <2 x float> %1228, float %1091, i64 1, !dbg !40
  store <2 x float> %1229, ptr addrspace(3) %1227, align 8, !dbg !40
  %1230 = add nuw nsw i32 %1224, 1088, !dbg !40
  %1231 = or disjoint i32 %1230, %1221, !dbg !40
  %1232 = zext nneg i32 %1231 to i64, !dbg !40
  %1233 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1232, !dbg !40
  %1234 = insertelement <2 x float> poison, float %1092, i64 0, !dbg !40
  %1235 = insertelement <2 x float> %1234, float %1093, i64 1, !dbg !40
  store <2 x float> %1235, ptr addrspace(3) %1233, align 8, !dbg !40
  %1236 = or disjoint i32 %1221, 8, !dbg !40
  %1237 = add nuw nsw i32 %1224, %1236, !dbg !40
  %1238 = zext nneg i32 %1237 to i64, !dbg !40
  %1239 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1238, !dbg !40
  %1240 = insertelement <2 x float> poison, float %1094, i64 0, !dbg !40
  %1241 = insertelement <2 x float> %1240, float %1095, i64 1, !dbg !40
  store <2 x float> %1241, ptr addrspace(3) %1239, align 8, !dbg !40
  %1242 = add nuw nsw i32 %1230, %1236, !dbg !40
  %1243 = zext nneg i32 %1242 to i64, !dbg !40
  %1244 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1243, !dbg !40
  %1245 = insertelement <2 x float> poison, float %1096, i64 0, !dbg !40
  %1246 = insertelement <2 x float> %1245, float %1097, i64 1, !dbg !40
  store <2 x float> %1246, ptr addrspace(3) %1244, align 8, !dbg !40
  %1247 = or disjoint i32 %1221, 16, !dbg !40
  %1248 = add nuw nsw i32 %1224, %1247, !dbg !40
  %1249 = zext nneg i32 %1248 to i64, !dbg !40
  %1250 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1249, !dbg !40
  %1251 = insertelement <2 x float> poison, float %1098, i64 0, !dbg !40
  %1252 = insertelement <2 x float> %1251, float %1099, i64 1, !dbg !40
  store <2 x float> %1252, ptr addrspace(3) %1250, align 8, !dbg !40
  %1253 = add nuw nsw i32 %1230, %1247, !dbg !40
  %1254 = zext nneg i32 %1253 to i64, !dbg !40
  %1255 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1254, !dbg !40
  %1256 = insertelement <2 x float> poison, float %1100, i64 0, !dbg !40
  %1257 = insertelement <2 x float> %1256, float %1101, i64 1, !dbg !40
  store <2 x float> %1257, ptr addrspace(3) %1255, align 8, !dbg !40
  %1258 = or disjoint i32 %1221, 24, !dbg !40
  %1259 = add nuw nsw i32 %1224, %1258, !dbg !40
  %1260 = zext nneg i32 %1259 to i64, !dbg !40
  %1261 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1260, !dbg !40
  %1262 = insertelement <2 x float> poison, float %1102, i64 0, !dbg !40
  %1263 = insertelement <2 x float> %1262, float %1103, i64 1, !dbg !40
  store <2 x float> %1263, ptr addrspace(3) %1261, align 8, !dbg !40
  %1264 = add nuw nsw i32 %1230, %1258, !dbg !40
  %1265 = zext nneg i32 %1264 to i64, !dbg !40
  %1266 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1265, !dbg !40
  %1267 = insertelement <2 x float> poison, float %1104, i64 0, !dbg !40
  %1268 = insertelement <2 x float> %1267, float %1105, i64 1, !dbg !40
  store <2 x float> %1268, ptr addrspace(3) %1266, align 8, !dbg !40
  %1269 = or disjoint i32 %1221, 32, !dbg !40
  %1270 = add nuw nsw i32 %1224, %1269, !dbg !40
  %1271 = zext nneg i32 %1270 to i64, !dbg !40
  %1272 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1271, !dbg !40
  %1273 = insertelement <2 x float> poison, float %1106, i64 0, !dbg !40
  %1274 = insertelement <2 x float> %1273, float %1107, i64 1, !dbg !40
  store <2 x float> %1274, ptr addrspace(3) %1272, align 8, !dbg !40
  %1275 = add nuw nsw i32 %1230, %1269, !dbg !40
  %1276 = zext nneg i32 %1275 to i64, !dbg !40
  %1277 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1276, !dbg !40
  %1278 = insertelement <2 x float> poison, float %1108, i64 0, !dbg !40
  %1279 = insertelement <2 x float> %1278, float %1109, i64 1, !dbg !40
  store <2 x float> %1279, ptr addrspace(3) %1277, align 8, !dbg !40
  %1280 = or disjoint i32 %1221, 40, !dbg !40
  %1281 = add nuw nsw i32 %1224, %1280, !dbg !40
  %1282 = zext nneg i32 %1281 to i64, !dbg !40
  %1283 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1282, !dbg !40
  %1284 = insertelement <2 x float> poison, float %1110, i64 0, !dbg !40
  %1285 = insertelement <2 x float> %1284, float %1111, i64 1, !dbg !40
  store <2 x float> %1285, ptr addrspace(3) %1283, align 8, !dbg !40
  %1286 = add nuw nsw i32 %1230, %1280, !dbg !40
  %1287 = zext nneg i32 %1286 to i64, !dbg !40
  %1288 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1287, !dbg !40
  %1289 = insertelement <2 x float> poison, float %1112, i64 0, !dbg !40
  %1290 = insertelement <2 x float> %1289, float %1113, i64 1, !dbg !40
  store <2 x float> %1290, ptr addrspace(3) %1288, align 8, !dbg !40
  %1291 = or disjoint i32 %1221, 48, !dbg !40
  %1292 = add nuw nsw i32 %1224, %1291, !dbg !40
  %1293 = zext nneg i32 %1292 to i64, !dbg !40
  %1294 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1293, !dbg !40
  %1295 = insertelement <2 x float> poison, float %1114, i64 0, !dbg !40
  %1296 = insertelement <2 x float> %1295, float %1115, i64 1, !dbg !40
  store <2 x float> %1296, ptr addrspace(3) %1294, align 8, !dbg !40
  %1297 = add nuw nsw i32 %1230, %1291, !dbg !40
  %1298 = zext nneg i32 %1297 to i64, !dbg !40
  %1299 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1298, !dbg !40
  %1300 = insertelement <2 x float> poison, float %1116, i64 0, !dbg !40
  %1301 = insertelement <2 x float> %1300, float %1117, i64 1, !dbg !40
  store <2 x float> %1301, ptr addrspace(3) %1299, align 8, !dbg !40
  %1302 = or disjoint i32 %1221, 56, !dbg !40
  %1303 = add nuw nsw i32 %1224, %1302, !dbg !40
  %1304 = zext nneg i32 %1303 to i64, !dbg !40
  %1305 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1304, !dbg !40
  %1306 = insertelement <2 x float> poison, float %1118, i64 0, !dbg !40
  %1307 = insertelement <2 x float> %1306, float %1119, i64 1, !dbg !40
  store <2 x float> %1307, ptr addrspace(3) %1305, align 8, !dbg !40
  %1308 = add nuw nsw i32 %1230, %1302, !dbg !40
  %1309 = zext nneg i32 %1308 to i64, !dbg !40
  %1310 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1309, !dbg !40
  %1311 = insertelement <2 x float> poison, float %1120, i64 0, !dbg !40
  %1312 = insertelement <2 x float> %1311, float %1121, i64 1, !dbg !40
  store <2 x float> %1312, ptr addrspace(3) %1310, align 8, !dbg !40
  %1313 = or disjoint i32 %1221, 64, !dbg !40
  %1314 = add nuw nsw i32 %1224, %1313, !dbg !40
  %1315 = zext nneg i32 %1314 to i64, !dbg !40
  %1316 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1315, !dbg !40
  %1317 = insertelement <2 x float> poison, float %1122, i64 0, !dbg !40
  %1318 = insertelement <2 x float> %1317, float %1123, i64 1, !dbg !40
  store <2 x float> %1318, ptr addrspace(3) %1316, align 8, !dbg !40
  %1319 = add nuw nsw i32 %1230, %1313, !dbg !40
  %1320 = zext nneg i32 %1319 to i64, !dbg !40
  %1321 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1320, !dbg !40
  %1322 = insertelement <2 x float> poison, float %1124, i64 0, !dbg !40
  %1323 = insertelement <2 x float> %1322, float %1125, i64 1, !dbg !40
  store <2 x float> %1323, ptr addrspace(3) %1321, align 8, !dbg !40
  %1324 = or disjoint i32 %1221, 72, !dbg !40
  %1325 = add nuw nsw i32 %1224, %1324, !dbg !40
  %1326 = zext nneg i32 %1325 to i64, !dbg !40
  %1327 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1326, !dbg !40
  %1328 = insertelement <2 x float> poison, float %1126, i64 0, !dbg !40
  %1329 = insertelement <2 x float> %1328, float %1127, i64 1, !dbg !40
  store <2 x float> %1329, ptr addrspace(3) %1327, align 8, !dbg !40
  %1330 = add nuw nsw i32 %1230, %1324, !dbg !40
  %1331 = zext nneg i32 %1330 to i64, !dbg !40
  %1332 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1331, !dbg !40
  %1333 = insertelement <2 x float> poison, float %1128, i64 0, !dbg !40
  %1334 = insertelement <2 x float> %1333, float %1129, i64 1, !dbg !40
  store <2 x float> %1334, ptr addrspace(3) %1332, align 8, !dbg !40
  %1335 = or disjoint i32 %1221, 80, !dbg !40
  %1336 = add nuw nsw i32 %1224, %1335, !dbg !40
  %1337 = zext nneg i32 %1336 to i64, !dbg !40
  %1338 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1337, !dbg !40
  %1339 = insertelement <2 x float> poison, float %1130, i64 0, !dbg !40
  %1340 = insertelement <2 x float> %1339, float %1131, i64 1, !dbg !40
  store <2 x float> %1340, ptr addrspace(3) %1338, align 8, !dbg !40
  %1341 = add nuw nsw i32 %1230, %1335, !dbg !40
  %1342 = zext nneg i32 %1341 to i64, !dbg !40
  %1343 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1342, !dbg !40
  %1344 = insertelement <2 x float> poison, float %1132, i64 0, !dbg !40
  %1345 = insertelement <2 x float> %1344, float %1133, i64 1, !dbg !40
  store <2 x float> %1345, ptr addrspace(3) %1343, align 8, !dbg !40
  %1346 = or disjoint i32 %1221, 88, !dbg !40
  %1347 = add nuw nsw i32 %1224, %1346, !dbg !40
  %1348 = zext nneg i32 %1347 to i64, !dbg !40
  %1349 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1348, !dbg !40
  %1350 = insertelement <2 x float> poison, float %1134, i64 0, !dbg !40
  %1351 = insertelement <2 x float> %1350, float %1135, i64 1, !dbg !40
  store <2 x float> %1351, ptr addrspace(3) %1349, align 8, !dbg !40
  %1352 = add nuw nsw i32 %1230, %1346, !dbg !40
  %1353 = zext nneg i32 %1352 to i64, !dbg !40
  %1354 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1353, !dbg !40
  %1355 = insertelement <2 x float> poison, float %1136, i64 0, !dbg !40
  %1356 = insertelement <2 x float> %1355, float %1137, i64 1, !dbg !40
  store <2 x float> %1356, ptr addrspace(3) %1354, align 8, !dbg !40
  %1357 = or disjoint i32 %1221, 96, !dbg !40
  %1358 = add nuw nsw i32 %1224, %1357, !dbg !40
  %1359 = zext nneg i32 %1358 to i64, !dbg !40
  %1360 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1359, !dbg !40
  %1361 = insertelement <2 x float> poison, float %1138, i64 0, !dbg !40
  %1362 = insertelement <2 x float> %1361, float %1139, i64 1, !dbg !40
  store <2 x float> %1362, ptr addrspace(3) %1360, align 8, !dbg !40
  %1363 = add nuw nsw i32 %1230, %1357, !dbg !40
  %1364 = zext nneg i32 %1363 to i64, !dbg !40
  %1365 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1364, !dbg !40
  %1366 = insertelement <2 x float> poison, float %1140, i64 0, !dbg !40
  %1367 = insertelement <2 x float> %1366, float %1141, i64 1, !dbg !40
  store <2 x float> %1367, ptr addrspace(3) %1365, align 8, !dbg !40
  %1368 = or disjoint i32 %1221, 104, !dbg !40
  %1369 = add nuw nsw i32 %1224, %1368, !dbg !40
  %1370 = zext nneg i32 %1369 to i64, !dbg !40
  %1371 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1370, !dbg !40
  %1372 = insertelement <2 x float> poison, float %1142, i64 0, !dbg !40
  %1373 = insertelement <2 x float> %1372, float %1143, i64 1, !dbg !40
  store <2 x float> %1373, ptr addrspace(3) %1371, align 8, !dbg !40
  %1374 = add nuw nsw i32 %1230, %1368, !dbg !40
  %1375 = zext nneg i32 %1374 to i64, !dbg !40
  %1376 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1375, !dbg !40
  %1377 = insertelement <2 x float> poison, float %1144, i64 0, !dbg !40
  %1378 = insertelement <2 x float> %1377, float %1145, i64 1, !dbg !40
  store <2 x float> %1378, ptr addrspace(3) %1376, align 8, !dbg !40
  %1379 = or disjoint i32 %1221, 112, !dbg !40
  %1380 = add nuw nsw i32 %1224, %1379, !dbg !40
  %1381 = zext nneg i32 %1380 to i64, !dbg !40
  %1382 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1381, !dbg !40
  %1383 = insertelement <2 x float> poison, float %1146, i64 0, !dbg !40
  %1384 = insertelement <2 x float> %1383, float %1147, i64 1, !dbg !40
  store <2 x float> %1384, ptr addrspace(3) %1382, align 8, !dbg !40
  %1385 = add nuw nsw i32 %1230, %1379, !dbg !40
  %1386 = zext nneg i32 %1385 to i64, !dbg !40
  %1387 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1386, !dbg !40
  %1388 = insertelement <2 x float> poison, float %1148, i64 0, !dbg !40
  %1389 = insertelement <2 x float> %1388, float %1149, i64 1, !dbg !40
  store <2 x float> %1389, ptr addrspace(3) %1387, align 8, !dbg !40
  %1390 = or disjoint i32 %1221, 120, !dbg !40
  %1391 = add nuw nsw i32 %1224, %1390, !dbg !40
  %1392 = zext nneg i32 %1391 to i64, !dbg !40
  %1393 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1392, !dbg !40
  %1394 = insertelement <2 x float> poison, float %1150, i64 0, !dbg !40
  %1395 = insertelement <2 x float> %1394, float %1151, i64 1, !dbg !40
  store <2 x float> %1395, ptr addrspace(3) %1393, align 8, !dbg !40
  %1396 = add nuw nsw i32 %1230, %1390, !dbg !40
  %1397 = zext nneg i32 %1396 to i64, !dbg !40
  %1398 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1397, !dbg !40
  %1399 = insertelement <2 x float> poison, float %1152, i64 0, !dbg !40
  %1400 = insertelement <2 x float> %1399, float %1153, i64 1, !dbg !40
  store <2 x float> %1400, ptr addrspace(3) %1398, align 8, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %1401 = lshr i32 %1071, 4, !dbg !40
  %1402 = shl nuw nsw i32 %1218, 1, !dbg !40
  %1403 = or disjoint i32 %1402, %1401, !dbg !40
  %1404 = and i32 %34, 120, !dbg !40
  %1405 = mul nuw nsw i32 %1403, 136, !dbg !40
  %1406 = add nuw nsw i32 %1405, %1404, !dbg !40
  %1407 = zext nneg i32 %1406 to i64, !dbg !40
  %1408 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1407, !dbg !40
  %1409 = load float, ptr addrspace(3) %1408, align 32, !dbg !40
  %1410 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 4, !dbg !40
  %1411 = load float, ptr addrspace(3) %1410, align 4, !dbg !40
  %1412 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 8, !dbg !40
  %1413 = load float, ptr addrspace(3) %1412, align 8, !dbg !40
  %1414 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 12, !dbg !40
  %1415 = load float, ptr addrspace(3) %1414, align 4, !dbg !40
  %1416 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 16, !dbg !40
  %1417 = load float, ptr addrspace(3) %1416, align 16, !dbg !40
  %1418 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 20, !dbg !40
  %1419 = load float, ptr addrspace(3) %1418, align 4, !dbg !40
  %1420 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 24, !dbg !40
  %1421 = load float, ptr addrspace(3) %1420, align 8, !dbg !40
  %1422 = getelementptr inbounds i8, ptr addrspace(3) %1408, i64 28, !dbg !40
  %1423 = load float, ptr addrspace(3) %1422, align 4, !dbg !40
  %1424 = getelementptr i8, ptr addrspace(3) %1408, i64 4352, !dbg !40
  %1425 = load float, ptr addrspace(3) %1424, align 32, !dbg !40
  %1426 = getelementptr i8, ptr addrspace(3) %1408, i64 4356, !dbg !40
  %1427 = load float, ptr addrspace(3) %1426, align 4, !dbg !40
  %1428 = getelementptr i8, ptr addrspace(3) %1408, i64 4360, !dbg !40
  %1429 = load float, ptr addrspace(3) %1428, align 8, !dbg !40
  %1430 = getelementptr i8, ptr addrspace(3) %1408, i64 4364, !dbg !40
  %1431 = load float, ptr addrspace(3) %1430, align 4, !dbg !40
  %1432 = getelementptr i8, ptr addrspace(3) %1408, i64 4368, !dbg !40
  %1433 = load float, ptr addrspace(3) %1432, align 16, !dbg !40
  %1434 = getelementptr i8, ptr addrspace(3) %1408, i64 4372, !dbg !40
  %1435 = load float, ptr addrspace(3) %1434, align 4, !dbg !40
  %1436 = getelementptr i8, ptr addrspace(3) %1408, i64 4376, !dbg !40
  %1437 = load float, ptr addrspace(3) %1436, align 8, !dbg !40
  %1438 = getelementptr i8, ptr addrspace(3) %1408, i64 4380, !dbg !40
  %1439 = load float, ptr addrspace(3) %1438, align 4, !dbg !40
  %1440 = getelementptr i8, ptr addrspace(3) %1408, i64 8704, !dbg !40
  %1441 = load float, ptr addrspace(3) %1440, align 32, !dbg !40
  %1442 = getelementptr i8, ptr addrspace(3) %1408, i64 8708, !dbg !40
  %1443 = load float, ptr addrspace(3) %1442, align 4, !dbg !40
  %1444 = getelementptr i8, ptr addrspace(3) %1408, i64 8712, !dbg !40
  %1445 = load float, ptr addrspace(3) %1444, align 8, !dbg !40
  %1446 = getelementptr i8, ptr addrspace(3) %1408, i64 8716, !dbg !40
  %1447 = load float, ptr addrspace(3) %1446, align 4, !dbg !40
  %1448 = getelementptr i8, ptr addrspace(3) %1408, i64 8720, !dbg !40
  %1449 = load float, ptr addrspace(3) %1448, align 16, !dbg !40
  %1450 = getelementptr i8, ptr addrspace(3) %1408, i64 8724, !dbg !40
  %1451 = load float, ptr addrspace(3) %1450, align 4, !dbg !40
  %1452 = getelementptr i8, ptr addrspace(3) %1408, i64 8728, !dbg !40
  %1453 = load float, ptr addrspace(3) %1452, align 8, !dbg !40
  %1454 = getelementptr i8, ptr addrspace(3) %1408, i64 8732, !dbg !40
  %1455 = load float, ptr addrspace(3) %1454, align 4, !dbg !40
  %1456 = getelementptr i8, ptr addrspace(3) %1408, i64 13056, !dbg !40
  %1457 = load float, ptr addrspace(3) %1456, align 32, !dbg !40
  %1458 = getelementptr i8, ptr addrspace(3) %1408, i64 13060, !dbg !40
  %1459 = load float, ptr addrspace(3) %1458, align 4, !dbg !40
  %1460 = getelementptr i8, ptr addrspace(3) %1408, i64 13064, !dbg !40
  %1461 = load float, ptr addrspace(3) %1460, align 8, !dbg !40
  %1462 = getelementptr i8, ptr addrspace(3) %1408, i64 13068, !dbg !40
  %1463 = load float, ptr addrspace(3) %1462, align 4, !dbg !40
  %1464 = getelementptr i8, ptr addrspace(3) %1408, i64 13072, !dbg !40
  %1465 = load float, ptr addrspace(3) %1464, align 16, !dbg !40
  %1466 = getelementptr i8, ptr addrspace(3) %1408, i64 13076, !dbg !40
  %1467 = load float, ptr addrspace(3) %1466, align 4, !dbg !40
  %1468 = getelementptr i8, ptr addrspace(3) %1408, i64 13080, !dbg !40
  %1469 = load float, ptr addrspace(3) %1468, align 8, !dbg !40
  %1470 = getelementptr i8, ptr addrspace(3) %1408, i64 13084, !dbg !40
  %1471 = load float, ptr addrspace(3) %1470, align 4, !dbg !40
  %1472 = getelementptr i8, ptr addrspace(3) %1408, i64 17408, !dbg !40
  %1473 = load float, ptr addrspace(3) %1472, align 32, !dbg !40
  %1474 = getelementptr i8, ptr addrspace(3) %1408, i64 17412, !dbg !40
  %1475 = load float, ptr addrspace(3) %1474, align 4, !dbg !40
  %1476 = getelementptr i8, ptr addrspace(3) %1408, i64 17416, !dbg !40
  %1477 = load float, ptr addrspace(3) %1476, align 8, !dbg !40
  %1478 = getelementptr i8, ptr addrspace(3) %1408, i64 17420, !dbg !40
  %1479 = load float, ptr addrspace(3) %1478, align 4, !dbg !40
  %1480 = getelementptr i8, ptr addrspace(3) %1408, i64 17424, !dbg !40
  %1481 = load float, ptr addrspace(3) %1480, align 16, !dbg !40
  %1482 = getelementptr i8, ptr addrspace(3) %1408, i64 17428, !dbg !40
  %1483 = load float, ptr addrspace(3) %1482, align 4, !dbg !40
  %1484 = getelementptr i8, ptr addrspace(3) %1408, i64 17432, !dbg !40
  %1485 = load float, ptr addrspace(3) %1484, align 8, !dbg !40
  %1486 = getelementptr i8, ptr addrspace(3) %1408, i64 17436, !dbg !40
  %1487 = load float, ptr addrspace(3) %1486, align 4, !dbg !40
  %1488 = getelementptr i8, ptr addrspace(3) %1408, i64 21760, !dbg !40
  %1489 = load float, ptr addrspace(3) %1488, align 32, !dbg !40
  %1490 = getelementptr i8, ptr addrspace(3) %1408, i64 21764, !dbg !40
  %1491 = load float, ptr addrspace(3) %1490, align 4, !dbg !40
  %1492 = getelementptr i8, ptr addrspace(3) %1408, i64 21768, !dbg !40
  %1493 = load float, ptr addrspace(3) %1492, align 8, !dbg !40
  %1494 = getelementptr i8, ptr addrspace(3) %1408, i64 21772, !dbg !40
  %1495 = load float, ptr addrspace(3) %1494, align 4, !dbg !40
  %1496 = getelementptr i8, ptr addrspace(3) %1408, i64 21776, !dbg !40
  %1497 = load float, ptr addrspace(3) %1496, align 16, !dbg !40
  %1498 = getelementptr i8, ptr addrspace(3) %1408, i64 21780, !dbg !40
  %1499 = load float, ptr addrspace(3) %1498, align 4, !dbg !40
  %1500 = getelementptr i8, ptr addrspace(3) %1408, i64 21784, !dbg !40
  %1501 = load float, ptr addrspace(3) %1500, align 8, !dbg !40
  %1502 = getelementptr i8, ptr addrspace(3) %1408, i64 21788, !dbg !40
  %1503 = load float, ptr addrspace(3) %1502, align 4, !dbg !40
  %1504 = getelementptr i8, ptr addrspace(3) %1408, i64 26112, !dbg !40
  %1505 = load float, ptr addrspace(3) %1504, align 32, !dbg !40
  %1506 = getelementptr i8, ptr addrspace(3) %1408, i64 26116, !dbg !40
  %1507 = load float, ptr addrspace(3) %1506, align 4, !dbg !40
  %1508 = getelementptr i8, ptr addrspace(3) %1408, i64 26120, !dbg !40
  %1509 = load float, ptr addrspace(3) %1508, align 8, !dbg !40
  %1510 = getelementptr i8, ptr addrspace(3) %1408, i64 26124, !dbg !40
  %1511 = load float, ptr addrspace(3) %1510, align 4, !dbg !40
  %1512 = getelementptr i8, ptr addrspace(3) %1408, i64 26128, !dbg !40
  %1513 = load float, ptr addrspace(3) %1512, align 16, !dbg !40
  %1514 = getelementptr i8, ptr addrspace(3) %1408, i64 26132, !dbg !40
  %1515 = load float, ptr addrspace(3) %1514, align 4, !dbg !40
  %1516 = getelementptr i8, ptr addrspace(3) %1408, i64 26136, !dbg !40
  %1517 = load float, ptr addrspace(3) %1516, align 8, !dbg !40
  %1518 = getelementptr i8, ptr addrspace(3) %1408, i64 26140, !dbg !40
  %1519 = load float, ptr addrspace(3) %1518, align 4, !dbg !40
  %1520 = getelementptr i8, ptr addrspace(3) %1408, i64 30464, !dbg !40
  %1521 = load float, ptr addrspace(3) %1520, align 32, !dbg !40
  %1522 = getelementptr i8, ptr addrspace(3) %1408, i64 30468, !dbg !40
  %1523 = load float, ptr addrspace(3) %1522, align 4, !dbg !40
  %1524 = getelementptr i8, ptr addrspace(3) %1408, i64 30472, !dbg !40
  %1525 = load float, ptr addrspace(3) %1524, align 8, !dbg !40
  %1526 = getelementptr i8, ptr addrspace(3) %1408, i64 30476, !dbg !40
  %1527 = load float, ptr addrspace(3) %1526, align 4, !dbg !40
  %1528 = getelementptr i8, ptr addrspace(3) %1408, i64 30480, !dbg !40
  %1529 = load float, ptr addrspace(3) %1528, align 16, !dbg !40
  %1530 = getelementptr i8, ptr addrspace(3) %1408, i64 30484, !dbg !40
  %1531 = load float, ptr addrspace(3) %1530, align 4, !dbg !40
  %1532 = getelementptr i8, ptr addrspace(3) %1408, i64 30488, !dbg !40
  %1533 = load float, ptr addrspace(3) %1532, align 8, !dbg !40
  %1534 = getelementptr i8, ptr addrspace(3) %1408, i64 30492, !dbg !40
  %1535 = load float, ptr addrspace(3) %1534, align 4, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %1536 = insertelement <2 x float> poison, float %1154, i64 0, !dbg !40
  %1537 = insertelement <2 x float> %1536, float %1155, i64 1, !dbg !40
  store <2 x float> %1537, ptr addrspace(3) %1227, align 8, !dbg !40
  %1538 = insertelement <2 x float> poison, float %1156, i64 0, !dbg !40
  %1539 = insertelement <2 x float> %1538, float %1157, i64 1, !dbg !40
  store <2 x float> %1539, ptr addrspace(3) %1233, align 8, !dbg !40
  %1540 = insertelement <2 x float> poison, float %1158, i64 0, !dbg !40
  %1541 = insertelement <2 x float> %1540, float %1159, i64 1, !dbg !40
  store <2 x float> %1541, ptr addrspace(3) %1239, align 8, !dbg !40
  %1542 = insertelement <2 x float> poison, float %1160, i64 0, !dbg !40
  %1543 = insertelement <2 x float> %1542, float %1161, i64 1, !dbg !40
  store <2 x float> %1543, ptr addrspace(3) %1244, align 8, !dbg !40
  %1544 = insertelement <2 x float> poison, float %1162, i64 0, !dbg !40
  %1545 = insertelement <2 x float> %1544, float %1163, i64 1, !dbg !40
  store <2 x float> %1545, ptr addrspace(3) %1250, align 8, !dbg !40
  %1546 = insertelement <2 x float> poison, float %1164, i64 0, !dbg !40
  %1547 = insertelement <2 x float> %1546, float %1165, i64 1, !dbg !40
  store <2 x float> %1547, ptr addrspace(3) %1255, align 8, !dbg !40
  %1548 = insertelement <2 x float> poison, float %1166, i64 0, !dbg !40
  %1549 = insertelement <2 x float> %1548, float %1167, i64 1, !dbg !40
  store <2 x float> %1549, ptr addrspace(3) %1261, align 8, !dbg !40
  %1550 = insertelement <2 x float> poison, float %1168, i64 0, !dbg !40
  %1551 = insertelement <2 x float> %1550, float %1169, i64 1, !dbg !40
  store <2 x float> %1551, ptr addrspace(3) %1266, align 8, !dbg !40
  %1552 = insertelement <2 x float> poison, float %1170, i64 0, !dbg !40
  %1553 = insertelement <2 x float> %1552, float %1171, i64 1, !dbg !40
  store <2 x float> %1553, ptr addrspace(3) %1272, align 8, !dbg !40
  %1554 = insertelement <2 x float> poison, float %1172, i64 0, !dbg !40
  %1555 = insertelement <2 x float> %1554, float %1173, i64 1, !dbg !40
  store <2 x float> %1555, ptr addrspace(3) %1277, align 8, !dbg !40
  %1556 = insertelement <2 x float> poison, float %1174, i64 0, !dbg !40
  %1557 = insertelement <2 x float> %1556, float %1175, i64 1, !dbg !40
  store <2 x float> %1557, ptr addrspace(3) %1283, align 8, !dbg !40
  %1558 = insertelement <2 x float> poison, float %1176, i64 0, !dbg !40
  %1559 = insertelement <2 x float> %1558, float %1177, i64 1, !dbg !40
  store <2 x float> %1559, ptr addrspace(3) %1288, align 8, !dbg !40
  %1560 = insertelement <2 x float> poison, float %1178, i64 0, !dbg !40
  %1561 = insertelement <2 x float> %1560, float %1179, i64 1, !dbg !40
  store <2 x float> %1561, ptr addrspace(3) %1294, align 8, !dbg !40
  %1562 = insertelement <2 x float> poison, float %1180, i64 0, !dbg !40
  %1563 = insertelement <2 x float> %1562, float %1181, i64 1, !dbg !40
  store <2 x float> %1563, ptr addrspace(3) %1299, align 8, !dbg !40
  %1564 = insertelement <2 x float> poison, float %1182, i64 0, !dbg !40
  %1565 = insertelement <2 x float> %1564, float %1183, i64 1, !dbg !40
  store <2 x float> %1565, ptr addrspace(3) %1305, align 8, !dbg !40
  %1566 = insertelement <2 x float> poison, float %1184, i64 0, !dbg !40
  %1567 = insertelement <2 x float> %1566, float %1185, i64 1, !dbg !40
  store <2 x float> %1567, ptr addrspace(3) %1310, align 8, !dbg !40
  %1568 = insertelement <2 x float> poison, float %1186, i64 0, !dbg !40
  %1569 = insertelement <2 x float> %1568, float %1187, i64 1, !dbg !40
  store <2 x float> %1569, ptr addrspace(3) %1316, align 8, !dbg !40
  %1570 = insertelement <2 x float> poison, float %1188, i64 0, !dbg !40
  %1571 = insertelement <2 x float> %1570, float %1189, i64 1, !dbg !40
  store <2 x float> %1571, ptr addrspace(3) %1321, align 8, !dbg !40
  %1572 = insertelement <2 x float> poison, float %1190, i64 0, !dbg !40
  %1573 = insertelement <2 x float> %1572, float %1191, i64 1, !dbg !40
  store <2 x float> %1573, ptr addrspace(3) %1327, align 8, !dbg !40
  %1574 = insertelement <2 x float> poison, float %1192, i64 0, !dbg !40
  %1575 = insertelement <2 x float> %1574, float %1193, i64 1, !dbg !40
  store <2 x float> %1575, ptr addrspace(3) %1332, align 8, !dbg !40
  %1576 = insertelement <2 x float> poison, float %1194, i64 0, !dbg !40
  %1577 = insertelement <2 x float> %1576, float %1195, i64 1, !dbg !40
  store <2 x float> %1577, ptr addrspace(3) %1338, align 8, !dbg !40
  %1578 = insertelement <2 x float> poison, float %1196, i64 0, !dbg !40
  %1579 = insertelement <2 x float> %1578, float %1197, i64 1, !dbg !40
  store <2 x float> %1579, ptr addrspace(3) %1343, align 8, !dbg !40
  %1580 = insertelement <2 x float> poison, float %1198, i64 0, !dbg !40
  %1581 = insertelement <2 x float> %1580, float %1199, i64 1, !dbg !40
  store <2 x float> %1581, ptr addrspace(3) %1349, align 8, !dbg !40
  %1582 = insertelement <2 x float> poison, float %1200, i64 0, !dbg !40
  %1583 = insertelement <2 x float> %1582, float %1201, i64 1, !dbg !40
  store <2 x float> %1583, ptr addrspace(3) %1354, align 8, !dbg !40
  %1584 = insertelement <2 x float> poison, float %1202, i64 0, !dbg !40
  %1585 = insertelement <2 x float> %1584, float %1203, i64 1, !dbg !40
  store <2 x float> %1585, ptr addrspace(3) %1360, align 8, !dbg !40
  %1586 = insertelement <2 x float> poison, float %1204, i64 0, !dbg !40
  %1587 = insertelement <2 x float> %1586, float %1205, i64 1, !dbg !40
  store <2 x float> %1587, ptr addrspace(3) %1365, align 8, !dbg !40
  %1588 = insertelement <2 x float> poison, float %1206, i64 0, !dbg !40
  %1589 = insertelement <2 x float> %1588, float %1207, i64 1, !dbg !40
  store <2 x float> %1589, ptr addrspace(3) %1371, align 8, !dbg !40
  %1590 = insertelement <2 x float> poison, float %1208, i64 0, !dbg !40
  %1591 = insertelement <2 x float> %1590, float %1209, i64 1, !dbg !40
  store <2 x float> %1591, ptr addrspace(3) %1376, align 8, !dbg !40
  %1592 = insertelement <2 x float> poison, float %1210, i64 0, !dbg !40
  %1593 = insertelement <2 x float> %1592, float %1211, i64 1, !dbg !40
  store <2 x float> %1593, ptr addrspace(3) %1382, align 8, !dbg !40
  %1594 = insertelement <2 x float> poison, float %1212, i64 0, !dbg !40
  %1595 = insertelement <2 x float> %1594, float %1213, i64 1, !dbg !40
  store <2 x float> %1595, ptr addrspace(3) %1387, align 8, !dbg !40
  %1596 = insertelement <2 x float> poison, float %1214, i64 0, !dbg !40
  %1597 = insertelement <2 x float> %1596, float %1215, i64 1, !dbg !40
  store <2 x float> %1597, ptr addrspace(3) %1393, align 8, !dbg !40
  %1598 = insertelement <2 x float> poison, float %1216, i64 0, !dbg !40
  %1599 = insertelement <2 x float> %1598, float %1217, i64 1, !dbg !40
  store <2 x float> %1599, ptr addrspace(3) %1398, align 8, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %1600 = load float, ptr addrspace(3) %1408, align 32, !dbg !40
  %1601 = load float, ptr addrspace(3) %1410, align 4, !dbg !40
  %1602 = load float, ptr addrspace(3) %1412, align 8, !dbg !40
  %1603 = load float, ptr addrspace(3) %1414, align 4, !dbg !40
  %1604 = load float, ptr addrspace(3) %1416, align 16, !dbg !40
  %1605 = load float, ptr addrspace(3) %1418, align 4, !dbg !40
  %1606 = load float, ptr addrspace(3) %1420, align 8, !dbg !40
  %1607 = load float, ptr addrspace(3) %1422, align 4, !dbg !40
  %1608 = load float, ptr addrspace(3) %1424, align 32, !dbg !40
  %1609 = load float, ptr addrspace(3) %1426, align 4, !dbg !40
  %1610 = load float, ptr addrspace(3) %1428, align 8, !dbg !40
  %1611 = load float, ptr addrspace(3) %1430, align 4, !dbg !40
  %1612 = load float, ptr addrspace(3) %1432, align 16, !dbg !40
  %1613 = load float, ptr addrspace(3) %1434, align 4, !dbg !40
  %1614 = load float, ptr addrspace(3) %1436, align 8, !dbg !40
  %1615 = load float, ptr addrspace(3) %1438, align 4, !dbg !40
  %1616 = load float, ptr addrspace(3) %1440, align 32, !dbg !40
  %1617 = load float, ptr addrspace(3) %1442, align 4, !dbg !40
  %1618 = load float, ptr addrspace(3) %1444, align 8, !dbg !40
  %1619 = load float, ptr addrspace(3) %1446, align 4, !dbg !40
  %1620 = load float, ptr addrspace(3) %1448, align 16, !dbg !40
  %1621 = load float, ptr addrspace(3) %1450, align 4, !dbg !40
  %1622 = load float, ptr addrspace(3) %1452, align 8, !dbg !40
  %1623 = load float, ptr addrspace(3) %1454, align 4, !dbg !40
  %1624 = load float, ptr addrspace(3) %1456, align 32, !dbg !40
  %1625 = load float, ptr addrspace(3) %1458, align 4, !dbg !40
  %1626 = load float, ptr addrspace(3) %1460, align 8, !dbg !40
  %1627 = load float, ptr addrspace(3) %1462, align 4, !dbg !40
  %1628 = load float, ptr addrspace(3) %1464, align 16, !dbg !40
  %1629 = load float, ptr addrspace(3) %1466, align 4, !dbg !40
  %1630 = load float, ptr addrspace(3) %1468, align 8, !dbg !40
  %1631 = load float, ptr addrspace(3) %1470, align 4, !dbg !40
  %1632 = load float, ptr addrspace(3) %1472, align 32, !dbg !40
  %1633 = load float, ptr addrspace(3) %1474, align 4, !dbg !40
  %1634 = load float, ptr addrspace(3) %1476, align 8, !dbg !40
  %1635 = load float, ptr addrspace(3) %1478, align 4, !dbg !40
  %1636 = load float, ptr addrspace(3) %1480, align 16, !dbg !40
  %1637 = load float, ptr addrspace(3) %1482, align 4, !dbg !40
  %1638 = load float, ptr addrspace(3) %1484, align 8, !dbg !40
  %1639 = load float, ptr addrspace(3) %1486, align 4, !dbg !40
  %1640 = load float, ptr addrspace(3) %1488, align 32, !dbg !40
  %1641 = load float, ptr addrspace(3) %1490, align 4, !dbg !40
  %1642 = load float, ptr addrspace(3) %1492, align 8, !dbg !40
  %1643 = load float, ptr addrspace(3) %1494, align 4, !dbg !40
  %1644 = load float, ptr addrspace(3) %1496, align 16, !dbg !40
  %1645 = load float, ptr addrspace(3) %1498, align 4, !dbg !40
  %1646 = load float, ptr addrspace(3) %1500, align 8, !dbg !40
  %1647 = load float, ptr addrspace(3) %1502, align 4, !dbg !40
  %1648 = load float, ptr addrspace(3) %1504, align 32, !dbg !40
  %1649 = load float, ptr addrspace(3) %1506, align 4, !dbg !40
  %1650 = load float, ptr addrspace(3) %1508, align 8, !dbg !40
  %1651 = load float, ptr addrspace(3) %1510, align 4, !dbg !40
  %1652 = load float, ptr addrspace(3) %1512, align 16, !dbg !40
  %1653 = load float, ptr addrspace(3) %1514, align 4, !dbg !40
  %1654 = load float, ptr addrspace(3) %1516, align 8, !dbg !40
  %1655 = load float, ptr addrspace(3) %1518, align 4, !dbg !40
  %1656 = load float, ptr addrspace(3) %1520, align 32, !dbg !40
  %1657 = load float, ptr addrspace(3) %1522, align 4, !dbg !40
  %1658 = load float, ptr addrspace(3) %1524, align 8, !dbg !40
  %1659 = load float, ptr addrspace(3) %1526, align 4, !dbg !40
  %1660 = load float, ptr addrspace(3) %1528, align 16, !dbg !40
  %1661 = load float, ptr addrspace(3) %1530, align 4, !dbg !40
  %1662 = load float, ptr addrspace(3) %1532, align 8, !dbg !40
  %1663 = load float, ptr addrspace(3) %1534, align 4, !dbg !40
  %1664 = icmp slt i32 %44, %4, !dbg !42
  %1665 = icmp slt i32 %1073, %4, !dbg !42
  %1666 = icmp slt i32 %1074, %4, !dbg !42
  %1667 = icmp slt i32 %1075, %4, !dbg !42
  %1668 = icmp slt i32 %1076, %4, !dbg !42
  %1669 = icmp slt i32 %1077, %4, !dbg !42
  %1670 = icmp slt i32 %1078, %4, !dbg !42
  %1671 = icmp slt i32 %1079, %4, !dbg !42
  %1672 = icmp slt i32 %1080, %4, !dbg !42
  %1673 = icmp slt i32 %1081, %4, !dbg !42
  %1674 = icmp slt i32 %1082, %4, !dbg !42
  %1675 = icmp slt i32 %1083, %4, !dbg !42
  %1676 = icmp slt i32 %1084, %4, !dbg !42
  %1677 = icmp slt i32 %1085, %4, !dbg !42
  %1678 = icmp slt i32 %1086, %4, !dbg !42
  %1679 = icmp slt i32 %1087, %4, !dbg !42
  %1680 = icmp slt i32 %1088, 12288, !dbg !43
  %1681 = and i1 %1680, %1664, !dbg !44
  %1682 = and i1 %1665, %1680, !dbg !44
  %1683 = and i1 %1666, %1680, !dbg !44
  %1684 = and i1 %1667, %1680, !dbg !44
  %1685 = and i1 %1668, %1680, !dbg !44
  %1686 = and i1 %1669, %1680, !dbg !44
  %1687 = and i1 %1670, %1680, !dbg !44
  %1688 = and i1 %1671, %1680, !dbg !44
  %1689 = and i1 %1672, %1680, !dbg !44
  %1690 = and i1 %1673, %1680, !dbg !44
  %1691 = and i1 %1674, %1680, !dbg !44
  %1692 = and i1 %1675, %1680, !dbg !44
  %1693 = and i1 %1676, %1680, !dbg !44
  %1694 = and i1 %1677, %1680, !dbg !44
  %1695 = and i1 %1678, %1680, !dbg !44
  %1696 = and i1 %1679, %1680, !dbg !44
  %1697 = sext i32 %1088 to i64, !dbg !45
  %1698 = getelementptr i16, ptr addrspace(1) %2, i64 %1697, !dbg !45
  %1699 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1681) #5, !dbg !46
  %1700 = extractvalue { i32, i32, i32, i32 } %1699, 0, !dbg !46
  %1701 = extractvalue { i32, i32, i32, i32 } %1699, 1, !dbg !46
  %1702 = extractvalue { i32, i32, i32, i32 } %1699, 2, !dbg !46
  %1703 = extractvalue { i32, i32, i32, i32 } %1699, 3, !dbg !46
  %1704 = trunc i32 %1700 to i16, !dbg !46
  %extelt.offset = lshr i32 %1700, 16, !dbg !46
  %1705 = trunc nuw i32 %extelt.offset to i16, !dbg !46
  %1706 = trunc i32 %1701 to i16, !dbg !46
  %extelt.offset257 = lshr i32 %1701, 16, !dbg !46
  %1707 = trunc nuw i32 %extelt.offset257 to i16, !dbg !46
  %1708 = trunc i32 %1702 to i16, !dbg !46
  %extelt.offset258 = lshr i32 %1702, 16, !dbg !46
  %1709 = trunc nuw i32 %extelt.offset258 to i16, !dbg !46
  %1710 = trunc i32 %1703 to i16, !dbg !46
  %extelt.offset259 = lshr i32 %1703, 16, !dbg !46
  %1711 = trunc nuw i32 %extelt.offset259 to i16, !dbg !46
  %1712 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1682) #5, !dbg !46
  %1713 = extractvalue { i32, i32, i32, i32 } %1712, 0, !dbg !46
  %1714 = extractvalue { i32, i32, i32, i32 } %1712, 1, !dbg !46
  %1715 = extractvalue { i32, i32, i32, i32 } %1712, 2, !dbg !46
  %1716 = extractvalue { i32, i32, i32, i32 } %1712, 3, !dbg !46
  %1717 = trunc i32 %1713 to i16, !dbg !46
  %extelt.offset260 = lshr i32 %1713, 16, !dbg !46
  %1718 = trunc nuw i32 %extelt.offset260 to i16, !dbg !46
  %1719 = trunc i32 %1714 to i16, !dbg !46
  %extelt.offset261 = lshr i32 %1714, 16, !dbg !46
  %1720 = trunc nuw i32 %extelt.offset261 to i16, !dbg !46
  %1721 = trunc i32 %1715 to i16, !dbg !46
  %extelt.offset262 = lshr i32 %1715, 16, !dbg !46
  %1722 = trunc nuw i32 %extelt.offset262 to i16, !dbg !46
  %1723 = trunc i32 %1716 to i16, !dbg !46
  %extelt.offset263 = lshr i32 %1716, 16, !dbg !46
  %1724 = trunc nuw i32 %extelt.offset263 to i16, !dbg !46
  %1725 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1683) #5, !dbg !46
  %1726 = extractvalue { i32, i32, i32, i32 } %1725, 0, !dbg !46
  %1727 = extractvalue { i32, i32, i32, i32 } %1725, 1, !dbg !46
  %1728 = extractvalue { i32, i32, i32, i32 } %1725, 2, !dbg !46
  %1729 = extractvalue { i32, i32, i32, i32 } %1725, 3, !dbg !46
  %1730 = trunc i32 %1726 to i16, !dbg !46
  %extelt.offset264 = lshr i32 %1726, 16, !dbg !46
  %1731 = trunc nuw i32 %extelt.offset264 to i16, !dbg !46
  %1732 = trunc i32 %1727 to i16, !dbg !46
  %extelt.offset265 = lshr i32 %1727, 16, !dbg !46
  %1733 = trunc nuw i32 %extelt.offset265 to i16, !dbg !46
  %1734 = trunc i32 %1728 to i16, !dbg !46
  %extelt.offset266 = lshr i32 %1728, 16, !dbg !46
  %1735 = trunc nuw i32 %extelt.offset266 to i16, !dbg !46
  %1736 = trunc i32 %1729 to i16, !dbg !46
  %extelt.offset267 = lshr i32 %1729, 16, !dbg !46
  %1737 = trunc nuw i32 %extelt.offset267 to i16, !dbg !46
  %1738 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1684) #5, !dbg !46
  %1739 = extractvalue { i32, i32, i32, i32 } %1738, 0, !dbg !46
  %1740 = extractvalue { i32, i32, i32, i32 } %1738, 1, !dbg !46
  %1741 = extractvalue { i32, i32, i32, i32 } %1738, 2, !dbg !46
  %1742 = extractvalue { i32, i32, i32, i32 } %1738, 3, !dbg !46
  %1743 = trunc i32 %1739 to i16, !dbg !46
  %extelt.offset268 = lshr i32 %1739, 16, !dbg !46
  %1744 = trunc nuw i32 %extelt.offset268 to i16, !dbg !46
  %1745 = trunc i32 %1740 to i16, !dbg !46
  %extelt.offset269 = lshr i32 %1740, 16, !dbg !46
  %1746 = trunc nuw i32 %extelt.offset269 to i16, !dbg !46
  %1747 = trunc i32 %1741 to i16, !dbg !46
  %extelt.offset270 = lshr i32 %1741, 16, !dbg !46
  %1748 = trunc nuw i32 %extelt.offset270 to i16, !dbg !46
  %1749 = trunc i32 %1742 to i16, !dbg !46
  %extelt.offset271 = lshr i32 %1742, 16, !dbg !46
  %1750 = trunc nuw i32 %extelt.offset271 to i16, !dbg !46
  %1751 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1685) #5, !dbg !46
  %1752 = extractvalue { i32, i32, i32, i32 } %1751, 0, !dbg !46
  %1753 = extractvalue { i32, i32, i32, i32 } %1751, 1, !dbg !46
  %1754 = extractvalue { i32, i32, i32, i32 } %1751, 2, !dbg !46
  %1755 = extractvalue { i32, i32, i32, i32 } %1751, 3, !dbg !46
  %1756 = trunc i32 %1752 to i16, !dbg !46
  %extelt.offset272 = lshr i32 %1752, 16, !dbg !46
  %1757 = trunc nuw i32 %extelt.offset272 to i16, !dbg !46
  %1758 = trunc i32 %1753 to i16, !dbg !46
  %extelt.offset273 = lshr i32 %1753, 16, !dbg !46
  %1759 = trunc nuw i32 %extelt.offset273 to i16, !dbg !46
  %1760 = trunc i32 %1754 to i16, !dbg !46
  %extelt.offset274 = lshr i32 %1754, 16, !dbg !46
  %1761 = trunc nuw i32 %extelt.offset274 to i16, !dbg !46
  %1762 = trunc i32 %1755 to i16, !dbg !46
  %extelt.offset275 = lshr i32 %1755, 16, !dbg !46
  %1763 = trunc nuw i32 %extelt.offset275 to i16, !dbg !46
  %1764 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1686) #5, !dbg !46
  %1765 = extractvalue { i32, i32, i32, i32 } %1764, 0, !dbg !46
  %1766 = extractvalue { i32, i32, i32, i32 } %1764, 1, !dbg !46
  %1767 = extractvalue { i32, i32, i32, i32 } %1764, 2, !dbg !46
  %1768 = extractvalue { i32, i32, i32, i32 } %1764, 3, !dbg !46
  %1769 = trunc i32 %1765 to i16, !dbg !46
  %extelt.offset276 = lshr i32 %1765, 16, !dbg !46
  %1770 = trunc nuw i32 %extelt.offset276 to i16, !dbg !46
  %1771 = trunc i32 %1766 to i16, !dbg !46
  %extelt.offset277 = lshr i32 %1766, 16, !dbg !46
  %1772 = trunc nuw i32 %extelt.offset277 to i16, !dbg !46
  %1773 = trunc i32 %1767 to i16, !dbg !46
  %extelt.offset278 = lshr i32 %1767, 16, !dbg !46
  %1774 = trunc nuw i32 %extelt.offset278 to i16, !dbg !46
  %1775 = trunc i32 %1768 to i16, !dbg !46
  %extelt.offset279 = lshr i32 %1768, 16, !dbg !46
  %1776 = trunc nuw i32 %extelt.offset279 to i16, !dbg !46
  %1777 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1687) #5, !dbg !46
  %1778 = extractvalue { i32, i32, i32, i32 } %1777, 0, !dbg !46
  %1779 = extractvalue { i32, i32, i32, i32 } %1777, 1, !dbg !46
  %1780 = extractvalue { i32, i32, i32, i32 } %1777, 2, !dbg !46
  %1781 = extractvalue { i32, i32, i32, i32 } %1777, 3, !dbg !46
  %1782 = trunc i32 %1778 to i16, !dbg !46
  %extelt.offset280 = lshr i32 %1778, 16, !dbg !46
  %1783 = trunc nuw i32 %extelt.offset280 to i16, !dbg !46
  %1784 = trunc i32 %1779 to i16, !dbg !46
  %extelt.offset281 = lshr i32 %1779, 16, !dbg !46
  %1785 = trunc nuw i32 %extelt.offset281 to i16, !dbg !46
  %1786 = trunc i32 %1780 to i16, !dbg !46
  %extelt.offset282 = lshr i32 %1780, 16, !dbg !46
  %1787 = trunc nuw i32 %extelt.offset282 to i16, !dbg !46
  %1788 = trunc i32 %1781 to i16, !dbg !46
  %extelt.offset283 = lshr i32 %1781, 16, !dbg !46
  %1789 = trunc nuw i32 %extelt.offset283 to i16, !dbg !46
  %1790 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1688) #5, !dbg !46
  %1791 = extractvalue { i32, i32, i32, i32 } %1790, 0, !dbg !46
  %1792 = extractvalue { i32, i32, i32, i32 } %1790, 1, !dbg !46
  %1793 = extractvalue { i32, i32, i32, i32 } %1790, 2, !dbg !46
  %1794 = extractvalue { i32, i32, i32, i32 } %1790, 3, !dbg !46
  %1795 = trunc i32 %1791 to i16, !dbg !46
  %extelt.offset284 = lshr i32 %1791, 16, !dbg !46
  %1796 = trunc nuw i32 %extelt.offset284 to i16, !dbg !46
  %1797 = trunc i32 %1792 to i16, !dbg !46
  %extelt.offset285 = lshr i32 %1792, 16, !dbg !46
  %1798 = trunc nuw i32 %extelt.offset285 to i16, !dbg !46
  %1799 = trunc i32 %1793 to i16, !dbg !46
  %extelt.offset286 = lshr i32 %1793, 16, !dbg !46
  %1800 = trunc nuw i32 %extelt.offset286 to i16, !dbg !46
  %1801 = trunc i32 %1794 to i16, !dbg !46
  %extelt.offset287 = lshr i32 %1794, 16, !dbg !46
  %1802 = trunc nuw i32 %extelt.offset287 to i16, !dbg !46
  %1803 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1689) #5, !dbg !46
  %1804 = extractvalue { i32, i32, i32, i32 } %1803, 0, !dbg !46
  %1805 = extractvalue { i32, i32, i32, i32 } %1803, 1, !dbg !46
  %1806 = extractvalue { i32, i32, i32, i32 } %1803, 2, !dbg !46
  %1807 = extractvalue { i32, i32, i32, i32 } %1803, 3, !dbg !46
  %1808 = trunc i32 %1804 to i16, !dbg !46
  %extelt.offset288 = lshr i32 %1804, 16, !dbg !46
  %1809 = trunc nuw i32 %extelt.offset288 to i16, !dbg !46
  %1810 = trunc i32 %1805 to i16, !dbg !46
  %extelt.offset289 = lshr i32 %1805, 16, !dbg !46
  %1811 = trunc nuw i32 %extelt.offset289 to i16, !dbg !46
  %1812 = trunc i32 %1806 to i16, !dbg !46
  %extelt.offset290 = lshr i32 %1806, 16, !dbg !46
  %1813 = trunc nuw i32 %extelt.offset290 to i16, !dbg !46
  %1814 = trunc i32 %1807 to i16, !dbg !46
  %extelt.offset291 = lshr i32 %1807, 16, !dbg !46
  %1815 = trunc nuw i32 %extelt.offset291 to i16, !dbg !46
  %1816 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1690) #5, !dbg !46
  %1817 = extractvalue { i32, i32, i32, i32 } %1816, 0, !dbg !46
  %1818 = extractvalue { i32, i32, i32, i32 } %1816, 1, !dbg !46
  %1819 = extractvalue { i32, i32, i32, i32 } %1816, 2, !dbg !46
  %1820 = extractvalue { i32, i32, i32, i32 } %1816, 3, !dbg !46
  %1821 = trunc i32 %1817 to i16, !dbg !46
  %extelt.offset292 = lshr i32 %1817, 16, !dbg !46
  %1822 = trunc nuw i32 %extelt.offset292 to i16, !dbg !46
  %1823 = trunc i32 %1818 to i16, !dbg !46
  %extelt.offset293 = lshr i32 %1818, 16, !dbg !46
  %1824 = trunc nuw i32 %extelt.offset293 to i16, !dbg !46
  %1825 = trunc i32 %1819 to i16, !dbg !46
  %extelt.offset294 = lshr i32 %1819, 16, !dbg !46
  %1826 = trunc nuw i32 %extelt.offset294 to i16, !dbg !46
  %1827 = trunc i32 %1820 to i16, !dbg !46
  %extelt.offset295 = lshr i32 %1820, 16, !dbg !46
  %1828 = trunc nuw i32 %extelt.offset295 to i16, !dbg !46
  %1829 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1691) #5, !dbg !46
  %1830 = extractvalue { i32, i32, i32, i32 } %1829, 0, !dbg !46
  %1831 = extractvalue { i32, i32, i32, i32 } %1829, 1, !dbg !46
  %1832 = extractvalue { i32, i32, i32, i32 } %1829, 2, !dbg !46
  %1833 = extractvalue { i32, i32, i32, i32 } %1829, 3, !dbg !46
  %1834 = trunc i32 %1830 to i16, !dbg !46
  %extelt.offset296 = lshr i32 %1830, 16, !dbg !46
  %1835 = trunc nuw i32 %extelt.offset296 to i16, !dbg !46
  %1836 = trunc i32 %1831 to i16, !dbg !46
  %extelt.offset297 = lshr i32 %1831, 16, !dbg !46
  %1837 = trunc nuw i32 %extelt.offset297 to i16, !dbg !46
  %1838 = trunc i32 %1832 to i16, !dbg !46
  %extelt.offset298 = lshr i32 %1832, 16, !dbg !46
  %1839 = trunc nuw i32 %extelt.offset298 to i16, !dbg !46
  %1840 = trunc i32 %1833 to i16, !dbg !46
  %extelt.offset299 = lshr i32 %1833, 16, !dbg !46
  %1841 = trunc nuw i32 %extelt.offset299 to i16, !dbg !46
  %1842 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1692) #5, !dbg !46
  %1843 = extractvalue { i32, i32, i32, i32 } %1842, 0, !dbg !46
  %1844 = extractvalue { i32, i32, i32, i32 } %1842, 1, !dbg !46
  %1845 = extractvalue { i32, i32, i32, i32 } %1842, 2, !dbg !46
  %1846 = extractvalue { i32, i32, i32, i32 } %1842, 3, !dbg !46
  %1847 = trunc i32 %1843 to i16, !dbg !46
  %extelt.offset300 = lshr i32 %1843, 16, !dbg !46
  %1848 = trunc nuw i32 %extelt.offset300 to i16, !dbg !46
  %1849 = trunc i32 %1844 to i16, !dbg !46
  %extelt.offset301 = lshr i32 %1844, 16, !dbg !46
  %1850 = trunc nuw i32 %extelt.offset301 to i16, !dbg !46
  %1851 = trunc i32 %1845 to i16, !dbg !46
  %extelt.offset302 = lshr i32 %1845, 16, !dbg !46
  %1852 = trunc nuw i32 %extelt.offset302 to i16, !dbg !46
  %1853 = trunc i32 %1846 to i16, !dbg !46
  %extelt.offset303 = lshr i32 %1846, 16, !dbg !46
  %1854 = trunc nuw i32 %extelt.offset303 to i16, !dbg !46
  %1855 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1693) #5, !dbg !46
  %1856 = extractvalue { i32, i32, i32, i32 } %1855, 0, !dbg !46
  %1857 = extractvalue { i32, i32, i32, i32 } %1855, 1, !dbg !46
  %1858 = extractvalue { i32, i32, i32, i32 } %1855, 2, !dbg !46
  %1859 = extractvalue { i32, i32, i32, i32 } %1855, 3, !dbg !46
  %1860 = trunc i32 %1856 to i16, !dbg !46
  %extelt.offset304 = lshr i32 %1856, 16, !dbg !46
  %1861 = trunc nuw i32 %extelt.offset304 to i16, !dbg !46
  %1862 = trunc i32 %1857 to i16, !dbg !46
  %extelt.offset305 = lshr i32 %1857, 16, !dbg !46
  %1863 = trunc nuw i32 %extelt.offset305 to i16, !dbg !46
  %1864 = trunc i32 %1858 to i16, !dbg !46
  %extelt.offset306 = lshr i32 %1858, 16, !dbg !46
  %1865 = trunc nuw i32 %extelt.offset306 to i16, !dbg !46
  %1866 = trunc i32 %1859 to i16, !dbg !46
  %extelt.offset307 = lshr i32 %1859, 16, !dbg !46
  %1867 = trunc nuw i32 %extelt.offset307 to i16, !dbg !46
  %1868 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1694) #5, !dbg !46
  %1869 = extractvalue { i32, i32, i32, i32 } %1868, 0, !dbg !46
  %1870 = extractvalue { i32, i32, i32, i32 } %1868, 1, !dbg !46
  %1871 = extractvalue { i32, i32, i32, i32 } %1868, 2, !dbg !46
  %1872 = extractvalue { i32, i32, i32, i32 } %1868, 3, !dbg !46
  %1873 = trunc i32 %1869 to i16, !dbg !46
  %extelt.offset308 = lshr i32 %1869, 16, !dbg !46
  %1874 = trunc nuw i32 %extelt.offset308 to i16, !dbg !46
  %1875 = trunc i32 %1870 to i16, !dbg !46
  %extelt.offset309 = lshr i32 %1870, 16, !dbg !46
  %1876 = trunc nuw i32 %extelt.offset309 to i16, !dbg !46
  %1877 = trunc i32 %1871 to i16, !dbg !46
  %extelt.offset310 = lshr i32 %1871, 16, !dbg !46
  %1878 = trunc nuw i32 %extelt.offset310 to i16, !dbg !46
  %1879 = trunc i32 %1872 to i16, !dbg !46
  %extelt.offset311 = lshr i32 %1872, 16, !dbg !46
  %1880 = trunc nuw i32 %extelt.offset311 to i16, !dbg !46
  %1881 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1695) #5, !dbg !46
  %1882 = extractvalue { i32, i32, i32, i32 } %1881, 0, !dbg !46
  %1883 = extractvalue { i32, i32, i32, i32 } %1881, 1, !dbg !46
  %1884 = extractvalue { i32, i32, i32, i32 } %1881, 2, !dbg !46
  %1885 = extractvalue { i32, i32, i32, i32 } %1881, 3, !dbg !46
  %1886 = trunc i32 %1882 to i16, !dbg !46
  %extelt.offset312 = lshr i32 %1882, 16, !dbg !46
  %1887 = trunc nuw i32 %extelt.offset312 to i16, !dbg !46
  %1888 = trunc i32 %1883 to i16, !dbg !46
  %extelt.offset313 = lshr i32 %1883, 16, !dbg !46
  %1889 = trunc nuw i32 %extelt.offset313 to i16, !dbg !46
  %1890 = trunc i32 %1884 to i16, !dbg !46
  %extelt.offset314 = lshr i32 %1884, 16, !dbg !46
  %1891 = trunc nuw i32 %extelt.offset314 to i16, !dbg !46
  %1892 = trunc i32 %1885 to i16, !dbg !46
  %extelt.offset315 = lshr i32 %1885, 16, !dbg !46
  %1893 = trunc nuw i32 %extelt.offset315 to i16, !dbg !46
  %1894 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1698, i1 %1696) #5, !dbg !46
  %1895 = extractvalue { i32, i32, i32, i32 } %1894, 0, !dbg !46
  %1896 = extractvalue { i32, i32, i32, i32 } %1894, 1, !dbg !46
  %1897 = extractvalue { i32, i32, i32, i32 } %1894, 2, !dbg !46
  %1898 = extractvalue { i32, i32, i32, i32 } %1894, 3, !dbg !46
  %1899 = trunc i32 %1895 to i16, !dbg !46
  %extelt.offset316 = lshr i32 %1895, 16, !dbg !46
  %1900 = trunc nuw i32 %extelt.offset316 to i16, !dbg !46
  %1901 = trunc i32 %1896 to i16, !dbg !46
  %extelt.offset317 = lshr i32 %1896, 16, !dbg !46
  %1902 = trunc nuw i32 %extelt.offset317 to i16, !dbg !46
  %1903 = trunc i32 %1897 to i16, !dbg !46
  %extelt.offset318 = lshr i32 %1897, 16, !dbg !46
  %1904 = trunc nuw i32 %extelt.offset318 to i16, !dbg !46
  %1905 = trunc i32 %1898 to i16, !dbg !46
  %extelt.offset319 = lshr i32 %1898, 16, !dbg !46
  %1906 = trunc nuw i32 %extelt.offset319 to i16, !dbg !46
  %1907 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1704) #5, !dbg !47
  %1908 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1705) #5, !dbg !47
  %1909 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1706) #5, !dbg !47
  %1910 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1707) #5, !dbg !47
  %1911 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1708) #5, !dbg !47
  %1912 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1709) #5, !dbg !47
  %1913 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1710) #5, !dbg !47
  %1914 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1711) #5, !dbg !47
  %1915 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1717) #5, !dbg !47
  %1916 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1718) #5, !dbg !47
  %1917 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1719) #5, !dbg !47
  %1918 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1720) #5, !dbg !47
  %1919 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1721) #5, !dbg !47
  %1920 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1722) #5, !dbg !47
  %1921 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1723) #5, !dbg !47
  %1922 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1724) #5, !dbg !47
  %1923 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1730) #5, !dbg !47
  %1924 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1731) #5, !dbg !47
  %1925 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1732) #5, !dbg !47
  %1926 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1733) #5, !dbg !47
  %1927 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1734) #5, !dbg !47
  %1928 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1735) #5, !dbg !47
  %1929 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1736) #5, !dbg !47
  %1930 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1737) #5, !dbg !47
  %1931 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1743) #5, !dbg !47
  %1932 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1744) #5, !dbg !47
  %1933 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1745) #5, !dbg !47
  %1934 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1746) #5, !dbg !47
  %1935 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1747) #5, !dbg !47
  %1936 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1748) #5, !dbg !47
  %1937 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1749) #5, !dbg !47
  %1938 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1750) #5, !dbg !47
  %1939 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1756) #5, !dbg !47
  %1940 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1757) #5, !dbg !47
  %1941 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1758) #5, !dbg !47
  %1942 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1759) #5, !dbg !47
  %1943 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1760) #5, !dbg !47
  %1944 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1761) #5, !dbg !47
  %1945 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1762) #5, !dbg !47
  %1946 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1763) #5, !dbg !47
  %1947 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1769) #5, !dbg !47
  %1948 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1770) #5, !dbg !47
  %1949 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1771) #5, !dbg !47
  %1950 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1772) #5, !dbg !47
  %1951 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1773) #5, !dbg !47
  %1952 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1774) #5, !dbg !47
  %1953 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1775) #5, !dbg !47
  %1954 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1776) #5, !dbg !47
  %1955 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1782) #5, !dbg !47
  %1956 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1783) #5, !dbg !47
  %1957 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1784) #5, !dbg !47
  %1958 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1785) #5, !dbg !47
  %1959 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1786) #5, !dbg !47
  %1960 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1787) #5, !dbg !47
  %1961 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1788) #5, !dbg !47
  %1962 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1789) #5, !dbg !47
  %1963 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1795) #5, !dbg !47
  %1964 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1796) #5, !dbg !47
  %1965 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1797) #5, !dbg !47
  %1966 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1798) #5, !dbg !47
  %1967 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1799) #5, !dbg !47
  %1968 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1800) #5, !dbg !47
  %1969 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1801) #5, !dbg !47
  %1970 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1802) #5, !dbg !47
  %1971 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1808) #5, !dbg !47
  %1972 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1809) #5, !dbg !47
  %1973 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1810) #5, !dbg !47
  %1974 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1811) #5, !dbg !47
  %1975 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1812) #5, !dbg !47
  %1976 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1813) #5, !dbg !47
  %1977 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1814) #5, !dbg !47
  %1978 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1815) #5, !dbg !47
  %1979 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1821) #5, !dbg !47
  %1980 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1822) #5, !dbg !47
  %1981 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1823) #5, !dbg !47
  %1982 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1824) #5, !dbg !47
  %1983 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1825) #5, !dbg !47
  %1984 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1826) #5, !dbg !47
  %1985 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1827) #5, !dbg !47
  %1986 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1828) #5, !dbg !47
  %1987 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1834) #5, !dbg !47
  %1988 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1835) #5, !dbg !47
  %1989 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1836) #5, !dbg !47
  %1990 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1837) #5, !dbg !47
  %1991 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1838) #5, !dbg !47
  %1992 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1839) #5, !dbg !47
  %1993 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1840) #5, !dbg !47
  %1994 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1841) #5, !dbg !47
  %1995 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1847) #5, !dbg !47
  %1996 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1848) #5, !dbg !47
  %1997 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1849) #5, !dbg !47
  %1998 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1850) #5, !dbg !47
  %1999 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1851) #5, !dbg !47
  %2000 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1852) #5, !dbg !47
  %2001 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1853) #5, !dbg !47
  %2002 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1854) #5, !dbg !47
  %2003 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1860) #5, !dbg !47
  %2004 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1861) #5, !dbg !47
  %2005 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1862) #5, !dbg !47
  %2006 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1863) #5, !dbg !47
  %2007 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1864) #5, !dbg !47
  %2008 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1865) #5, !dbg !47
  %2009 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1866) #5, !dbg !47
  %2010 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1867) #5, !dbg !47
  %2011 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1873) #5, !dbg !47
  %2012 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1874) #5, !dbg !47
  %2013 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1875) #5, !dbg !47
  %2014 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1876) #5, !dbg !47
  %2015 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1877) #5, !dbg !47
  %2016 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1878) #5, !dbg !47
  %2017 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1879) #5, !dbg !47
  %2018 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1880) #5, !dbg !47
  %2019 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1886) #5, !dbg !47
  %2020 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1887) #5, !dbg !47
  %2021 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1888) #5, !dbg !47
  %2022 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1889) #5, !dbg !47
  %2023 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1890) #5, !dbg !47
  %2024 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1891) #5, !dbg !47
  %2025 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1892) #5, !dbg !47
  %2026 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1893) #5, !dbg !47
  %2027 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1899) #5, !dbg !47
  %2028 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1900) #5, !dbg !47
  %2029 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1901) #5, !dbg !47
  %2030 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1902) #5, !dbg !47
  %2031 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1903) #5, !dbg !47
  %2032 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1904) #5, !dbg !47
  %2033 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1905) #5, !dbg !47
  %2034 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %1906) #5, !dbg !47
  %2035 = fadd float %1409, %1907, !dbg !48
  %2036 = fadd float %1411, %1908, !dbg !48
  %2037 = fadd float %1413, %1909, !dbg !48
  %2038 = fadd float %1415, %1910, !dbg !48
  %2039 = fadd float %1417, %1911, !dbg !48
  %2040 = fadd float %1419, %1912, !dbg !48
  %2041 = fadd float %1421, %1913, !dbg !48
  %2042 = fadd float %1423, %1914, !dbg !48
  %2043 = fadd float %1425, %1915, !dbg !48
  %2044 = fadd float %1427, %1916, !dbg !48
  %2045 = fadd float %1429, %1917, !dbg !48
  %2046 = fadd float %1431, %1918, !dbg !48
  %2047 = fadd float %1433, %1919, !dbg !48
  %2048 = fadd float %1435, %1920, !dbg !48
  %2049 = fadd float %1437, %1921, !dbg !48
  %2050 = fadd float %1439, %1922, !dbg !48
  %2051 = fadd float %1441, %1923, !dbg !48
  %2052 = fadd float %1443, %1924, !dbg !48
  %2053 = fadd float %1445, %1925, !dbg !48
  %2054 = fadd float %1447, %1926, !dbg !48
  %2055 = fadd float %1449, %1927, !dbg !48
  %2056 = fadd float %1451, %1928, !dbg !48
  %2057 = fadd float %1453, %1929, !dbg !48
  %2058 = fadd float %1455, %1930, !dbg !48
  %2059 = fadd float %1457, %1931, !dbg !48
  %2060 = fadd float %1459, %1932, !dbg !48
  %2061 = fadd float %1461, %1933, !dbg !48
  %2062 = fadd float %1463, %1934, !dbg !48
  %2063 = fadd float %1465, %1935, !dbg !48
  %2064 = fadd float %1467, %1936, !dbg !48
  %2065 = fadd float %1469, %1937, !dbg !48
  %2066 = fadd float %1471, %1938, !dbg !48
  %2067 = fadd float %1473, %1939, !dbg !48
  %2068 = fadd float %1475, %1940, !dbg !48
  %2069 = fadd float %1477, %1941, !dbg !48
  %2070 = fadd float %1479, %1942, !dbg !48
  %2071 = fadd float %1481, %1943, !dbg !48
  %2072 = fadd float %1483, %1944, !dbg !48
  %2073 = fadd float %1485, %1945, !dbg !48
  %2074 = fadd float %1487, %1946, !dbg !48
  %2075 = fadd float %1489, %1947, !dbg !48
  %2076 = fadd float %1491, %1948, !dbg !48
  %2077 = fadd float %1493, %1949, !dbg !48
  %2078 = fadd float %1495, %1950, !dbg !48
  %2079 = fadd float %1497, %1951, !dbg !48
  %2080 = fadd float %1499, %1952, !dbg !48
  %2081 = fadd float %1501, %1953, !dbg !48
  %2082 = fadd float %1503, %1954, !dbg !48
  %2083 = fadd float %1505, %1955, !dbg !48
  %2084 = fadd float %1507, %1956, !dbg !48
  %2085 = fadd float %1509, %1957, !dbg !48
  %2086 = fadd float %1511, %1958, !dbg !48
  %2087 = fadd float %1513, %1959, !dbg !48
  %2088 = fadd float %1515, %1960, !dbg !48
  %2089 = fadd float %1517, %1961, !dbg !48
  %2090 = fadd float %1519, %1962, !dbg !48
  %2091 = fadd float %1521, %1963, !dbg !48
  %2092 = fadd float %1523, %1964, !dbg !48
  %2093 = fadd float %1525, %1965, !dbg !48
  %2094 = fadd float %1527, %1966, !dbg !48
  %2095 = fadd float %1529, %1967, !dbg !48
  %2096 = fadd float %1531, %1968, !dbg !48
  %2097 = fadd float %1533, %1969, !dbg !48
  %2098 = fadd float %1535, %1970, !dbg !48
  %2099 = fadd float %1600, %1971, !dbg !48
  %2100 = fadd float %1601, %1972, !dbg !48
  %2101 = fadd float %1602, %1973, !dbg !48
  %2102 = fadd float %1603, %1974, !dbg !48
  %2103 = fadd float %1604, %1975, !dbg !48
  %2104 = fadd float %1605, %1976, !dbg !48
  %2105 = fadd float %1606, %1977, !dbg !48
  %2106 = fadd float %1607, %1978, !dbg !48
  %2107 = fadd float %1608, %1979, !dbg !48
  %2108 = fadd float %1609, %1980, !dbg !48
  %2109 = fadd float %1610, %1981, !dbg !48
  %2110 = fadd float %1611, %1982, !dbg !48
  %2111 = fadd float %1612, %1983, !dbg !48
  %2112 = fadd float %1613, %1984, !dbg !48
  %2113 = fadd float %1614, %1985, !dbg !48
  %2114 = fadd float %1615, %1986, !dbg !48
  %2115 = fadd float %1616, %1987, !dbg !48
  %2116 = fadd float %1617, %1988, !dbg !48
  %2117 = fadd float %1618, %1989, !dbg !48
  %2118 = fadd float %1619, %1990, !dbg !48
  %2119 = fadd float %1620, %1991, !dbg !48
  %2120 = fadd float %1621, %1992, !dbg !48
  %2121 = fadd float %1622, %1993, !dbg !48
  %2122 = fadd float %1623, %1994, !dbg !48
  %2123 = fadd float %1624, %1995, !dbg !48
  %2124 = fadd float %1625, %1996, !dbg !48
  %2125 = fadd float %1626, %1997, !dbg !48
  %2126 = fadd float %1627, %1998, !dbg !48
  %2127 = fadd float %1628, %1999, !dbg !48
  %2128 = fadd float %1629, %2000, !dbg !48
  %2129 = fadd float %1630, %2001, !dbg !48
  %2130 = fadd float %1631, %2002, !dbg !48
  %2131 = fadd float %1632, %2003, !dbg !48
  %2132 = fadd float %1633, %2004, !dbg !48
  %2133 = fadd float %1634, %2005, !dbg !48
  %2134 = fadd float %1635, %2006, !dbg !48
  %2135 = fadd float %1636, %2007, !dbg !48
  %2136 = fadd float %1637, %2008, !dbg !48
  %2137 = fadd float %1638, %2009, !dbg !48
  %2138 = fadd float %1639, %2010, !dbg !48
  %2139 = fadd float %1640, %2011, !dbg !48
  %2140 = fadd float %1641, %2012, !dbg !48
  %2141 = fadd float %1642, %2013, !dbg !48
  %2142 = fadd float %1643, %2014, !dbg !48
  %2143 = fadd float %1644, %2015, !dbg !48
  %2144 = fadd float %1645, %2016, !dbg !48
  %2145 = fadd float %1646, %2017, !dbg !48
  %2146 = fadd float %1647, %2018, !dbg !48
  %2147 = fadd float %1648, %2019, !dbg !48
  %2148 = fadd float %1649, %2020, !dbg !48
  %2149 = fadd float %1650, %2021, !dbg !48
  %2150 = fadd float %1651, %2022, !dbg !48
  %2151 = fadd float %1652, %2023, !dbg !48
  %2152 = fadd float %1653, %2024, !dbg !48
  %2153 = fadd float %1654, %2025, !dbg !48
  %2154 = fadd float %1655, %2026, !dbg !48
  %2155 = fadd float %1656, %2027, !dbg !48
  %2156 = fadd float %1657, %2028, !dbg !48
  %2157 = fadd float %1658, %2029, !dbg !48
  %2158 = fadd float %1659, %2030, !dbg !48
  %2159 = fadd float %1660, %2031, !dbg !48
  %2160 = fadd float %1661, %2032, !dbg !48
  %2161 = fadd float %1662, %2033, !dbg !48
  %2162 = fadd float %1663, %2034, !dbg !48
  %2163 = fmul float %2035, 5.000000e-01, !dbg !49
  %2164 = fmul float %2036, 5.000000e-01, !dbg !49
  %2165 = fmul float %2037, 5.000000e-01, !dbg !49
  %2166 = fmul float %2038, 5.000000e-01, !dbg !49
  %2167 = fmul float %2039, 5.000000e-01, !dbg !49
  %2168 = fmul float %2040, 5.000000e-01, !dbg !49
  %2169 = fmul float %2041, 5.000000e-01, !dbg !49
  %2170 = fmul float %2042, 5.000000e-01, !dbg !49
  %2171 = fmul float %2043, 5.000000e-01, !dbg !49
  %2172 = fmul float %2044, 5.000000e-01, !dbg !49
  %2173 = fmul float %2045, 5.000000e-01, !dbg !49
  %2174 = fmul float %2046, 5.000000e-01, !dbg !49
  %2175 = fmul float %2047, 5.000000e-01, !dbg !49
  %2176 = fmul float %2048, 5.000000e-01, !dbg !49
  %2177 = fmul float %2049, 5.000000e-01, !dbg !49
  %2178 = fmul float %2050, 5.000000e-01, !dbg !49
  %2179 = fmul float %2051, 5.000000e-01, !dbg !49
  %2180 = fmul float %2052, 5.000000e-01, !dbg !49
  %2181 = fmul float %2053, 5.000000e-01, !dbg !49
  %2182 = fmul float %2054, 5.000000e-01, !dbg !49
  %2183 = fmul float %2055, 5.000000e-01, !dbg !49
  %2184 = fmul float %2056, 5.000000e-01, !dbg !49
  %2185 = fmul float %2057, 5.000000e-01, !dbg !49
  %2186 = fmul float %2058, 5.000000e-01, !dbg !49
  %2187 = fmul float %2059, 5.000000e-01, !dbg !49
  %2188 = fmul float %2060, 5.000000e-01, !dbg !49
  %2189 = fmul float %2061, 5.000000e-01, !dbg !49
  %2190 = fmul float %2062, 5.000000e-01, !dbg !49
  %2191 = fmul float %2063, 5.000000e-01, !dbg !49
  %2192 = fmul float %2064, 5.000000e-01, !dbg !49
  %2193 = fmul float %2065, 5.000000e-01, !dbg !49
  %2194 = fmul float %2066, 5.000000e-01, !dbg !49
  %2195 = fmul float %2067, 5.000000e-01, !dbg !49
  %2196 = fmul float %2068, 5.000000e-01, !dbg !49
  %2197 = fmul float %2069, 5.000000e-01, !dbg !49
  %2198 = fmul float %2070, 5.000000e-01, !dbg !49
  %2199 = fmul float %2071, 5.000000e-01, !dbg !49
  %2200 = fmul float %2072, 5.000000e-01, !dbg !49
  %2201 = fmul float %2073, 5.000000e-01, !dbg !49
  %2202 = fmul float %2074, 5.000000e-01, !dbg !49
  %2203 = fmul float %2075, 5.000000e-01, !dbg !49
  %2204 = fmul float %2076, 5.000000e-01, !dbg !49
  %2205 = fmul float %2077, 5.000000e-01, !dbg !49
  %2206 = fmul float %2078, 5.000000e-01, !dbg !49
  %2207 = fmul float %2079, 5.000000e-01, !dbg !49
  %2208 = fmul float %2080, 5.000000e-01, !dbg !49
  %2209 = fmul float %2081, 5.000000e-01, !dbg !49
  %2210 = fmul float %2082, 5.000000e-01, !dbg !49
  %2211 = fmul float %2083, 5.000000e-01, !dbg !49
  %2212 = fmul float %2084, 5.000000e-01, !dbg !49
  %2213 = fmul float %2085, 5.000000e-01, !dbg !49
  %2214 = fmul float %2086, 5.000000e-01, !dbg !49
  %2215 = fmul float %2087, 5.000000e-01, !dbg !49
  %2216 = fmul float %2088, 5.000000e-01, !dbg !49
  %2217 = fmul float %2089, 5.000000e-01, !dbg !49
  %2218 = fmul float %2090, 5.000000e-01, !dbg !49
  %2219 = fmul float %2091, 5.000000e-01, !dbg !49
  %2220 = fmul float %2092, 5.000000e-01, !dbg !49
  %2221 = fmul float %2093, 5.000000e-01, !dbg !49
  %2222 = fmul float %2094, 5.000000e-01, !dbg !49
  %2223 = fmul float %2095, 5.000000e-01, !dbg !49
  %2224 = fmul float %2096, 5.000000e-01, !dbg !49
  %2225 = fmul float %2097, 5.000000e-01, !dbg !49
  %2226 = fmul float %2098, 5.000000e-01, !dbg !49
  %2227 = fmul float %2099, 5.000000e-01, !dbg !49
  %2228 = fmul float %2100, 5.000000e-01, !dbg !49
  %2229 = fmul float %2101, 5.000000e-01, !dbg !49
  %2230 = fmul float %2102, 5.000000e-01, !dbg !49
  %2231 = fmul float %2103, 5.000000e-01, !dbg !49
  %2232 = fmul float %2104, 5.000000e-01, !dbg !49
  %2233 = fmul float %2105, 5.000000e-01, !dbg !49
  %2234 = fmul float %2106, 5.000000e-01, !dbg !49
  %2235 = fmul float %2107, 5.000000e-01, !dbg !49
  %2236 = fmul float %2108, 5.000000e-01, !dbg !49
  %2237 = fmul float %2109, 5.000000e-01, !dbg !49
  %2238 = fmul float %2110, 5.000000e-01, !dbg !49
  %2239 = fmul float %2111, 5.000000e-01, !dbg !49
  %2240 = fmul float %2112, 5.000000e-01, !dbg !49
  %2241 = fmul float %2113, 5.000000e-01, !dbg !49
  %2242 = fmul float %2114, 5.000000e-01, !dbg !49
  %2243 = fmul float %2115, 5.000000e-01, !dbg !49
  %2244 = fmul float %2116, 5.000000e-01, !dbg !49
  %2245 = fmul float %2117, 5.000000e-01, !dbg !49
  %2246 = fmul float %2118, 5.000000e-01, !dbg !49
  %2247 = fmul float %2119, 5.000000e-01, !dbg !49
  %2248 = fmul float %2120, 5.000000e-01, !dbg !49
  %2249 = fmul float %2121, 5.000000e-01, !dbg !49
  %2250 = fmul float %2122, 5.000000e-01, !dbg !49
  %2251 = fmul float %2123, 5.000000e-01, !dbg !49
  %2252 = fmul float %2124, 5.000000e-01, !dbg !49
  %2253 = fmul float %2125, 5.000000e-01, !dbg !49
  %2254 = fmul float %2126, 5.000000e-01, !dbg !49
  %2255 = fmul float %2127, 5.000000e-01, !dbg !49
  %2256 = fmul float %2128, 5.000000e-01, !dbg !49
  %2257 = fmul float %2129, 5.000000e-01, !dbg !49
  %2258 = fmul float %2130, 5.000000e-01, !dbg !49
  %2259 = fmul float %2131, 5.000000e-01, !dbg !49
  %2260 = fmul float %2132, 5.000000e-01, !dbg !49
  %2261 = fmul float %2133, 5.000000e-01, !dbg !49
  %2262 = fmul float %2134, 5.000000e-01, !dbg !49
  %2263 = fmul float %2135, 5.000000e-01, !dbg !49
  %2264 = fmul float %2136, 5.000000e-01, !dbg !49
  %2265 = fmul float %2137, 5.000000e-01, !dbg !49
  %2266 = fmul float %2138, 5.000000e-01, !dbg !49
  %2267 = fmul float %2139, 5.000000e-01, !dbg !49
  %2268 = fmul float %2140, 5.000000e-01, !dbg !49
  %2269 = fmul float %2141, 5.000000e-01, !dbg !49
  %2270 = fmul float %2142, 5.000000e-01, !dbg !49
  %2271 = fmul float %2143, 5.000000e-01, !dbg !49
  %2272 = fmul float %2144, 5.000000e-01, !dbg !49
  %2273 = fmul float %2145, 5.000000e-01, !dbg !49
  %2274 = fmul float %2146, 5.000000e-01, !dbg !49
  %2275 = fmul float %2147, 5.000000e-01, !dbg !49
  %2276 = fmul float %2148, 5.000000e-01, !dbg !49
  %2277 = fmul float %2149, 5.000000e-01, !dbg !49
  %2278 = fmul float %2150, 5.000000e-01, !dbg !49
  %2279 = fmul float %2151, 5.000000e-01, !dbg !49
  %2280 = fmul float %2152, 5.000000e-01, !dbg !49
  %2281 = fmul float %2153, 5.000000e-01, !dbg !49
  %2282 = fmul float %2154, 5.000000e-01, !dbg !49
  %2283 = fmul float %2155, 5.000000e-01, !dbg !49
  %2284 = fmul float %2156, 5.000000e-01, !dbg !49
  %2285 = fmul float %2157, 5.000000e-01, !dbg !49
  %2286 = fmul float %2158, 5.000000e-01, !dbg !49
  %2287 = fmul float %2159, 5.000000e-01, !dbg !49
  %2288 = fmul float %2160, 5.000000e-01, !dbg !49
  %2289 = fmul float %2161, 5.000000e-01, !dbg !49
  %2290 = fmul float %2162, 5.000000e-01, !dbg !49
  %2291 = fmul float %2035, %2035, !dbg !50
  %2292 = fmul float %2036, %2036, !dbg !50
  %2293 = fmul float %2037, %2037, !dbg !50
  %2294 = fmul float %2038, %2038, !dbg !50
  %2295 = fmul float %2039, %2039, !dbg !50
  %2296 = fmul float %2040, %2040, !dbg !50
  %2297 = fmul float %2041, %2041, !dbg !50
  %2298 = fmul float %2042, %2042, !dbg !50
  %2299 = fmul float %2043, %2043, !dbg !50
  %2300 = fmul float %2044, %2044, !dbg !50
  %2301 = fmul float %2045, %2045, !dbg !50
  %2302 = fmul float %2046, %2046, !dbg !50
  %2303 = fmul float %2047, %2047, !dbg !50
  %2304 = fmul float %2048, %2048, !dbg !50
  %2305 = fmul float %2049, %2049, !dbg !50
  %2306 = fmul float %2050, %2050, !dbg !50
  %2307 = fmul float %2051, %2051, !dbg !50
  %2308 = fmul float %2052, %2052, !dbg !50
  %2309 = fmul float %2053, %2053, !dbg !50
  %2310 = fmul float %2054, %2054, !dbg !50
  %2311 = fmul float %2055, %2055, !dbg !50
  %2312 = fmul float %2056, %2056, !dbg !50
  %2313 = fmul float %2057, %2057, !dbg !50
  %2314 = fmul float %2058, %2058, !dbg !50
  %2315 = fmul float %2059, %2059, !dbg !50
  %2316 = fmul float %2060, %2060, !dbg !50
  %2317 = fmul float %2061, %2061, !dbg !50
  %2318 = fmul float %2062, %2062, !dbg !50
  %2319 = fmul float %2063, %2063, !dbg !50
  %2320 = fmul float %2064, %2064, !dbg !50
  %2321 = fmul float %2065, %2065, !dbg !50
  %2322 = fmul float %2066, %2066, !dbg !50
  %2323 = fmul float %2067, %2067, !dbg !50
  %2324 = fmul float %2068, %2068, !dbg !50
  %2325 = fmul float %2069, %2069, !dbg !50
  %2326 = fmul float %2070, %2070, !dbg !50
  %2327 = fmul float %2071, %2071, !dbg !50
  %2328 = fmul float %2072, %2072, !dbg !50
  %2329 = fmul float %2073, %2073, !dbg !50
  %2330 = fmul float %2074, %2074, !dbg !50
  %2331 = fmul float %2075, %2075, !dbg !50
  %2332 = fmul float %2076, %2076, !dbg !50
  %2333 = fmul float %2077, %2077, !dbg !50
  %2334 = fmul float %2078, %2078, !dbg !50
  %2335 = fmul float %2079, %2079, !dbg !50
  %2336 = fmul float %2080, %2080, !dbg !50
  %2337 = fmul float %2081, %2081, !dbg !50
  %2338 = fmul float %2082, %2082, !dbg !50
  %2339 = fmul float %2083, %2083, !dbg !50
  %2340 = fmul float %2084, %2084, !dbg !50
  %2341 = fmul float %2085, %2085, !dbg !50
  %2342 = fmul float %2086, %2086, !dbg !50
  %2343 = fmul float %2087, %2087, !dbg !50
  %2344 = fmul float %2088, %2088, !dbg !50
  %2345 = fmul float %2089, %2089, !dbg !50
  %2346 = fmul float %2090, %2090, !dbg !50
  %2347 = fmul float %2091, %2091, !dbg !50
  %2348 = fmul float %2092, %2092, !dbg !50
  %2349 = fmul float %2093, %2093, !dbg !50
  %2350 = fmul float %2094, %2094, !dbg !50
  %2351 = fmul float %2095, %2095, !dbg !50
  %2352 = fmul float %2096, %2096, !dbg !50
  %2353 = fmul float %2097, %2097, !dbg !50
  %2354 = fmul float %2098, %2098, !dbg !50
  %2355 = fmul float %2099, %2099, !dbg !50
  %2356 = fmul float %2100, %2100, !dbg !50
  %2357 = fmul float %2101, %2101, !dbg !50
  %2358 = fmul float %2102, %2102, !dbg !50
  %2359 = fmul float %2103, %2103, !dbg !50
  %2360 = fmul float %2104, %2104, !dbg !50
  %2361 = fmul float %2105, %2105, !dbg !50
  %2362 = fmul float %2106, %2106, !dbg !50
  %2363 = fmul float %2107, %2107, !dbg !50
  %2364 = fmul float %2108, %2108, !dbg !50
  %2365 = fmul float %2109, %2109, !dbg !50
  %2366 = fmul float %2110, %2110, !dbg !50
  %2367 = fmul float %2111, %2111, !dbg !50
  %2368 = fmul float %2112, %2112, !dbg !50
  %2369 = fmul float %2113, %2113, !dbg !50
  %2370 = fmul float %2114, %2114, !dbg !50
  %2371 = fmul float %2115, %2115, !dbg !50
  %2372 = fmul float %2116, %2116, !dbg !50
  %2373 = fmul float %2117, %2117, !dbg !50
  %2374 = fmul float %2118, %2118, !dbg !50
  %2375 = fmul float %2119, %2119, !dbg !50
  %2376 = fmul float %2120, %2120, !dbg !50
  %2377 = fmul float %2121, %2121, !dbg !50
  %2378 = fmul float %2122, %2122, !dbg !50
  %2379 = fmul float %2123, %2123, !dbg !50
  %2380 = fmul float %2124, %2124, !dbg !50
  %2381 = fmul float %2125, %2125, !dbg !50
  %2382 = fmul float %2126, %2126, !dbg !50
  %2383 = fmul float %2127, %2127, !dbg !50
  %2384 = fmul float %2128, %2128, !dbg !50
  %2385 = fmul float %2129, %2129, !dbg !50
  %2386 = fmul float %2130, %2130, !dbg !50
  %2387 = fmul float %2131, %2131, !dbg !50
  %2388 = fmul float %2132, %2132, !dbg !50
  %2389 = fmul float %2133, %2133, !dbg !50
  %2390 = fmul float %2134, %2134, !dbg !50
  %2391 = fmul float %2135, %2135, !dbg !50
  %2392 = fmul float %2136, %2136, !dbg !50
  %2393 = fmul float %2137, %2137, !dbg !50
  %2394 = fmul float %2138, %2138, !dbg !50
  %2395 = fmul float %2139, %2139, !dbg !50
  %2396 = fmul float %2140, %2140, !dbg !50
  %2397 = fmul float %2141, %2141, !dbg !50
  %2398 = fmul float %2142, %2142, !dbg !50
  %2399 = fmul float %2143, %2143, !dbg !50
  %2400 = fmul float %2144, %2144, !dbg !50
  %2401 = fmul float %2145, %2145, !dbg !50
  %2402 = fmul float %2146, %2146, !dbg !50
  %2403 = fmul float %2147, %2147, !dbg !50
  %2404 = fmul float %2148, %2148, !dbg !50
  %2405 = fmul float %2149, %2149, !dbg !50
  %2406 = fmul float %2150, %2150, !dbg !50
  %2407 = fmul float %2151, %2151, !dbg !50
  %2408 = fmul float %2152, %2152, !dbg !50
  %2409 = fmul float %2153, %2153, !dbg !50
  %2410 = fmul float %2154, %2154, !dbg !50
  %2411 = fmul float %2155, %2155, !dbg !50
  %2412 = fmul float %2156, %2156, !dbg !50
  %2413 = fmul float %2157, %2157, !dbg !50
  %2414 = fmul float %2158, %2158, !dbg !50
  %2415 = fmul float %2159, %2159, !dbg !50
  %2416 = fmul float %2160, %2160, !dbg !50
  %2417 = fmul float %2161, %2161, !dbg !50
  %2418 = fmul float %2162, %2162, !dbg !50
  %2419 = fmul float %2035, %2291, !dbg !51
  %2420 = fmul float %2036, %2292, !dbg !51
  %2421 = fmul float %2037, %2293, !dbg !51
  %2422 = fmul float %2038, %2294, !dbg !51
  %2423 = fmul float %2039, %2295, !dbg !51
  %2424 = fmul float %2040, %2296, !dbg !51
  %2425 = fmul float %2041, %2297, !dbg !51
  %2426 = fmul float %2042, %2298, !dbg !51
  %2427 = fmul float %2043, %2299, !dbg !51
  %2428 = fmul float %2044, %2300, !dbg !51
  %2429 = fmul float %2045, %2301, !dbg !51
  %2430 = fmul float %2046, %2302, !dbg !51
  %2431 = fmul float %2047, %2303, !dbg !51
  %2432 = fmul float %2048, %2304, !dbg !51
  %2433 = fmul float %2049, %2305, !dbg !51
  %2434 = fmul float %2050, %2306, !dbg !51
  %2435 = fmul float %2051, %2307, !dbg !51
  %2436 = fmul float %2052, %2308, !dbg !51
  %2437 = fmul float %2053, %2309, !dbg !51
  %2438 = fmul float %2054, %2310, !dbg !51
  %2439 = fmul float %2055, %2311, !dbg !51
  %2440 = fmul float %2056, %2312, !dbg !51
  %2441 = fmul float %2057, %2313, !dbg !51
  %2442 = fmul float %2058, %2314, !dbg !51
  %2443 = fmul float %2059, %2315, !dbg !51
  %2444 = fmul float %2060, %2316, !dbg !51
  %2445 = fmul float %2061, %2317, !dbg !51
  %2446 = fmul float %2062, %2318, !dbg !51
  %2447 = fmul float %2063, %2319, !dbg !51
  %2448 = fmul float %2064, %2320, !dbg !51
  %2449 = fmul float %2065, %2321, !dbg !51
  %2450 = fmul float %2066, %2322, !dbg !51
  %2451 = fmul float %2067, %2323, !dbg !51
  %2452 = fmul float %2068, %2324, !dbg !51
  %2453 = fmul float %2069, %2325, !dbg !51
  %2454 = fmul float %2070, %2326, !dbg !51
  %2455 = fmul float %2071, %2327, !dbg !51
  %2456 = fmul float %2072, %2328, !dbg !51
  %2457 = fmul float %2073, %2329, !dbg !51
  %2458 = fmul float %2074, %2330, !dbg !51
  %2459 = fmul float %2075, %2331, !dbg !51
  %2460 = fmul float %2076, %2332, !dbg !51
  %2461 = fmul float %2077, %2333, !dbg !51
  %2462 = fmul float %2078, %2334, !dbg !51
  %2463 = fmul float %2079, %2335, !dbg !51
  %2464 = fmul float %2080, %2336, !dbg !51
  %2465 = fmul float %2081, %2337, !dbg !51
  %2466 = fmul float %2082, %2338, !dbg !51
  %2467 = fmul float %2083, %2339, !dbg !51
  %2468 = fmul float %2084, %2340, !dbg !51
  %2469 = fmul float %2085, %2341, !dbg !51
  %2470 = fmul float %2086, %2342, !dbg !51
  %2471 = fmul float %2087, %2343, !dbg !51
  %2472 = fmul float %2088, %2344, !dbg !51
  %2473 = fmul float %2089, %2345, !dbg !51
  %2474 = fmul float %2090, %2346, !dbg !51
  %2475 = fmul float %2091, %2347, !dbg !51
  %2476 = fmul float %2092, %2348, !dbg !51
  %2477 = fmul float %2093, %2349, !dbg !51
  %2478 = fmul float %2094, %2350, !dbg !51
  %2479 = fmul float %2095, %2351, !dbg !51
  %2480 = fmul float %2096, %2352, !dbg !51
  %2481 = fmul float %2097, %2353, !dbg !51
  %2482 = fmul float %2098, %2354, !dbg !51
  %2483 = fmul float %2099, %2355, !dbg !51
  %2484 = fmul float %2100, %2356, !dbg !51
  %2485 = fmul float %2101, %2357, !dbg !51
  %2486 = fmul float %2102, %2358, !dbg !51
  %2487 = fmul float %2103, %2359, !dbg !51
  %2488 = fmul float %2104, %2360, !dbg !51
  %2489 = fmul float %2105, %2361, !dbg !51
  %2490 = fmul float %2106, %2362, !dbg !51
  %2491 = fmul float %2107, %2363, !dbg !51
  %2492 = fmul float %2108, %2364, !dbg !51
  %2493 = fmul float %2109, %2365, !dbg !51
  %2494 = fmul float %2110, %2366, !dbg !51
  %2495 = fmul float %2111, %2367, !dbg !51
  %2496 = fmul float %2112, %2368, !dbg !51
  %2497 = fmul float %2113, %2369, !dbg !51
  %2498 = fmul float %2114, %2370, !dbg !51
  %2499 = fmul float %2115, %2371, !dbg !51
  %2500 = fmul float %2116, %2372, !dbg !51
  %2501 = fmul float %2117, %2373, !dbg !51
  %2502 = fmul float %2118, %2374, !dbg !51
  %2503 = fmul float %2119, %2375, !dbg !51
  %2504 = fmul float %2120, %2376, !dbg !51
  %2505 = fmul float %2121, %2377, !dbg !51
  %2506 = fmul float %2122, %2378, !dbg !51
  %2507 = fmul float %2123, %2379, !dbg !51
  %2508 = fmul float %2124, %2380, !dbg !51
  %2509 = fmul float %2125, %2381, !dbg !51
  %2510 = fmul float %2126, %2382, !dbg !51
  %2511 = fmul float %2127, %2383, !dbg !51
  %2512 = fmul float %2128, %2384, !dbg !51
  %2513 = fmul float %2129, %2385, !dbg !51
  %2514 = fmul float %2130, %2386, !dbg !51
  %2515 = fmul float %2131, %2387, !dbg !51
  %2516 = fmul float %2132, %2388, !dbg !51
  %2517 = fmul float %2133, %2389, !dbg !51
  %2518 = fmul float %2134, %2390, !dbg !51
  %2519 = fmul float %2135, %2391, !dbg !51
  %2520 = fmul float %2136, %2392, !dbg !51
  %2521 = fmul float %2137, %2393, !dbg !51
  %2522 = fmul float %2138, %2394, !dbg !51
  %2523 = fmul float %2139, %2395, !dbg !51
  %2524 = fmul float %2140, %2396, !dbg !51
  %2525 = fmul float %2141, %2397, !dbg !51
  %2526 = fmul float %2142, %2398, !dbg !51
  %2527 = fmul float %2143, %2399, !dbg !51
  %2528 = fmul float %2144, %2400, !dbg !51
  %2529 = fmul float %2145, %2401, !dbg !51
  %2530 = fmul float %2146, %2402, !dbg !51
  %2531 = fmul float %2147, %2403, !dbg !51
  %2532 = fmul float %2148, %2404, !dbg !51
  %2533 = fmul float %2149, %2405, !dbg !51
  %2534 = fmul float %2150, %2406, !dbg !51
  %2535 = fmul float %2151, %2407, !dbg !51
  %2536 = fmul float %2152, %2408, !dbg !51
  %2537 = fmul float %2153, %2409, !dbg !51
  %2538 = fmul float %2154, %2410, !dbg !51
  %2539 = fmul float %2155, %2411, !dbg !51
  %2540 = fmul float %2156, %2412, !dbg !51
  %2541 = fmul float %2157, %2413, !dbg !51
  %2542 = fmul float %2158, %2414, !dbg !51
  %2543 = fmul float %2159, %2415, !dbg !51
  %2544 = fmul float %2160, %2416, !dbg !51
  %2545 = fmul float %2161, %2417, !dbg !51
  %2546 = fmul float %2162, %2418, !dbg !51
  %2547 = fmul float %2419, 0x3FA6E4E260000000, !dbg !52
  %2548 = fmul float %2420, 0x3FA6E4E260000000, !dbg !52
  %2549 = fmul float %2421, 0x3FA6E4E260000000, !dbg !52
  %2550 = fmul float %2422, 0x3FA6E4E260000000, !dbg !52
  %2551 = fmul float %2423, 0x3FA6E4E260000000, !dbg !52
  %2552 = fmul float %2424, 0x3FA6E4E260000000, !dbg !52
  %2553 = fmul float %2425, 0x3FA6E4E260000000, !dbg !52
  %2554 = fmul float %2426, 0x3FA6E4E260000000, !dbg !52
  %2555 = fmul float %2427, 0x3FA6E4E260000000, !dbg !52
  %2556 = fmul float %2428, 0x3FA6E4E260000000, !dbg !52
  %2557 = fmul float %2429, 0x3FA6E4E260000000, !dbg !52
  %2558 = fmul float %2430, 0x3FA6E4E260000000, !dbg !52
  %2559 = fmul float %2431, 0x3FA6E4E260000000, !dbg !52
  %2560 = fmul float %2432, 0x3FA6E4E260000000, !dbg !52
  %2561 = fmul float %2433, 0x3FA6E4E260000000, !dbg !52
  %2562 = fmul float %2434, 0x3FA6E4E260000000, !dbg !52
  %2563 = fmul float %2435, 0x3FA6E4E260000000, !dbg !52
  %2564 = fmul float %2436, 0x3FA6E4E260000000, !dbg !52
  %2565 = fmul float %2437, 0x3FA6E4E260000000, !dbg !52
  %2566 = fmul float %2438, 0x3FA6E4E260000000, !dbg !52
  %2567 = fmul float %2439, 0x3FA6E4E260000000, !dbg !52
  %2568 = fmul float %2440, 0x3FA6E4E260000000, !dbg !52
  %2569 = fmul float %2441, 0x3FA6E4E260000000, !dbg !52
  %2570 = fmul float %2442, 0x3FA6E4E260000000, !dbg !52
  %2571 = fmul float %2443, 0x3FA6E4E260000000, !dbg !52
  %2572 = fmul float %2444, 0x3FA6E4E260000000, !dbg !52
  %2573 = fmul float %2445, 0x3FA6E4E260000000, !dbg !52
  %2574 = fmul float %2446, 0x3FA6E4E260000000, !dbg !52
  %2575 = fmul float %2447, 0x3FA6E4E260000000, !dbg !52
  %2576 = fmul float %2448, 0x3FA6E4E260000000, !dbg !52
  %2577 = fmul float %2449, 0x3FA6E4E260000000, !dbg !52
  %2578 = fmul float %2450, 0x3FA6E4E260000000, !dbg !52
  %2579 = fmul float %2451, 0x3FA6E4E260000000, !dbg !52
  %2580 = fmul float %2452, 0x3FA6E4E260000000, !dbg !52
  %2581 = fmul float %2453, 0x3FA6E4E260000000, !dbg !52
  %2582 = fmul float %2454, 0x3FA6E4E260000000, !dbg !52
  %2583 = fmul float %2455, 0x3FA6E4E260000000, !dbg !52
  %2584 = fmul float %2456, 0x3FA6E4E260000000, !dbg !52
  %2585 = fmul float %2457, 0x3FA6E4E260000000, !dbg !52
  %2586 = fmul float %2458, 0x3FA6E4E260000000, !dbg !52
  %2587 = fmul float %2459, 0x3FA6E4E260000000, !dbg !52
  %2588 = fmul float %2460, 0x3FA6E4E260000000, !dbg !52
  %2589 = fmul float %2461, 0x3FA6E4E260000000, !dbg !52
  %2590 = fmul float %2462, 0x3FA6E4E260000000, !dbg !52
  %2591 = fmul float %2463, 0x3FA6E4E260000000, !dbg !52
  %2592 = fmul float %2464, 0x3FA6E4E260000000, !dbg !52
  %2593 = fmul float %2465, 0x3FA6E4E260000000, !dbg !52
  %2594 = fmul float %2466, 0x3FA6E4E260000000, !dbg !52
  %2595 = fmul float %2467, 0x3FA6E4E260000000, !dbg !52
  %2596 = fmul float %2468, 0x3FA6E4E260000000, !dbg !52
  %2597 = fmul float %2469, 0x3FA6E4E260000000, !dbg !52
  %2598 = fmul float %2470, 0x3FA6E4E260000000, !dbg !52
  %2599 = fmul float %2471, 0x3FA6E4E260000000, !dbg !52
  %2600 = fmul float %2472, 0x3FA6E4E260000000, !dbg !52
  %2601 = fmul float %2473, 0x3FA6E4E260000000, !dbg !52
  %2602 = fmul float %2474, 0x3FA6E4E260000000, !dbg !52
  %2603 = fmul float %2475, 0x3FA6E4E260000000, !dbg !52
  %2604 = fmul float %2476, 0x3FA6E4E260000000, !dbg !52
  %2605 = fmul float %2477, 0x3FA6E4E260000000, !dbg !52
  %2606 = fmul float %2478, 0x3FA6E4E260000000, !dbg !52
  %2607 = fmul float %2479, 0x3FA6E4E260000000, !dbg !52
  %2608 = fmul float %2480, 0x3FA6E4E260000000, !dbg !52
  %2609 = fmul float %2481, 0x3FA6E4E260000000, !dbg !52
  %2610 = fmul float %2482, 0x3FA6E4E260000000, !dbg !52
  %2611 = fmul float %2483, 0x3FA6E4E260000000, !dbg !52
  %2612 = fmul float %2484, 0x3FA6E4E260000000, !dbg !52
  %2613 = fmul float %2485, 0x3FA6E4E260000000, !dbg !52
  %2614 = fmul float %2486, 0x3FA6E4E260000000, !dbg !52
  %2615 = fmul float %2487, 0x3FA6E4E260000000, !dbg !52
  %2616 = fmul float %2488, 0x3FA6E4E260000000, !dbg !52
  %2617 = fmul float %2489, 0x3FA6E4E260000000, !dbg !52
  %2618 = fmul float %2490, 0x3FA6E4E260000000, !dbg !52
  %2619 = fmul float %2491, 0x3FA6E4E260000000, !dbg !52
  %2620 = fmul float %2492, 0x3FA6E4E260000000, !dbg !52
  %2621 = fmul float %2493, 0x3FA6E4E260000000, !dbg !52
  %2622 = fmul float %2494, 0x3FA6E4E260000000, !dbg !52
  %2623 = fmul float %2495, 0x3FA6E4E260000000, !dbg !52
  %2624 = fmul float %2496, 0x3FA6E4E260000000, !dbg !52
  %2625 = fmul float %2497, 0x3FA6E4E260000000, !dbg !52
  %2626 = fmul float %2498, 0x3FA6E4E260000000, !dbg !52
  %2627 = fmul float %2499, 0x3FA6E4E260000000, !dbg !52
  %2628 = fmul float %2500, 0x3FA6E4E260000000, !dbg !52
  %2629 = fmul float %2501, 0x3FA6E4E260000000, !dbg !52
  %2630 = fmul float %2502, 0x3FA6E4E260000000, !dbg !52
  %2631 = fmul float %2503, 0x3FA6E4E260000000, !dbg !52
  %2632 = fmul float %2504, 0x3FA6E4E260000000, !dbg !52
  %2633 = fmul float %2505, 0x3FA6E4E260000000, !dbg !52
  %2634 = fmul float %2506, 0x3FA6E4E260000000, !dbg !52
  %2635 = fmul float %2507, 0x3FA6E4E260000000, !dbg !52
  %2636 = fmul float %2508, 0x3FA6E4E260000000, !dbg !52
  %2637 = fmul float %2509, 0x3FA6E4E260000000, !dbg !52
  %2638 = fmul float %2510, 0x3FA6E4E260000000, !dbg !52
  %2639 = fmul float %2511, 0x3FA6E4E260000000, !dbg !52
  %2640 = fmul float %2512, 0x3FA6E4E260000000, !dbg !52
  %2641 = fmul float %2513, 0x3FA6E4E260000000, !dbg !52
  %2642 = fmul float %2514, 0x3FA6E4E260000000, !dbg !52
  %2643 = fmul float %2515, 0x3FA6E4E260000000, !dbg !52
  %2644 = fmul float %2516, 0x3FA6E4E260000000, !dbg !52
  %2645 = fmul float %2517, 0x3FA6E4E260000000, !dbg !52
  %2646 = fmul float %2518, 0x3FA6E4E260000000, !dbg !52
  %2647 = fmul float %2519, 0x3FA6E4E260000000, !dbg !52
  %2648 = fmul float %2520, 0x3FA6E4E260000000, !dbg !52
  %2649 = fmul float %2521, 0x3FA6E4E260000000, !dbg !52
  %2650 = fmul float %2522, 0x3FA6E4E260000000, !dbg !52
  %2651 = fmul float %2523, 0x3FA6E4E260000000, !dbg !52
  %2652 = fmul float %2524, 0x3FA6E4E260000000, !dbg !52
  %2653 = fmul float %2525, 0x3FA6E4E260000000, !dbg !52
  %2654 = fmul float %2526, 0x3FA6E4E260000000, !dbg !52
  %2655 = fmul float %2527, 0x3FA6E4E260000000, !dbg !52
  %2656 = fmul float %2528, 0x3FA6E4E260000000, !dbg !52
  %2657 = fmul float %2529, 0x3FA6E4E260000000, !dbg !52
  %2658 = fmul float %2530, 0x3FA6E4E260000000, !dbg !52
  %2659 = fmul float %2531, 0x3FA6E4E260000000, !dbg !52
  %2660 = fmul float %2532, 0x3FA6E4E260000000, !dbg !52
  %2661 = fmul float %2533, 0x3FA6E4E260000000, !dbg !52
  %2662 = fmul float %2534, 0x3FA6E4E260000000, !dbg !52
  %2663 = fmul float %2535, 0x3FA6E4E260000000, !dbg !52
  %2664 = fmul float %2536, 0x3FA6E4E260000000, !dbg !52
  %2665 = fmul float %2537, 0x3FA6E4E260000000, !dbg !52
  %2666 = fmul float %2538, 0x3FA6E4E260000000, !dbg !52
  %2667 = fmul float %2539, 0x3FA6E4E260000000, !dbg !52
  %2668 = fmul float %2540, 0x3FA6E4E260000000, !dbg !52
  %2669 = fmul float %2541, 0x3FA6E4E260000000, !dbg !52
  %2670 = fmul float %2542, 0x3FA6E4E260000000, !dbg !52
  %2671 = fmul float %2543, 0x3FA6E4E260000000, !dbg !52
  %2672 = fmul float %2544, 0x3FA6E4E260000000, !dbg !52
  %2673 = fmul float %2545, 0x3FA6E4E260000000, !dbg !52
  %2674 = fmul float %2546, 0x3FA6E4E260000000, !dbg !52
  %2675 = fadd float %2035, %2547, !dbg !53
  %2676 = fadd float %2036, %2548, !dbg !53
  %2677 = fadd float %2037, %2549, !dbg !53
  %2678 = fadd float %2038, %2550, !dbg !53
  %2679 = fadd float %2039, %2551, !dbg !53
  %2680 = fadd float %2040, %2552, !dbg !53
  %2681 = fadd float %2041, %2553, !dbg !53
  %2682 = fadd float %2042, %2554, !dbg !53
  %2683 = fadd float %2043, %2555, !dbg !53
  %2684 = fadd float %2044, %2556, !dbg !53
  %2685 = fadd float %2045, %2557, !dbg !53
  %2686 = fadd float %2046, %2558, !dbg !53
  %2687 = fadd float %2047, %2559, !dbg !53
  %2688 = fadd float %2048, %2560, !dbg !53
  %2689 = fadd float %2049, %2561, !dbg !53
  %2690 = fadd float %2050, %2562, !dbg !53
  %2691 = fadd float %2051, %2563, !dbg !53
  %2692 = fadd float %2052, %2564, !dbg !53
  %2693 = fadd float %2053, %2565, !dbg !53
  %2694 = fadd float %2054, %2566, !dbg !53
  %2695 = fadd float %2055, %2567, !dbg !53
  %2696 = fadd float %2056, %2568, !dbg !53
  %2697 = fadd float %2057, %2569, !dbg !53
  %2698 = fadd float %2058, %2570, !dbg !53
  %2699 = fadd float %2059, %2571, !dbg !53
  %2700 = fadd float %2060, %2572, !dbg !53
  %2701 = fadd float %2061, %2573, !dbg !53
  %2702 = fadd float %2062, %2574, !dbg !53
  %2703 = fadd float %2063, %2575, !dbg !53
  %2704 = fadd float %2064, %2576, !dbg !53
  %2705 = fadd float %2065, %2577, !dbg !53
  %2706 = fadd float %2066, %2578, !dbg !53
  %2707 = fadd float %2067, %2579, !dbg !53
  %2708 = fadd float %2068, %2580, !dbg !53
  %2709 = fadd float %2069, %2581, !dbg !53
  %2710 = fadd float %2070, %2582, !dbg !53
  %2711 = fadd float %2071, %2583, !dbg !53
  %2712 = fadd float %2072, %2584, !dbg !53
  %2713 = fadd float %2073, %2585, !dbg !53
  %2714 = fadd float %2074, %2586, !dbg !53
  %2715 = fadd float %2075, %2587, !dbg !53
  %2716 = fadd float %2076, %2588, !dbg !53
  %2717 = fadd float %2077, %2589, !dbg !53
  %2718 = fadd float %2078, %2590, !dbg !53
  %2719 = fadd float %2079, %2591, !dbg !53
  %2720 = fadd float %2080, %2592, !dbg !53
  %2721 = fadd float %2081, %2593, !dbg !53
  %2722 = fadd float %2082, %2594, !dbg !53
  %2723 = fadd float %2083, %2595, !dbg !53
  %2724 = fadd float %2084, %2596, !dbg !53
  %2725 = fadd float %2085, %2597, !dbg !53
  %2726 = fadd float %2086, %2598, !dbg !53
  %2727 = fadd float %2087, %2599, !dbg !53
  %2728 = fadd float %2088, %2600, !dbg !53
  %2729 = fadd float %2089, %2601, !dbg !53
  %2730 = fadd float %2090, %2602, !dbg !53
  %2731 = fadd float %2091, %2603, !dbg !53
  %2732 = fadd float %2092, %2604, !dbg !53
  %2733 = fadd float %2093, %2605, !dbg !53
  %2734 = fadd float %2094, %2606, !dbg !53
  %2735 = fadd float %2095, %2607, !dbg !53
  %2736 = fadd float %2096, %2608, !dbg !53
  %2737 = fadd float %2097, %2609, !dbg !53
  %2738 = fadd float %2098, %2610, !dbg !53
  %2739 = fadd float %2099, %2611, !dbg !53
  %2740 = fadd float %2100, %2612, !dbg !53
  %2741 = fadd float %2101, %2613, !dbg !53
  %2742 = fadd float %2102, %2614, !dbg !53
  %2743 = fadd float %2103, %2615, !dbg !53
  %2744 = fadd float %2104, %2616, !dbg !53
  %2745 = fadd float %2105, %2617, !dbg !53
  %2746 = fadd float %2106, %2618, !dbg !53
  %2747 = fadd float %2107, %2619, !dbg !53
  %2748 = fadd float %2108, %2620, !dbg !53
  %2749 = fadd float %2109, %2621, !dbg !53
  %2750 = fadd float %2110, %2622, !dbg !53
  %2751 = fadd float %2111, %2623, !dbg !53
  %2752 = fadd float %2112, %2624, !dbg !53
  %2753 = fadd float %2113, %2625, !dbg !53
  %2754 = fadd float %2114, %2626, !dbg !53
  %2755 = fadd float %2115, %2627, !dbg !53
  %2756 = fadd float %2116, %2628, !dbg !53
  %2757 = fadd float %2117, %2629, !dbg !53
  %2758 = fadd float %2118, %2630, !dbg !53
  %2759 = fadd float %2119, %2631, !dbg !53
  %2760 = fadd float %2120, %2632, !dbg !53
  %2761 = fadd float %2121, %2633, !dbg !53
  %2762 = fadd float %2122, %2634, !dbg !53
  %2763 = fadd float %2123, %2635, !dbg !53
  %2764 = fadd float %2124, %2636, !dbg !53
  %2765 = fadd float %2125, %2637, !dbg !53
  %2766 = fadd float %2126, %2638, !dbg !53
  %2767 = fadd float %2127, %2639, !dbg !53
  %2768 = fadd float %2128, %2640, !dbg !53
  %2769 = fadd float %2129, %2641, !dbg !53
  %2770 = fadd float %2130, %2642, !dbg !53
  %2771 = fadd float %2131, %2643, !dbg !53
  %2772 = fadd float %2132, %2644, !dbg !53
  %2773 = fadd float %2133, %2645, !dbg !53
  %2774 = fadd float %2134, %2646, !dbg !53
  %2775 = fadd float %2135, %2647, !dbg !53
  %2776 = fadd float %2136, %2648, !dbg !53
  %2777 = fadd float %2137, %2649, !dbg !53
  %2778 = fadd float %2138, %2650, !dbg !53
  %2779 = fadd float %2139, %2651, !dbg !53
  %2780 = fadd float %2140, %2652, !dbg !53
  %2781 = fadd float %2141, %2653, !dbg !53
  %2782 = fadd float %2142, %2654, !dbg !53
  %2783 = fadd float %2143, %2655, !dbg !53
  %2784 = fadd float %2144, %2656, !dbg !53
  %2785 = fadd float %2145, %2657, !dbg !53
  %2786 = fadd float %2146, %2658, !dbg !53
  %2787 = fadd float %2147, %2659, !dbg !53
  %2788 = fadd float %2148, %2660, !dbg !53
  %2789 = fadd float %2149, %2661, !dbg !53
  %2790 = fadd float %2150, %2662, !dbg !53
  %2791 = fadd float %2151, %2663, !dbg !53
  %2792 = fadd float %2152, %2664, !dbg !53
  %2793 = fadd float %2153, %2665, !dbg !53
  %2794 = fadd float %2154, %2666, !dbg !53
  %2795 = fadd float %2155, %2667, !dbg !53
  %2796 = fadd float %2156, %2668, !dbg !53
  %2797 = fadd float %2157, %2669, !dbg !53
  %2798 = fadd float %2158, %2670, !dbg !53
  %2799 = fadd float %2159, %2671, !dbg !53
  %2800 = fadd float %2160, %2672, !dbg !53
  %2801 = fadd float %2161, %2673, !dbg !53
  %2802 = fadd float %2162, %2674, !dbg !53
  %2803 = fmul float %2675, 0x3FE9884540000000, !dbg !54
  %2804 = fmul float %2676, 0x3FE9884540000000, !dbg !54
  %2805 = fmul float %2677, 0x3FE9884540000000, !dbg !54
  %2806 = fmul float %2678, 0x3FE9884540000000, !dbg !54
  %2807 = fmul float %2679, 0x3FE9884540000000, !dbg !54
  %2808 = fmul float %2680, 0x3FE9884540000000, !dbg !54
  %2809 = fmul float %2681, 0x3FE9884540000000, !dbg !54
  %2810 = fmul float %2682, 0x3FE9884540000000, !dbg !54
  %2811 = fmul float %2683, 0x3FE9884540000000, !dbg !54
  %2812 = fmul float %2684, 0x3FE9884540000000, !dbg !54
  %2813 = fmul float %2685, 0x3FE9884540000000, !dbg !54
  %2814 = fmul float %2686, 0x3FE9884540000000, !dbg !54
  %2815 = fmul float %2687, 0x3FE9884540000000, !dbg !54
  %2816 = fmul float %2688, 0x3FE9884540000000, !dbg !54
  %2817 = fmul float %2689, 0x3FE9884540000000, !dbg !54
  %2818 = fmul float %2690, 0x3FE9884540000000, !dbg !54
  %2819 = fmul float %2691, 0x3FE9884540000000, !dbg !54
  %2820 = fmul float %2692, 0x3FE9884540000000, !dbg !54
  %2821 = fmul float %2693, 0x3FE9884540000000, !dbg !54
  %2822 = fmul float %2694, 0x3FE9884540000000, !dbg !54
  %2823 = fmul float %2695, 0x3FE9884540000000, !dbg !54
  %2824 = fmul float %2696, 0x3FE9884540000000, !dbg !54
  %2825 = fmul float %2697, 0x3FE9884540000000, !dbg !54
  %2826 = fmul float %2698, 0x3FE9884540000000, !dbg !54
  %2827 = fmul float %2699, 0x3FE9884540000000, !dbg !54
  %2828 = fmul float %2700, 0x3FE9884540000000, !dbg !54
  %2829 = fmul float %2701, 0x3FE9884540000000, !dbg !54
  %2830 = fmul float %2702, 0x3FE9884540000000, !dbg !54
  %2831 = fmul float %2703, 0x3FE9884540000000, !dbg !54
  %2832 = fmul float %2704, 0x3FE9884540000000, !dbg !54
  %2833 = fmul float %2705, 0x3FE9884540000000, !dbg !54
  %2834 = fmul float %2706, 0x3FE9884540000000, !dbg !54
  %2835 = fmul float %2707, 0x3FE9884540000000, !dbg !54
  %2836 = fmul float %2708, 0x3FE9884540000000, !dbg !54
  %2837 = fmul float %2709, 0x3FE9884540000000, !dbg !54
  %2838 = fmul float %2710, 0x3FE9884540000000, !dbg !54
  %2839 = fmul float %2711, 0x3FE9884540000000, !dbg !54
  %2840 = fmul float %2712, 0x3FE9884540000000, !dbg !54
  %2841 = fmul float %2713, 0x3FE9884540000000, !dbg !54
  %2842 = fmul float %2714, 0x3FE9884540000000, !dbg !54
  %2843 = fmul float %2715, 0x3FE9884540000000, !dbg !54
  %2844 = fmul float %2716, 0x3FE9884540000000, !dbg !54
  %2845 = fmul float %2717, 0x3FE9884540000000, !dbg !54
  %2846 = fmul float %2718, 0x3FE9884540000000, !dbg !54
  %2847 = fmul float %2719, 0x3FE9884540000000, !dbg !54
  %2848 = fmul float %2720, 0x3FE9884540000000, !dbg !54
  %2849 = fmul float %2721, 0x3FE9884540000000, !dbg !54
  %2850 = fmul float %2722, 0x3FE9884540000000, !dbg !54
  %2851 = fmul float %2723, 0x3FE9884540000000, !dbg !54
  %2852 = fmul float %2724, 0x3FE9884540000000, !dbg !54
  %2853 = fmul float %2725, 0x3FE9884540000000, !dbg !54
  %2854 = fmul float %2726, 0x3FE9884540000000, !dbg !54
  %2855 = fmul float %2727, 0x3FE9884540000000, !dbg !54
  %2856 = fmul float %2728, 0x3FE9884540000000, !dbg !54
  %2857 = fmul float %2729, 0x3FE9884540000000, !dbg !54
  %2858 = fmul float %2730, 0x3FE9884540000000, !dbg !54
  %2859 = fmul float %2731, 0x3FE9884540000000, !dbg !54
  %2860 = fmul float %2732, 0x3FE9884540000000, !dbg !54
  %2861 = fmul float %2733, 0x3FE9884540000000, !dbg !54
  %2862 = fmul float %2734, 0x3FE9884540000000, !dbg !54
  %2863 = fmul float %2735, 0x3FE9884540000000, !dbg !54
  %2864 = fmul float %2736, 0x3FE9884540000000, !dbg !54
  %2865 = fmul float %2737, 0x3FE9884540000000, !dbg !54
  %2866 = fmul float %2738, 0x3FE9884540000000, !dbg !54
  %2867 = fmul float %2739, 0x3FE9884540000000, !dbg !54
  %2868 = fmul float %2740, 0x3FE9884540000000, !dbg !54
  %2869 = fmul float %2741, 0x3FE9884540000000, !dbg !54
  %2870 = fmul float %2742, 0x3FE9884540000000, !dbg !54
  %2871 = fmul float %2743, 0x3FE9884540000000, !dbg !54
  %2872 = fmul float %2744, 0x3FE9884540000000, !dbg !54
  %2873 = fmul float %2745, 0x3FE9884540000000, !dbg !54
  %2874 = fmul float %2746, 0x3FE9884540000000, !dbg !54
  %2875 = fmul float %2747, 0x3FE9884540000000, !dbg !54
  %2876 = fmul float %2748, 0x3FE9884540000000, !dbg !54
  %2877 = fmul float %2749, 0x3FE9884540000000, !dbg !54
  %2878 = fmul float %2750, 0x3FE9884540000000, !dbg !54
  %2879 = fmul float %2751, 0x3FE9884540000000, !dbg !54
  %2880 = fmul float %2752, 0x3FE9884540000000, !dbg !54
  %2881 = fmul float %2753, 0x3FE9884540000000, !dbg !54
  %2882 = fmul float %2754, 0x3FE9884540000000, !dbg !54
  %2883 = fmul float %2755, 0x3FE9884540000000, !dbg !54
  %2884 = fmul float %2756, 0x3FE9884540000000, !dbg !54
  %2885 = fmul float %2757, 0x3FE9884540000000, !dbg !54
  %2886 = fmul float %2758, 0x3FE9884540000000, !dbg !54
  %2887 = fmul float %2759, 0x3FE9884540000000, !dbg !54
  %2888 = fmul float %2760, 0x3FE9884540000000, !dbg !54
  %2889 = fmul float %2761, 0x3FE9884540000000, !dbg !54
  %2890 = fmul float %2762, 0x3FE9884540000000, !dbg !54
  %2891 = fmul float %2763, 0x3FE9884540000000, !dbg !54
  %2892 = fmul float %2764, 0x3FE9884540000000, !dbg !54
  %2893 = fmul float %2765, 0x3FE9884540000000, !dbg !54
  %2894 = fmul float %2766, 0x3FE9884540000000, !dbg !54
  %2895 = fmul float %2767, 0x3FE9884540000000, !dbg !54
  %2896 = fmul float %2768, 0x3FE9884540000000, !dbg !54
  %2897 = fmul float %2769, 0x3FE9884540000000, !dbg !54
  %2898 = fmul float %2770, 0x3FE9884540000000, !dbg !54
  %2899 = fmul float %2771, 0x3FE9884540000000, !dbg !54
  %2900 = fmul float %2772, 0x3FE9884540000000, !dbg !54
  %2901 = fmul float %2773, 0x3FE9884540000000, !dbg !54
  %2902 = fmul float %2774, 0x3FE9884540000000, !dbg !54
  %2903 = fmul float %2775, 0x3FE9884540000000, !dbg !54
  %2904 = fmul float %2776, 0x3FE9884540000000, !dbg !54
  %2905 = fmul float %2777, 0x3FE9884540000000, !dbg !54
  %2906 = fmul float %2778, 0x3FE9884540000000, !dbg !54
  %2907 = fmul float %2779, 0x3FE9884540000000, !dbg !54
  %2908 = fmul float %2780, 0x3FE9884540000000, !dbg !54
  %2909 = fmul float %2781, 0x3FE9884540000000, !dbg !54
  %2910 = fmul float %2782, 0x3FE9884540000000, !dbg !54
  %2911 = fmul float %2783, 0x3FE9884540000000, !dbg !54
  %2912 = fmul float %2784, 0x3FE9884540000000, !dbg !54
  %2913 = fmul float %2785, 0x3FE9884540000000, !dbg !54
  %2914 = fmul float %2786, 0x3FE9884540000000, !dbg !54
  %2915 = fmul float %2787, 0x3FE9884540000000, !dbg !54
  %2916 = fmul float %2788, 0x3FE9884540000000, !dbg !54
  %2917 = fmul float %2789, 0x3FE9884540000000, !dbg !54
  %2918 = fmul float %2790, 0x3FE9884540000000, !dbg !54
  %2919 = fmul float %2791, 0x3FE9884540000000, !dbg !54
  %2920 = fmul float %2792, 0x3FE9884540000000, !dbg !54
  %2921 = fmul float %2793, 0x3FE9884540000000, !dbg !54
  %2922 = fmul float %2794, 0x3FE9884540000000, !dbg !54
  %2923 = fmul float %2795, 0x3FE9884540000000, !dbg !54
  %2924 = fmul float %2796, 0x3FE9884540000000, !dbg !54
  %2925 = fmul float %2797, 0x3FE9884540000000, !dbg !54
  %2926 = fmul float %2798, 0x3FE9884540000000, !dbg !54
  %2927 = fmul float %2799, 0x3FE9884540000000, !dbg !54
  %2928 = fmul float %2800, 0x3FE9884540000000, !dbg !54
  %2929 = fmul float %2801, 0x3FE9884540000000, !dbg !54
  %2930 = fmul float %2802, 0x3FE9884540000000, !dbg !54
  %2931 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i = icmp eq i32 %2931, 0, !dbg !55
  %2932 = tail call float @llvm.nvvm.fabs.ftz.f(float %2803) #5, !dbg !55
  %2933 = tail call float @llvm.nvvm.fabs.f(float %2803) #5, !dbg !55
  %.01.i = select i1 %.not.i, float %2933, float %2932, !dbg !55
  %2934 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !55
  br i1 %2934, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !55

__internal_fmad.exit1.i:                          ; preds = %1070
  %2935 = fmul float %.01.i, 0x4007154760000000, !dbg !55
  %2936 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2935) #5, !dbg !55
  %2937 = fadd float %2936, 1.000000e+00, !dbg !55
  %2938 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2937) #6, !dbg !55, !srcloc !56
  %2939 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i = icmp eq i32 %2939, 0, !dbg !55
  %2940 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2938, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %2941 = tail call float @llvm.nvvm.fma.rn.f(float %2938, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i = select i1 %.not6.i, float %2941, float %2940, !dbg !55
  %2942 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !55
  %s.0.i = select i1 %2942, float 1.000000e+00, float %.03.i, !dbg !55
  %2943 = bitcast float %s.0.i to i32, !dbg !55
  %2944 = bitcast float %2803 to i32, !dbg !55
  %2945 = and i32 %2944, -2147483648, !dbg !55
  %2946 = or i32 %2945, %2943, !dbg !55
  %2947 = bitcast i32 %2946 to float, !dbg !55
  br label %__nv_tanhf.exit, !dbg !55

__internal_fmad.exit3.i:                          ; preds = %1070
  %2948 = fmul float %2803, %2803, !dbg !55
  %2949 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i = icmp eq i32 %2949, 0, !dbg !55
  %2950 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2948, float 0xBFAAC795C0000000) #5, !dbg !55
  %2951 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2948, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i = select i1 %.not1.i, float %2951, float %2950, !dbg !55
  %2952 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i = icmp eq i32 %2952, 0, !dbg !55
  %2953 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %2948, float 0x3FC10B2820000000) #5, !dbg !55
  %2954 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %2948, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i = select i1 %.not2.i, float %2954, float %2953, !dbg !55
  %2955 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i = icmp eq i32 %2955, 0, !dbg !55
  %2956 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %2948, float 0xBFD5553DA0000000) #5, !dbg !55
  %2957 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %2948, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i = select i1 %.not3.i, float %2957, float %2956, !dbg !55
  %2958 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i = icmp eq i32 %2958, 0, !dbg !55
  %2959 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %2948, float 0.000000e+00) #5, !dbg !55
  %2960 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %2948, float 0.000000e+00) #5, !dbg !55
  %.04.i = select i1 %.not4.i, float %2960, float %2959, !dbg !55
  %2961 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i = icmp eq i32 %2961, 0, !dbg !55
  %2962 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %2803, float %2803) #5, !dbg !55
  %2963 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %2803, float %2803) #5, !dbg !55
  %.02.i = select i1 %.not5.i, float %2963, float %2962, !dbg !55
  br label %__nv_tanhf.exit, !dbg !55

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %2947, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !55
  %2964 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i320 = icmp eq i32 %2964, 0, !dbg !55
  %2965 = tail call float @llvm.nvvm.fabs.ftz.f(float %2804) #5, !dbg !55
  %2966 = tail call float @llvm.nvvm.fabs.f(float %2804) #5, !dbg !55
  %.01.i321 = select i1 %.not.i320, float %2966, float %2965, !dbg !55
  %2967 = fcmp ult float %.01.i321, 0x3FE3333340000000, !dbg !55
  br i1 %2967, label %__internal_fmad.exit3.i327, label %__internal_fmad.exit1.i322, !dbg !55

__internal_fmad.exit1.i322:                       ; preds = %__nv_tanhf.exit
  %2968 = fmul float %.01.i321, 0x4007154760000000, !dbg !55
  %2969 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2968) #5, !dbg !55
  %2970 = fadd float %2969, 1.000000e+00, !dbg !55
  %2971 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2970) #6, !dbg !55, !srcloc !56
  %2972 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i323 = icmp eq i32 %2972, 0, !dbg !55
  %2973 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2971, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %2974 = tail call float @llvm.nvvm.fma.rn.f(float %2971, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i324 = select i1 %.not6.i323, float %2974, float %2973, !dbg !55
  %2975 = fcmp oge float %.01.i321, 0x4022059680000000, !dbg !55
  %s.0.i325 = select i1 %2975, float 1.000000e+00, float %.03.i324, !dbg !55
  %2976 = bitcast float %s.0.i325 to i32, !dbg !55
  %2977 = bitcast float %2804 to i32, !dbg !55
  %2978 = and i32 %2977, -2147483648, !dbg !55
  %2979 = or i32 %2978, %2976, !dbg !55
  %2980 = bitcast i32 %2979 to float, !dbg !55
  br label %__nv_tanhf.exit338, !dbg !55

__internal_fmad.exit3.i327:                       ; preds = %__nv_tanhf.exit
  %2981 = fmul float %2804, %2804, !dbg !55
  %2982 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i328 = icmp eq i32 %2982, 0, !dbg !55
  %2983 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2981, float 0xBFAAC795C0000000) #5, !dbg !55
  %2984 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2981, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i329 = select i1 %.not1.i328, float %2984, float %2983, !dbg !55
  %2985 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i330 = icmp eq i32 %2985, 0, !dbg !55
  %2986 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i329, float %2981, float 0x3FC10B2820000000) #5, !dbg !55
  %2987 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i329, float %2981, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i331 = select i1 %.not2.i330, float %2987, float %2986, !dbg !55
  %2988 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i332 = icmp eq i32 %2988, 0, !dbg !55
  %2989 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i331, float %2981, float 0xBFD5553DA0000000) #5, !dbg !55
  %2990 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i331, float %2981, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i333 = select i1 %.not3.i332, float %2990, float %2989, !dbg !55
  %2991 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i334 = icmp eq i32 %2991, 0, !dbg !55
  %2992 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i333, float %2981, float 0.000000e+00) #5, !dbg !55
  %2993 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i333, float %2981, float 0.000000e+00) #5, !dbg !55
  %.04.i335 = select i1 %.not4.i334, float %2993, float %2992, !dbg !55
  %2994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i336 = icmp eq i32 %2994, 0, !dbg !55
  %2995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i335, float %2804, float %2804) #5, !dbg !55
  %2996 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i335, float %2804, float %2804) #5, !dbg !55
  %.02.i337 = select i1 %.not5.i336, float %2996, float %2995, !dbg !55
  br label %__nv_tanhf.exit338, !dbg !55

__nv_tanhf.exit338:                               ; preds = %__internal_fmad.exit1.i322, %__internal_fmad.exit3.i327
  %s.1.i326 = phi float [ %2980, %__internal_fmad.exit1.i322 ], [ %.02.i337, %__internal_fmad.exit3.i327 ], !dbg !55
  %2997 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i339 = icmp eq i32 %2997, 0, !dbg !55
  %2998 = tail call float @llvm.nvvm.fabs.ftz.f(float %2805) #5, !dbg !55
  %2999 = tail call float @llvm.nvvm.fabs.f(float %2805) #5, !dbg !55
  %.01.i340 = select i1 %.not.i339, float %2999, float %2998, !dbg !55
  %3000 = fcmp ult float %.01.i340, 0x3FE3333340000000, !dbg !55
  br i1 %3000, label %__internal_fmad.exit3.i346, label %__internal_fmad.exit1.i341, !dbg !55

__internal_fmad.exit1.i341:                       ; preds = %__nv_tanhf.exit338
  %3001 = fmul float %.01.i340, 0x4007154760000000, !dbg !55
  %3002 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3001) #5, !dbg !55
  %3003 = fadd float %3002, 1.000000e+00, !dbg !55
  %3004 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3003) #6, !dbg !55, !srcloc !56
  %3005 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i342 = icmp eq i32 %3005, 0, !dbg !55
  %3006 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3004, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3007 = tail call float @llvm.nvvm.fma.rn.f(float %3004, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i343 = select i1 %.not6.i342, float %3007, float %3006, !dbg !55
  %3008 = fcmp oge float %.01.i340, 0x4022059680000000, !dbg !55
  %s.0.i344 = select i1 %3008, float 1.000000e+00, float %.03.i343, !dbg !55
  %3009 = bitcast float %s.0.i344 to i32, !dbg !55
  %3010 = bitcast float %2805 to i32, !dbg !55
  %3011 = and i32 %3010, -2147483648, !dbg !55
  %3012 = or i32 %3011, %3009, !dbg !55
  %3013 = bitcast i32 %3012 to float, !dbg !55
  br label %__nv_tanhf.exit357, !dbg !55

__internal_fmad.exit3.i346:                       ; preds = %__nv_tanhf.exit338
  %3014 = fmul float %2805, %2805, !dbg !55
  %3015 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i347 = icmp eq i32 %3015, 0, !dbg !55
  %3016 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3014, float 0xBFAAC795C0000000) #5, !dbg !55
  %3017 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3014, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i348 = select i1 %.not1.i347, float %3017, float %3016, !dbg !55
  %3018 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i349 = icmp eq i32 %3018, 0, !dbg !55
  %3019 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i348, float %3014, float 0x3FC10B2820000000) #5, !dbg !55
  %3020 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i348, float %3014, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i350 = select i1 %.not2.i349, float %3020, float %3019, !dbg !55
  %3021 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i351 = icmp eq i32 %3021, 0, !dbg !55
  %3022 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i350, float %3014, float 0xBFD5553DA0000000) #5, !dbg !55
  %3023 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i350, float %3014, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i352 = select i1 %.not3.i351, float %3023, float %3022, !dbg !55
  %3024 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i353 = icmp eq i32 %3024, 0, !dbg !55
  %3025 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i352, float %3014, float 0.000000e+00) #5, !dbg !55
  %3026 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i352, float %3014, float 0.000000e+00) #5, !dbg !55
  %.04.i354 = select i1 %.not4.i353, float %3026, float %3025, !dbg !55
  %3027 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i355 = icmp eq i32 %3027, 0, !dbg !55
  %3028 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i354, float %2805, float %2805) #5, !dbg !55
  %3029 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i354, float %2805, float %2805) #5, !dbg !55
  %.02.i356 = select i1 %.not5.i355, float %3029, float %3028, !dbg !55
  br label %__nv_tanhf.exit357, !dbg !55

__nv_tanhf.exit357:                               ; preds = %__internal_fmad.exit1.i341, %__internal_fmad.exit3.i346
  %s.1.i345 = phi float [ %3013, %__internal_fmad.exit1.i341 ], [ %.02.i356, %__internal_fmad.exit3.i346 ], !dbg !55
  %3030 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i358 = icmp eq i32 %3030, 0, !dbg !55
  %3031 = tail call float @llvm.nvvm.fabs.ftz.f(float %2806) #5, !dbg !55
  %3032 = tail call float @llvm.nvvm.fabs.f(float %2806) #5, !dbg !55
  %.01.i359 = select i1 %.not.i358, float %3032, float %3031, !dbg !55
  %3033 = fcmp ult float %.01.i359, 0x3FE3333340000000, !dbg !55
  br i1 %3033, label %__internal_fmad.exit3.i365, label %__internal_fmad.exit1.i360, !dbg !55

__internal_fmad.exit1.i360:                       ; preds = %__nv_tanhf.exit357
  %3034 = fmul float %.01.i359, 0x4007154760000000, !dbg !55
  %3035 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3034) #5, !dbg !55
  %3036 = fadd float %3035, 1.000000e+00, !dbg !55
  %3037 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3036) #6, !dbg !55, !srcloc !56
  %3038 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i361 = icmp eq i32 %3038, 0, !dbg !55
  %3039 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3037, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3040 = tail call float @llvm.nvvm.fma.rn.f(float %3037, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i362 = select i1 %.not6.i361, float %3040, float %3039, !dbg !55
  %3041 = fcmp oge float %.01.i359, 0x4022059680000000, !dbg !55
  %s.0.i363 = select i1 %3041, float 1.000000e+00, float %.03.i362, !dbg !55
  %3042 = bitcast float %s.0.i363 to i32, !dbg !55
  %3043 = bitcast float %2806 to i32, !dbg !55
  %3044 = and i32 %3043, -2147483648, !dbg !55
  %3045 = or i32 %3044, %3042, !dbg !55
  %3046 = bitcast i32 %3045 to float, !dbg !55
  br label %__nv_tanhf.exit376, !dbg !55

__internal_fmad.exit3.i365:                       ; preds = %__nv_tanhf.exit357
  %3047 = fmul float %2806, %2806, !dbg !55
  %3048 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i366 = icmp eq i32 %3048, 0, !dbg !55
  %3049 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3047, float 0xBFAAC795C0000000) #5, !dbg !55
  %3050 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3047, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i367 = select i1 %.not1.i366, float %3050, float %3049, !dbg !55
  %3051 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i368 = icmp eq i32 %3051, 0, !dbg !55
  %3052 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i367, float %3047, float 0x3FC10B2820000000) #5, !dbg !55
  %3053 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i367, float %3047, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i369 = select i1 %.not2.i368, float %3053, float %3052, !dbg !55
  %3054 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i370 = icmp eq i32 %3054, 0, !dbg !55
  %3055 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i369, float %3047, float 0xBFD5553DA0000000) #5, !dbg !55
  %3056 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i369, float %3047, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i371 = select i1 %.not3.i370, float %3056, float %3055, !dbg !55
  %3057 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i372 = icmp eq i32 %3057, 0, !dbg !55
  %3058 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i371, float %3047, float 0.000000e+00) #5, !dbg !55
  %3059 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i371, float %3047, float 0.000000e+00) #5, !dbg !55
  %.04.i373 = select i1 %.not4.i372, float %3059, float %3058, !dbg !55
  %3060 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i374 = icmp eq i32 %3060, 0, !dbg !55
  %3061 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i373, float %2806, float %2806) #5, !dbg !55
  %3062 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i373, float %2806, float %2806) #5, !dbg !55
  %.02.i375 = select i1 %.not5.i374, float %3062, float %3061, !dbg !55
  br label %__nv_tanhf.exit376, !dbg !55

__nv_tanhf.exit376:                               ; preds = %__internal_fmad.exit1.i360, %__internal_fmad.exit3.i365
  %s.1.i364 = phi float [ %3046, %__internal_fmad.exit1.i360 ], [ %.02.i375, %__internal_fmad.exit3.i365 ], !dbg !55
  %3063 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i377 = icmp eq i32 %3063, 0, !dbg !55
  %3064 = tail call float @llvm.nvvm.fabs.ftz.f(float %2807) #5, !dbg !55
  %3065 = tail call float @llvm.nvvm.fabs.f(float %2807) #5, !dbg !55
  %.01.i378 = select i1 %.not.i377, float %3065, float %3064, !dbg !55
  %3066 = fcmp ult float %.01.i378, 0x3FE3333340000000, !dbg !55
  br i1 %3066, label %__internal_fmad.exit3.i384, label %__internal_fmad.exit1.i379, !dbg !55

__internal_fmad.exit1.i379:                       ; preds = %__nv_tanhf.exit376
  %3067 = fmul float %.01.i378, 0x4007154760000000, !dbg !55
  %3068 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3067) #5, !dbg !55
  %3069 = fadd float %3068, 1.000000e+00, !dbg !55
  %3070 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3069) #6, !dbg !55, !srcloc !56
  %3071 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i380 = icmp eq i32 %3071, 0, !dbg !55
  %3072 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3070, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3073 = tail call float @llvm.nvvm.fma.rn.f(float %3070, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i381 = select i1 %.not6.i380, float %3073, float %3072, !dbg !55
  %3074 = fcmp oge float %.01.i378, 0x4022059680000000, !dbg !55
  %s.0.i382 = select i1 %3074, float 1.000000e+00, float %.03.i381, !dbg !55
  %3075 = bitcast float %s.0.i382 to i32, !dbg !55
  %3076 = bitcast float %2807 to i32, !dbg !55
  %3077 = and i32 %3076, -2147483648, !dbg !55
  %3078 = or i32 %3077, %3075, !dbg !55
  %3079 = bitcast i32 %3078 to float, !dbg !55
  br label %__nv_tanhf.exit395, !dbg !55

__internal_fmad.exit3.i384:                       ; preds = %__nv_tanhf.exit376
  %3080 = fmul float %2807, %2807, !dbg !55
  %3081 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i385 = icmp eq i32 %3081, 0, !dbg !55
  %3082 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3080, float 0xBFAAC795C0000000) #5, !dbg !55
  %3083 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3080, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i386 = select i1 %.not1.i385, float %3083, float %3082, !dbg !55
  %3084 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i387 = icmp eq i32 %3084, 0, !dbg !55
  %3085 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i386, float %3080, float 0x3FC10B2820000000) #5, !dbg !55
  %3086 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i386, float %3080, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i388 = select i1 %.not2.i387, float %3086, float %3085, !dbg !55
  %3087 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i389 = icmp eq i32 %3087, 0, !dbg !55
  %3088 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i388, float %3080, float 0xBFD5553DA0000000) #5, !dbg !55
  %3089 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i388, float %3080, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i390 = select i1 %.not3.i389, float %3089, float %3088, !dbg !55
  %3090 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i391 = icmp eq i32 %3090, 0, !dbg !55
  %3091 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i390, float %3080, float 0.000000e+00) #5, !dbg !55
  %3092 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i390, float %3080, float 0.000000e+00) #5, !dbg !55
  %.04.i392 = select i1 %.not4.i391, float %3092, float %3091, !dbg !55
  %3093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i393 = icmp eq i32 %3093, 0, !dbg !55
  %3094 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i392, float %2807, float %2807) #5, !dbg !55
  %3095 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i392, float %2807, float %2807) #5, !dbg !55
  %.02.i394 = select i1 %.not5.i393, float %3095, float %3094, !dbg !55
  br label %__nv_tanhf.exit395, !dbg !55

__nv_tanhf.exit395:                               ; preds = %__internal_fmad.exit1.i379, %__internal_fmad.exit3.i384
  %s.1.i383 = phi float [ %3079, %__internal_fmad.exit1.i379 ], [ %.02.i394, %__internal_fmad.exit3.i384 ], !dbg !55
  %3096 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i396 = icmp eq i32 %3096, 0, !dbg !55
  %3097 = tail call float @llvm.nvvm.fabs.ftz.f(float %2808) #5, !dbg !55
  %3098 = tail call float @llvm.nvvm.fabs.f(float %2808) #5, !dbg !55
  %.01.i397 = select i1 %.not.i396, float %3098, float %3097, !dbg !55
  %3099 = fcmp ult float %.01.i397, 0x3FE3333340000000, !dbg !55
  br i1 %3099, label %__internal_fmad.exit3.i403, label %__internal_fmad.exit1.i398, !dbg !55

__internal_fmad.exit1.i398:                       ; preds = %__nv_tanhf.exit395
  %3100 = fmul float %.01.i397, 0x4007154760000000, !dbg !55
  %3101 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3100) #5, !dbg !55
  %3102 = fadd float %3101, 1.000000e+00, !dbg !55
  %3103 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3102) #6, !dbg !55, !srcloc !56
  %3104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i399 = icmp eq i32 %3104, 0, !dbg !55
  %3105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3103, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3106 = tail call float @llvm.nvvm.fma.rn.f(float %3103, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i400 = select i1 %.not6.i399, float %3106, float %3105, !dbg !55
  %3107 = fcmp oge float %.01.i397, 0x4022059680000000, !dbg !55
  %s.0.i401 = select i1 %3107, float 1.000000e+00, float %.03.i400, !dbg !55
  %3108 = bitcast float %s.0.i401 to i32, !dbg !55
  %3109 = bitcast float %2808 to i32, !dbg !55
  %3110 = and i32 %3109, -2147483648, !dbg !55
  %3111 = or i32 %3110, %3108, !dbg !55
  %3112 = bitcast i32 %3111 to float, !dbg !55
  br label %__nv_tanhf.exit414, !dbg !55

__internal_fmad.exit3.i403:                       ; preds = %__nv_tanhf.exit395
  %3113 = fmul float %2808, %2808, !dbg !55
  %3114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i404 = icmp eq i32 %3114, 0, !dbg !55
  %3115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3113, float 0xBFAAC795C0000000) #5, !dbg !55
  %3116 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3113, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i405 = select i1 %.not1.i404, float %3116, float %3115, !dbg !55
  %3117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i406 = icmp eq i32 %3117, 0, !dbg !55
  %3118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i405, float %3113, float 0x3FC10B2820000000) #5, !dbg !55
  %3119 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i405, float %3113, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i407 = select i1 %.not2.i406, float %3119, float %3118, !dbg !55
  %3120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i408 = icmp eq i32 %3120, 0, !dbg !55
  %3121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i407, float %3113, float 0xBFD5553DA0000000) #5, !dbg !55
  %3122 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i407, float %3113, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i409 = select i1 %.not3.i408, float %3122, float %3121, !dbg !55
  %3123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i410 = icmp eq i32 %3123, 0, !dbg !55
  %3124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i409, float %3113, float 0.000000e+00) #5, !dbg !55
  %3125 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i409, float %3113, float 0.000000e+00) #5, !dbg !55
  %.04.i411 = select i1 %.not4.i410, float %3125, float %3124, !dbg !55
  %3126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i412 = icmp eq i32 %3126, 0, !dbg !55
  %3127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i411, float %2808, float %2808) #5, !dbg !55
  %3128 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i411, float %2808, float %2808) #5, !dbg !55
  %.02.i413 = select i1 %.not5.i412, float %3128, float %3127, !dbg !55
  br label %__nv_tanhf.exit414, !dbg !55

__nv_tanhf.exit414:                               ; preds = %__internal_fmad.exit1.i398, %__internal_fmad.exit3.i403
  %s.1.i402 = phi float [ %3112, %__internal_fmad.exit1.i398 ], [ %.02.i413, %__internal_fmad.exit3.i403 ], !dbg !55
  %3129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i415 = icmp eq i32 %3129, 0, !dbg !55
  %3130 = tail call float @llvm.nvvm.fabs.ftz.f(float %2809) #5, !dbg !55
  %3131 = tail call float @llvm.nvvm.fabs.f(float %2809) #5, !dbg !55
  %.01.i416 = select i1 %.not.i415, float %3131, float %3130, !dbg !55
  %3132 = fcmp ult float %.01.i416, 0x3FE3333340000000, !dbg !55
  br i1 %3132, label %__internal_fmad.exit3.i422, label %__internal_fmad.exit1.i417, !dbg !55

__internal_fmad.exit1.i417:                       ; preds = %__nv_tanhf.exit414
  %3133 = fmul float %.01.i416, 0x4007154760000000, !dbg !55
  %3134 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3133) #5, !dbg !55
  %3135 = fadd float %3134, 1.000000e+00, !dbg !55
  %3136 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3135) #6, !dbg !55, !srcloc !56
  %3137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i418 = icmp eq i32 %3137, 0, !dbg !55
  %3138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3136, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3139 = tail call float @llvm.nvvm.fma.rn.f(float %3136, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i419 = select i1 %.not6.i418, float %3139, float %3138, !dbg !55
  %3140 = fcmp oge float %.01.i416, 0x4022059680000000, !dbg !55
  %s.0.i420 = select i1 %3140, float 1.000000e+00, float %.03.i419, !dbg !55
  %3141 = bitcast float %s.0.i420 to i32, !dbg !55
  %3142 = bitcast float %2809 to i32, !dbg !55
  %3143 = and i32 %3142, -2147483648, !dbg !55
  %3144 = or i32 %3143, %3141, !dbg !55
  %3145 = bitcast i32 %3144 to float, !dbg !55
  br label %__nv_tanhf.exit433, !dbg !55

__internal_fmad.exit3.i422:                       ; preds = %__nv_tanhf.exit414
  %3146 = fmul float %2809, %2809, !dbg !55
  %3147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i423 = icmp eq i32 %3147, 0, !dbg !55
  %3148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3146, float 0xBFAAC795C0000000) #5, !dbg !55
  %3149 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3146, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i424 = select i1 %.not1.i423, float %3149, float %3148, !dbg !55
  %3150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i425 = icmp eq i32 %3150, 0, !dbg !55
  %3151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i424, float %3146, float 0x3FC10B2820000000) #5, !dbg !55
  %3152 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i424, float %3146, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i426 = select i1 %.not2.i425, float %3152, float %3151, !dbg !55
  %3153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i427 = icmp eq i32 %3153, 0, !dbg !55
  %3154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i426, float %3146, float 0xBFD5553DA0000000) #5, !dbg !55
  %3155 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i426, float %3146, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i428 = select i1 %.not3.i427, float %3155, float %3154, !dbg !55
  %3156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i429 = icmp eq i32 %3156, 0, !dbg !55
  %3157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i428, float %3146, float 0.000000e+00) #5, !dbg !55
  %3158 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i428, float %3146, float 0.000000e+00) #5, !dbg !55
  %.04.i430 = select i1 %.not4.i429, float %3158, float %3157, !dbg !55
  %3159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i431 = icmp eq i32 %3159, 0, !dbg !55
  %3160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i430, float %2809, float %2809) #5, !dbg !55
  %3161 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i430, float %2809, float %2809) #5, !dbg !55
  %.02.i432 = select i1 %.not5.i431, float %3161, float %3160, !dbg !55
  br label %__nv_tanhf.exit433, !dbg !55

__nv_tanhf.exit433:                               ; preds = %__internal_fmad.exit1.i417, %__internal_fmad.exit3.i422
  %s.1.i421 = phi float [ %3145, %__internal_fmad.exit1.i417 ], [ %.02.i432, %__internal_fmad.exit3.i422 ], !dbg !55
  %3162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i434 = icmp eq i32 %3162, 0, !dbg !55
  %3163 = tail call float @llvm.nvvm.fabs.ftz.f(float %2810) #5, !dbg !55
  %3164 = tail call float @llvm.nvvm.fabs.f(float %2810) #5, !dbg !55
  %.01.i435 = select i1 %.not.i434, float %3164, float %3163, !dbg !55
  %3165 = fcmp ult float %.01.i435, 0x3FE3333340000000, !dbg !55
  br i1 %3165, label %__internal_fmad.exit3.i441, label %__internal_fmad.exit1.i436, !dbg !55

__internal_fmad.exit1.i436:                       ; preds = %__nv_tanhf.exit433
  %3166 = fmul float %.01.i435, 0x4007154760000000, !dbg !55
  %3167 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3166) #5, !dbg !55
  %3168 = fadd float %3167, 1.000000e+00, !dbg !55
  %3169 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3168) #6, !dbg !55, !srcloc !56
  %3170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i437 = icmp eq i32 %3170, 0, !dbg !55
  %3171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3169, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3172 = tail call float @llvm.nvvm.fma.rn.f(float %3169, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i438 = select i1 %.not6.i437, float %3172, float %3171, !dbg !55
  %3173 = fcmp oge float %.01.i435, 0x4022059680000000, !dbg !55
  %s.0.i439 = select i1 %3173, float 1.000000e+00, float %.03.i438, !dbg !55
  %3174 = bitcast float %s.0.i439 to i32, !dbg !55
  %3175 = bitcast float %2810 to i32, !dbg !55
  %3176 = and i32 %3175, -2147483648, !dbg !55
  %3177 = or i32 %3176, %3174, !dbg !55
  %3178 = bitcast i32 %3177 to float, !dbg !55
  br label %__nv_tanhf.exit452, !dbg !55

__internal_fmad.exit3.i441:                       ; preds = %__nv_tanhf.exit433
  %3179 = fmul float %2810, %2810, !dbg !55
  %3180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i442 = icmp eq i32 %3180, 0, !dbg !55
  %3181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3179, float 0xBFAAC795C0000000) #5, !dbg !55
  %3182 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3179, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i443 = select i1 %.not1.i442, float %3182, float %3181, !dbg !55
  %3183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i444 = icmp eq i32 %3183, 0, !dbg !55
  %3184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i443, float %3179, float 0x3FC10B2820000000) #5, !dbg !55
  %3185 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i443, float %3179, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i445 = select i1 %.not2.i444, float %3185, float %3184, !dbg !55
  %3186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i446 = icmp eq i32 %3186, 0, !dbg !55
  %3187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i445, float %3179, float 0xBFD5553DA0000000) #5, !dbg !55
  %3188 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i445, float %3179, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i447 = select i1 %.not3.i446, float %3188, float %3187, !dbg !55
  %3189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i448 = icmp eq i32 %3189, 0, !dbg !55
  %3190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i447, float %3179, float 0.000000e+00) #5, !dbg !55
  %3191 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i447, float %3179, float 0.000000e+00) #5, !dbg !55
  %.04.i449 = select i1 %.not4.i448, float %3191, float %3190, !dbg !55
  %3192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i450 = icmp eq i32 %3192, 0, !dbg !55
  %3193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i449, float %2810, float %2810) #5, !dbg !55
  %3194 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i449, float %2810, float %2810) #5, !dbg !55
  %.02.i451 = select i1 %.not5.i450, float %3194, float %3193, !dbg !55
  br label %__nv_tanhf.exit452, !dbg !55

__nv_tanhf.exit452:                               ; preds = %__internal_fmad.exit1.i436, %__internal_fmad.exit3.i441
  %s.1.i440 = phi float [ %3178, %__internal_fmad.exit1.i436 ], [ %.02.i451, %__internal_fmad.exit3.i441 ], !dbg !55
  %3195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i453 = icmp eq i32 %3195, 0, !dbg !55
  %3196 = tail call float @llvm.nvvm.fabs.ftz.f(float %2811) #5, !dbg !55
  %3197 = tail call float @llvm.nvvm.fabs.f(float %2811) #5, !dbg !55
  %.01.i454 = select i1 %.not.i453, float %3197, float %3196, !dbg !55
  %3198 = fcmp ult float %.01.i454, 0x3FE3333340000000, !dbg !55
  br i1 %3198, label %__internal_fmad.exit3.i460, label %__internal_fmad.exit1.i455, !dbg !55

__internal_fmad.exit1.i455:                       ; preds = %__nv_tanhf.exit452
  %3199 = fmul float %.01.i454, 0x4007154760000000, !dbg !55
  %3200 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3199) #5, !dbg !55
  %3201 = fadd float %3200, 1.000000e+00, !dbg !55
  %3202 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3201) #6, !dbg !55, !srcloc !56
  %3203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i456 = icmp eq i32 %3203, 0, !dbg !55
  %3204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3202, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3205 = tail call float @llvm.nvvm.fma.rn.f(float %3202, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i457 = select i1 %.not6.i456, float %3205, float %3204, !dbg !55
  %3206 = fcmp oge float %.01.i454, 0x4022059680000000, !dbg !55
  %s.0.i458 = select i1 %3206, float 1.000000e+00, float %.03.i457, !dbg !55
  %3207 = bitcast float %s.0.i458 to i32, !dbg !55
  %3208 = bitcast float %2811 to i32, !dbg !55
  %3209 = and i32 %3208, -2147483648, !dbg !55
  %3210 = or i32 %3209, %3207, !dbg !55
  %3211 = bitcast i32 %3210 to float, !dbg !55
  br label %__nv_tanhf.exit471, !dbg !55

__internal_fmad.exit3.i460:                       ; preds = %__nv_tanhf.exit452
  %3212 = fmul float %2811, %2811, !dbg !55
  %3213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i461 = icmp eq i32 %3213, 0, !dbg !55
  %3214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3212, float 0xBFAAC795C0000000) #5, !dbg !55
  %3215 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3212, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i462 = select i1 %.not1.i461, float %3215, float %3214, !dbg !55
  %3216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i463 = icmp eq i32 %3216, 0, !dbg !55
  %3217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i462, float %3212, float 0x3FC10B2820000000) #5, !dbg !55
  %3218 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i462, float %3212, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i464 = select i1 %.not2.i463, float %3218, float %3217, !dbg !55
  %3219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i465 = icmp eq i32 %3219, 0, !dbg !55
  %3220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i464, float %3212, float 0xBFD5553DA0000000) #5, !dbg !55
  %3221 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i464, float %3212, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i466 = select i1 %.not3.i465, float %3221, float %3220, !dbg !55
  %3222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i467 = icmp eq i32 %3222, 0, !dbg !55
  %3223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i466, float %3212, float 0.000000e+00) #5, !dbg !55
  %3224 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i466, float %3212, float 0.000000e+00) #5, !dbg !55
  %.04.i468 = select i1 %.not4.i467, float %3224, float %3223, !dbg !55
  %3225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i469 = icmp eq i32 %3225, 0, !dbg !55
  %3226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i468, float %2811, float %2811) #5, !dbg !55
  %3227 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i468, float %2811, float %2811) #5, !dbg !55
  %.02.i470 = select i1 %.not5.i469, float %3227, float %3226, !dbg !55
  br label %__nv_tanhf.exit471, !dbg !55

__nv_tanhf.exit471:                               ; preds = %__internal_fmad.exit1.i455, %__internal_fmad.exit3.i460
  %s.1.i459 = phi float [ %3211, %__internal_fmad.exit1.i455 ], [ %.02.i470, %__internal_fmad.exit3.i460 ], !dbg !55
  %3228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i472 = icmp eq i32 %3228, 0, !dbg !55
  %3229 = tail call float @llvm.nvvm.fabs.ftz.f(float %2812) #5, !dbg !55
  %3230 = tail call float @llvm.nvvm.fabs.f(float %2812) #5, !dbg !55
  %.01.i473 = select i1 %.not.i472, float %3230, float %3229, !dbg !55
  %3231 = fcmp ult float %.01.i473, 0x3FE3333340000000, !dbg !55
  br i1 %3231, label %__internal_fmad.exit3.i479, label %__internal_fmad.exit1.i474, !dbg !55

__internal_fmad.exit1.i474:                       ; preds = %__nv_tanhf.exit471
  %3232 = fmul float %.01.i473, 0x4007154760000000, !dbg !55
  %3233 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3232) #5, !dbg !55
  %3234 = fadd float %3233, 1.000000e+00, !dbg !55
  %3235 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3234) #6, !dbg !55, !srcloc !56
  %3236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i475 = icmp eq i32 %3236, 0, !dbg !55
  %3237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3235, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3238 = tail call float @llvm.nvvm.fma.rn.f(float %3235, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i476 = select i1 %.not6.i475, float %3238, float %3237, !dbg !55
  %3239 = fcmp oge float %.01.i473, 0x4022059680000000, !dbg !55
  %s.0.i477 = select i1 %3239, float 1.000000e+00, float %.03.i476, !dbg !55
  %3240 = bitcast float %s.0.i477 to i32, !dbg !55
  %3241 = bitcast float %2812 to i32, !dbg !55
  %3242 = and i32 %3241, -2147483648, !dbg !55
  %3243 = or i32 %3242, %3240, !dbg !55
  %3244 = bitcast i32 %3243 to float, !dbg !55
  br label %__nv_tanhf.exit490, !dbg !55

__internal_fmad.exit3.i479:                       ; preds = %__nv_tanhf.exit471
  %3245 = fmul float %2812, %2812, !dbg !55
  %3246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i480 = icmp eq i32 %3246, 0, !dbg !55
  %3247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3245, float 0xBFAAC795C0000000) #5, !dbg !55
  %3248 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3245, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i481 = select i1 %.not1.i480, float %3248, float %3247, !dbg !55
  %3249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i482 = icmp eq i32 %3249, 0, !dbg !55
  %3250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i481, float %3245, float 0x3FC10B2820000000) #5, !dbg !55
  %3251 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i481, float %3245, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i483 = select i1 %.not2.i482, float %3251, float %3250, !dbg !55
  %3252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i484 = icmp eq i32 %3252, 0, !dbg !55
  %3253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i483, float %3245, float 0xBFD5553DA0000000) #5, !dbg !55
  %3254 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i483, float %3245, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i485 = select i1 %.not3.i484, float %3254, float %3253, !dbg !55
  %3255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i486 = icmp eq i32 %3255, 0, !dbg !55
  %3256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i485, float %3245, float 0.000000e+00) #5, !dbg !55
  %3257 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i485, float %3245, float 0.000000e+00) #5, !dbg !55
  %.04.i487 = select i1 %.not4.i486, float %3257, float %3256, !dbg !55
  %3258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i488 = icmp eq i32 %3258, 0, !dbg !55
  %3259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i487, float %2812, float %2812) #5, !dbg !55
  %3260 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i487, float %2812, float %2812) #5, !dbg !55
  %.02.i489 = select i1 %.not5.i488, float %3260, float %3259, !dbg !55
  br label %__nv_tanhf.exit490, !dbg !55

__nv_tanhf.exit490:                               ; preds = %__internal_fmad.exit1.i474, %__internal_fmad.exit3.i479
  %s.1.i478 = phi float [ %3244, %__internal_fmad.exit1.i474 ], [ %.02.i489, %__internal_fmad.exit3.i479 ], !dbg !55
  %3261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i491 = icmp eq i32 %3261, 0, !dbg !55
  %3262 = tail call float @llvm.nvvm.fabs.ftz.f(float %2813) #5, !dbg !55
  %3263 = tail call float @llvm.nvvm.fabs.f(float %2813) #5, !dbg !55
  %.01.i492 = select i1 %.not.i491, float %3263, float %3262, !dbg !55
  %3264 = fcmp ult float %.01.i492, 0x3FE3333340000000, !dbg !55
  br i1 %3264, label %__internal_fmad.exit3.i498, label %__internal_fmad.exit1.i493, !dbg !55

__internal_fmad.exit1.i493:                       ; preds = %__nv_tanhf.exit490
  %3265 = fmul float %.01.i492, 0x4007154760000000, !dbg !55
  %3266 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3265) #5, !dbg !55
  %3267 = fadd float %3266, 1.000000e+00, !dbg !55
  %3268 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3267) #6, !dbg !55, !srcloc !56
  %3269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i494 = icmp eq i32 %3269, 0, !dbg !55
  %3270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3268, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3271 = tail call float @llvm.nvvm.fma.rn.f(float %3268, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i495 = select i1 %.not6.i494, float %3271, float %3270, !dbg !55
  %3272 = fcmp oge float %.01.i492, 0x4022059680000000, !dbg !55
  %s.0.i496 = select i1 %3272, float 1.000000e+00, float %.03.i495, !dbg !55
  %3273 = bitcast float %s.0.i496 to i32, !dbg !55
  %3274 = bitcast float %2813 to i32, !dbg !55
  %3275 = and i32 %3274, -2147483648, !dbg !55
  %3276 = or i32 %3275, %3273, !dbg !55
  %3277 = bitcast i32 %3276 to float, !dbg !55
  br label %__nv_tanhf.exit509, !dbg !55

__internal_fmad.exit3.i498:                       ; preds = %__nv_tanhf.exit490
  %3278 = fmul float %2813, %2813, !dbg !55
  %3279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i499 = icmp eq i32 %3279, 0, !dbg !55
  %3280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3278, float 0xBFAAC795C0000000) #5, !dbg !55
  %3281 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3278, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i500 = select i1 %.not1.i499, float %3281, float %3280, !dbg !55
  %3282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i501 = icmp eq i32 %3282, 0, !dbg !55
  %3283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i500, float %3278, float 0x3FC10B2820000000) #5, !dbg !55
  %3284 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i500, float %3278, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i502 = select i1 %.not2.i501, float %3284, float %3283, !dbg !55
  %3285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i503 = icmp eq i32 %3285, 0, !dbg !55
  %3286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i502, float %3278, float 0xBFD5553DA0000000) #5, !dbg !55
  %3287 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i502, float %3278, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i504 = select i1 %.not3.i503, float %3287, float %3286, !dbg !55
  %3288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i505 = icmp eq i32 %3288, 0, !dbg !55
  %3289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i504, float %3278, float 0.000000e+00) #5, !dbg !55
  %3290 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i504, float %3278, float 0.000000e+00) #5, !dbg !55
  %.04.i506 = select i1 %.not4.i505, float %3290, float %3289, !dbg !55
  %3291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i507 = icmp eq i32 %3291, 0, !dbg !55
  %3292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i506, float %2813, float %2813) #5, !dbg !55
  %3293 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i506, float %2813, float %2813) #5, !dbg !55
  %.02.i508 = select i1 %.not5.i507, float %3293, float %3292, !dbg !55
  br label %__nv_tanhf.exit509, !dbg !55

__nv_tanhf.exit509:                               ; preds = %__internal_fmad.exit1.i493, %__internal_fmad.exit3.i498
  %s.1.i497 = phi float [ %3277, %__internal_fmad.exit1.i493 ], [ %.02.i508, %__internal_fmad.exit3.i498 ], !dbg !55
  %3294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i510 = icmp eq i32 %3294, 0, !dbg !55
  %3295 = tail call float @llvm.nvvm.fabs.ftz.f(float %2814) #5, !dbg !55
  %3296 = tail call float @llvm.nvvm.fabs.f(float %2814) #5, !dbg !55
  %.01.i511 = select i1 %.not.i510, float %3296, float %3295, !dbg !55
  %3297 = fcmp ult float %.01.i511, 0x3FE3333340000000, !dbg !55
  br i1 %3297, label %__internal_fmad.exit3.i517, label %__internal_fmad.exit1.i512, !dbg !55

__internal_fmad.exit1.i512:                       ; preds = %__nv_tanhf.exit509
  %3298 = fmul float %.01.i511, 0x4007154760000000, !dbg !55
  %3299 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3298) #5, !dbg !55
  %3300 = fadd float %3299, 1.000000e+00, !dbg !55
  %3301 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3300) #6, !dbg !55, !srcloc !56
  %3302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i513 = icmp eq i32 %3302, 0, !dbg !55
  %3303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3301, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3304 = tail call float @llvm.nvvm.fma.rn.f(float %3301, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i514 = select i1 %.not6.i513, float %3304, float %3303, !dbg !55
  %3305 = fcmp oge float %.01.i511, 0x4022059680000000, !dbg !55
  %s.0.i515 = select i1 %3305, float 1.000000e+00, float %.03.i514, !dbg !55
  %3306 = bitcast float %s.0.i515 to i32, !dbg !55
  %3307 = bitcast float %2814 to i32, !dbg !55
  %3308 = and i32 %3307, -2147483648, !dbg !55
  %3309 = or i32 %3308, %3306, !dbg !55
  %3310 = bitcast i32 %3309 to float, !dbg !55
  br label %__nv_tanhf.exit528, !dbg !55

__internal_fmad.exit3.i517:                       ; preds = %__nv_tanhf.exit509
  %3311 = fmul float %2814, %2814, !dbg !55
  %3312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i518 = icmp eq i32 %3312, 0, !dbg !55
  %3313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3311, float 0xBFAAC795C0000000) #5, !dbg !55
  %3314 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3311, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i519 = select i1 %.not1.i518, float %3314, float %3313, !dbg !55
  %3315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i520 = icmp eq i32 %3315, 0, !dbg !55
  %3316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i519, float %3311, float 0x3FC10B2820000000) #5, !dbg !55
  %3317 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i519, float %3311, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i521 = select i1 %.not2.i520, float %3317, float %3316, !dbg !55
  %3318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i522 = icmp eq i32 %3318, 0, !dbg !55
  %3319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i521, float %3311, float 0xBFD5553DA0000000) #5, !dbg !55
  %3320 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i521, float %3311, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i523 = select i1 %.not3.i522, float %3320, float %3319, !dbg !55
  %3321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i524 = icmp eq i32 %3321, 0, !dbg !55
  %3322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i523, float %3311, float 0.000000e+00) #5, !dbg !55
  %3323 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i523, float %3311, float 0.000000e+00) #5, !dbg !55
  %.04.i525 = select i1 %.not4.i524, float %3323, float %3322, !dbg !55
  %3324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i526 = icmp eq i32 %3324, 0, !dbg !55
  %3325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i525, float %2814, float %2814) #5, !dbg !55
  %3326 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i525, float %2814, float %2814) #5, !dbg !55
  %.02.i527 = select i1 %.not5.i526, float %3326, float %3325, !dbg !55
  br label %__nv_tanhf.exit528, !dbg !55

__nv_tanhf.exit528:                               ; preds = %__internal_fmad.exit1.i512, %__internal_fmad.exit3.i517
  %s.1.i516 = phi float [ %3310, %__internal_fmad.exit1.i512 ], [ %.02.i527, %__internal_fmad.exit3.i517 ], !dbg !55
  %3327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i529 = icmp eq i32 %3327, 0, !dbg !55
  %3328 = tail call float @llvm.nvvm.fabs.ftz.f(float %2815) #5, !dbg !55
  %3329 = tail call float @llvm.nvvm.fabs.f(float %2815) #5, !dbg !55
  %.01.i530 = select i1 %.not.i529, float %3329, float %3328, !dbg !55
  %3330 = fcmp ult float %.01.i530, 0x3FE3333340000000, !dbg !55
  br i1 %3330, label %__internal_fmad.exit3.i536, label %__internal_fmad.exit1.i531, !dbg !55

__internal_fmad.exit1.i531:                       ; preds = %__nv_tanhf.exit528
  %3331 = fmul float %.01.i530, 0x4007154760000000, !dbg !55
  %3332 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3331) #5, !dbg !55
  %3333 = fadd float %3332, 1.000000e+00, !dbg !55
  %3334 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3333) #6, !dbg !55, !srcloc !56
  %3335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i532 = icmp eq i32 %3335, 0, !dbg !55
  %3336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3334, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3337 = tail call float @llvm.nvvm.fma.rn.f(float %3334, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i533 = select i1 %.not6.i532, float %3337, float %3336, !dbg !55
  %3338 = fcmp oge float %.01.i530, 0x4022059680000000, !dbg !55
  %s.0.i534 = select i1 %3338, float 1.000000e+00, float %.03.i533, !dbg !55
  %3339 = bitcast float %s.0.i534 to i32, !dbg !55
  %3340 = bitcast float %2815 to i32, !dbg !55
  %3341 = and i32 %3340, -2147483648, !dbg !55
  %3342 = or i32 %3341, %3339, !dbg !55
  %3343 = bitcast i32 %3342 to float, !dbg !55
  br label %__nv_tanhf.exit547, !dbg !55

__internal_fmad.exit3.i536:                       ; preds = %__nv_tanhf.exit528
  %3344 = fmul float %2815, %2815, !dbg !55
  %3345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i537 = icmp eq i32 %3345, 0, !dbg !55
  %3346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3344, float 0xBFAAC795C0000000) #5, !dbg !55
  %3347 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3344, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i538 = select i1 %.not1.i537, float %3347, float %3346, !dbg !55
  %3348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i539 = icmp eq i32 %3348, 0, !dbg !55
  %3349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i538, float %3344, float 0x3FC10B2820000000) #5, !dbg !55
  %3350 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i538, float %3344, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i540 = select i1 %.not2.i539, float %3350, float %3349, !dbg !55
  %3351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i541 = icmp eq i32 %3351, 0, !dbg !55
  %3352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i540, float %3344, float 0xBFD5553DA0000000) #5, !dbg !55
  %3353 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i540, float %3344, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i542 = select i1 %.not3.i541, float %3353, float %3352, !dbg !55
  %3354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i543 = icmp eq i32 %3354, 0, !dbg !55
  %3355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i542, float %3344, float 0.000000e+00) #5, !dbg !55
  %3356 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i542, float %3344, float 0.000000e+00) #5, !dbg !55
  %.04.i544 = select i1 %.not4.i543, float %3356, float %3355, !dbg !55
  %3357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i545 = icmp eq i32 %3357, 0, !dbg !55
  %3358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i544, float %2815, float %2815) #5, !dbg !55
  %3359 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i544, float %2815, float %2815) #5, !dbg !55
  %.02.i546 = select i1 %.not5.i545, float %3359, float %3358, !dbg !55
  br label %__nv_tanhf.exit547, !dbg !55

__nv_tanhf.exit547:                               ; preds = %__internal_fmad.exit1.i531, %__internal_fmad.exit3.i536
  %s.1.i535 = phi float [ %3343, %__internal_fmad.exit1.i531 ], [ %.02.i546, %__internal_fmad.exit3.i536 ], !dbg !55
  %3360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i548 = icmp eq i32 %3360, 0, !dbg !55
  %3361 = tail call float @llvm.nvvm.fabs.ftz.f(float %2816) #5, !dbg !55
  %3362 = tail call float @llvm.nvvm.fabs.f(float %2816) #5, !dbg !55
  %.01.i549 = select i1 %.not.i548, float %3362, float %3361, !dbg !55
  %3363 = fcmp ult float %.01.i549, 0x3FE3333340000000, !dbg !55
  br i1 %3363, label %__internal_fmad.exit3.i555, label %__internal_fmad.exit1.i550, !dbg !55

__internal_fmad.exit1.i550:                       ; preds = %__nv_tanhf.exit547
  %3364 = fmul float %.01.i549, 0x4007154760000000, !dbg !55
  %3365 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3364) #5, !dbg !55
  %3366 = fadd float %3365, 1.000000e+00, !dbg !55
  %3367 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3366) #6, !dbg !55, !srcloc !56
  %3368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i551 = icmp eq i32 %3368, 0, !dbg !55
  %3369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3367, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3370 = tail call float @llvm.nvvm.fma.rn.f(float %3367, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i552 = select i1 %.not6.i551, float %3370, float %3369, !dbg !55
  %3371 = fcmp oge float %.01.i549, 0x4022059680000000, !dbg !55
  %s.0.i553 = select i1 %3371, float 1.000000e+00, float %.03.i552, !dbg !55
  %3372 = bitcast float %s.0.i553 to i32, !dbg !55
  %3373 = bitcast float %2816 to i32, !dbg !55
  %3374 = and i32 %3373, -2147483648, !dbg !55
  %3375 = or i32 %3374, %3372, !dbg !55
  %3376 = bitcast i32 %3375 to float, !dbg !55
  br label %__nv_tanhf.exit566, !dbg !55

__internal_fmad.exit3.i555:                       ; preds = %__nv_tanhf.exit547
  %3377 = fmul float %2816, %2816, !dbg !55
  %3378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i556 = icmp eq i32 %3378, 0, !dbg !55
  %3379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3377, float 0xBFAAC795C0000000) #5, !dbg !55
  %3380 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3377, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i557 = select i1 %.not1.i556, float %3380, float %3379, !dbg !55
  %3381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i558 = icmp eq i32 %3381, 0, !dbg !55
  %3382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i557, float %3377, float 0x3FC10B2820000000) #5, !dbg !55
  %3383 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i557, float %3377, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i559 = select i1 %.not2.i558, float %3383, float %3382, !dbg !55
  %3384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i560 = icmp eq i32 %3384, 0, !dbg !55
  %3385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i559, float %3377, float 0xBFD5553DA0000000) #5, !dbg !55
  %3386 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i559, float %3377, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i561 = select i1 %.not3.i560, float %3386, float %3385, !dbg !55
  %3387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i562 = icmp eq i32 %3387, 0, !dbg !55
  %3388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i561, float %3377, float 0.000000e+00) #5, !dbg !55
  %3389 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i561, float %3377, float 0.000000e+00) #5, !dbg !55
  %.04.i563 = select i1 %.not4.i562, float %3389, float %3388, !dbg !55
  %3390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i564 = icmp eq i32 %3390, 0, !dbg !55
  %3391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i563, float %2816, float %2816) #5, !dbg !55
  %3392 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i563, float %2816, float %2816) #5, !dbg !55
  %.02.i565 = select i1 %.not5.i564, float %3392, float %3391, !dbg !55
  br label %__nv_tanhf.exit566, !dbg !55

__nv_tanhf.exit566:                               ; preds = %__internal_fmad.exit1.i550, %__internal_fmad.exit3.i555
  %s.1.i554 = phi float [ %3376, %__internal_fmad.exit1.i550 ], [ %.02.i565, %__internal_fmad.exit3.i555 ], !dbg !55
  %3393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i567 = icmp eq i32 %3393, 0, !dbg !55
  %3394 = tail call float @llvm.nvvm.fabs.ftz.f(float %2817) #5, !dbg !55
  %3395 = tail call float @llvm.nvvm.fabs.f(float %2817) #5, !dbg !55
  %.01.i568 = select i1 %.not.i567, float %3395, float %3394, !dbg !55
  %3396 = fcmp ult float %.01.i568, 0x3FE3333340000000, !dbg !55
  br i1 %3396, label %__internal_fmad.exit3.i574, label %__internal_fmad.exit1.i569, !dbg !55

__internal_fmad.exit1.i569:                       ; preds = %__nv_tanhf.exit566
  %3397 = fmul float %.01.i568, 0x4007154760000000, !dbg !55
  %3398 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3397) #5, !dbg !55
  %3399 = fadd float %3398, 1.000000e+00, !dbg !55
  %3400 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3399) #6, !dbg !55, !srcloc !56
  %3401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i570 = icmp eq i32 %3401, 0, !dbg !55
  %3402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3400, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3403 = tail call float @llvm.nvvm.fma.rn.f(float %3400, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i571 = select i1 %.not6.i570, float %3403, float %3402, !dbg !55
  %3404 = fcmp oge float %.01.i568, 0x4022059680000000, !dbg !55
  %s.0.i572 = select i1 %3404, float 1.000000e+00, float %.03.i571, !dbg !55
  %3405 = bitcast float %s.0.i572 to i32, !dbg !55
  %3406 = bitcast float %2817 to i32, !dbg !55
  %3407 = and i32 %3406, -2147483648, !dbg !55
  %3408 = or i32 %3407, %3405, !dbg !55
  %3409 = bitcast i32 %3408 to float, !dbg !55
  br label %__nv_tanhf.exit585, !dbg !55

__internal_fmad.exit3.i574:                       ; preds = %__nv_tanhf.exit566
  %3410 = fmul float %2817, %2817, !dbg !55
  %3411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i575 = icmp eq i32 %3411, 0, !dbg !55
  %3412 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3410, float 0xBFAAC795C0000000) #5, !dbg !55
  %3413 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3410, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i576 = select i1 %.not1.i575, float %3413, float %3412, !dbg !55
  %3414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i577 = icmp eq i32 %3414, 0, !dbg !55
  %3415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i576, float %3410, float 0x3FC10B2820000000) #5, !dbg !55
  %3416 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i576, float %3410, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i578 = select i1 %.not2.i577, float %3416, float %3415, !dbg !55
  %3417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i579 = icmp eq i32 %3417, 0, !dbg !55
  %3418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i578, float %3410, float 0xBFD5553DA0000000) #5, !dbg !55
  %3419 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i578, float %3410, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i580 = select i1 %.not3.i579, float %3419, float %3418, !dbg !55
  %3420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i581 = icmp eq i32 %3420, 0, !dbg !55
  %3421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i580, float %3410, float 0.000000e+00) #5, !dbg !55
  %3422 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i580, float %3410, float 0.000000e+00) #5, !dbg !55
  %.04.i582 = select i1 %.not4.i581, float %3422, float %3421, !dbg !55
  %3423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i583 = icmp eq i32 %3423, 0, !dbg !55
  %3424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i582, float %2817, float %2817) #5, !dbg !55
  %3425 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i582, float %2817, float %2817) #5, !dbg !55
  %.02.i584 = select i1 %.not5.i583, float %3425, float %3424, !dbg !55
  br label %__nv_tanhf.exit585, !dbg !55

__nv_tanhf.exit585:                               ; preds = %__internal_fmad.exit1.i569, %__internal_fmad.exit3.i574
  %s.1.i573 = phi float [ %3409, %__internal_fmad.exit1.i569 ], [ %.02.i584, %__internal_fmad.exit3.i574 ], !dbg !55
  %3426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i586 = icmp eq i32 %3426, 0, !dbg !55
  %3427 = tail call float @llvm.nvvm.fabs.ftz.f(float %2818) #5, !dbg !55
  %3428 = tail call float @llvm.nvvm.fabs.f(float %2818) #5, !dbg !55
  %.01.i587 = select i1 %.not.i586, float %3428, float %3427, !dbg !55
  %3429 = fcmp ult float %.01.i587, 0x3FE3333340000000, !dbg !55
  br i1 %3429, label %__internal_fmad.exit3.i593, label %__internal_fmad.exit1.i588, !dbg !55

__internal_fmad.exit1.i588:                       ; preds = %__nv_tanhf.exit585
  %3430 = fmul float %.01.i587, 0x4007154760000000, !dbg !55
  %3431 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3430) #5, !dbg !55
  %3432 = fadd float %3431, 1.000000e+00, !dbg !55
  %3433 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3432) #6, !dbg !55, !srcloc !56
  %3434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i589 = icmp eq i32 %3434, 0, !dbg !55
  %3435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3433, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3436 = tail call float @llvm.nvvm.fma.rn.f(float %3433, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i590 = select i1 %.not6.i589, float %3436, float %3435, !dbg !55
  %3437 = fcmp oge float %.01.i587, 0x4022059680000000, !dbg !55
  %s.0.i591 = select i1 %3437, float 1.000000e+00, float %.03.i590, !dbg !55
  %3438 = bitcast float %s.0.i591 to i32, !dbg !55
  %3439 = bitcast float %2818 to i32, !dbg !55
  %3440 = and i32 %3439, -2147483648, !dbg !55
  %3441 = or i32 %3440, %3438, !dbg !55
  %3442 = bitcast i32 %3441 to float, !dbg !55
  br label %__nv_tanhf.exit604, !dbg !55

__internal_fmad.exit3.i593:                       ; preds = %__nv_tanhf.exit585
  %3443 = fmul float %2818, %2818, !dbg !55
  %3444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i594 = icmp eq i32 %3444, 0, !dbg !55
  %3445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3443, float 0xBFAAC795C0000000) #5, !dbg !55
  %3446 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3443, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i595 = select i1 %.not1.i594, float %3446, float %3445, !dbg !55
  %3447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i596 = icmp eq i32 %3447, 0, !dbg !55
  %3448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i595, float %3443, float 0x3FC10B2820000000) #5, !dbg !55
  %3449 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i595, float %3443, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i597 = select i1 %.not2.i596, float %3449, float %3448, !dbg !55
  %3450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i598 = icmp eq i32 %3450, 0, !dbg !55
  %3451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i597, float %3443, float 0xBFD5553DA0000000) #5, !dbg !55
  %3452 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i597, float %3443, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i599 = select i1 %.not3.i598, float %3452, float %3451, !dbg !55
  %3453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i600 = icmp eq i32 %3453, 0, !dbg !55
  %3454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i599, float %3443, float 0.000000e+00) #5, !dbg !55
  %3455 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i599, float %3443, float 0.000000e+00) #5, !dbg !55
  %.04.i601 = select i1 %.not4.i600, float %3455, float %3454, !dbg !55
  %3456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i602 = icmp eq i32 %3456, 0, !dbg !55
  %3457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i601, float %2818, float %2818) #5, !dbg !55
  %3458 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i601, float %2818, float %2818) #5, !dbg !55
  %.02.i603 = select i1 %.not5.i602, float %3458, float %3457, !dbg !55
  br label %__nv_tanhf.exit604, !dbg !55

__nv_tanhf.exit604:                               ; preds = %__internal_fmad.exit1.i588, %__internal_fmad.exit3.i593
  %s.1.i592 = phi float [ %3442, %__internal_fmad.exit1.i588 ], [ %.02.i603, %__internal_fmad.exit3.i593 ], !dbg !55
  %3459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i605 = icmp eq i32 %3459, 0, !dbg !55
  %3460 = tail call float @llvm.nvvm.fabs.ftz.f(float %2819) #5, !dbg !55
  %3461 = tail call float @llvm.nvvm.fabs.f(float %2819) #5, !dbg !55
  %.01.i606 = select i1 %.not.i605, float %3461, float %3460, !dbg !55
  %3462 = fcmp ult float %.01.i606, 0x3FE3333340000000, !dbg !55
  br i1 %3462, label %__internal_fmad.exit3.i612, label %__internal_fmad.exit1.i607, !dbg !55

__internal_fmad.exit1.i607:                       ; preds = %__nv_tanhf.exit604
  %3463 = fmul float %.01.i606, 0x4007154760000000, !dbg !55
  %3464 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3463) #5, !dbg !55
  %3465 = fadd float %3464, 1.000000e+00, !dbg !55
  %3466 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3465) #6, !dbg !55, !srcloc !56
  %3467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i608 = icmp eq i32 %3467, 0, !dbg !55
  %3468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3466, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3469 = tail call float @llvm.nvvm.fma.rn.f(float %3466, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i609 = select i1 %.not6.i608, float %3469, float %3468, !dbg !55
  %3470 = fcmp oge float %.01.i606, 0x4022059680000000, !dbg !55
  %s.0.i610 = select i1 %3470, float 1.000000e+00, float %.03.i609, !dbg !55
  %3471 = bitcast float %s.0.i610 to i32, !dbg !55
  %3472 = bitcast float %2819 to i32, !dbg !55
  %3473 = and i32 %3472, -2147483648, !dbg !55
  %3474 = or i32 %3473, %3471, !dbg !55
  %3475 = bitcast i32 %3474 to float, !dbg !55
  br label %__nv_tanhf.exit623, !dbg !55

__internal_fmad.exit3.i612:                       ; preds = %__nv_tanhf.exit604
  %3476 = fmul float %2819, %2819, !dbg !55
  %3477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i613 = icmp eq i32 %3477, 0, !dbg !55
  %3478 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3476, float 0xBFAAC795C0000000) #5, !dbg !55
  %3479 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3476, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i614 = select i1 %.not1.i613, float %3479, float %3478, !dbg !55
  %3480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i615 = icmp eq i32 %3480, 0, !dbg !55
  %3481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i614, float %3476, float 0x3FC10B2820000000) #5, !dbg !55
  %3482 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i614, float %3476, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i616 = select i1 %.not2.i615, float %3482, float %3481, !dbg !55
  %3483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i617 = icmp eq i32 %3483, 0, !dbg !55
  %3484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i616, float %3476, float 0xBFD5553DA0000000) #5, !dbg !55
  %3485 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i616, float %3476, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i618 = select i1 %.not3.i617, float %3485, float %3484, !dbg !55
  %3486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i619 = icmp eq i32 %3486, 0, !dbg !55
  %3487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i618, float %3476, float 0.000000e+00) #5, !dbg !55
  %3488 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i618, float %3476, float 0.000000e+00) #5, !dbg !55
  %.04.i620 = select i1 %.not4.i619, float %3488, float %3487, !dbg !55
  %3489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i621 = icmp eq i32 %3489, 0, !dbg !55
  %3490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i620, float %2819, float %2819) #5, !dbg !55
  %3491 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i620, float %2819, float %2819) #5, !dbg !55
  %.02.i622 = select i1 %.not5.i621, float %3491, float %3490, !dbg !55
  br label %__nv_tanhf.exit623, !dbg !55

__nv_tanhf.exit623:                               ; preds = %__internal_fmad.exit1.i607, %__internal_fmad.exit3.i612
  %s.1.i611 = phi float [ %3475, %__internal_fmad.exit1.i607 ], [ %.02.i622, %__internal_fmad.exit3.i612 ], !dbg !55
  %3492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i624 = icmp eq i32 %3492, 0, !dbg !55
  %3493 = tail call float @llvm.nvvm.fabs.ftz.f(float %2820) #5, !dbg !55
  %3494 = tail call float @llvm.nvvm.fabs.f(float %2820) #5, !dbg !55
  %.01.i625 = select i1 %.not.i624, float %3494, float %3493, !dbg !55
  %3495 = fcmp ult float %.01.i625, 0x3FE3333340000000, !dbg !55
  br i1 %3495, label %__internal_fmad.exit3.i631, label %__internal_fmad.exit1.i626, !dbg !55

__internal_fmad.exit1.i626:                       ; preds = %__nv_tanhf.exit623
  %3496 = fmul float %.01.i625, 0x4007154760000000, !dbg !55
  %3497 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3496) #5, !dbg !55
  %3498 = fadd float %3497, 1.000000e+00, !dbg !55
  %3499 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3498) #6, !dbg !55, !srcloc !56
  %3500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i627 = icmp eq i32 %3500, 0, !dbg !55
  %3501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3499, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3502 = tail call float @llvm.nvvm.fma.rn.f(float %3499, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i628 = select i1 %.not6.i627, float %3502, float %3501, !dbg !55
  %3503 = fcmp oge float %.01.i625, 0x4022059680000000, !dbg !55
  %s.0.i629 = select i1 %3503, float 1.000000e+00, float %.03.i628, !dbg !55
  %3504 = bitcast float %s.0.i629 to i32, !dbg !55
  %3505 = bitcast float %2820 to i32, !dbg !55
  %3506 = and i32 %3505, -2147483648, !dbg !55
  %3507 = or i32 %3506, %3504, !dbg !55
  %3508 = bitcast i32 %3507 to float, !dbg !55
  br label %__nv_tanhf.exit642, !dbg !55

__internal_fmad.exit3.i631:                       ; preds = %__nv_tanhf.exit623
  %3509 = fmul float %2820, %2820, !dbg !55
  %3510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i632 = icmp eq i32 %3510, 0, !dbg !55
  %3511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3509, float 0xBFAAC795C0000000) #5, !dbg !55
  %3512 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3509, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i633 = select i1 %.not1.i632, float %3512, float %3511, !dbg !55
  %3513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i634 = icmp eq i32 %3513, 0, !dbg !55
  %3514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i633, float %3509, float 0x3FC10B2820000000) #5, !dbg !55
  %3515 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i633, float %3509, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i635 = select i1 %.not2.i634, float %3515, float %3514, !dbg !55
  %3516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i636 = icmp eq i32 %3516, 0, !dbg !55
  %3517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i635, float %3509, float 0xBFD5553DA0000000) #5, !dbg !55
  %3518 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i635, float %3509, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i637 = select i1 %.not3.i636, float %3518, float %3517, !dbg !55
  %3519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i638 = icmp eq i32 %3519, 0, !dbg !55
  %3520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i637, float %3509, float 0.000000e+00) #5, !dbg !55
  %3521 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i637, float %3509, float 0.000000e+00) #5, !dbg !55
  %.04.i639 = select i1 %.not4.i638, float %3521, float %3520, !dbg !55
  %3522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i640 = icmp eq i32 %3522, 0, !dbg !55
  %3523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i639, float %2820, float %2820) #5, !dbg !55
  %3524 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i639, float %2820, float %2820) #5, !dbg !55
  %.02.i641 = select i1 %.not5.i640, float %3524, float %3523, !dbg !55
  br label %__nv_tanhf.exit642, !dbg !55

__nv_tanhf.exit642:                               ; preds = %__internal_fmad.exit1.i626, %__internal_fmad.exit3.i631
  %s.1.i630 = phi float [ %3508, %__internal_fmad.exit1.i626 ], [ %.02.i641, %__internal_fmad.exit3.i631 ], !dbg !55
  %3525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i643 = icmp eq i32 %3525, 0, !dbg !55
  %3526 = tail call float @llvm.nvvm.fabs.ftz.f(float %2821) #5, !dbg !55
  %3527 = tail call float @llvm.nvvm.fabs.f(float %2821) #5, !dbg !55
  %.01.i644 = select i1 %.not.i643, float %3527, float %3526, !dbg !55
  %3528 = fcmp ult float %.01.i644, 0x3FE3333340000000, !dbg !55
  br i1 %3528, label %__internal_fmad.exit3.i650, label %__internal_fmad.exit1.i645, !dbg !55

__internal_fmad.exit1.i645:                       ; preds = %__nv_tanhf.exit642
  %3529 = fmul float %.01.i644, 0x4007154760000000, !dbg !55
  %3530 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3529) #5, !dbg !55
  %3531 = fadd float %3530, 1.000000e+00, !dbg !55
  %3532 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3531) #6, !dbg !55, !srcloc !56
  %3533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i646 = icmp eq i32 %3533, 0, !dbg !55
  %3534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3532, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3535 = tail call float @llvm.nvvm.fma.rn.f(float %3532, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i647 = select i1 %.not6.i646, float %3535, float %3534, !dbg !55
  %3536 = fcmp oge float %.01.i644, 0x4022059680000000, !dbg !55
  %s.0.i648 = select i1 %3536, float 1.000000e+00, float %.03.i647, !dbg !55
  %3537 = bitcast float %s.0.i648 to i32, !dbg !55
  %3538 = bitcast float %2821 to i32, !dbg !55
  %3539 = and i32 %3538, -2147483648, !dbg !55
  %3540 = or i32 %3539, %3537, !dbg !55
  %3541 = bitcast i32 %3540 to float, !dbg !55
  br label %__nv_tanhf.exit661, !dbg !55

__internal_fmad.exit3.i650:                       ; preds = %__nv_tanhf.exit642
  %3542 = fmul float %2821, %2821, !dbg !55
  %3543 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i651 = icmp eq i32 %3543, 0, !dbg !55
  %3544 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3542, float 0xBFAAC795C0000000) #5, !dbg !55
  %3545 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3542, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i652 = select i1 %.not1.i651, float %3545, float %3544, !dbg !55
  %3546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i653 = icmp eq i32 %3546, 0, !dbg !55
  %3547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i652, float %3542, float 0x3FC10B2820000000) #5, !dbg !55
  %3548 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i652, float %3542, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i654 = select i1 %.not2.i653, float %3548, float %3547, !dbg !55
  %3549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i655 = icmp eq i32 %3549, 0, !dbg !55
  %3550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i654, float %3542, float 0xBFD5553DA0000000) #5, !dbg !55
  %3551 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i654, float %3542, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i656 = select i1 %.not3.i655, float %3551, float %3550, !dbg !55
  %3552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i657 = icmp eq i32 %3552, 0, !dbg !55
  %3553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i656, float %3542, float 0.000000e+00) #5, !dbg !55
  %3554 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i656, float %3542, float 0.000000e+00) #5, !dbg !55
  %.04.i658 = select i1 %.not4.i657, float %3554, float %3553, !dbg !55
  %3555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i659 = icmp eq i32 %3555, 0, !dbg !55
  %3556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i658, float %2821, float %2821) #5, !dbg !55
  %3557 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i658, float %2821, float %2821) #5, !dbg !55
  %.02.i660 = select i1 %.not5.i659, float %3557, float %3556, !dbg !55
  br label %__nv_tanhf.exit661, !dbg !55

__nv_tanhf.exit661:                               ; preds = %__internal_fmad.exit1.i645, %__internal_fmad.exit3.i650
  %s.1.i649 = phi float [ %3541, %__internal_fmad.exit1.i645 ], [ %.02.i660, %__internal_fmad.exit3.i650 ], !dbg !55
  %3558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i662 = icmp eq i32 %3558, 0, !dbg !55
  %3559 = tail call float @llvm.nvvm.fabs.ftz.f(float %2822) #5, !dbg !55
  %3560 = tail call float @llvm.nvvm.fabs.f(float %2822) #5, !dbg !55
  %.01.i663 = select i1 %.not.i662, float %3560, float %3559, !dbg !55
  %3561 = fcmp ult float %.01.i663, 0x3FE3333340000000, !dbg !55
  br i1 %3561, label %__internal_fmad.exit3.i669, label %__internal_fmad.exit1.i664, !dbg !55

__internal_fmad.exit1.i664:                       ; preds = %__nv_tanhf.exit661
  %3562 = fmul float %.01.i663, 0x4007154760000000, !dbg !55
  %3563 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3562) #5, !dbg !55
  %3564 = fadd float %3563, 1.000000e+00, !dbg !55
  %3565 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3564) #6, !dbg !55, !srcloc !56
  %3566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i665 = icmp eq i32 %3566, 0, !dbg !55
  %3567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3565, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3568 = tail call float @llvm.nvvm.fma.rn.f(float %3565, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i666 = select i1 %.not6.i665, float %3568, float %3567, !dbg !55
  %3569 = fcmp oge float %.01.i663, 0x4022059680000000, !dbg !55
  %s.0.i667 = select i1 %3569, float 1.000000e+00, float %.03.i666, !dbg !55
  %3570 = bitcast float %s.0.i667 to i32, !dbg !55
  %3571 = bitcast float %2822 to i32, !dbg !55
  %3572 = and i32 %3571, -2147483648, !dbg !55
  %3573 = or i32 %3572, %3570, !dbg !55
  %3574 = bitcast i32 %3573 to float, !dbg !55
  br label %__nv_tanhf.exit680, !dbg !55

__internal_fmad.exit3.i669:                       ; preds = %__nv_tanhf.exit661
  %3575 = fmul float %2822, %2822, !dbg !55
  %3576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i670 = icmp eq i32 %3576, 0, !dbg !55
  %3577 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3575, float 0xBFAAC795C0000000) #5, !dbg !55
  %3578 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3575, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i671 = select i1 %.not1.i670, float %3578, float %3577, !dbg !55
  %3579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i672 = icmp eq i32 %3579, 0, !dbg !55
  %3580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i671, float %3575, float 0x3FC10B2820000000) #5, !dbg !55
  %3581 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i671, float %3575, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i673 = select i1 %.not2.i672, float %3581, float %3580, !dbg !55
  %3582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i674 = icmp eq i32 %3582, 0, !dbg !55
  %3583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i673, float %3575, float 0xBFD5553DA0000000) #5, !dbg !55
  %3584 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i673, float %3575, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i675 = select i1 %.not3.i674, float %3584, float %3583, !dbg !55
  %3585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i676 = icmp eq i32 %3585, 0, !dbg !55
  %3586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i675, float %3575, float 0.000000e+00) #5, !dbg !55
  %3587 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i675, float %3575, float 0.000000e+00) #5, !dbg !55
  %.04.i677 = select i1 %.not4.i676, float %3587, float %3586, !dbg !55
  %3588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i678 = icmp eq i32 %3588, 0, !dbg !55
  %3589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i677, float %2822, float %2822) #5, !dbg !55
  %3590 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i677, float %2822, float %2822) #5, !dbg !55
  %.02.i679 = select i1 %.not5.i678, float %3590, float %3589, !dbg !55
  br label %__nv_tanhf.exit680, !dbg !55

__nv_tanhf.exit680:                               ; preds = %__internal_fmad.exit1.i664, %__internal_fmad.exit3.i669
  %s.1.i668 = phi float [ %3574, %__internal_fmad.exit1.i664 ], [ %.02.i679, %__internal_fmad.exit3.i669 ], !dbg !55
  %3591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i681 = icmp eq i32 %3591, 0, !dbg !55
  %3592 = tail call float @llvm.nvvm.fabs.ftz.f(float %2823) #5, !dbg !55
  %3593 = tail call float @llvm.nvvm.fabs.f(float %2823) #5, !dbg !55
  %.01.i682 = select i1 %.not.i681, float %3593, float %3592, !dbg !55
  %3594 = fcmp ult float %.01.i682, 0x3FE3333340000000, !dbg !55
  br i1 %3594, label %__internal_fmad.exit3.i688, label %__internal_fmad.exit1.i683, !dbg !55

__internal_fmad.exit1.i683:                       ; preds = %__nv_tanhf.exit680
  %3595 = fmul float %.01.i682, 0x4007154760000000, !dbg !55
  %3596 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3595) #5, !dbg !55
  %3597 = fadd float %3596, 1.000000e+00, !dbg !55
  %3598 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3597) #6, !dbg !55, !srcloc !56
  %3599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i684 = icmp eq i32 %3599, 0, !dbg !55
  %3600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3598, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3601 = tail call float @llvm.nvvm.fma.rn.f(float %3598, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i685 = select i1 %.not6.i684, float %3601, float %3600, !dbg !55
  %3602 = fcmp oge float %.01.i682, 0x4022059680000000, !dbg !55
  %s.0.i686 = select i1 %3602, float 1.000000e+00, float %.03.i685, !dbg !55
  %3603 = bitcast float %s.0.i686 to i32, !dbg !55
  %3604 = bitcast float %2823 to i32, !dbg !55
  %3605 = and i32 %3604, -2147483648, !dbg !55
  %3606 = or i32 %3605, %3603, !dbg !55
  %3607 = bitcast i32 %3606 to float, !dbg !55
  br label %__nv_tanhf.exit699, !dbg !55

__internal_fmad.exit3.i688:                       ; preds = %__nv_tanhf.exit680
  %3608 = fmul float %2823, %2823, !dbg !55
  %3609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i689 = icmp eq i32 %3609, 0, !dbg !55
  %3610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3608, float 0xBFAAC795C0000000) #5, !dbg !55
  %3611 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3608, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i690 = select i1 %.not1.i689, float %3611, float %3610, !dbg !55
  %3612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i691 = icmp eq i32 %3612, 0, !dbg !55
  %3613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i690, float %3608, float 0x3FC10B2820000000) #5, !dbg !55
  %3614 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i690, float %3608, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i692 = select i1 %.not2.i691, float %3614, float %3613, !dbg !55
  %3615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i693 = icmp eq i32 %3615, 0, !dbg !55
  %3616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i692, float %3608, float 0xBFD5553DA0000000) #5, !dbg !55
  %3617 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i692, float %3608, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i694 = select i1 %.not3.i693, float %3617, float %3616, !dbg !55
  %3618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i695 = icmp eq i32 %3618, 0, !dbg !55
  %3619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i694, float %3608, float 0.000000e+00) #5, !dbg !55
  %3620 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i694, float %3608, float 0.000000e+00) #5, !dbg !55
  %.04.i696 = select i1 %.not4.i695, float %3620, float %3619, !dbg !55
  %3621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i697 = icmp eq i32 %3621, 0, !dbg !55
  %3622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i696, float %2823, float %2823) #5, !dbg !55
  %3623 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i696, float %2823, float %2823) #5, !dbg !55
  %.02.i698 = select i1 %.not5.i697, float %3623, float %3622, !dbg !55
  br label %__nv_tanhf.exit699, !dbg !55

__nv_tanhf.exit699:                               ; preds = %__internal_fmad.exit1.i683, %__internal_fmad.exit3.i688
  %s.1.i687 = phi float [ %3607, %__internal_fmad.exit1.i683 ], [ %.02.i698, %__internal_fmad.exit3.i688 ], !dbg !55
  %3624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i700 = icmp eq i32 %3624, 0, !dbg !55
  %3625 = tail call float @llvm.nvvm.fabs.ftz.f(float %2824) #5, !dbg !55
  %3626 = tail call float @llvm.nvvm.fabs.f(float %2824) #5, !dbg !55
  %.01.i701 = select i1 %.not.i700, float %3626, float %3625, !dbg !55
  %3627 = fcmp ult float %.01.i701, 0x3FE3333340000000, !dbg !55
  br i1 %3627, label %__internal_fmad.exit3.i707, label %__internal_fmad.exit1.i702, !dbg !55

__internal_fmad.exit1.i702:                       ; preds = %__nv_tanhf.exit699
  %3628 = fmul float %.01.i701, 0x4007154760000000, !dbg !55
  %3629 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3628) #5, !dbg !55
  %3630 = fadd float %3629, 1.000000e+00, !dbg !55
  %3631 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3630) #6, !dbg !55, !srcloc !56
  %3632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i703 = icmp eq i32 %3632, 0, !dbg !55
  %3633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3631, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3634 = tail call float @llvm.nvvm.fma.rn.f(float %3631, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i704 = select i1 %.not6.i703, float %3634, float %3633, !dbg !55
  %3635 = fcmp oge float %.01.i701, 0x4022059680000000, !dbg !55
  %s.0.i705 = select i1 %3635, float 1.000000e+00, float %.03.i704, !dbg !55
  %3636 = bitcast float %s.0.i705 to i32, !dbg !55
  %3637 = bitcast float %2824 to i32, !dbg !55
  %3638 = and i32 %3637, -2147483648, !dbg !55
  %3639 = or i32 %3638, %3636, !dbg !55
  %3640 = bitcast i32 %3639 to float, !dbg !55
  br label %__nv_tanhf.exit718, !dbg !55

__internal_fmad.exit3.i707:                       ; preds = %__nv_tanhf.exit699
  %3641 = fmul float %2824, %2824, !dbg !55
  %3642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i708 = icmp eq i32 %3642, 0, !dbg !55
  %3643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3641, float 0xBFAAC795C0000000) #5, !dbg !55
  %3644 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3641, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i709 = select i1 %.not1.i708, float %3644, float %3643, !dbg !55
  %3645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i710 = icmp eq i32 %3645, 0, !dbg !55
  %3646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i709, float %3641, float 0x3FC10B2820000000) #5, !dbg !55
  %3647 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i709, float %3641, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i711 = select i1 %.not2.i710, float %3647, float %3646, !dbg !55
  %3648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i712 = icmp eq i32 %3648, 0, !dbg !55
  %3649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i711, float %3641, float 0xBFD5553DA0000000) #5, !dbg !55
  %3650 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i711, float %3641, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i713 = select i1 %.not3.i712, float %3650, float %3649, !dbg !55
  %3651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i714 = icmp eq i32 %3651, 0, !dbg !55
  %3652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i713, float %3641, float 0.000000e+00) #5, !dbg !55
  %3653 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i713, float %3641, float 0.000000e+00) #5, !dbg !55
  %.04.i715 = select i1 %.not4.i714, float %3653, float %3652, !dbg !55
  %3654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i716 = icmp eq i32 %3654, 0, !dbg !55
  %3655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i715, float %2824, float %2824) #5, !dbg !55
  %3656 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i715, float %2824, float %2824) #5, !dbg !55
  %.02.i717 = select i1 %.not5.i716, float %3656, float %3655, !dbg !55
  br label %__nv_tanhf.exit718, !dbg !55

__nv_tanhf.exit718:                               ; preds = %__internal_fmad.exit1.i702, %__internal_fmad.exit3.i707
  %s.1.i706 = phi float [ %3640, %__internal_fmad.exit1.i702 ], [ %.02.i717, %__internal_fmad.exit3.i707 ], !dbg !55
  %3657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i719 = icmp eq i32 %3657, 0, !dbg !55
  %3658 = tail call float @llvm.nvvm.fabs.ftz.f(float %2825) #5, !dbg !55
  %3659 = tail call float @llvm.nvvm.fabs.f(float %2825) #5, !dbg !55
  %.01.i720 = select i1 %.not.i719, float %3659, float %3658, !dbg !55
  %3660 = fcmp ult float %.01.i720, 0x3FE3333340000000, !dbg !55
  br i1 %3660, label %__internal_fmad.exit3.i726, label %__internal_fmad.exit1.i721, !dbg !55

__internal_fmad.exit1.i721:                       ; preds = %__nv_tanhf.exit718
  %3661 = fmul float %.01.i720, 0x4007154760000000, !dbg !55
  %3662 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3661) #5, !dbg !55
  %3663 = fadd float %3662, 1.000000e+00, !dbg !55
  %3664 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3663) #6, !dbg !55, !srcloc !56
  %3665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i722 = icmp eq i32 %3665, 0, !dbg !55
  %3666 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3664, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3667 = tail call float @llvm.nvvm.fma.rn.f(float %3664, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i723 = select i1 %.not6.i722, float %3667, float %3666, !dbg !55
  %3668 = fcmp oge float %.01.i720, 0x4022059680000000, !dbg !55
  %s.0.i724 = select i1 %3668, float 1.000000e+00, float %.03.i723, !dbg !55
  %3669 = bitcast float %s.0.i724 to i32, !dbg !55
  %3670 = bitcast float %2825 to i32, !dbg !55
  %3671 = and i32 %3670, -2147483648, !dbg !55
  %3672 = or i32 %3671, %3669, !dbg !55
  %3673 = bitcast i32 %3672 to float, !dbg !55
  br label %__nv_tanhf.exit737, !dbg !55

__internal_fmad.exit3.i726:                       ; preds = %__nv_tanhf.exit718
  %3674 = fmul float %2825, %2825, !dbg !55
  %3675 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i727 = icmp eq i32 %3675, 0, !dbg !55
  %3676 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3674, float 0xBFAAC795C0000000) #5, !dbg !55
  %3677 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3674, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i728 = select i1 %.not1.i727, float %3677, float %3676, !dbg !55
  %3678 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i729 = icmp eq i32 %3678, 0, !dbg !55
  %3679 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i728, float %3674, float 0x3FC10B2820000000) #5, !dbg !55
  %3680 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i728, float %3674, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i730 = select i1 %.not2.i729, float %3680, float %3679, !dbg !55
  %3681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i731 = icmp eq i32 %3681, 0, !dbg !55
  %3682 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i730, float %3674, float 0xBFD5553DA0000000) #5, !dbg !55
  %3683 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i730, float %3674, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i732 = select i1 %.not3.i731, float %3683, float %3682, !dbg !55
  %3684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i733 = icmp eq i32 %3684, 0, !dbg !55
  %3685 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i732, float %3674, float 0.000000e+00) #5, !dbg !55
  %3686 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i732, float %3674, float 0.000000e+00) #5, !dbg !55
  %.04.i734 = select i1 %.not4.i733, float %3686, float %3685, !dbg !55
  %3687 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i735 = icmp eq i32 %3687, 0, !dbg !55
  %3688 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i734, float %2825, float %2825) #5, !dbg !55
  %3689 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i734, float %2825, float %2825) #5, !dbg !55
  %.02.i736 = select i1 %.not5.i735, float %3689, float %3688, !dbg !55
  br label %__nv_tanhf.exit737, !dbg !55

__nv_tanhf.exit737:                               ; preds = %__internal_fmad.exit1.i721, %__internal_fmad.exit3.i726
  %s.1.i725 = phi float [ %3673, %__internal_fmad.exit1.i721 ], [ %.02.i736, %__internal_fmad.exit3.i726 ], !dbg !55
  %3690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i738 = icmp eq i32 %3690, 0, !dbg !55
  %3691 = tail call float @llvm.nvvm.fabs.ftz.f(float %2826) #5, !dbg !55
  %3692 = tail call float @llvm.nvvm.fabs.f(float %2826) #5, !dbg !55
  %.01.i739 = select i1 %.not.i738, float %3692, float %3691, !dbg !55
  %3693 = fcmp ult float %.01.i739, 0x3FE3333340000000, !dbg !55
  br i1 %3693, label %__internal_fmad.exit3.i745, label %__internal_fmad.exit1.i740, !dbg !55

__internal_fmad.exit1.i740:                       ; preds = %__nv_tanhf.exit737
  %3694 = fmul float %.01.i739, 0x4007154760000000, !dbg !55
  %3695 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3694) #5, !dbg !55
  %3696 = fadd float %3695, 1.000000e+00, !dbg !55
  %3697 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3696) #6, !dbg !55, !srcloc !56
  %3698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i741 = icmp eq i32 %3698, 0, !dbg !55
  %3699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3697, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3700 = tail call float @llvm.nvvm.fma.rn.f(float %3697, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i742 = select i1 %.not6.i741, float %3700, float %3699, !dbg !55
  %3701 = fcmp oge float %.01.i739, 0x4022059680000000, !dbg !55
  %s.0.i743 = select i1 %3701, float 1.000000e+00, float %.03.i742, !dbg !55
  %3702 = bitcast float %s.0.i743 to i32, !dbg !55
  %3703 = bitcast float %2826 to i32, !dbg !55
  %3704 = and i32 %3703, -2147483648, !dbg !55
  %3705 = or i32 %3704, %3702, !dbg !55
  %3706 = bitcast i32 %3705 to float, !dbg !55
  br label %__nv_tanhf.exit756, !dbg !55

__internal_fmad.exit3.i745:                       ; preds = %__nv_tanhf.exit737
  %3707 = fmul float %2826, %2826, !dbg !55
  %3708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i746 = icmp eq i32 %3708, 0, !dbg !55
  %3709 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3707, float 0xBFAAC795C0000000) #5, !dbg !55
  %3710 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3707, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i747 = select i1 %.not1.i746, float %3710, float %3709, !dbg !55
  %3711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i748 = icmp eq i32 %3711, 0, !dbg !55
  %3712 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i747, float %3707, float 0x3FC10B2820000000) #5, !dbg !55
  %3713 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i747, float %3707, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i749 = select i1 %.not2.i748, float %3713, float %3712, !dbg !55
  %3714 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i750 = icmp eq i32 %3714, 0, !dbg !55
  %3715 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i749, float %3707, float 0xBFD5553DA0000000) #5, !dbg !55
  %3716 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i749, float %3707, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i751 = select i1 %.not3.i750, float %3716, float %3715, !dbg !55
  %3717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i752 = icmp eq i32 %3717, 0, !dbg !55
  %3718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i751, float %3707, float 0.000000e+00) #5, !dbg !55
  %3719 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i751, float %3707, float 0.000000e+00) #5, !dbg !55
  %.04.i753 = select i1 %.not4.i752, float %3719, float %3718, !dbg !55
  %3720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i754 = icmp eq i32 %3720, 0, !dbg !55
  %3721 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i753, float %2826, float %2826) #5, !dbg !55
  %3722 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i753, float %2826, float %2826) #5, !dbg !55
  %.02.i755 = select i1 %.not5.i754, float %3722, float %3721, !dbg !55
  br label %__nv_tanhf.exit756, !dbg !55

__nv_tanhf.exit756:                               ; preds = %__internal_fmad.exit1.i740, %__internal_fmad.exit3.i745
  %s.1.i744 = phi float [ %3706, %__internal_fmad.exit1.i740 ], [ %.02.i755, %__internal_fmad.exit3.i745 ], !dbg !55
  %3723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i757 = icmp eq i32 %3723, 0, !dbg !55
  %3724 = tail call float @llvm.nvvm.fabs.ftz.f(float %2827) #5, !dbg !55
  %3725 = tail call float @llvm.nvvm.fabs.f(float %2827) #5, !dbg !55
  %.01.i758 = select i1 %.not.i757, float %3725, float %3724, !dbg !55
  %3726 = fcmp ult float %.01.i758, 0x3FE3333340000000, !dbg !55
  br i1 %3726, label %__internal_fmad.exit3.i764, label %__internal_fmad.exit1.i759, !dbg !55

__internal_fmad.exit1.i759:                       ; preds = %__nv_tanhf.exit756
  %3727 = fmul float %.01.i758, 0x4007154760000000, !dbg !55
  %3728 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3727) #5, !dbg !55
  %3729 = fadd float %3728, 1.000000e+00, !dbg !55
  %3730 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3729) #6, !dbg !55, !srcloc !56
  %3731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i760 = icmp eq i32 %3731, 0, !dbg !55
  %3732 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3730, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3733 = tail call float @llvm.nvvm.fma.rn.f(float %3730, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i761 = select i1 %.not6.i760, float %3733, float %3732, !dbg !55
  %3734 = fcmp oge float %.01.i758, 0x4022059680000000, !dbg !55
  %s.0.i762 = select i1 %3734, float 1.000000e+00, float %.03.i761, !dbg !55
  %3735 = bitcast float %s.0.i762 to i32, !dbg !55
  %3736 = bitcast float %2827 to i32, !dbg !55
  %3737 = and i32 %3736, -2147483648, !dbg !55
  %3738 = or i32 %3737, %3735, !dbg !55
  %3739 = bitcast i32 %3738 to float, !dbg !55
  br label %__nv_tanhf.exit775, !dbg !55

__internal_fmad.exit3.i764:                       ; preds = %__nv_tanhf.exit756
  %3740 = fmul float %2827, %2827, !dbg !55
  %3741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i765 = icmp eq i32 %3741, 0, !dbg !55
  %3742 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3740, float 0xBFAAC795C0000000) #5, !dbg !55
  %3743 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3740, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i766 = select i1 %.not1.i765, float %3743, float %3742, !dbg !55
  %3744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i767 = icmp eq i32 %3744, 0, !dbg !55
  %3745 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i766, float %3740, float 0x3FC10B2820000000) #5, !dbg !55
  %3746 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i766, float %3740, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i768 = select i1 %.not2.i767, float %3746, float %3745, !dbg !55
  %3747 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i769 = icmp eq i32 %3747, 0, !dbg !55
  %3748 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i768, float %3740, float 0xBFD5553DA0000000) #5, !dbg !55
  %3749 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i768, float %3740, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i770 = select i1 %.not3.i769, float %3749, float %3748, !dbg !55
  %3750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i771 = icmp eq i32 %3750, 0, !dbg !55
  %3751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i770, float %3740, float 0.000000e+00) #5, !dbg !55
  %3752 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i770, float %3740, float 0.000000e+00) #5, !dbg !55
  %.04.i772 = select i1 %.not4.i771, float %3752, float %3751, !dbg !55
  %3753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i773 = icmp eq i32 %3753, 0, !dbg !55
  %3754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i772, float %2827, float %2827) #5, !dbg !55
  %3755 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i772, float %2827, float %2827) #5, !dbg !55
  %.02.i774 = select i1 %.not5.i773, float %3755, float %3754, !dbg !55
  br label %__nv_tanhf.exit775, !dbg !55

__nv_tanhf.exit775:                               ; preds = %__internal_fmad.exit1.i759, %__internal_fmad.exit3.i764
  %s.1.i763 = phi float [ %3739, %__internal_fmad.exit1.i759 ], [ %.02.i774, %__internal_fmad.exit3.i764 ], !dbg !55
  %3756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i776 = icmp eq i32 %3756, 0, !dbg !55
  %3757 = tail call float @llvm.nvvm.fabs.ftz.f(float %2828) #5, !dbg !55
  %3758 = tail call float @llvm.nvvm.fabs.f(float %2828) #5, !dbg !55
  %.01.i777 = select i1 %.not.i776, float %3758, float %3757, !dbg !55
  %3759 = fcmp ult float %.01.i777, 0x3FE3333340000000, !dbg !55
  br i1 %3759, label %__internal_fmad.exit3.i783, label %__internal_fmad.exit1.i778, !dbg !55

__internal_fmad.exit1.i778:                       ; preds = %__nv_tanhf.exit775
  %3760 = fmul float %.01.i777, 0x4007154760000000, !dbg !55
  %3761 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3760) #5, !dbg !55
  %3762 = fadd float %3761, 1.000000e+00, !dbg !55
  %3763 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3762) #6, !dbg !55, !srcloc !56
  %3764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i779 = icmp eq i32 %3764, 0, !dbg !55
  %3765 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3763, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3766 = tail call float @llvm.nvvm.fma.rn.f(float %3763, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i780 = select i1 %.not6.i779, float %3766, float %3765, !dbg !55
  %3767 = fcmp oge float %.01.i777, 0x4022059680000000, !dbg !55
  %s.0.i781 = select i1 %3767, float 1.000000e+00, float %.03.i780, !dbg !55
  %3768 = bitcast float %s.0.i781 to i32, !dbg !55
  %3769 = bitcast float %2828 to i32, !dbg !55
  %3770 = and i32 %3769, -2147483648, !dbg !55
  %3771 = or i32 %3770, %3768, !dbg !55
  %3772 = bitcast i32 %3771 to float, !dbg !55
  br label %__nv_tanhf.exit794, !dbg !55

__internal_fmad.exit3.i783:                       ; preds = %__nv_tanhf.exit775
  %3773 = fmul float %2828, %2828, !dbg !55
  %3774 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i784 = icmp eq i32 %3774, 0, !dbg !55
  %3775 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3773, float 0xBFAAC795C0000000) #5, !dbg !55
  %3776 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3773, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i785 = select i1 %.not1.i784, float %3776, float %3775, !dbg !55
  %3777 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i786 = icmp eq i32 %3777, 0, !dbg !55
  %3778 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i785, float %3773, float 0x3FC10B2820000000) #5, !dbg !55
  %3779 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i785, float %3773, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i787 = select i1 %.not2.i786, float %3779, float %3778, !dbg !55
  %3780 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i788 = icmp eq i32 %3780, 0, !dbg !55
  %3781 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i787, float %3773, float 0xBFD5553DA0000000) #5, !dbg !55
  %3782 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i787, float %3773, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i789 = select i1 %.not3.i788, float %3782, float %3781, !dbg !55
  %3783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i790 = icmp eq i32 %3783, 0, !dbg !55
  %3784 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i789, float %3773, float 0.000000e+00) #5, !dbg !55
  %3785 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i789, float %3773, float 0.000000e+00) #5, !dbg !55
  %.04.i791 = select i1 %.not4.i790, float %3785, float %3784, !dbg !55
  %3786 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i792 = icmp eq i32 %3786, 0, !dbg !55
  %3787 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i791, float %2828, float %2828) #5, !dbg !55
  %3788 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i791, float %2828, float %2828) #5, !dbg !55
  %.02.i793 = select i1 %.not5.i792, float %3788, float %3787, !dbg !55
  br label %__nv_tanhf.exit794, !dbg !55

__nv_tanhf.exit794:                               ; preds = %__internal_fmad.exit1.i778, %__internal_fmad.exit3.i783
  %s.1.i782 = phi float [ %3772, %__internal_fmad.exit1.i778 ], [ %.02.i793, %__internal_fmad.exit3.i783 ], !dbg !55
  %3789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i795 = icmp eq i32 %3789, 0, !dbg !55
  %3790 = tail call float @llvm.nvvm.fabs.ftz.f(float %2829) #5, !dbg !55
  %3791 = tail call float @llvm.nvvm.fabs.f(float %2829) #5, !dbg !55
  %.01.i796 = select i1 %.not.i795, float %3791, float %3790, !dbg !55
  %3792 = fcmp ult float %.01.i796, 0x3FE3333340000000, !dbg !55
  br i1 %3792, label %__internal_fmad.exit3.i802, label %__internal_fmad.exit1.i797, !dbg !55

__internal_fmad.exit1.i797:                       ; preds = %__nv_tanhf.exit794
  %3793 = fmul float %.01.i796, 0x4007154760000000, !dbg !55
  %3794 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3793) #5, !dbg !55
  %3795 = fadd float %3794, 1.000000e+00, !dbg !55
  %3796 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3795) #6, !dbg !55, !srcloc !56
  %3797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i798 = icmp eq i32 %3797, 0, !dbg !55
  %3798 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3796, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3799 = tail call float @llvm.nvvm.fma.rn.f(float %3796, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i799 = select i1 %.not6.i798, float %3799, float %3798, !dbg !55
  %3800 = fcmp oge float %.01.i796, 0x4022059680000000, !dbg !55
  %s.0.i800 = select i1 %3800, float 1.000000e+00, float %.03.i799, !dbg !55
  %3801 = bitcast float %s.0.i800 to i32, !dbg !55
  %3802 = bitcast float %2829 to i32, !dbg !55
  %3803 = and i32 %3802, -2147483648, !dbg !55
  %3804 = or i32 %3803, %3801, !dbg !55
  %3805 = bitcast i32 %3804 to float, !dbg !55
  br label %__nv_tanhf.exit813, !dbg !55

__internal_fmad.exit3.i802:                       ; preds = %__nv_tanhf.exit794
  %3806 = fmul float %2829, %2829, !dbg !55
  %3807 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i803 = icmp eq i32 %3807, 0, !dbg !55
  %3808 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3806, float 0xBFAAC795C0000000) #5, !dbg !55
  %3809 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3806, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i804 = select i1 %.not1.i803, float %3809, float %3808, !dbg !55
  %3810 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i805 = icmp eq i32 %3810, 0, !dbg !55
  %3811 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i804, float %3806, float 0x3FC10B2820000000) #5, !dbg !55
  %3812 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i804, float %3806, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i806 = select i1 %.not2.i805, float %3812, float %3811, !dbg !55
  %3813 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i807 = icmp eq i32 %3813, 0, !dbg !55
  %3814 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i806, float %3806, float 0xBFD5553DA0000000) #5, !dbg !55
  %3815 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i806, float %3806, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i808 = select i1 %.not3.i807, float %3815, float %3814, !dbg !55
  %3816 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i809 = icmp eq i32 %3816, 0, !dbg !55
  %3817 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i808, float %3806, float 0.000000e+00) #5, !dbg !55
  %3818 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i808, float %3806, float 0.000000e+00) #5, !dbg !55
  %.04.i810 = select i1 %.not4.i809, float %3818, float %3817, !dbg !55
  %3819 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i811 = icmp eq i32 %3819, 0, !dbg !55
  %3820 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i810, float %2829, float %2829) #5, !dbg !55
  %3821 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i810, float %2829, float %2829) #5, !dbg !55
  %.02.i812 = select i1 %.not5.i811, float %3821, float %3820, !dbg !55
  br label %__nv_tanhf.exit813, !dbg !55

__nv_tanhf.exit813:                               ; preds = %__internal_fmad.exit1.i797, %__internal_fmad.exit3.i802
  %s.1.i801 = phi float [ %3805, %__internal_fmad.exit1.i797 ], [ %.02.i812, %__internal_fmad.exit3.i802 ], !dbg !55
  %3822 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i814 = icmp eq i32 %3822, 0, !dbg !55
  %3823 = tail call float @llvm.nvvm.fabs.ftz.f(float %2830) #5, !dbg !55
  %3824 = tail call float @llvm.nvvm.fabs.f(float %2830) #5, !dbg !55
  %.01.i815 = select i1 %.not.i814, float %3824, float %3823, !dbg !55
  %3825 = fcmp ult float %.01.i815, 0x3FE3333340000000, !dbg !55
  br i1 %3825, label %__internal_fmad.exit3.i821, label %__internal_fmad.exit1.i816, !dbg !55

__internal_fmad.exit1.i816:                       ; preds = %__nv_tanhf.exit813
  %3826 = fmul float %.01.i815, 0x4007154760000000, !dbg !55
  %3827 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3826) #5, !dbg !55
  %3828 = fadd float %3827, 1.000000e+00, !dbg !55
  %3829 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3828) #6, !dbg !55, !srcloc !56
  %3830 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i817 = icmp eq i32 %3830, 0, !dbg !55
  %3831 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3829, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3832 = tail call float @llvm.nvvm.fma.rn.f(float %3829, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i818 = select i1 %.not6.i817, float %3832, float %3831, !dbg !55
  %3833 = fcmp oge float %.01.i815, 0x4022059680000000, !dbg !55
  %s.0.i819 = select i1 %3833, float 1.000000e+00, float %.03.i818, !dbg !55
  %3834 = bitcast float %s.0.i819 to i32, !dbg !55
  %3835 = bitcast float %2830 to i32, !dbg !55
  %3836 = and i32 %3835, -2147483648, !dbg !55
  %3837 = or i32 %3836, %3834, !dbg !55
  %3838 = bitcast i32 %3837 to float, !dbg !55
  br label %__nv_tanhf.exit832, !dbg !55

__internal_fmad.exit3.i821:                       ; preds = %__nv_tanhf.exit813
  %3839 = fmul float %2830, %2830, !dbg !55
  %3840 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i822 = icmp eq i32 %3840, 0, !dbg !55
  %3841 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3839, float 0xBFAAC795C0000000) #5, !dbg !55
  %3842 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3839, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i823 = select i1 %.not1.i822, float %3842, float %3841, !dbg !55
  %3843 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i824 = icmp eq i32 %3843, 0, !dbg !55
  %3844 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i823, float %3839, float 0x3FC10B2820000000) #5, !dbg !55
  %3845 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i823, float %3839, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i825 = select i1 %.not2.i824, float %3845, float %3844, !dbg !55
  %3846 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i826 = icmp eq i32 %3846, 0, !dbg !55
  %3847 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i825, float %3839, float 0xBFD5553DA0000000) #5, !dbg !55
  %3848 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i825, float %3839, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i827 = select i1 %.not3.i826, float %3848, float %3847, !dbg !55
  %3849 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i828 = icmp eq i32 %3849, 0, !dbg !55
  %3850 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i827, float %3839, float 0.000000e+00) #5, !dbg !55
  %3851 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i827, float %3839, float 0.000000e+00) #5, !dbg !55
  %.04.i829 = select i1 %.not4.i828, float %3851, float %3850, !dbg !55
  %3852 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i830 = icmp eq i32 %3852, 0, !dbg !55
  %3853 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i829, float %2830, float %2830) #5, !dbg !55
  %3854 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i829, float %2830, float %2830) #5, !dbg !55
  %.02.i831 = select i1 %.not5.i830, float %3854, float %3853, !dbg !55
  br label %__nv_tanhf.exit832, !dbg !55

__nv_tanhf.exit832:                               ; preds = %__internal_fmad.exit1.i816, %__internal_fmad.exit3.i821
  %s.1.i820 = phi float [ %3838, %__internal_fmad.exit1.i816 ], [ %.02.i831, %__internal_fmad.exit3.i821 ], !dbg !55
  %3855 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i833 = icmp eq i32 %3855, 0, !dbg !55
  %3856 = tail call float @llvm.nvvm.fabs.ftz.f(float %2831) #5, !dbg !55
  %3857 = tail call float @llvm.nvvm.fabs.f(float %2831) #5, !dbg !55
  %.01.i834 = select i1 %.not.i833, float %3857, float %3856, !dbg !55
  %3858 = fcmp ult float %.01.i834, 0x3FE3333340000000, !dbg !55
  br i1 %3858, label %__internal_fmad.exit3.i840, label %__internal_fmad.exit1.i835, !dbg !55

__internal_fmad.exit1.i835:                       ; preds = %__nv_tanhf.exit832
  %3859 = fmul float %.01.i834, 0x4007154760000000, !dbg !55
  %3860 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3859) #5, !dbg !55
  %3861 = fadd float %3860, 1.000000e+00, !dbg !55
  %3862 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3861) #6, !dbg !55, !srcloc !56
  %3863 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i836 = icmp eq i32 %3863, 0, !dbg !55
  %3864 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3862, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3865 = tail call float @llvm.nvvm.fma.rn.f(float %3862, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i837 = select i1 %.not6.i836, float %3865, float %3864, !dbg !55
  %3866 = fcmp oge float %.01.i834, 0x4022059680000000, !dbg !55
  %s.0.i838 = select i1 %3866, float 1.000000e+00, float %.03.i837, !dbg !55
  %3867 = bitcast float %s.0.i838 to i32, !dbg !55
  %3868 = bitcast float %2831 to i32, !dbg !55
  %3869 = and i32 %3868, -2147483648, !dbg !55
  %3870 = or i32 %3869, %3867, !dbg !55
  %3871 = bitcast i32 %3870 to float, !dbg !55
  br label %__nv_tanhf.exit851, !dbg !55

__internal_fmad.exit3.i840:                       ; preds = %__nv_tanhf.exit832
  %3872 = fmul float %2831, %2831, !dbg !55
  %3873 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i841 = icmp eq i32 %3873, 0, !dbg !55
  %3874 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3872, float 0xBFAAC795C0000000) #5, !dbg !55
  %3875 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3872, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i842 = select i1 %.not1.i841, float %3875, float %3874, !dbg !55
  %3876 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i843 = icmp eq i32 %3876, 0, !dbg !55
  %3877 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i842, float %3872, float 0x3FC10B2820000000) #5, !dbg !55
  %3878 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i842, float %3872, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i844 = select i1 %.not2.i843, float %3878, float %3877, !dbg !55
  %3879 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i845 = icmp eq i32 %3879, 0, !dbg !55
  %3880 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i844, float %3872, float 0xBFD5553DA0000000) #5, !dbg !55
  %3881 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i844, float %3872, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i846 = select i1 %.not3.i845, float %3881, float %3880, !dbg !55
  %3882 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i847 = icmp eq i32 %3882, 0, !dbg !55
  %3883 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i846, float %3872, float 0.000000e+00) #5, !dbg !55
  %3884 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i846, float %3872, float 0.000000e+00) #5, !dbg !55
  %.04.i848 = select i1 %.not4.i847, float %3884, float %3883, !dbg !55
  %3885 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i849 = icmp eq i32 %3885, 0, !dbg !55
  %3886 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i848, float %2831, float %2831) #5, !dbg !55
  %3887 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i848, float %2831, float %2831) #5, !dbg !55
  %.02.i850 = select i1 %.not5.i849, float %3887, float %3886, !dbg !55
  br label %__nv_tanhf.exit851, !dbg !55

__nv_tanhf.exit851:                               ; preds = %__internal_fmad.exit1.i835, %__internal_fmad.exit3.i840
  %s.1.i839 = phi float [ %3871, %__internal_fmad.exit1.i835 ], [ %.02.i850, %__internal_fmad.exit3.i840 ], !dbg !55
  %3888 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i852 = icmp eq i32 %3888, 0, !dbg !55
  %3889 = tail call float @llvm.nvvm.fabs.ftz.f(float %2832) #5, !dbg !55
  %3890 = tail call float @llvm.nvvm.fabs.f(float %2832) #5, !dbg !55
  %.01.i853 = select i1 %.not.i852, float %3890, float %3889, !dbg !55
  %3891 = fcmp ult float %.01.i853, 0x3FE3333340000000, !dbg !55
  br i1 %3891, label %__internal_fmad.exit3.i859, label %__internal_fmad.exit1.i854, !dbg !55

__internal_fmad.exit1.i854:                       ; preds = %__nv_tanhf.exit851
  %3892 = fmul float %.01.i853, 0x4007154760000000, !dbg !55
  %3893 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3892) #5, !dbg !55
  %3894 = fadd float %3893, 1.000000e+00, !dbg !55
  %3895 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3894) #6, !dbg !55, !srcloc !56
  %3896 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i855 = icmp eq i32 %3896, 0, !dbg !55
  %3897 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3895, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3898 = tail call float @llvm.nvvm.fma.rn.f(float %3895, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i856 = select i1 %.not6.i855, float %3898, float %3897, !dbg !55
  %3899 = fcmp oge float %.01.i853, 0x4022059680000000, !dbg !55
  %s.0.i857 = select i1 %3899, float 1.000000e+00, float %.03.i856, !dbg !55
  %3900 = bitcast float %s.0.i857 to i32, !dbg !55
  %3901 = bitcast float %2832 to i32, !dbg !55
  %3902 = and i32 %3901, -2147483648, !dbg !55
  %3903 = or i32 %3902, %3900, !dbg !55
  %3904 = bitcast i32 %3903 to float, !dbg !55
  br label %__nv_tanhf.exit870, !dbg !55

__internal_fmad.exit3.i859:                       ; preds = %__nv_tanhf.exit851
  %3905 = fmul float %2832, %2832, !dbg !55
  %3906 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i860 = icmp eq i32 %3906, 0, !dbg !55
  %3907 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3905, float 0xBFAAC795C0000000) #5, !dbg !55
  %3908 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3905, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i861 = select i1 %.not1.i860, float %3908, float %3907, !dbg !55
  %3909 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i862 = icmp eq i32 %3909, 0, !dbg !55
  %3910 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i861, float %3905, float 0x3FC10B2820000000) #5, !dbg !55
  %3911 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i861, float %3905, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i863 = select i1 %.not2.i862, float %3911, float %3910, !dbg !55
  %3912 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i864 = icmp eq i32 %3912, 0, !dbg !55
  %3913 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i863, float %3905, float 0xBFD5553DA0000000) #5, !dbg !55
  %3914 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i863, float %3905, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i865 = select i1 %.not3.i864, float %3914, float %3913, !dbg !55
  %3915 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i866 = icmp eq i32 %3915, 0, !dbg !55
  %3916 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i865, float %3905, float 0.000000e+00) #5, !dbg !55
  %3917 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i865, float %3905, float 0.000000e+00) #5, !dbg !55
  %.04.i867 = select i1 %.not4.i866, float %3917, float %3916, !dbg !55
  %3918 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i868 = icmp eq i32 %3918, 0, !dbg !55
  %3919 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i867, float %2832, float %2832) #5, !dbg !55
  %3920 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i867, float %2832, float %2832) #5, !dbg !55
  %.02.i869 = select i1 %.not5.i868, float %3920, float %3919, !dbg !55
  br label %__nv_tanhf.exit870, !dbg !55

__nv_tanhf.exit870:                               ; preds = %__internal_fmad.exit1.i854, %__internal_fmad.exit3.i859
  %s.1.i858 = phi float [ %3904, %__internal_fmad.exit1.i854 ], [ %.02.i869, %__internal_fmad.exit3.i859 ], !dbg !55
  %3921 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i871 = icmp eq i32 %3921, 0, !dbg !55
  %3922 = tail call float @llvm.nvvm.fabs.ftz.f(float %2833) #5, !dbg !55
  %3923 = tail call float @llvm.nvvm.fabs.f(float %2833) #5, !dbg !55
  %.01.i872 = select i1 %.not.i871, float %3923, float %3922, !dbg !55
  %3924 = fcmp ult float %.01.i872, 0x3FE3333340000000, !dbg !55
  br i1 %3924, label %__internal_fmad.exit3.i878, label %__internal_fmad.exit1.i873, !dbg !55

__internal_fmad.exit1.i873:                       ; preds = %__nv_tanhf.exit870
  %3925 = fmul float %.01.i872, 0x4007154760000000, !dbg !55
  %3926 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3925) #5, !dbg !55
  %3927 = fadd float %3926, 1.000000e+00, !dbg !55
  %3928 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3927) #6, !dbg !55, !srcloc !56
  %3929 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i874 = icmp eq i32 %3929, 0, !dbg !55
  %3930 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3928, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3931 = tail call float @llvm.nvvm.fma.rn.f(float %3928, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i875 = select i1 %.not6.i874, float %3931, float %3930, !dbg !55
  %3932 = fcmp oge float %.01.i872, 0x4022059680000000, !dbg !55
  %s.0.i876 = select i1 %3932, float 1.000000e+00, float %.03.i875, !dbg !55
  %3933 = bitcast float %s.0.i876 to i32, !dbg !55
  %3934 = bitcast float %2833 to i32, !dbg !55
  %3935 = and i32 %3934, -2147483648, !dbg !55
  %3936 = or i32 %3935, %3933, !dbg !55
  %3937 = bitcast i32 %3936 to float, !dbg !55
  br label %__nv_tanhf.exit889, !dbg !55

__internal_fmad.exit3.i878:                       ; preds = %__nv_tanhf.exit870
  %3938 = fmul float %2833, %2833, !dbg !55
  %3939 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i879 = icmp eq i32 %3939, 0, !dbg !55
  %3940 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3938, float 0xBFAAC795C0000000) #5, !dbg !55
  %3941 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3938, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i880 = select i1 %.not1.i879, float %3941, float %3940, !dbg !55
  %3942 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i881 = icmp eq i32 %3942, 0, !dbg !55
  %3943 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i880, float %3938, float 0x3FC10B2820000000) #5, !dbg !55
  %3944 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i880, float %3938, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i882 = select i1 %.not2.i881, float %3944, float %3943, !dbg !55
  %3945 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i883 = icmp eq i32 %3945, 0, !dbg !55
  %3946 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i882, float %3938, float 0xBFD5553DA0000000) #5, !dbg !55
  %3947 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i882, float %3938, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i884 = select i1 %.not3.i883, float %3947, float %3946, !dbg !55
  %3948 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i885 = icmp eq i32 %3948, 0, !dbg !55
  %3949 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i884, float %3938, float 0.000000e+00) #5, !dbg !55
  %3950 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i884, float %3938, float 0.000000e+00) #5, !dbg !55
  %.04.i886 = select i1 %.not4.i885, float %3950, float %3949, !dbg !55
  %3951 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i887 = icmp eq i32 %3951, 0, !dbg !55
  %3952 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i886, float %2833, float %2833) #5, !dbg !55
  %3953 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i886, float %2833, float %2833) #5, !dbg !55
  %.02.i888 = select i1 %.not5.i887, float %3953, float %3952, !dbg !55
  br label %__nv_tanhf.exit889, !dbg !55

__nv_tanhf.exit889:                               ; preds = %__internal_fmad.exit1.i873, %__internal_fmad.exit3.i878
  %s.1.i877 = phi float [ %3937, %__internal_fmad.exit1.i873 ], [ %.02.i888, %__internal_fmad.exit3.i878 ], !dbg !55
  %3954 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i890 = icmp eq i32 %3954, 0, !dbg !55
  %3955 = tail call float @llvm.nvvm.fabs.ftz.f(float %2834) #5, !dbg !55
  %3956 = tail call float @llvm.nvvm.fabs.f(float %2834) #5, !dbg !55
  %.01.i891 = select i1 %.not.i890, float %3956, float %3955, !dbg !55
  %3957 = fcmp ult float %.01.i891, 0x3FE3333340000000, !dbg !55
  br i1 %3957, label %__internal_fmad.exit3.i897, label %__internal_fmad.exit1.i892, !dbg !55

__internal_fmad.exit1.i892:                       ; preds = %__nv_tanhf.exit889
  %3958 = fmul float %.01.i891, 0x4007154760000000, !dbg !55
  %3959 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3958) #5, !dbg !55
  %3960 = fadd float %3959, 1.000000e+00, !dbg !55
  %3961 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3960) #6, !dbg !55, !srcloc !56
  %3962 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i893 = icmp eq i32 %3962, 0, !dbg !55
  %3963 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3961, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3964 = tail call float @llvm.nvvm.fma.rn.f(float %3961, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i894 = select i1 %.not6.i893, float %3964, float %3963, !dbg !55
  %3965 = fcmp oge float %.01.i891, 0x4022059680000000, !dbg !55
  %s.0.i895 = select i1 %3965, float 1.000000e+00, float %.03.i894, !dbg !55
  %3966 = bitcast float %s.0.i895 to i32, !dbg !55
  %3967 = bitcast float %2834 to i32, !dbg !55
  %3968 = and i32 %3967, -2147483648, !dbg !55
  %3969 = or i32 %3968, %3966, !dbg !55
  %3970 = bitcast i32 %3969 to float, !dbg !55
  br label %__nv_tanhf.exit908, !dbg !55

__internal_fmad.exit3.i897:                       ; preds = %__nv_tanhf.exit889
  %3971 = fmul float %2834, %2834, !dbg !55
  %3972 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i898 = icmp eq i32 %3972, 0, !dbg !55
  %3973 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3971, float 0xBFAAC795C0000000) #5, !dbg !55
  %3974 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3971, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i899 = select i1 %.not1.i898, float %3974, float %3973, !dbg !55
  %3975 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i900 = icmp eq i32 %3975, 0, !dbg !55
  %3976 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i899, float %3971, float 0x3FC10B2820000000) #5, !dbg !55
  %3977 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i899, float %3971, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i901 = select i1 %.not2.i900, float %3977, float %3976, !dbg !55
  %3978 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i902 = icmp eq i32 %3978, 0, !dbg !55
  %3979 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i901, float %3971, float 0xBFD5553DA0000000) #5, !dbg !55
  %3980 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i901, float %3971, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i903 = select i1 %.not3.i902, float %3980, float %3979, !dbg !55
  %3981 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i904 = icmp eq i32 %3981, 0, !dbg !55
  %3982 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i903, float %3971, float 0.000000e+00) #5, !dbg !55
  %3983 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i903, float %3971, float 0.000000e+00) #5, !dbg !55
  %.04.i905 = select i1 %.not4.i904, float %3983, float %3982, !dbg !55
  %3984 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i906 = icmp eq i32 %3984, 0, !dbg !55
  %3985 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i905, float %2834, float %2834) #5, !dbg !55
  %3986 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i905, float %2834, float %2834) #5, !dbg !55
  %.02.i907 = select i1 %.not5.i906, float %3986, float %3985, !dbg !55
  br label %__nv_tanhf.exit908, !dbg !55

__nv_tanhf.exit908:                               ; preds = %__internal_fmad.exit1.i892, %__internal_fmad.exit3.i897
  %s.1.i896 = phi float [ %3970, %__internal_fmad.exit1.i892 ], [ %.02.i907, %__internal_fmad.exit3.i897 ], !dbg !55
  %3987 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i909 = icmp eq i32 %3987, 0, !dbg !55
  %3988 = tail call float @llvm.nvvm.fabs.ftz.f(float %2835) #5, !dbg !55
  %3989 = tail call float @llvm.nvvm.fabs.f(float %2835) #5, !dbg !55
  %.01.i910 = select i1 %.not.i909, float %3989, float %3988, !dbg !55
  %3990 = fcmp ult float %.01.i910, 0x3FE3333340000000, !dbg !55
  br i1 %3990, label %__internal_fmad.exit3.i916, label %__internal_fmad.exit1.i911, !dbg !55

__internal_fmad.exit1.i911:                       ; preds = %__nv_tanhf.exit908
  %3991 = fmul float %.01.i910, 0x4007154760000000, !dbg !55
  %3992 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3991) #5, !dbg !55
  %3993 = fadd float %3992, 1.000000e+00, !dbg !55
  %3994 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3993) #6, !dbg !55, !srcloc !56
  %3995 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i912 = icmp eq i32 %3995, 0, !dbg !55
  %3996 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3994, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %3997 = tail call float @llvm.nvvm.fma.rn.f(float %3994, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i913 = select i1 %.not6.i912, float %3997, float %3996, !dbg !55
  %3998 = fcmp oge float %.01.i910, 0x4022059680000000, !dbg !55
  %s.0.i914 = select i1 %3998, float 1.000000e+00, float %.03.i913, !dbg !55
  %3999 = bitcast float %s.0.i914 to i32, !dbg !55
  %4000 = bitcast float %2835 to i32, !dbg !55
  %4001 = and i32 %4000, -2147483648, !dbg !55
  %4002 = or i32 %4001, %3999, !dbg !55
  %4003 = bitcast i32 %4002 to float, !dbg !55
  br label %__nv_tanhf.exit927, !dbg !55

__internal_fmad.exit3.i916:                       ; preds = %__nv_tanhf.exit908
  %4004 = fmul float %2835, %2835, !dbg !55
  %4005 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i917 = icmp eq i32 %4005, 0, !dbg !55
  %4006 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4004, float 0xBFAAC795C0000000) #5, !dbg !55
  %4007 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4004, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i918 = select i1 %.not1.i917, float %4007, float %4006, !dbg !55
  %4008 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i919 = icmp eq i32 %4008, 0, !dbg !55
  %4009 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i918, float %4004, float 0x3FC10B2820000000) #5, !dbg !55
  %4010 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i918, float %4004, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i920 = select i1 %.not2.i919, float %4010, float %4009, !dbg !55
  %4011 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i921 = icmp eq i32 %4011, 0, !dbg !55
  %4012 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i920, float %4004, float 0xBFD5553DA0000000) #5, !dbg !55
  %4013 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i920, float %4004, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i922 = select i1 %.not3.i921, float %4013, float %4012, !dbg !55
  %4014 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i923 = icmp eq i32 %4014, 0, !dbg !55
  %4015 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i922, float %4004, float 0.000000e+00) #5, !dbg !55
  %4016 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i922, float %4004, float 0.000000e+00) #5, !dbg !55
  %.04.i924 = select i1 %.not4.i923, float %4016, float %4015, !dbg !55
  %4017 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i925 = icmp eq i32 %4017, 0, !dbg !55
  %4018 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i924, float %2835, float %2835) #5, !dbg !55
  %4019 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i924, float %2835, float %2835) #5, !dbg !55
  %.02.i926 = select i1 %.not5.i925, float %4019, float %4018, !dbg !55
  br label %__nv_tanhf.exit927, !dbg !55

__nv_tanhf.exit927:                               ; preds = %__internal_fmad.exit1.i911, %__internal_fmad.exit3.i916
  %s.1.i915 = phi float [ %4003, %__internal_fmad.exit1.i911 ], [ %.02.i926, %__internal_fmad.exit3.i916 ], !dbg !55
  %4020 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i928 = icmp eq i32 %4020, 0, !dbg !55
  %4021 = tail call float @llvm.nvvm.fabs.ftz.f(float %2836) #5, !dbg !55
  %4022 = tail call float @llvm.nvvm.fabs.f(float %2836) #5, !dbg !55
  %.01.i929 = select i1 %.not.i928, float %4022, float %4021, !dbg !55
  %4023 = fcmp ult float %.01.i929, 0x3FE3333340000000, !dbg !55
  br i1 %4023, label %__internal_fmad.exit3.i935, label %__internal_fmad.exit1.i930, !dbg !55

__internal_fmad.exit1.i930:                       ; preds = %__nv_tanhf.exit927
  %4024 = fmul float %.01.i929, 0x4007154760000000, !dbg !55
  %4025 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4024) #5, !dbg !55
  %4026 = fadd float %4025, 1.000000e+00, !dbg !55
  %4027 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4026) #6, !dbg !55, !srcloc !56
  %4028 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i931 = icmp eq i32 %4028, 0, !dbg !55
  %4029 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4027, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4030 = tail call float @llvm.nvvm.fma.rn.f(float %4027, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i932 = select i1 %.not6.i931, float %4030, float %4029, !dbg !55
  %4031 = fcmp oge float %.01.i929, 0x4022059680000000, !dbg !55
  %s.0.i933 = select i1 %4031, float 1.000000e+00, float %.03.i932, !dbg !55
  %4032 = bitcast float %s.0.i933 to i32, !dbg !55
  %4033 = bitcast float %2836 to i32, !dbg !55
  %4034 = and i32 %4033, -2147483648, !dbg !55
  %4035 = or i32 %4034, %4032, !dbg !55
  %4036 = bitcast i32 %4035 to float, !dbg !55
  br label %__nv_tanhf.exit946, !dbg !55

__internal_fmad.exit3.i935:                       ; preds = %__nv_tanhf.exit927
  %4037 = fmul float %2836, %2836, !dbg !55
  %4038 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i936 = icmp eq i32 %4038, 0, !dbg !55
  %4039 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4037, float 0xBFAAC795C0000000) #5, !dbg !55
  %4040 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4037, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i937 = select i1 %.not1.i936, float %4040, float %4039, !dbg !55
  %4041 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i938 = icmp eq i32 %4041, 0, !dbg !55
  %4042 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i937, float %4037, float 0x3FC10B2820000000) #5, !dbg !55
  %4043 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i937, float %4037, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i939 = select i1 %.not2.i938, float %4043, float %4042, !dbg !55
  %4044 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i940 = icmp eq i32 %4044, 0, !dbg !55
  %4045 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i939, float %4037, float 0xBFD5553DA0000000) #5, !dbg !55
  %4046 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i939, float %4037, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i941 = select i1 %.not3.i940, float %4046, float %4045, !dbg !55
  %4047 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i942 = icmp eq i32 %4047, 0, !dbg !55
  %4048 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i941, float %4037, float 0.000000e+00) #5, !dbg !55
  %4049 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i941, float %4037, float 0.000000e+00) #5, !dbg !55
  %.04.i943 = select i1 %.not4.i942, float %4049, float %4048, !dbg !55
  %4050 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i944 = icmp eq i32 %4050, 0, !dbg !55
  %4051 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i943, float %2836, float %2836) #5, !dbg !55
  %4052 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i943, float %2836, float %2836) #5, !dbg !55
  %.02.i945 = select i1 %.not5.i944, float %4052, float %4051, !dbg !55
  br label %__nv_tanhf.exit946, !dbg !55

__nv_tanhf.exit946:                               ; preds = %__internal_fmad.exit1.i930, %__internal_fmad.exit3.i935
  %s.1.i934 = phi float [ %4036, %__internal_fmad.exit1.i930 ], [ %.02.i945, %__internal_fmad.exit3.i935 ], !dbg !55
  %4053 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i947 = icmp eq i32 %4053, 0, !dbg !55
  %4054 = tail call float @llvm.nvvm.fabs.ftz.f(float %2837) #5, !dbg !55
  %4055 = tail call float @llvm.nvvm.fabs.f(float %2837) #5, !dbg !55
  %.01.i948 = select i1 %.not.i947, float %4055, float %4054, !dbg !55
  %4056 = fcmp ult float %.01.i948, 0x3FE3333340000000, !dbg !55
  br i1 %4056, label %__internal_fmad.exit3.i954, label %__internal_fmad.exit1.i949, !dbg !55

__internal_fmad.exit1.i949:                       ; preds = %__nv_tanhf.exit946
  %4057 = fmul float %.01.i948, 0x4007154760000000, !dbg !55
  %4058 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4057) #5, !dbg !55
  %4059 = fadd float %4058, 1.000000e+00, !dbg !55
  %4060 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4059) #6, !dbg !55, !srcloc !56
  %4061 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i950 = icmp eq i32 %4061, 0, !dbg !55
  %4062 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4060, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4063 = tail call float @llvm.nvvm.fma.rn.f(float %4060, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i951 = select i1 %.not6.i950, float %4063, float %4062, !dbg !55
  %4064 = fcmp oge float %.01.i948, 0x4022059680000000, !dbg !55
  %s.0.i952 = select i1 %4064, float 1.000000e+00, float %.03.i951, !dbg !55
  %4065 = bitcast float %s.0.i952 to i32, !dbg !55
  %4066 = bitcast float %2837 to i32, !dbg !55
  %4067 = and i32 %4066, -2147483648, !dbg !55
  %4068 = or i32 %4067, %4065, !dbg !55
  %4069 = bitcast i32 %4068 to float, !dbg !55
  br label %__nv_tanhf.exit965, !dbg !55

__internal_fmad.exit3.i954:                       ; preds = %__nv_tanhf.exit946
  %4070 = fmul float %2837, %2837, !dbg !55
  %4071 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i955 = icmp eq i32 %4071, 0, !dbg !55
  %4072 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4070, float 0xBFAAC795C0000000) #5, !dbg !55
  %4073 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4070, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i956 = select i1 %.not1.i955, float %4073, float %4072, !dbg !55
  %4074 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i957 = icmp eq i32 %4074, 0, !dbg !55
  %4075 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i956, float %4070, float 0x3FC10B2820000000) #5, !dbg !55
  %4076 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i956, float %4070, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i958 = select i1 %.not2.i957, float %4076, float %4075, !dbg !55
  %4077 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i959 = icmp eq i32 %4077, 0, !dbg !55
  %4078 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i958, float %4070, float 0xBFD5553DA0000000) #5, !dbg !55
  %4079 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i958, float %4070, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i960 = select i1 %.not3.i959, float %4079, float %4078, !dbg !55
  %4080 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i961 = icmp eq i32 %4080, 0, !dbg !55
  %4081 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i960, float %4070, float 0.000000e+00) #5, !dbg !55
  %4082 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i960, float %4070, float 0.000000e+00) #5, !dbg !55
  %.04.i962 = select i1 %.not4.i961, float %4082, float %4081, !dbg !55
  %4083 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i963 = icmp eq i32 %4083, 0, !dbg !55
  %4084 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i962, float %2837, float %2837) #5, !dbg !55
  %4085 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i962, float %2837, float %2837) #5, !dbg !55
  %.02.i964 = select i1 %.not5.i963, float %4085, float %4084, !dbg !55
  br label %__nv_tanhf.exit965, !dbg !55

__nv_tanhf.exit965:                               ; preds = %__internal_fmad.exit1.i949, %__internal_fmad.exit3.i954
  %s.1.i953 = phi float [ %4069, %__internal_fmad.exit1.i949 ], [ %.02.i964, %__internal_fmad.exit3.i954 ], !dbg !55
  %4086 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i966 = icmp eq i32 %4086, 0, !dbg !55
  %4087 = tail call float @llvm.nvvm.fabs.ftz.f(float %2838) #5, !dbg !55
  %4088 = tail call float @llvm.nvvm.fabs.f(float %2838) #5, !dbg !55
  %.01.i967 = select i1 %.not.i966, float %4088, float %4087, !dbg !55
  %4089 = fcmp ult float %.01.i967, 0x3FE3333340000000, !dbg !55
  br i1 %4089, label %__internal_fmad.exit3.i973, label %__internal_fmad.exit1.i968, !dbg !55

__internal_fmad.exit1.i968:                       ; preds = %__nv_tanhf.exit965
  %4090 = fmul float %.01.i967, 0x4007154760000000, !dbg !55
  %4091 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4090) #5, !dbg !55
  %4092 = fadd float %4091, 1.000000e+00, !dbg !55
  %4093 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4092) #6, !dbg !55, !srcloc !56
  %4094 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i969 = icmp eq i32 %4094, 0, !dbg !55
  %4095 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4093, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4096 = tail call float @llvm.nvvm.fma.rn.f(float %4093, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i970 = select i1 %.not6.i969, float %4096, float %4095, !dbg !55
  %4097 = fcmp oge float %.01.i967, 0x4022059680000000, !dbg !55
  %s.0.i971 = select i1 %4097, float 1.000000e+00, float %.03.i970, !dbg !55
  %4098 = bitcast float %s.0.i971 to i32, !dbg !55
  %4099 = bitcast float %2838 to i32, !dbg !55
  %4100 = and i32 %4099, -2147483648, !dbg !55
  %4101 = or i32 %4100, %4098, !dbg !55
  %4102 = bitcast i32 %4101 to float, !dbg !55
  br label %__nv_tanhf.exit984, !dbg !55

__internal_fmad.exit3.i973:                       ; preds = %__nv_tanhf.exit965
  %4103 = fmul float %2838, %2838, !dbg !55
  %4104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i974 = icmp eq i32 %4104, 0, !dbg !55
  %4105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4103, float 0xBFAAC795C0000000) #5, !dbg !55
  %4106 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4103, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i975 = select i1 %.not1.i974, float %4106, float %4105, !dbg !55
  %4107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i976 = icmp eq i32 %4107, 0, !dbg !55
  %4108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i975, float %4103, float 0x3FC10B2820000000) #5, !dbg !55
  %4109 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i975, float %4103, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i977 = select i1 %.not2.i976, float %4109, float %4108, !dbg !55
  %4110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i978 = icmp eq i32 %4110, 0, !dbg !55
  %4111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i977, float %4103, float 0xBFD5553DA0000000) #5, !dbg !55
  %4112 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i977, float %4103, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i979 = select i1 %.not3.i978, float %4112, float %4111, !dbg !55
  %4113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i980 = icmp eq i32 %4113, 0, !dbg !55
  %4114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i979, float %4103, float 0.000000e+00) #5, !dbg !55
  %4115 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i979, float %4103, float 0.000000e+00) #5, !dbg !55
  %.04.i981 = select i1 %.not4.i980, float %4115, float %4114, !dbg !55
  %4116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i982 = icmp eq i32 %4116, 0, !dbg !55
  %4117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i981, float %2838, float %2838) #5, !dbg !55
  %4118 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i981, float %2838, float %2838) #5, !dbg !55
  %.02.i983 = select i1 %.not5.i982, float %4118, float %4117, !dbg !55
  br label %__nv_tanhf.exit984, !dbg !55

__nv_tanhf.exit984:                               ; preds = %__internal_fmad.exit1.i968, %__internal_fmad.exit3.i973
  %s.1.i972 = phi float [ %4102, %__internal_fmad.exit1.i968 ], [ %.02.i983, %__internal_fmad.exit3.i973 ], !dbg !55
  %4119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i985 = icmp eq i32 %4119, 0, !dbg !55
  %4120 = tail call float @llvm.nvvm.fabs.ftz.f(float %2839) #5, !dbg !55
  %4121 = tail call float @llvm.nvvm.fabs.f(float %2839) #5, !dbg !55
  %.01.i986 = select i1 %.not.i985, float %4121, float %4120, !dbg !55
  %4122 = fcmp ult float %.01.i986, 0x3FE3333340000000, !dbg !55
  br i1 %4122, label %__internal_fmad.exit3.i992, label %__internal_fmad.exit1.i987, !dbg !55

__internal_fmad.exit1.i987:                       ; preds = %__nv_tanhf.exit984
  %4123 = fmul float %.01.i986, 0x4007154760000000, !dbg !55
  %4124 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4123) #5, !dbg !55
  %4125 = fadd float %4124, 1.000000e+00, !dbg !55
  %4126 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4125) #6, !dbg !55, !srcloc !56
  %4127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i988 = icmp eq i32 %4127, 0, !dbg !55
  %4128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4126, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4129 = tail call float @llvm.nvvm.fma.rn.f(float %4126, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i989 = select i1 %.not6.i988, float %4129, float %4128, !dbg !55
  %4130 = fcmp oge float %.01.i986, 0x4022059680000000, !dbg !55
  %s.0.i990 = select i1 %4130, float 1.000000e+00, float %.03.i989, !dbg !55
  %4131 = bitcast float %s.0.i990 to i32, !dbg !55
  %4132 = bitcast float %2839 to i32, !dbg !55
  %4133 = and i32 %4132, -2147483648, !dbg !55
  %4134 = or i32 %4133, %4131, !dbg !55
  %4135 = bitcast i32 %4134 to float, !dbg !55
  br label %__nv_tanhf.exit1003, !dbg !55

__internal_fmad.exit3.i992:                       ; preds = %__nv_tanhf.exit984
  %4136 = fmul float %2839, %2839, !dbg !55
  %4137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i993 = icmp eq i32 %4137, 0, !dbg !55
  %4138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4136, float 0xBFAAC795C0000000) #5, !dbg !55
  %4139 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4136, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i994 = select i1 %.not1.i993, float %4139, float %4138, !dbg !55
  %4140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i995 = icmp eq i32 %4140, 0, !dbg !55
  %4141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i994, float %4136, float 0x3FC10B2820000000) #5, !dbg !55
  %4142 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i994, float %4136, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i996 = select i1 %.not2.i995, float %4142, float %4141, !dbg !55
  %4143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i997 = icmp eq i32 %4143, 0, !dbg !55
  %4144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i996, float %4136, float 0xBFD5553DA0000000) #5, !dbg !55
  %4145 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i996, float %4136, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i998 = select i1 %.not3.i997, float %4145, float %4144, !dbg !55
  %4146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i999 = icmp eq i32 %4146, 0, !dbg !55
  %4147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i998, float %4136, float 0.000000e+00) #5, !dbg !55
  %4148 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i998, float %4136, float 0.000000e+00) #5, !dbg !55
  %.04.i1000 = select i1 %.not4.i999, float %4148, float %4147, !dbg !55
  %4149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1001 = icmp eq i32 %4149, 0, !dbg !55
  %4150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1000, float %2839, float %2839) #5, !dbg !55
  %4151 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1000, float %2839, float %2839) #5, !dbg !55
  %.02.i1002 = select i1 %.not5.i1001, float %4151, float %4150, !dbg !55
  br label %__nv_tanhf.exit1003, !dbg !55

__nv_tanhf.exit1003:                              ; preds = %__internal_fmad.exit1.i987, %__internal_fmad.exit3.i992
  %s.1.i991 = phi float [ %4135, %__internal_fmad.exit1.i987 ], [ %.02.i1002, %__internal_fmad.exit3.i992 ], !dbg !55
  %4152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1004 = icmp eq i32 %4152, 0, !dbg !55
  %4153 = tail call float @llvm.nvvm.fabs.ftz.f(float %2840) #5, !dbg !55
  %4154 = tail call float @llvm.nvvm.fabs.f(float %2840) #5, !dbg !55
  %.01.i1005 = select i1 %.not.i1004, float %4154, float %4153, !dbg !55
  %4155 = fcmp ult float %.01.i1005, 0x3FE3333340000000, !dbg !55
  br i1 %4155, label %__internal_fmad.exit3.i1011, label %__internal_fmad.exit1.i1006, !dbg !55

__internal_fmad.exit1.i1006:                      ; preds = %__nv_tanhf.exit1003
  %4156 = fmul float %.01.i1005, 0x4007154760000000, !dbg !55
  %4157 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4156) #5, !dbg !55
  %4158 = fadd float %4157, 1.000000e+00, !dbg !55
  %4159 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4158) #6, !dbg !55, !srcloc !56
  %4160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1007 = icmp eq i32 %4160, 0, !dbg !55
  %4161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4159, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4162 = tail call float @llvm.nvvm.fma.rn.f(float %4159, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1008 = select i1 %.not6.i1007, float %4162, float %4161, !dbg !55
  %4163 = fcmp oge float %.01.i1005, 0x4022059680000000, !dbg !55
  %s.0.i1009 = select i1 %4163, float 1.000000e+00, float %.03.i1008, !dbg !55
  %4164 = bitcast float %s.0.i1009 to i32, !dbg !55
  %4165 = bitcast float %2840 to i32, !dbg !55
  %4166 = and i32 %4165, -2147483648, !dbg !55
  %4167 = or i32 %4166, %4164, !dbg !55
  %4168 = bitcast i32 %4167 to float, !dbg !55
  br label %__nv_tanhf.exit1022, !dbg !55

__internal_fmad.exit3.i1011:                      ; preds = %__nv_tanhf.exit1003
  %4169 = fmul float %2840, %2840, !dbg !55
  %4170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1012 = icmp eq i32 %4170, 0, !dbg !55
  %4171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4169, float 0xBFAAC795C0000000) #5, !dbg !55
  %4172 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4169, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1013 = select i1 %.not1.i1012, float %4172, float %4171, !dbg !55
  %4173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1014 = icmp eq i32 %4173, 0, !dbg !55
  %4174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1013, float %4169, float 0x3FC10B2820000000) #5, !dbg !55
  %4175 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1013, float %4169, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1015 = select i1 %.not2.i1014, float %4175, float %4174, !dbg !55
  %4176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1016 = icmp eq i32 %4176, 0, !dbg !55
  %4177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1015, float %4169, float 0xBFD5553DA0000000) #5, !dbg !55
  %4178 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1015, float %4169, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1017 = select i1 %.not3.i1016, float %4178, float %4177, !dbg !55
  %4179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1018 = icmp eq i32 %4179, 0, !dbg !55
  %4180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1017, float %4169, float 0.000000e+00) #5, !dbg !55
  %4181 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1017, float %4169, float 0.000000e+00) #5, !dbg !55
  %.04.i1019 = select i1 %.not4.i1018, float %4181, float %4180, !dbg !55
  %4182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1020 = icmp eq i32 %4182, 0, !dbg !55
  %4183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1019, float %2840, float %2840) #5, !dbg !55
  %4184 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1019, float %2840, float %2840) #5, !dbg !55
  %.02.i1021 = select i1 %.not5.i1020, float %4184, float %4183, !dbg !55
  br label %__nv_tanhf.exit1022, !dbg !55

__nv_tanhf.exit1022:                              ; preds = %__internal_fmad.exit1.i1006, %__internal_fmad.exit3.i1011
  %s.1.i1010 = phi float [ %4168, %__internal_fmad.exit1.i1006 ], [ %.02.i1021, %__internal_fmad.exit3.i1011 ], !dbg !55
  %4185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1023 = icmp eq i32 %4185, 0, !dbg !55
  %4186 = tail call float @llvm.nvvm.fabs.ftz.f(float %2841) #5, !dbg !55
  %4187 = tail call float @llvm.nvvm.fabs.f(float %2841) #5, !dbg !55
  %.01.i1024 = select i1 %.not.i1023, float %4187, float %4186, !dbg !55
  %4188 = fcmp ult float %.01.i1024, 0x3FE3333340000000, !dbg !55
  br i1 %4188, label %__internal_fmad.exit3.i1030, label %__internal_fmad.exit1.i1025, !dbg !55

__internal_fmad.exit1.i1025:                      ; preds = %__nv_tanhf.exit1022
  %4189 = fmul float %.01.i1024, 0x4007154760000000, !dbg !55
  %4190 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4189) #5, !dbg !55
  %4191 = fadd float %4190, 1.000000e+00, !dbg !55
  %4192 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4191) #6, !dbg !55, !srcloc !56
  %4193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1026 = icmp eq i32 %4193, 0, !dbg !55
  %4194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4192, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4195 = tail call float @llvm.nvvm.fma.rn.f(float %4192, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1027 = select i1 %.not6.i1026, float %4195, float %4194, !dbg !55
  %4196 = fcmp oge float %.01.i1024, 0x4022059680000000, !dbg !55
  %s.0.i1028 = select i1 %4196, float 1.000000e+00, float %.03.i1027, !dbg !55
  %4197 = bitcast float %s.0.i1028 to i32, !dbg !55
  %4198 = bitcast float %2841 to i32, !dbg !55
  %4199 = and i32 %4198, -2147483648, !dbg !55
  %4200 = or i32 %4199, %4197, !dbg !55
  %4201 = bitcast i32 %4200 to float, !dbg !55
  br label %__nv_tanhf.exit1041, !dbg !55

__internal_fmad.exit3.i1030:                      ; preds = %__nv_tanhf.exit1022
  %4202 = fmul float %2841, %2841, !dbg !55
  %4203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1031 = icmp eq i32 %4203, 0, !dbg !55
  %4204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4202, float 0xBFAAC795C0000000) #5, !dbg !55
  %4205 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4202, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1032 = select i1 %.not1.i1031, float %4205, float %4204, !dbg !55
  %4206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1033 = icmp eq i32 %4206, 0, !dbg !55
  %4207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1032, float %4202, float 0x3FC10B2820000000) #5, !dbg !55
  %4208 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1032, float %4202, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1034 = select i1 %.not2.i1033, float %4208, float %4207, !dbg !55
  %4209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1035 = icmp eq i32 %4209, 0, !dbg !55
  %4210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1034, float %4202, float 0xBFD5553DA0000000) #5, !dbg !55
  %4211 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1034, float %4202, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1036 = select i1 %.not3.i1035, float %4211, float %4210, !dbg !55
  %4212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1037 = icmp eq i32 %4212, 0, !dbg !55
  %4213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1036, float %4202, float 0.000000e+00) #5, !dbg !55
  %4214 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1036, float %4202, float 0.000000e+00) #5, !dbg !55
  %.04.i1038 = select i1 %.not4.i1037, float %4214, float %4213, !dbg !55
  %4215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1039 = icmp eq i32 %4215, 0, !dbg !55
  %4216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1038, float %2841, float %2841) #5, !dbg !55
  %4217 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1038, float %2841, float %2841) #5, !dbg !55
  %.02.i1040 = select i1 %.not5.i1039, float %4217, float %4216, !dbg !55
  br label %__nv_tanhf.exit1041, !dbg !55

__nv_tanhf.exit1041:                              ; preds = %__internal_fmad.exit1.i1025, %__internal_fmad.exit3.i1030
  %s.1.i1029 = phi float [ %4201, %__internal_fmad.exit1.i1025 ], [ %.02.i1040, %__internal_fmad.exit3.i1030 ], !dbg !55
  %4218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1042 = icmp eq i32 %4218, 0, !dbg !55
  %4219 = tail call float @llvm.nvvm.fabs.ftz.f(float %2842) #5, !dbg !55
  %4220 = tail call float @llvm.nvvm.fabs.f(float %2842) #5, !dbg !55
  %.01.i1043 = select i1 %.not.i1042, float %4220, float %4219, !dbg !55
  %4221 = fcmp ult float %.01.i1043, 0x3FE3333340000000, !dbg !55
  br i1 %4221, label %__internal_fmad.exit3.i1049, label %__internal_fmad.exit1.i1044, !dbg !55

__internal_fmad.exit1.i1044:                      ; preds = %__nv_tanhf.exit1041
  %4222 = fmul float %.01.i1043, 0x4007154760000000, !dbg !55
  %4223 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4222) #5, !dbg !55
  %4224 = fadd float %4223, 1.000000e+00, !dbg !55
  %4225 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4224) #6, !dbg !55, !srcloc !56
  %4226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1045 = icmp eq i32 %4226, 0, !dbg !55
  %4227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4225, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4228 = tail call float @llvm.nvvm.fma.rn.f(float %4225, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1046 = select i1 %.not6.i1045, float %4228, float %4227, !dbg !55
  %4229 = fcmp oge float %.01.i1043, 0x4022059680000000, !dbg !55
  %s.0.i1047 = select i1 %4229, float 1.000000e+00, float %.03.i1046, !dbg !55
  %4230 = bitcast float %s.0.i1047 to i32, !dbg !55
  %4231 = bitcast float %2842 to i32, !dbg !55
  %4232 = and i32 %4231, -2147483648, !dbg !55
  %4233 = or i32 %4232, %4230, !dbg !55
  %4234 = bitcast i32 %4233 to float, !dbg !55
  br label %__nv_tanhf.exit1060, !dbg !55

__internal_fmad.exit3.i1049:                      ; preds = %__nv_tanhf.exit1041
  %4235 = fmul float %2842, %2842, !dbg !55
  %4236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1050 = icmp eq i32 %4236, 0, !dbg !55
  %4237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4235, float 0xBFAAC795C0000000) #5, !dbg !55
  %4238 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4235, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1051 = select i1 %.not1.i1050, float %4238, float %4237, !dbg !55
  %4239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1052 = icmp eq i32 %4239, 0, !dbg !55
  %4240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1051, float %4235, float 0x3FC10B2820000000) #5, !dbg !55
  %4241 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1051, float %4235, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1053 = select i1 %.not2.i1052, float %4241, float %4240, !dbg !55
  %4242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1054 = icmp eq i32 %4242, 0, !dbg !55
  %4243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1053, float %4235, float 0xBFD5553DA0000000) #5, !dbg !55
  %4244 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1053, float %4235, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1055 = select i1 %.not3.i1054, float %4244, float %4243, !dbg !55
  %4245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1056 = icmp eq i32 %4245, 0, !dbg !55
  %4246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1055, float %4235, float 0.000000e+00) #5, !dbg !55
  %4247 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1055, float %4235, float 0.000000e+00) #5, !dbg !55
  %.04.i1057 = select i1 %.not4.i1056, float %4247, float %4246, !dbg !55
  %4248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1058 = icmp eq i32 %4248, 0, !dbg !55
  %4249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1057, float %2842, float %2842) #5, !dbg !55
  %4250 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1057, float %2842, float %2842) #5, !dbg !55
  %.02.i1059 = select i1 %.not5.i1058, float %4250, float %4249, !dbg !55
  br label %__nv_tanhf.exit1060, !dbg !55

__nv_tanhf.exit1060:                              ; preds = %__internal_fmad.exit1.i1044, %__internal_fmad.exit3.i1049
  %s.1.i1048 = phi float [ %4234, %__internal_fmad.exit1.i1044 ], [ %.02.i1059, %__internal_fmad.exit3.i1049 ], !dbg !55
  %4251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1061 = icmp eq i32 %4251, 0, !dbg !55
  %4252 = tail call float @llvm.nvvm.fabs.ftz.f(float %2843) #5, !dbg !55
  %4253 = tail call float @llvm.nvvm.fabs.f(float %2843) #5, !dbg !55
  %.01.i1062 = select i1 %.not.i1061, float %4253, float %4252, !dbg !55
  %4254 = fcmp ult float %.01.i1062, 0x3FE3333340000000, !dbg !55
  br i1 %4254, label %__internal_fmad.exit3.i1068, label %__internal_fmad.exit1.i1063, !dbg !55

__internal_fmad.exit1.i1063:                      ; preds = %__nv_tanhf.exit1060
  %4255 = fmul float %.01.i1062, 0x4007154760000000, !dbg !55
  %4256 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4255) #5, !dbg !55
  %4257 = fadd float %4256, 1.000000e+00, !dbg !55
  %4258 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4257) #6, !dbg !55, !srcloc !56
  %4259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1064 = icmp eq i32 %4259, 0, !dbg !55
  %4260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4258, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4261 = tail call float @llvm.nvvm.fma.rn.f(float %4258, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1065 = select i1 %.not6.i1064, float %4261, float %4260, !dbg !55
  %4262 = fcmp oge float %.01.i1062, 0x4022059680000000, !dbg !55
  %s.0.i1066 = select i1 %4262, float 1.000000e+00, float %.03.i1065, !dbg !55
  %4263 = bitcast float %s.0.i1066 to i32, !dbg !55
  %4264 = bitcast float %2843 to i32, !dbg !55
  %4265 = and i32 %4264, -2147483648, !dbg !55
  %4266 = or i32 %4265, %4263, !dbg !55
  %4267 = bitcast i32 %4266 to float, !dbg !55
  br label %__nv_tanhf.exit1079, !dbg !55

__internal_fmad.exit3.i1068:                      ; preds = %__nv_tanhf.exit1060
  %4268 = fmul float %2843, %2843, !dbg !55
  %4269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1069 = icmp eq i32 %4269, 0, !dbg !55
  %4270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4268, float 0xBFAAC795C0000000) #5, !dbg !55
  %4271 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4268, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1070 = select i1 %.not1.i1069, float %4271, float %4270, !dbg !55
  %4272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1071 = icmp eq i32 %4272, 0, !dbg !55
  %4273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1070, float %4268, float 0x3FC10B2820000000) #5, !dbg !55
  %4274 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1070, float %4268, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1072 = select i1 %.not2.i1071, float %4274, float %4273, !dbg !55
  %4275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1073 = icmp eq i32 %4275, 0, !dbg !55
  %4276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1072, float %4268, float 0xBFD5553DA0000000) #5, !dbg !55
  %4277 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1072, float %4268, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1074 = select i1 %.not3.i1073, float %4277, float %4276, !dbg !55
  %4278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1075 = icmp eq i32 %4278, 0, !dbg !55
  %4279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1074, float %4268, float 0.000000e+00) #5, !dbg !55
  %4280 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1074, float %4268, float 0.000000e+00) #5, !dbg !55
  %.04.i1076 = select i1 %.not4.i1075, float %4280, float %4279, !dbg !55
  %4281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1077 = icmp eq i32 %4281, 0, !dbg !55
  %4282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1076, float %2843, float %2843) #5, !dbg !55
  %4283 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1076, float %2843, float %2843) #5, !dbg !55
  %.02.i1078 = select i1 %.not5.i1077, float %4283, float %4282, !dbg !55
  br label %__nv_tanhf.exit1079, !dbg !55

__nv_tanhf.exit1079:                              ; preds = %__internal_fmad.exit1.i1063, %__internal_fmad.exit3.i1068
  %s.1.i1067 = phi float [ %4267, %__internal_fmad.exit1.i1063 ], [ %.02.i1078, %__internal_fmad.exit3.i1068 ], !dbg !55
  %4284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1080 = icmp eq i32 %4284, 0, !dbg !55
  %4285 = tail call float @llvm.nvvm.fabs.ftz.f(float %2844) #5, !dbg !55
  %4286 = tail call float @llvm.nvvm.fabs.f(float %2844) #5, !dbg !55
  %.01.i1081 = select i1 %.not.i1080, float %4286, float %4285, !dbg !55
  %4287 = fcmp ult float %.01.i1081, 0x3FE3333340000000, !dbg !55
  br i1 %4287, label %__internal_fmad.exit3.i1087, label %__internal_fmad.exit1.i1082, !dbg !55

__internal_fmad.exit1.i1082:                      ; preds = %__nv_tanhf.exit1079
  %4288 = fmul float %.01.i1081, 0x4007154760000000, !dbg !55
  %4289 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4288) #5, !dbg !55
  %4290 = fadd float %4289, 1.000000e+00, !dbg !55
  %4291 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4290) #6, !dbg !55, !srcloc !56
  %4292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1083 = icmp eq i32 %4292, 0, !dbg !55
  %4293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4291, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4294 = tail call float @llvm.nvvm.fma.rn.f(float %4291, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1084 = select i1 %.not6.i1083, float %4294, float %4293, !dbg !55
  %4295 = fcmp oge float %.01.i1081, 0x4022059680000000, !dbg !55
  %s.0.i1085 = select i1 %4295, float 1.000000e+00, float %.03.i1084, !dbg !55
  %4296 = bitcast float %s.0.i1085 to i32, !dbg !55
  %4297 = bitcast float %2844 to i32, !dbg !55
  %4298 = and i32 %4297, -2147483648, !dbg !55
  %4299 = or i32 %4298, %4296, !dbg !55
  %4300 = bitcast i32 %4299 to float, !dbg !55
  br label %__nv_tanhf.exit1098, !dbg !55

__internal_fmad.exit3.i1087:                      ; preds = %__nv_tanhf.exit1079
  %4301 = fmul float %2844, %2844, !dbg !55
  %4302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1088 = icmp eq i32 %4302, 0, !dbg !55
  %4303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4301, float 0xBFAAC795C0000000) #5, !dbg !55
  %4304 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4301, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1089 = select i1 %.not1.i1088, float %4304, float %4303, !dbg !55
  %4305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1090 = icmp eq i32 %4305, 0, !dbg !55
  %4306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1089, float %4301, float 0x3FC10B2820000000) #5, !dbg !55
  %4307 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1089, float %4301, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1091 = select i1 %.not2.i1090, float %4307, float %4306, !dbg !55
  %4308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1092 = icmp eq i32 %4308, 0, !dbg !55
  %4309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1091, float %4301, float 0xBFD5553DA0000000) #5, !dbg !55
  %4310 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1091, float %4301, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1093 = select i1 %.not3.i1092, float %4310, float %4309, !dbg !55
  %4311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1094 = icmp eq i32 %4311, 0, !dbg !55
  %4312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1093, float %4301, float 0.000000e+00) #5, !dbg !55
  %4313 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1093, float %4301, float 0.000000e+00) #5, !dbg !55
  %.04.i1095 = select i1 %.not4.i1094, float %4313, float %4312, !dbg !55
  %4314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1096 = icmp eq i32 %4314, 0, !dbg !55
  %4315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1095, float %2844, float %2844) #5, !dbg !55
  %4316 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1095, float %2844, float %2844) #5, !dbg !55
  %.02.i1097 = select i1 %.not5.i1096, float %4316, float %4315, !dbg !55
  br label %__nv_tanhf.exit1098, !dbg !55

__nv_tanhf.exit1098:                              ; preds = %__internal_fmad.exit1.i1082, %__internal_fmad.exit3.i1087
  %s.1.i1086 = phi float [ %4300, %__internal_fmad.exit1.i1082 ], [ %.02.i1097, %__internal_fmad.exit3.i1087 ], !dbg !55
  %4317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1099 = icmp eq i32 %4317, 0, !dbg !55
  %4318 = tail call float @llvm.nvvm.fabs.ftz.f(float %2845) #5, !dbg !55
  %4319 = tail call float @llvm.nvvm.fabs.f(float %2845) #5, !dbg !55
  %.01.i1100 = select i1 %.not.i1099, float %4319, float %4318, !dbg !55
  %4320 = fcmp ult float %.01.i1100, 0x3FE3333340000000, !dbg !55
  br i1 %4320, label %__internal_fmad.exit3.i1106, label %__internal_fmad.exit1.i1101, !dbg !55

__internal_fmad.exit1.i1101:                      ; preds = %__nv_tanhf.exit1098
  %4321 = fmul float %.01.i1100, 0x4007154760000000, !dbg !55
  %4322 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4321) #5, !dbg !55
  %4323 = fadd float %4322, 1.000000e+00, !dbg !55
  %4324 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4323) #6, !dbg !55, !srcloc !56
  %4325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1102 = icmp eq i32 %4325, 0, !dbg !55
  %4326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4324, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4327 = tail call float @llvm.nvvm.fma.rn.f(float %4324, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1103 = select i1 %.not6.i1102, float %4327, float %4326, !dbg !55
  %4328 = fcmp oge float %.01.i1100, 0x4022059680000000, !dbg !55
  %s.0.i1104 = select i1 %4328, float 1.000000e+00, float %.03.i1103, !dbg !55
  %4329 = bitcast float %s.0.i1104 to i32, !dbg !55
  %4330 = bitcast float %2845 to i32, !dbg !55
  %4331 = and i32 %4330, -2147483648, !dbg !55
  %4332 = or i32 %4331, %4329, !dbg !55
  %4333 = bitcast i32 %4332 to float, !dbg !55
  br label %__nv_tanhf.exit1117, !dbg !55

__internal_fmad.exit3.i1106:                      ; preds = %__nv_tanhf.exit1098
  %4334 = fmul float %2845, %2845, !dbg !55
  %4335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1107 = icmp eq i32 %4335, 0, !dbg !55
  %4336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4334, float 0xBFAAC795C0000000) #5, !dbg !55
  %4337 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4334, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1108 = select i1 %.not1.i1107, float %4337, float %4336, !dbg !55
  %4338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1109 = icmp eq i32 %4338, 0, !dbg !55
  %4339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1108, float %4334, float 0x3FC10B2820000000) #5, !dbg !55
  %4340 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1108, float %4334, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1110 = select i1 %.not2.i1109, float %4340, float %4339, !dbg !55
  %4341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1111 = icmp eq i32 %4341, 0, !dbg !55
  %4342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1110, float %4334, float 0xBFD5553DA0000000) #5, !dbg !55
  %4343 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1110, float %4334, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1112 = select i1 %.not3.i1111, float %4343, float %4342, !dbg !55
  %4344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1113 = icmp eq i32 %4344, 0, !dbg !55
  %4345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1112, float %4334, float 0.000000e+00) #5, !dbg !55
  %4346 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1112, float %4334, float 0.000000e+00) #5, !dbg !55
  %.04.i1114 = select i1 %.not4.i1113, float %4346, float %4345, !dbg !55
  %4347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1115 = icmp eq i32 %4347, 0, !dbg !55
  %4348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1114, float %2845, float %2845) #5, !dbg !55
  %4349 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1114, float %2845, float %2845) #5, !dbg !55
  %.02.i1116 = select i1 %.not5.i1115, float %4349, float %4348, !dbg !55
  br label %__nv_tanhf.exit1117, !dbg !55

__nv_tanhf.exit1117:                              ; preds = %__internal_fmad.exit1.i1101, %__internal_fmad.exit3.i1106
  %s.1.i1105 = phi float [ %4333, %__internal_fmad.exit1.i1101 ], [ %.02.i1116, %__internal_fmad.exit3.i1106 ], !dbg !55
  %4350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1118 = icmp eq i32 %4350, 0, !dbg !55
  %4351 = tail call float @llvm.nvvm.fabs.ftz.f(float %2846) #5, !dbg !55
  %4352 = tail call float @llvm.nvvm.fabs.f(float %2846) #5, !dbg !55
  %.01.i1119 = select i1 %.not.i1118, float %4352, float %4351, !dbg !55
  %4353 = fcmp ult float %.01.i1119, 0x3FE3333340000000, !dbg !55
  br i1 %4353, label %__internal_fmad.exit3.i1125, label %__internal_fmad.exit1.i1120, !dbg !55

__internal_fmad.exit1.i1120:                      ; preds = %__nv_tanhf.exit1117
  %4354 = fmul float %.01.i1119, 0x4007154760000000, !dbg !55
  %4355 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4354) #5, !dbg !55
  %4356 = fadd float %4355, 1.000000e+00, !dbg !55
  %4357 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4356) #6, !dbg !55, !srcloc !56
  %4358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1121 = icmp eq i32 %4358, 0, !dbg !55
  %4359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4357, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4360 = tail call float @llvm.nvvm.fma.rn.f(float %4357, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1122 = select i1 %.not6.i1121, float %4360, float %4359, !dbg !55
  %4361 = fcmp oge float %.01.i1119, 0x4022059680000000, !dbg !55
  %s.0.i1123 = select i1 %4361, float 1.000000e+00, float %.03.i1122, !dbg !55
  %4362 = bitcast float %s.0.i1123 to i32, !dbg !55
  %4363 = bitcast float %2846 to i32, !dbg !55
  %4364 = and i32 %4363, -2147483648, !dbg !55
  %4365 = or i32 %4364, %4362, !dbg !55
  %4366 = bitcast i32 %4365 to float, !dbg !55
  br label %__nv_tanhf.exit1136, !dbg !55

__internal_fmad.exit3.i1125:                      ; preds = %__nv_tanhf.exit1117
  %4367 = fmul float %2846, %2846, !dbg !55
  %4368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1126 = icmp eq i32 %4368, 0, !dbg !55
  %4369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4367, float 0xBFAAC795C0000000) #5, !dbg !55
  %4370 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4367, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1127 = select i1 %.not1.i1126, float %4370, float %4369, !dbg !55
  %4371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1128 = icmp eq i32 %4371, 0, !dbg !55
  %4372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1127, float %4367, float 0x3FC10B2820000000) #5, !dbg !55
  %4373 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1127, float %4367, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1129 = select i1 %.not2.i1128, float %4373, float %4372, !dbg !55
  %4374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1130 = icmp eq i32 %4374, 0, !dbg !55
  %4375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1129, float %4367, float 0xBFD5553DA0000000) #5, !dbg !55
  %4376 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1129, float %4367, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1131 = select i1 %.not3.i1130, float %4376, float %4375, !dbg !55
  %4377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1132 = icmp eq i32 %4377, 0, !dbg !55
  %4378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1131, float %4367, float 0.000000e+00) #5, !dbg !55
  %4379 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1131, float %4367, float 0.000000e+00) #5, !dbg !55
  %.04.i1133 = select i1 %.not4.i1132, float %4379, float %4378, !dbg !55
  %4380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1134 = icmp eq i32 %4380, 0, !dbg !55
  %4381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1133, float %2846, float %2846) #5, !dbg !55
  %4382 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1133, float %2846, float %2846) #5, !dbg !55
  %.02.i1135 = select i1 %.not5.i1134, float %4382, float %4381, !dbg !55
  br label %__nv_tanhf.exit1136, !dbg !55

__nv_tanhf.exit1136:                              ; preds = %__internal_fmad.exit1.i1120, %__internal_fmad.exit3.i1125
  %s.1.i1124 = phi float [ %4366, %__internal_fmad.exit1.i1120 ], [ %.02.i1135, %__internal_fmad.exit3.i1125 ], !dbg !55
  %4383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1137 = icmp eq i32 %4383, 0, !dbg !55
  %4384 = tail call float @llvm.nvvm.fabs.ftz.f(float %2847) #5, !dbg !55
  %4385 = tail call float @llvm.nvvm.fabs.f(float %2847) #5, !dbg !55
  %.01.i1138 = select i1 %.not.i1137, float %4385, float %4384, !dbg !55
  %4386 = fcmp ult float %.01.i1138, 0x3FE3333340000000, !dbg !55
  br i1 %4386, label %__internal_fmad.exit3.i1144, label %__internal_fmad.exit1.i1139, !dbg !55

__internal_fmad.exit1.i1139:                      ; preds = %__nv_tanhf.exit1136
  %4387 = fmul float %.01.i1138, 0x4007154760000000, !dbg !55
  %4388 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4387) #5, !dbg !55
  %4389 = fadd float %4388, 1.000000e+00, !dbg !55
  %4390 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4389) #6, !dbg !55, !srcloc !56
  %4391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1140 = icmp eq i32 %4391, 0, !dbg !55
  %4392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4390, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4393 = tail call float @llvm.nvvm.fma.rn.f(float %4390, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1141 = select i1 %.not6.i1140, float %4393, float %4392, !dbg !55
  %4394 = fcmp oge float %.01.i1138, 0x4022059680000000, !dbg !55
  %s.0.i1142 = select i1 %4394, float 1.000000e+00, float %.03.i1141, !dbg !55
  %4395 = bitcast float %s.0.i1142 to i32, !dbg !55
  %4396 = bitcast float %2847 to i32, !dbg !55
  %4397 = and i32 %4396, -2147483648, !dbg !55
  %4398 = or i32 %4397, %4395, !dbg !55
  %4399 = bitcast i32 %4398 to float, !dbg !55
  br label %__nv_tanhf.exit1155, !dbg !55

__internal_fmad.exit3.i1144:                      ; preds = %__nv_tanhf.exit1136
  %4400 = fmul float %2847, %2847, !dbg !55
  %4401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1145 = icmp eq i32 %4401, 0, !dbg !55
  %4402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4400, float 0xBFAAC795C0000000) #5, !dbg !55
  %4403 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4400, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1146 = select i1 %.not1.i1145, float %4403, float %4402, !dbg !55
  %4404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1147 = icmp eq i32 %4404, 0, !dbg !55
  %4405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1146, float %4400, float 0x3FC10B2820000000) #5, !dbg !55
  %4406 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1146, float %4400, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1148 = select i1 %.not2.i1147, float %4406, float %4405, !dbg !55
  %4407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1149 = icmp eq i32 %4407, 0, !dbg !55
  %4408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1148, float %4400, float 0xBFD5553DA0000000) #5, !dbg !55
  %4409 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1148, float %4400, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1150 = select i1 %.not3.i1149, float %4409, float %4408, !dbg !55
  %4410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1151 = icmp eq i32 %4410, 0, !dbg !55
  %4411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1150, float %4400, float 0.000000e+00) #5, !dbg !55
  %4412 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1150, float %4400, float 0.000000e+00) #5, !dbg !55
  %.04.i1152 = select i1 %.not4.i1151, float %4412, float %4411, !dbg !55
  %4413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1153 = icmp eq i32 %4413, 0, !dbg !55
  %4414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1152, float %2847, float %2847) #5, !dbg !55
  %4415 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1152, float %2847, float %2847) #5, !dbg !55
  %.02.i1154 = select i1 %.not5.i1153, float %4415, float %4414, !dbg !55
  br label %__nv_tanhf.exit1155, !dbg !55

__nv_tanhf.exit1155:                              ; preds = %__internal_fmad.exit1.i1139, %__internal_fmad.exit3.i1144
  %s.1.i1143 = phi float [ %4399, %__internal_fmad.exit1.i1139 ], [ %.02.i1154, %__internal_fmad.exit3.i1144 ], !dbg !55
  %4416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1156 = icmp eq i32 %4416, 0, !dbg !55
  %4417 = tail call float @llvm.nvvm.fabs.ftz.f(float %2848) #5, !dbg !55
  %4418 = tail call float @llvm.nvvm.fabs.f(float %2848) #5, !dbg !55
  %.01.i1157 = select i1 %.not.i1156, float %4418, float %4417, !dbg !55
  %4419 = fcmp ult float %.01.i1157, 0x3FE3333340000000, !dbg !55
  br i1 %4419, label %__internal_fmad.exit3.i1163, label %__internal_fmad.exit1.i1158, !dbg !55

__internal_fmad.exit1.i1158:                      ; preds = %__nv_tanhf.exit1155
  %4420 = fmul float %.01.i1157, 0x4007154760000000, !dbg !55
  %4421 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4420) #5, !dbg !55
  %4422 = fadd float %4421, 1.000000e+00, !dbg !55
  %4423 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4422) #6, !dbg !55, !srcloc !56
  %4424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1159 = icmp eq i32 %4424, 0, !dbg !55
  %4425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4423, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4426 = tail call float @llvm.nvvm.fma.rn.f(float %4423, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1160 = select i1 %.not6.i1159, float %4426, float %4425, !dbg !55
  %4427 = fcmp oge float %.01.i1157, 0x4022059680000000, !dbg !55
  %s.0.i1161 = select i1 %4427, float 1.000000e+00, float %.03.i1160, !dbg !55
  %4428 = bitcast float %s.0.i1161 to i32, !dbg !55
  %4429 = bitcast float %2848 to i32, !dbg !55
  %4430 = and i32 %4429, -2147483648, !dbg !55
  %4431 = or i32 %4430, %4428, !dbg !55
  %4432 = bitcast i32 %4431 to float, !dbg !55
  br label %__nv_tanhf.exit1174, !dbg !55

__internal_fmad.exit3.i1163:                      ; preds = %__nv_tanhf.exit1155
  %4433 = fmul float %2848, %2848, !dbg !55
  %4434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1164 = icmp eq i32 %4434, 0, !dbg !55
  %4435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4433, float 0xBFAAC795C0000000) #5, !dbg !55
  %4436 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4433, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1165 = select i1 %.not1.i1164, float %4436, float %4435, !dbg !55
  %4437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1166 = icmp eq i32 %4437, 0, !dbg !55
  %4438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1165, float %4433, float 0x3FC10B2820000000) #5, !dbg !55
  %4439 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1165, float %4433, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1167 = select i1 %.not2.i1166, float %4439, float %4438, !dbg !55
  %4440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1168 = icmp eq i32 %4440, 0, !dbg !55
  %4441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1167, float %4433, float 0xBFD5553DA0000000) #5, !dbg !55
  %4442 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1167, float %4433, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1169 = select i1 %.not3.i1168, float %4442, float %4441, !dbg !55
  %4443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1170 = icmp eq i32 %4443, 0, !dbg !55
  %4444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1169, float %4433, float 0.000000e+00) #5, !dbg !55
  %4445 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1169, float %4433, float 0.000000e+00) #5, !dbg !55
  %.04.i1171 = select i1 %.not4.i1170, float %4445, float %4444, !dbg !55
  %4446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1172 = icmp eq i32 %4446, 0, !dbg !55
  %4447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1171, float %2848, float %2848) #5, !dbg !55
  %4448 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1171, float %2848, float %2848) #5, !dbg !55
  %.02.i1173 = select i1 %.not5.i1172, float %4448, float %4447, !dbg !55
  br label %__nv_tanhf.exit1174, !dbg !55

__nv_tanhf.exit1174:                              ; preds = %__internal_fmad.exit1.i1158, %__internal_fmad.exit3.i1163
  %s.1.i1162 = phi float [ %4432, %__internal_fmad.exit1.i1158 ], [ %.02.i1173, %__internal_fmad.exit3.i1163 ], !dbg !55
  %4449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1175 = icmp eq i32 %4449, 0, !dbg !55
  %4450 = tail call float @llvm.nvvm.fabs.ftz.f(float %2849) #5, !dbg !55
  %4451 = tail call float @llvm.nvvm.fabs.f(float %2849) #5, !dbg !55
  %.01.i1176 = select i1 %.not.i1175, float %4451, float %4450, !dbg !55
  %4452 = fcmp ult float %.01.i1176, 0x3FE3333340000000, !dbg !55
  br i1 %4452, label %__internal_fmad.exit3.i1182, label %__internal_fmad.exit1.i1177, !dbg !55

__internal_fmad.exit1.i1177:                      ; preds = %__nv_tanhf.exit1174
  %4453 = fmul float %.01.i1176, 0x4007154760000000, !dbg !55
  %4454 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4453) #5, !dbg !55
  %4455 = fadd float %4454, 1.000000e+00, !dbg !55
  %4456 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4455) #6, !dbg !55, !srcloc !56
  %4457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1178 = icmp eq i32 %4457, 0, !dbg !55
  %4458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4456, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4459 = tail call float @llvm.nvvm.fma.rn.f(float %4456, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1179 = select i1 %.not6.i1178, float %4459, float %4458, !dbg !55
  %4460 = fcmp oge float %.01.i1176, 0x4022059680000000, !dbg !55
  %s.0.i1180 = select i1 %4460, float 1.000000e+00, float %.03.i1179, !dbg !55
  %4461 = bitcast float %s.0.i1180 to i32, !dbg !55
  %4462 = bitcast float %2849 to i32, !dbg !55
  %4463 = and i32 %4462, -2147483648, !dbg !55
  %4464 = or i32 %4463, %4461, !dbg !55
  %4465 = bitcast i32 %4464 to float, !dbg !55
  br label %__nv_tanhf.exit1193, !dbg !55

__internal_fmad.exit3.i1182:                      ; preds = %__nv_tanhf.exit1174
  %4466 = fmul float %2849, %2849, !dbg !55
  %4467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1183 = icmp eq i32 %4467, 0, !dbg !55
  %4468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4466, float 0xBFAAC795C0000000) #5, !dbg !55
  %4469 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4466, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1184 = select i1 %.not1.i1183, float %4469, float %4468, !dbg !55
  %4470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1185 = icmp eq i32 %4470, 0, !dbg !55
  %4471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1184, float %4466, float 0x3FC10B2820000000) #5, !dbg !55
  %4472 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1184, float %4466, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1186 = select i1 %.not2.i1185, float %4472, float %4471, !dbg !55
  %4473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1187 = icmp eq i32 %4473, 0, !dbg !55
  %4474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1186, float %4466, float 0xBFD5553DA0000000) #5, !dbg !55
  %4475 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1186, float %4466, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1188 = select i1 %.not3.i1187, float %4475, float %4474, !dbg !55
  %4476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1189 = icmp eq i32 %4476, 0, !dbg !55
  %4477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1188, float %4466, float 0.000000e+00) #5, !dbg !55
  %4478 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1188, float %4466, float 0.000000e+00) #5, !dbg !55
  %.04.i1190 = select i1 %.not4.i1189, float %4478, float %4477, !dbg !55
  %4479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1191 = icmp eq i32 %4479, 0, !dbg !55
  %4480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1190, float %2849, float %2849) #5, !dbg !55
  %4481 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1190, float %2849, float %2849) #5, !dbg !55
  %.02.i1192 = select i1 %.not5.i1191, float %4481, float %4480, !dbg !55
  br label %__nv_tanhf.exit1193, !dbg !55

__nv_tanhf.exit1193:                              ; preds = %__internal_fmad.exit1.i1177, %__internal_fmad.exit3.i1182
  %s.1.i1181 = phi float [ %4465, %__internal_fmad.exit1.i1177 ], [ %.02.i1192, %__internal_fmad.exit3.i1182 ], !dbg !55
  %4482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1194 = icmp eq i32 %4482, 0, !dbg !55
  %4483 = tail call float @llvm.nvvm.fabs.ftz.f(float %2850) #5, !dbg !55
  %4484 = tail call float @llvm.nvvm.fabs.f(float %2850) #5, !dbg !55
  %.01.i1195 = select i1 %.not.i1194, float %4484, float %4483, !dbg !55
  %4485 = fcmp ult float %.01.i1195, 0x3FE3333340000000, !dbg !55
  br i1 %4485, label %__internal_fmad.exit3.i1201, label %__internal_fmad.exit1.i1196, !dbg !55

__internal_fmad.exit1.i1196:                      ; preds = %__nv_tanhf.exit1193
  %4486 = fmul float %.01.i1195, 0x4007154760000000, !dbg !55
  %4487 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4486) #5, !dbg !55
  %4488 = fadd float %4487, 1.000000e+00, !dbg !55
  %4489 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4488) #6, !dbg !55, !srcloc !56
  %4490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1197 = icmp eq i32 %4490, 0, !dbg !55
  %4491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4489, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4492 = tail call float @llvm.nvvm.fma.rn.f(float %4489, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1198 = select i1 %.not6.i1197, float %4492, float %4491, !dbg !55
  %4493 = fcmp oge float %.01.i1195, 0x4022059680000000, !dbg !55
  %s.0.i1199 = select i1 %4493, float 1.000000e+00, float %.03.i1198, !dbg !55
  %4494 = bitcast float %s.0.i1199 to i32, !dbg !55
  %4495 = bitcast float %2850 to i32, !dbg !55
  %4496 = and i32 %4495, -2147483648, !dbg !55
  %4497 = or i32 %4496, %4494, !dbg !55
  %4498 = bitcast i32 %4497 to float, !dbg !55
  br label %__nv_tanhf.exit1212, !dbg !55

__internal_fmad.exit3.i1201:                      ; preds = %__nv_tanhf.exit1193
  %4499 = fmul float %2850, %2850, !dbg !55
  %4500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1202 = icmp eq i32 %4500, 0, !dbg !55
  %4501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4499, float 0xBFAAC795C0000000) #5, !dbg !55
  %4502 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4499, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1203 = select i1 %.not1.i1202, float %4502, float %4501, !dbg !55
  %4503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1204 = icmp eq i32 %4503, 0, !dbg !55
  %4504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1203, float %4499, float 0x3FC10B2820000000) #5, !dbg !55
  %4505 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1203, float %4499, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1205 = select i1 %.not2.i1204, float %4505, float %4504, !dbg !55
  %4506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1206 = icmp eq i32 %4506, 0, !dbg !55
  %4507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1205, float %4499, float 0xBFD5553DA0000000) #5, !dbg !55
  %4508 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1205, float %4499, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1207 = select i1 %.not3.i1206, float %4508, float %4507, !dbg !55
  %4509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1208 = icmp eq i32 %4509, 0, !dbg !55
  %4510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1207, float %4499, float 0.000000e+00) #5, !dbg !55
  %4511 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1207, float %4499, float 0.000000e+00) #5, !dbg !55
  %.04.i1209 = select i1 %.not4.i1208, float %4511, float %4510, !dbg !55
  %4512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1210 = icmp eq i32 %4512, 0, !dbg !55
  %4513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1209, float %2850, float %2850) #5, !dbg !55
  %4514 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1209, float %2850, float %2850) #5, !dbg !55
  %.02.i1211 = select i1 %.not5.i1210, float %4514, float %4513, !dbg !55
  br label %__nv_tanhf.exit1212, !dbg !55

__nv_tanhf.exit1212:                              ; preds = %__internal_fmad.exit1.i1196, %__internal_fmad.exit3.i1201
  %s.1.i1200 = phi float [ %4498, %__internal_fmad.exit1.i1196 ], [ %.02.i1211, %__internal_fmad.exit3.i1201 ], !dbg !55
  %4515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1213 = icmp eq i32 %4515, 0, !dbg !55
  %4516 = tail call float @llvm.nvvm.fabs.ftz.f(float %2851) #5, !dbg !55
  %4517 = tail call float @llvm.nvvm.fabs.f(float %2851) #5, !dbg !55
  %.01.i1214 = select i1 %.not.i1213, float %4517, float %4516, !dbg !55
  %4518 = fcmp ult float %.01.i1214, 0x3FE3333340000000, !dbg !55
  br i1 %4518, label %__internal_fmad.exit3.i1220, label %__internal_fmad.exit1.i1215, !dbg !55

__internal_fmad.exit1.i1215:                      ; preds = %__nv_tanhf.exit1212
  %4519 = fmul float %.01.i1214, 0x4007154760000000, !dbg !55
  %4520 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4519) #5, !dbg !55
  %4521 = fadd float %4520, 1.000000e+00, !dbg !55
  %4522 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4521) #6, !dbg !55, !srcloc !56
  %4523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1216 = icmp eq i32 %4523, 0, !dbg !55
  %4524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4522, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4525 = tail call float @llvm.nvvm.fma.rn.f(float %4522, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1217 = select i1 %.not6.i1216, float %4525, float %4524, !dbg !55
  %4526 = fcmp oge float %.01.i1214, 0x4022059680000000, !dbg !55
  %s.0.i1218 = select i1 %4526, float 1.000000e+00, float %.03.i1217, !dbg !55
  %4527 = bitcast float %s.0.i1218 to i32, !dbg !55
  %4528 = bitcast float %2851 to i32, !dbg !55
  %4529 = and i32 %4528, -2147483648, !dbg !55
  %4530 = or i32 %4529, %4527, !dbg !55
  %4531 = bitcast i32 %4530 to float, !dbg !55
  br label %__nv_tanhf.exit1231, !dbg !55

__internal_fmad.exit3.i1220:                      ; preds = %__nv_tanhf.exit1212
  %4532 = fmul float %2851, %2851, !dbg !55
  %4533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1221 = icmp eq i32 %4533, 0, !dbg !55
  %4534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4532, float 0xBFAAC795C0000000) #5, !dbg !55
  %4535 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4532, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1222 = select i1 %.not1.i1221, float %4535, float %4534, !dbg !55
  %4536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1223 = icmp eq i32 %4536, 0, !dbg !55
  %4537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1222, float %4532, float 0x3FC10B2820000000) #5, !dbg !55
  %4538 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1222, float %4532, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1224 = select i1 %.not2.i1223, float %4538, float %4537, !dbg !55
  %4539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1225 = icmp eq i32 %4539, 0, !dbg !55
  %4540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1224, float %4532, float 0xBFD5553DA0000000) #5, !dbg !55
  %4541 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1224, float %4532, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1226 = select i1 %.not3.i1225, float %4541, float %4540, !dbg !55
  %4542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1227 = icmp eq i32 %4542, 0, !dbg !55
  %4543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1226, float %4532, float 0.000000e+00) #5, !dbg !55
  %4544 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1226, float %4532, float 0.000000e+00) #5, !dbg !55
  %.04.i1228 = select i1 %.not4.i1227, float %4544, float %4543, !dbg !55
  %4545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1229 = icmp eq i32 %4545, 0, !dbg !55
  %4546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1228, float %2851, float %2851) #5, !dbg !55
  %4547 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1228, float %2851, float %2851) #5, !dbg !55
  %.02.i1230 = select i1 %.not5.i1229, float %4547, float %4546, !dbg !55
  br label %__nv_tanhf.exit1231, !dbg !55

__nv_tanhf.exit1231:                              ; preds = %__internal_fmad.exit1.i1215, %__internal_fmad.exit3.i1220
  %s.1.i1219 = phi float [ %4531, %__internal_fmad.exit1.i1215 ], [ %.02.i1230, %__internal_fmad.exit3.i1220 ], !dbg !55
  %4548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1232 = icmp eq i32 %4548, 0, !dbg !55
  %4549 = tail call float @llvm.nvvm.fabs.ftz.f(float %2852) #5, !dbg !55
  %4550 = tail call float @llvm.nvvm.fabs.f(float %2852) #5, !dbg !55
  %.01.i1233 = select i1 %.not.i1232, float %4550, float %4549, !dbg !55
  %4551 = fcmp ult float %.01.i1233, 0x3FE3333340000000, !dbg !55
  br i1 %4551, label %__internal_fmad.exit3.i1239, label %__internal_fmad.exit1.i1234, !dbg !55

__internal_fmad.exit1.i1234:                      ; preds = %__nv_tanhf.exit1231
  %4552 = fmul float %.01.i1233, 0x4007154760000000, !dbg !55
  %4553 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4552) #5, !dbg !55
  %4554 = fadd float %4553, 1.000000e+00, !dbg !55
  %4555 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4554) #6, !dbg !55, !srcloc !56
  %4556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1235 = icmp eq i32 %4556, 0, !dbg !55
  %4557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4555, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4558 = tail call float @llvm.nvvm.fma.rn.f(float %4555, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1236 = select i1 %.not6.i1235, float %4558, float %4557, !dbg !55
  %4559 = fcmp oge float %.01.i1233, 0x4022059680000000, !dbg !55
  %s.0.i1237 = select i1 %4559, float 1.000000e+00, float %.03.i1236, !dbg !55
  %4560 = bitcast float %s.0.i1237 to i32, !dbg !55
  %4561 = bitcast float %2852 to i32, !dbg !55
  %4562 = and i32 %4561, -2147483648, !dbg !55
  %4563 = or i32 %4562, %4560, !dbg !55
  %4564 = bitcast i32 %4563 to float, !dbg !55
  br label %__nv_tanhf.exit1250, !dbg !55

__internal_fmad.exit3.i1239:                      ; preds = %__nv_tanhf.exit1231
  %4565 = fmul float %2852, %2852, !dbg !55
  %4566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1240 = icmp eq i32 %4566, 0, !dbg !55
  %4567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4565, float 0xBFAAC795C0000000) #5, !dbg !55
  %4568 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4565, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1241 = select i1 %.not1.i1240, float %4568, float %4567, !dbg !55
  %4569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1242 = icmp eq i32 %4569, 0, !dbg !55
  %4570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1241, float %4565, float 0x3FC10B2820000000) #5, !dbg !55
  %4571 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1241, float %4565, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1243 = select i1 %.not2.i1242, float %4571, float %4570, !dbg !55
  %4572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1244 = icmp eq i32 %4572, 0, !dbg !55
  %4573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1243, float %4565, float 0xBFD5553DA0000000) #5, !dbg !55
  %4574 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1243, float %4565, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1245 = select i1 %.not3.i1244, float %4574, float %4573, !dbg !55
  %4575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1246 = icmp eq i32 %4575, 0, !dbg !55
  %4576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1245, float %4565, float 0.000000e+00) #5, !dbg !55
  %4577 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1245, float %4565, float 0.000000e+00) #5, !dbg !55
  %.04.i1247 = select i1 %.not4.i1246, float %4577, float %4576, !dbg !55
  %4578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1248 = icmp eq i32 %4578, 0, !dbg !55
  %4579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1247, float %2852, float %2852) #5, !dbg !55
  %4580 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1247, float %2852, float %2852) #5, !dbg !55
  %.02.i1249 = select i1 %.not5.i1248, float %4580, float %4579, !dbg !55
  br label %__nv_tanhf.exit1250, !dbg !55

__nv_tanhf.exit1250:                              ; preds = %__internal_fmad.exit1.i1234, %__internal_fmad.exit3.i1239
  %s.1.i1238 = phi float [ %4564, %__internal_fmad.exit1.i1234 ], [ %.02.i1249, %__internal_fmad.exit3.i1239 ], !dbg !55
  %4581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1251 = icmp eq i32 %4581, 0, !dbg !55
  %4582 = tail call float @llvm.nvvm.fabs.ftz.f(float %2853) #5, !dbg !55
  %4583 = tail call float @llvm.nvvm.fabs.f(float %2853) #5, !dbg !55
  %.01.i1252 = select i1 %.not.i1251, float %4583, float %4582, !dbg !55
  %4584 = fcmp ult float %.01.i1252, 0x3FE3333340000000, !dbg !55
  br i1 %4584, label %__internal_fmad.exit3.i1258, label %__internal_fmad.exit1.i1253, !dbg !55

__internal_fmad.exit1.i1253:                      ; preds = %__nv_tanhf.exit1250
  %4585 = fmul float %.01.i1252, 0x4007154760000000, !dbg !55
  %4586 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4585) #5, !dbg !55
  %4587 = fadd float %4586, 1.000000e+00, !dbg !55
  %4588 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4587) #6, !dbg !55, !srcloc !56
  %4589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1254 = icmp eq i32 %4589, 0, !dbg !55
  %4590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4588, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4591 = tail call float @llvm.nvvm.fma.rn.f(float %4588, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1255 = select i1 %.not6.i1254, float %4591, float %4590, !dbg !55
  %4592 = fcmp oge float %.01.i1252, 0x4022059680000000, !dbg !55
  %s.0.i1256 = select i1 %4592, float 1.000000e+00, float %.03.i1255, !dbg !55
  %4593 = bitcast float %s.0.i1256 to i32, !dbg !55
  %4594 = bitcast float %2853 to i32, !dbg !55
  %4595 = and i32 %4594, -2147483648, !dbg !55
  %4596 = or i32 %4595, %4593, !dbg !55
  %4597 = bitcast i32 %4596 to float, !dbg !55
  br label %__nv_tanhf.exit1269, !dbg !55

__internal_fmad.exit3.i1258:                      ; preds = %__nv_tanhf.exit1250
  %4598 = fmul float %2853, %2853, !dbg !55
  %4599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1259 = icmp eq i32 %4599, 0, !dbg !55
  %4600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4598, float 0xBFAAC795C0000000) #5, !dbg !55
  %4601 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4598, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1260 = select i1 %.not1.i1259, float %4601, float %4600, !dbg !55
  %4602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1261 = icmp eq i32 %4602, 0, !dbg !55
  %4603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1260, float %4598, float 0x3FC10B2820000000) #5, !dbg !55
  %4604 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1260, float %4598, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1262 = select i1 %.not2.i1261, float %4604, float %4603, !dbg !55
  %4605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1263 = icmp eq i32 %4605, 0, !dbg !55
  %4606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1262, float %4598, float 0xBFD5553DA0000000) #5, !dbg !55
  %4607 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1262, float %4598, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1264 = select i1 %.not3.i1263, float %4607, float %4606, !dbg !55
  %4608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1265 = icmp eq i32 %4608, 0, !dbg !55
  %4609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1264, float %4598, float 0.000000e+00) #5, !dbg !55
  %4610 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1264, float %4598, float 0.000000e+00) #5, !dbg !55
  %.04.i1266 = select i1 %.not4.i1265, float %4610, float %4609, !dbg !55
  %4611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1267 = icmp eq i32 %4611, 0, !dbg !55
  %4612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1266, float %2853, float %2853) #5, !dbg !55
  %4613 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1266, float %2853, float %2853) #5, !dbg !55
  %.02.i1268 = select i1 %.not5.i1267, float %4613, float %4612, !dbg !55
  br label %__nv_tanhf.exit1269, !dbg !55

__nv_tanhf.exit1269:                              ; preds = %__internal_fmad.exit1.i1253, %__internal_fmad.exit3.i1258
  %s.1.i1257 = phi float [ %4597, %__internal_fmad.exit1.i1253 ], [ %.02.i1268, %__internal_fmad.exit3.i1258 ], !dbg !55
  %4614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1270 = icmp eq i32 %4614, 0, !dbg !55
  %4615 = tail call float @llvm.nvvm.fabs.ftz.f(float %2854) #5, !dbg !55
  %4616 = tail call float @llvm.nvvm.fabs.f(float %2854) #5, !dbg !55
  %.01.i1271 = select i1 %.not.i1270, float %4616, float %4615, !dbg !55
  %4617 = fcmp ult float %.01.i1271, 0x3FE3333340000000, !dbg !55
  br i1 %4617, label %__internal_fmad.exit3.i1277, label %__internal_fmad.exit1.i1272, !dbg !55

__internal_fmad.exit1.i1272:                      ; preds = %__nv_tanhf.exit1269
  %4618 = fmul float %.01.i1271, 0x4007154760000000, !dbg !55
  %4619 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4618) #5, !dbg !55
  %4620 = fadd float %4619, 1.000000e+00, !dbg !55
  %4621 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4620) #6, !dbg !55, !srcloc !56
  %4622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1273 = icmp eq i32 %4622, 0, !dbg !55
  %4623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4621, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4624 = tail call float @llvm.nvvm.fma.rn.f(float %4621, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1274 = select i1 %.not6.i1273, float %4624, float %4623, !dbg !55
  %4625 = fcmp oge float %.01.i1271, 0x4022059680000000, !dbg !55
  %s.0.i1275 = select i1 %4625, float 1.000000e+00, float %.03.i1274, !dbg !55
  %4626 = bitcast float %s.0.i1275 to i32, !dbg !55
  %4627 = bitcast float %2854 to i32, !dbg !55
  %4628 = and i32 %4627, -2147483648, !dbg !55
  %4629 = or i32 %4628, %4626, !dbg !55
  %4630 = bitcast i32 %4629 to float, !dbg !55
  br label %__nv_tanhf.exit1288, !dbg !55

__internal_fmad.exit3.i1277:                      ; preds = %__nv_tanhf.exit1269
  %4631 = fmul float %2854, %2854, !dbg !55
  %4632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1278 = icmp eq i32 %4632, 0, !dbg !55
  %4633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4631, float 0xBFAAC795C0000000) #5, !dbg !55
  %4634 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4631, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1279 = select i1 %.not1.i1278, float %4634, float %4633, !dbg !55
  %4635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1280 = icmp eq i32 %4635, 0, !dbg !55
  %4636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1279, float %4631, float 0x3FC10B2820000000) #5, !dbg !55
  %4637 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1279, float %4631, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1281 = select i1 %.not2.i1280, float %4637, float %4636, !dbg !55
  %4638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1282 = icmp eq i32 %4638, 0, !dbg !55
  %4639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1281, float %4631, float 0xBFD5553DA0000000) #5, !dbg !55
  %4640 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1281, float %4631, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1283 = select i1 %.not3.i1282, float %4640, float %4639, !dbg !55
  %4641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1284 = icmp eq i32 %4641, 0, !dbg !55
  %4642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1283, float %4631, float 0.000000e+00) #5, !dbg !55
  %4643 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1283, float %4631, float 0.000000e+00) #5, !dbg !55
  %.04.i1285 = select i1 %.not4.i1284, float %4643, float %4642, !dbg !55
  %4644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1286 = icmp eq i32 %4644, 0, !dbg !55
  %4645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1285, float %2854, float %2854) #5, !dbg !55
  %4646 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1285, float %2854, float %2854) #5, !dbg !55
  %.02.i1287 = select i1 %.not5.i1286, float %4646, float %4645, !dbg !55
  br label %__nv_tanhf.exit1288, !dbg !55

__nv_tanhf.exit1288:                              ; preds = %__internal_fmad.exit1.i1272, %__internal_fmad.exit3.i1277
  %s.1.i1276 = phi float [ %4630, %__internal_fmad.exit1.i1272 ], [ %.02.i1287, %__internal_fmad.exit3.i1277 ], !dbg !55
  %4647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1289 = icmp eq i32 %4647, 0, !dbg !55
  %4648 = tail call float @llvm.nvvm.fabs.ftz.f(float %2855) #5, !dbg !55
  %4649 = tail call float @llvm.nvvm.fabs.f(float %2855) #5, !dbg !55
  %.01.i1290 = select i1 %.not.i1289, float %4649, float %4648, !dbg !55
  %4650 = fcmp ult float %.01.i1290, 0x3FE3333340000000, !dbg !55
  br i1 %4650, label %__internal_fmad.exit3.i1296, label %__internal_fmad.exit1.i1291, !dbg !55

__internal_fmad.exit1.i1291:                      ; preds = %__nv_tanhf.exit1288
  %4651 = fmul float %.01.i1290, 0x4007154760000000, !dbg !55
  %4652 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4651) #5, !dbg !55
  %4653 = fadd float %4652, 1.000000e+00, !dbg !55
  %4654 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4653) #6, !dbg !55, !srcloc !56
  %4655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1292 = icmp eq i32 %4655, 0, !dbg !55
  %4656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4654, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4657 = tail call float @llvm.nvvm.fma.rn.f(float %4654, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1293 = select i1 %.not6.i1292, float %4657, float %4656, !dbg !55
  %4658 = fcmp oge float %.01.i1290, 0x4022059680000000, !dbg !55
  %s.0.i1294 = select i1 %4658, float 1.000000e+00, float %.03.i1293, !dbg !55
  %4659 = bitcast float %s.0.i1294 to i32, !dbg !55
  %4660 = bitcast float %2855 to i32, !dbg !55
  %4661 = and i32 %4660, -2147483648, !dbg !55
  %4662 = or i32 %4661, %4659, !dbg !55
  %4663 = bitcast i32 %4662 to float, !dbg !55
  br label %__nv_tanhf.exit1307, !dbg !55

__internal_fmad.exit3.i1296:                      ; preds = %__nv_tanhf.exit1288
  %4664 = fmul float %2855, %2855, !dbg !55
  %4665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1297 = icmp eq i32 %4665, 0, !dbg !55
  %4666 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4664, float 0xBFAAC795C0000000) #5, !dbg !55
  %4667 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4664, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1298 = select i1 %.not1.i1297, float %4667, float %4666, !dbg !55
  %4668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1299 = icmp eq i32 %4668, 0, !dbg !55
  %4669 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1298, float %4664, float 0x3FC10B2820000000) #5, !dbg !55
  %4670 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1298, float %4664, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1300 = select i1 %.not2.i1299, float %4670, float %4669, !dbg !55
  %4671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1301 = icmp eq i32 %4671, 0, !dbg !55
  %4672 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1300, float %4664, float 0xBFD5553DA0000000) #5, !dbg !55
  %4673 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1300, float %4664, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1302 = select i1 %.not3.i1301, float %4673, float %4672, !dbg !55
  %4674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1303 = icmp eq i32 %4674, 0, !dbg !55
  %4675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1302, float %4664, float 0.000000e+00) #5, !dbg !55
  %4676 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1302, float %4664, float 0.000000e+00) #5, !dbg !55
  %.04.i1304 = select i1 %.not4.i1303, float %4676, float %4675, !dbg !55
  %4677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1305 = icmp eq i32 %4677, 0, !dbg !55
  %4678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1304, float %2855, float %2855) #5, !dbg !55
  %4679 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1304, float %2855, float %2855) #5, !dbg !55
  %.02.i1306 = select i1 %.not5.i1305, float %4679, float %4678, !dbg !55
  br label %__nv_tanhf.exit1307, !dbg !55

__nv_tanhf.exit1307:                              ; preds = %__internal_fmad.exit1.i1291, %__internal_fmad.exit3.i1296
  %s.1.i1295 = phi float [ %4663, %__internal_fmad.exit1.i1291 ], [ %.02.i1306, %__internal_fmad.exit3.i1296 ], !dbg !55
  %4680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1308 = icmp eq i32 %4680, 0, !dbg !55
  %4681 = tail call float @llvm.nvvm.fabs.ftz.f(float %2856) #5, !dbg !55
  %4682 = tail call float @llvm.nvvm.fabs.f(float %2856) #5, !dbg !55
  %.01.i1309 = select i1 %.not.i1308, float %4682, float %4681, !dbg !55
  %4683 = fcmp ult float %.01.i1309, 0x3FE3333340000000, !dbg !55
  br i1 %4683, label %__internal_fmad.exit3.i1315, label %__internal_fmad.exit1.i1310, !dbg !55

__internal_fmad.exit1.i1310:                      ; preds = %__nv_tanhf.exit1307
  %4684 = fmul float %.01.i1309, 0x4007154760000000, !dbg !55
  %4685 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4684) #5, !dbg !55
  %4686 = fadd float %4685, 1.000000e+00, !dbg !55
  %4687 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4686) #6, !dbg !55, !srcloc !56
  %4688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1311 = icmp eq i32 %4688, 0, !dbg !55
  %4689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4687, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4690 = tail call float @llvm.nvvm.fma.rn.f(float %4687, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1312 = select i1 %.not6.i1311, float %4690, float %4689, !dbg !55
  %4691 = fcmp oge float %.01.i1309, 0x4022059680000000, !dbg !55
  %s.0.i1313 = select i1 %4691, float 1.000000e+00, float %.03.i1312, !dbg !55
  %4692 = bitcast float %s.0.i1313 to i32, !dbg !55
  %4693 = bitcast float %2856 to i32, !dbg !55
  %4694 = and i32 %4693, -2147483648, !dbg !55
  %4695 = or i32 %4694, %4692, !dbg !55
  %4696 = bitcast i32 %4695 to float, !dbg !55
  br label %__nv_tanhf.exit1326, !dbg !55

__internal_fmad.exit3.i1315:                      ; preds = %__nv_tanhf.exit1307
  %4697 = fmul float %2856, %2856, !dbg !55
  %4698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1316 = icmp eq i32 %4698, 0, !dbg !55
  %4699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4697, float 0xBFAAC795C0000000) #5, !dbg !55
  %4700 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4697, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1317 = select i1 %.not1.i1316, float %4700, float %4699, !dbg !55
  %4701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1318 = icmp eq i32 %4701, 0, !dbg !55
  %4702 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1317, float %4697, float 0x3FC10B2820000000) #5, !dbg !55
  %4703 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1317, float %4697, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1319 = select i1 %.not2.i1318, float %4703, float %4702, !dbg !55
  %4704 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1320 = icmp eq i32 %4704, 0, !dbg !55
  %4705 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1319, float %4697, float 0xBFD5553DA0000000) #5, !dbg !55
  %4706 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1319, float %4697, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1321 = select i1 %.not3.i1320, float %4706, float %4705, !dbg !55
  %4707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1322 = icmp eq i32 %4707, 0, !dbg !55
  %4708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1321, float %4697, float 0.000000e+00) #5, !dbg !55
  %4709 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1321, float %4697, float 0.000000e+00) #5, !dbg !55
  %.04.i1323 = select i1 %.not4.i1322, float %4709, float %4708, !dbg !55
  %4710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1324 = icmp eq i32 %4710, 0, !dbg !55
  %4711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1323, float %2856, float %2856) #5, !dbg !55
  %4712 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1323, float %2856, float %2856) #5, !dbg !55
  %.02.i1325 = select i1 %.not5.i1324, float %4712, float %4711, !dbg !55
  br label %__nv_tanhf.exit1326, !dbg !55

__nv_tanhf.exit1326:                              ; preds = %__internal_fmad.exit1.i1310, %__internal_fmad.exit3.i1315
  %s.1.i1314 = phi float [ %4696, %__internal_fmad.exit1.i1310 ], [ %.02.i1325, %__internal_fmad.exit3.i1315 ], !dbg !55
  %4713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1327 = icmp eq i32 %4713, 0, !dbg !55
  %4714 = tail call float @llvm.nvvm.fabs.ftz.f(float %2857) #5, !dbg !55
  %4715 = tail call float @llvm.nvvm.fabs.f(float %2857) #5, !dbg !55
  %.01.i1328 = select i1 %.not.i1327, float %4715, float %4714, !dbg !55
  %4716 = fcmp ult float %.01.i1328, 0x3FE3333340000000, !dbg !55
  br i1 %4716, label %__internal_fmad.exit3.i1334, label %__internal_fmad.exit1.i1329, !dbg !55

__internal_fmad.exit1.i1329:                      ; preds = %__nv_tanhf.exit1326
  %4717 = fmul float %.01.i1328, 0x4007154760000000, !dbg !55
  %4718 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4717) #5, !dbg !55
  %4719 = fadd float %4718, 1.000000e+00, !dbg !55
  %4720 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4719) #6, !dbg !55, !srcloc !56
  %4721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1330 = icmp eq i32 %4721, 0, !dbg !55
  %4722 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4720, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4723 = tail call float @llvm.nvvm.fma.rn.f(float %4720, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1331 = select i1 %.not6.i1330, float %4723, float %4722, !dbg !55
  %4724 = fcmp oge float %.01.i1328, 0x4022059680000000, !dbg !55
  %s.0.i1332 = select i1 %4724, float 1.000000e+00, float %.03.i1331, !dbg !55
  %4725 = bitcast float %s.0.i1332 to i32, !dbg !55
  %4726 = bitcast float %2857 to i32, !dbg !55
  %4727 = and i32 %4726, -2147483648, !dbg !55
  %4728 = or i32 %4727, %4725, !dbg !55
  %4729 = bitcast i32 %4728 to float, !dbg !55
  br label %__nv_tanhf.exit1345, !dbg !55

__internal_fmad.exit3.i1334:                      ; preds = %__nv_tanhf.exit1326
  %4730 = fmul float %2857, %2857, !dbg !55
  %4731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1335 = icmp eq i32 %4731, 0, !dbg !55
  %4732 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4730, float 0xBFAAC795C0000000) #5, !dbg !55
  %4733 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4730, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1336 = select i1 %.not1.i1335, float %4733, float %4732, !dbg !55
  %4734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1337 = icmp eq i32 %4734, 0, !dbg !55
  %4735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1336, float %4730, float 0x3FC10B2820000000) #5, !dbg !55
  %4736 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1336, float %4730, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1338 = select i1 %.not2.i1337, float %4736, float %4735, !dbg !55
  %4737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1339 = icmp eq i32 %4737, 0, !dbg !55
  %4738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1338, float %4730, float 0xBFD5553DA0000000) #5, !dbg !55
  %4739 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1338, float %4730, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1340 = select i1 %.not3.i1339, float %4739, float %4738, !dbg !55
  %4740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1341 = icmp eq i32 %4740, 0, !dbg !55
  %4741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1340, float %4730, float 0.000000e+00) #5, !dbg !55
  %4742 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1340, float %4730, float 0.000000e+00) #5, !dbg !55
  %.04.i1342 = select i1 %.not4.i1341, float %4742, float %4741, !dbg !55
  %4743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1343 = icmp eq i32 %4743, 0, !dbg !55
  %4744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1342, float %2857, float %2857) #5, !dbg !55
  %4745 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1342, float %2857, float %2857) #5, !dbg !55
  %.02.i1344 = select i1 %.not5.i1343, float %4745, float %4744, !dbg !55
  br label %__nv_tanhf.exit1345, !dbg !55

__nv_tanhf.exit1345:                              ; preds = %__internal_fmad.exit1.i1329, %__internal_fmad.exit3.i1334
  %s.1.i1333 = phi float [ %4729, %__internal_fmad.exit1.i1329 ], [ %.02.i1344, %__internal_fmad.exit3.i1334 ], !dbg !55
  %4746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1346 = icmp eq i32 %4746, 0, !dbg !55
  %4747 = tail call float @llvm.nvvm.fabs.ftz.f(float %2858) #5, !dbg !55
  %4748 = tail call float @llvm.nvvm.fabs.f(float %2858) #5, !dbg !55
  %.01.i1347 = select i1 %.not.i1346, float %4748, float %4747, !dbg !55
  %4749 = fcmp ult float %.01.i1347, 0x3FE3333340000000, !dbg !55
  br i1 %4749, label %__internal_fmad.exit3.i1353, label %__internal_fmad.exit1.i1348, !dbg !55

__internal_fmad.exit1.i1348:                      ; preds = %__nv_tanhf.exit1345
  %4750 = fmul float %.01.i1347, 0x4007154760000000, !dbg !55
  %4751 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4750) #5, !dbg !55
  %4752 = fadd float %4751, 1.000000e+00, !dbg !55
  %4753 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4752) #6, !dbg !55, !srcloc !56
  %4754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1349 = icmp eq i32 %4754, 0, !dbg !55
  %4755 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4753, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4756 = tail call float @llvm.nvvm.fma.rn.f(float %4753, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1350 = select i1 %.not6.i1349, float %4756, float %4755, !dbg !55
  %4757 = fcmp oge float %.01.i1347, 0x4022059680000000, !dbg !55
  %s.0.i1351 = select i1 %4757, float 1.000000e+00, float %.03.i1350, !dbg !55
  %4758 = bitcast float %s.0.i1351 to i32, !dbg !55
  %4759 = bitcast float %2858 to i32, !dbg !55
  %4760 = and i32 %4759, -2147483648, !dbg !55
  %4761 = or i32 %4760, %4758, !dbg !55
  %4762 = bitcast i32 %4761 to float, !dbg !55
  br label %__nv_tanhf.exit1364, !dbg !55

__internal_fmad.exit3.i1353:                      ; preds = %__nv_tanhf.exit1345
  %4763 = fmul float %2858, %2858, !dbg !55
  %4764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1354 = icmp eq i32 %4764, 0, !dbg !55
  %4765 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4763, float 0xBFAAC795C0000000) #5, !dbg !55
  %4766 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4763, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1355 = select i1 %.not1.i1354, float %4766, float %4765, !dbg !55
  %4767 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1356 = icmp eq i32 %4767, 0, !dbg !55
  %4768 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1355, float %4763, float 0x3FC10B2820000000) #5, !dbg !55
  %4769 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1355, float %4763, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1357 = select i1 %.not2.i1356, float %4769, float %4768, !dbg !55
  %4770 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1358 = icmp eq i32 %4770, 0, !dbg !55
  %4771 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1357, float %4763, float 0xBFD5553DA0000000) #5, !dbg !55
  %4772 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1357, float %4763, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1359 = select i1 %.not3.i1358, float %4772, float %4771, !dbg !55
  %4773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1360 = icmp eq i32 %4773, 0, !dbg !55
  %4774 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1359, float %4763, float 0.000000e+00) #5, !dbg !55
  %4775 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1359, float %4763, float 0.000000e+00) #5, !dbg !55
  %.04.i1361 = select i1 %.not4.i1360, float %4775, float %4774, !dbg !55
  %4776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1362 = icmp eq i32 %4776, 0, !dbg !55
  %4777 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1361, float %2858, float %2858) #5, !dbg !55
  %4778 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1361, float %2858, float %2858) #5, !dbg !55
  %.02.i1363 = select i1 %.not5.i1362, float %4778, float %4777, !dbg !55
  br label %__nv_tanhf.exit1364, !dbg !55

__nv_tanhf.exit1364:                              ; preds = %__internal_fmad.exit1.i1348, %__internal_fmad.exit3.i1353
  %s.1.i1352 = phi float [ %4762, %__internal_fmad.exit1.i1348 ], [ %.02.i1363, %__internal_fmad.exit3.i1353 ], !dbg !55
  %4779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1365 = icmp eq i32 %4779, 0, !dbg !55
  %4780 = tail call float @llvm.nvvm.fabs.ftz.f(float %2859) #5, !dbg !55
  %4781 = tail call float @llvm.nvvm.fabs.f(float %2859) #5, !dbg !55
  %.01.i1366 = select i1 %.not.i1365, float %4781, float %4780, !dbg !55
  %4782 = fcmp ult float %.01.i1366, 0x3FE3333340000000, !dbg !55
  br i1 %4782, label %__internal_fmad.exit3.i1372, label %__internal_fmad.exit1.i1367, !dbg !55

__internal_fmad.exit1.i1367:                      ; preds = %__nv_tanhf.exit1364
  %4783 = fmul float %.01.i1366, 0x4007154760000000, !dbg !55
  %4784 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4783) #5, !dbg !55
  %4785 = fadd float %4784, 1.000000e+00, !dbg !55
  %4786 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4785) #6, !dbg !55, !srcloc !56
  %4787 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1368 = icmp eq i32 %4787, 0, !dbg !55
  %4788 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4786, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4789 = tail call float @llvm.nvvm.fma.rn.f(float %4786, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1369 = select i1 %.not6.i1368, float %4789, float %4788, !dbg !55
  %4790 = fcmp oge float %.01.i1366, 0x4022059680000000, !dbg !55
  %s.0.i1370 = select i1 %4790, float 1.000000e+00, float %.03.i1369, !dbg !55
  %4791 = bitcast float %s.0.i1370 to i32, !dbg !55
  %4792 = bitcast float %2859 to i32, !dbg !55
  %4793 = and i32 %4792, -2147483648, !dbg !55
  %4794 = or i32 %4793, %4791, !dbg !55
  %4795 = bitcast i32 %4794 to float, !dbg !55
  br label %__nv_tanhf.exit1383, !dbg !55

__internal_fmad.exit3.i1372:                      ; preds = %__nv_tanhf.exit1364
  %4796 = fmul float %2859, %2859, !dbg !55
  %4797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1373 = icmp eq i32 %4797, 0, !dbg !55
  %4798 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4796, float 0xBFAAC795C0000000) #5, !dbg !55
  %4799 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4796, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1374 = select i1 %.not1.i1373, float %4799, float %4798, !dbg !55
  %4800 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1375 = icmp eq i32 %4800, 0, !dbg !55
  %4801 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1374, float %4796, float 0x3FC10B2820000000) #5, !dbg !55
  %4802 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1374, float %4796, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1376 = select i1 %.not2.i1375, float %4802, float %4801, !dbg !55
  %4803 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1377 = icmp eq i32 %4803, 0, !dbg !55
  %4804 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1376, float %4796, float 0xBFD5553DA0000000) #5, !dbg !55
  %4805 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1376, float %4796, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1378 = select i1 %.not3.i1377, float %4805, float %4804, !dbg !55
  %4806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1379 = icmp eq i32 %4806, 0, !dbg !55
  %4807 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1378, float %4796, float 0.000000e+00) #5, !dbg !55
  %4808 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1378, float %4796, float 0.000000e+00) #5, !dbg !55
  %.04.i1380 = select i1 %.not4.i1379, float %4808, float %4807, !dbg !55
  %4809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1381 = icmp eq i32 %4809, 0, !dbg !55
  %4810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1380, float %2859, float %2859) #5, !dbg !55
  %4811 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1380, float %2859, float %2859) #5, !dbg !55
  %.02.i1382 = select i1 %.not5.i1381, float %4811, float %4810, !dbg !55
  br label %__nv_tanhf.exit1383, !dbg !55

__nv_tanhf.exit1383:                              ; preds = %__internal_fmad.exit1.i1367, %__internal_fmad.exit3.i1372
  %s.1.i1371 = phi float [ %4795, %__internal_fmad.exit1.i1367 ], [ %.02.i1382, %__internal_fmad.exit3.i1372 ], !dbg !55
  %4812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1384 = icmp eq i32 %4812, 0, !dbg !55
  %4813 = tail call float @llvm.nvvm.fabs.ftz.f(float %2860) #5, !dbg !55
  %4814 = tail call float @llvm.nvvm.fabs.f(float %2860) #5, !dbg !55
  %.01.i1385 = select i1 %.not.i1384, float %4814, float %4813, !dbg !55
  %4815 = fcmp ult float %.01.i1385, 0x3FE3333340000000, !dbg !55
  br i1 %4815, label %__internal_fmad.exit3.i1391, label %__internal_fmad.exit1.i1386, !dbg !55

__internal_fmad.exit1.i1386:                      ; preds = %__nv_tanhf.exit1383
  %4816 = fmul float %.01.i1385, 0x4007154760000000, !dbg !55
  %4817 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4816) #5, !dbg !55
  %4818 = fadd float %4817, 1.000000e+00, !dbg !55
  %4819 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4818) #6, !dbg !55, !srcloc !56
  %4820 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1387 = icmp eq i32 %4820, 0, !dbg !55
  %4821 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4819, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4822 = tail call float @llvm.nvvm.fma.rn.f(float %4819, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1388 = select i1 %.not6.i1387, float %4822, float %4821, !dbg !55
  %4823 = fcmp oge float %.01.i1385, 0x4022059680000000, !dbg !55
  %s.0.i1389 = select i1 %4823, float 1.000000e+00, float %.03.i1388, !dbg !55
  %4824 = bitcast float %s.0.i1389 to i32, !dbg !55
  %4825 = bitcast float %2860 to i32, !dbg !55
  %4826 = and i32 %4825, -2147483648, !dbg !55
  %4827 = or i32 %4826, %4824, !dbg !55
  %4828 = bitcast i32 %4827 to float, !dbg !55
  br label %__nv_tanhf.exit1402, !dbg !55

__internal_fmad.exit3.i1391:                      ; preds = %__nv_tanhf.exit1383
  %4829 = fmul float %2860, %2860, !dbg !55
  %4830 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1392 = icmp eq i32 %4830, 0, !dbg !55
  %4831 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4829, float 0xBFAAC795C0000000) #5, !dbg !55
  %4832 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4829, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1393 = select i1 %.not1.i1392, float %4832, float %4831, !dbg !55
  %4833 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1394 = icmp eq i32 %4833, 0, !dbg !55
  %4834 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1393, float %4829, float 0x3FC10B2820000000) #5, !dbg !55
  %4835 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1393, float %4829, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1395 = select i1 %.not2.i1394, float %4835, float %4834, !dbg !55
  %4836 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1396 = icmp eq i32 %4836, 0, !dbg !55
  %4837 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1395, float %4829, float 0xBFD5553DA0000000) #5, !dbg !55
  %4838 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1395, float %4829, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1397 = select i1 %.not3.i1396, float %4838, float %4837, !dbg !55
  %4839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1398 = icmp eq i32 %4839, 0, !dbg !55
  %4840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1397, float %4829, float 0.000000e+00) #5, !dbg !55
  %4841 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1397, float %4829, float 0.000000e+00) #5, !dbg !55
  %.04.i1399 = select i1 %.not4.i1398, float %4841, float %4840, !dbg !55
  %4842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1400 = icmp eq i32 %4842, 0, !dbg !55
  %4843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1399, float %2860, float %2860) #5, !dbg !55
  %4844 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1399, float %2860, float %2860) #5, !dbg !55
  %.02.i1401 = select i1 %.not5.i1400, float %4844, float %4843, !dbg !55
  br label %__nv_tanhf.exit1402, !dbg !55

__nv_tanhf.exit1402:                              ; preds = %__internal_fmad.exit1.i1386, %__internal_fmad.exit3.i1391
  %s.1.i1390 = phi float [ %4828, %__internal_fmad.exit1.i1386 ], [ %.02.i1401, %__internal_fmad.exit3.i1391 ], !dbg !55
  %4845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1403 = icmp eq i32 %4845, 0, !dbg !55
  %4846 = tail call float @llvm.nvvm.fabs.ftz.f(float %2861) #5, !dbg !55
  %4847 = tail call float @llvm.nvvm.fabs.f(float %2861) #5, !dbg !55
  %.01.i1404 = select i1 %.not.i1403, float %4847, float %4846, !dbg !55
  %4848 = fcmp ult float %.01.i1404, 0x3FE3333340000000, !dbg !55
  br i1 %4848, label %__internal_fmad.exit3.i1410, label %__internal_fmad.exit1.i1405, !dbg !55

__internal_fmad.exit1.i1405:                      ; preds = %__nv_tanhf.exit1402
  %4849 = fmul float %.01.i1404, 0x4007154760000000, !dbg !55
  %4850 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4849) #5, !dbg !55
  %4851 = fadd float %4850, 1.000000e+00, !dbg !55
  %4852 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4851) #6, !dbg !55, !srcloc !56
  %4853 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1406 = icmp eq i32 %4853, 0, !dbg !55
  %4854 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4852, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4855 = tail call float @llvm.nvvm.fma.rn.f(float %4852, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1407 = select i1 %.not6.i1406, float %4855, float %4854, !dbg !55
  %4856 = fcmp oge float %.01.i1404, 0x4022059680000000, !dbg !55
  %s.0.i1408 = select i1 %4856, float 1.000000e+00, float %.03.i1407, !dbg !55
  %4857 = bitcast float %s.0.i1408 to i32, !dbg !55
  %4858 = bitcast float %2861 to i32, !dbg !55
  %4859 = and i32 %4858, -2147483648, !dbg !55
  %4860 = or i32 %4859, %4857, !dbg !55
  %4861 = bitcast i32 %4860 to float, !dbg !55
  br label %__nv_tanhf.exit1421, !dbg !55

__internal_fmad.exit3.i1410:                      ; preds = %__nv_tanhf.exit1402
  %4862 = fmul float %2861, %2861, !dbg !55
  %4863 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1411 = icmp eq i32 %4863, 0, !dbg !55
  %4864 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4862, float 0xBFAAC795C0000000) #5, !dbg !55
  %4865 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4862, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1412 = select i1 %.not1.i1411, float %4865, float %4864, !dbg !55
  %4866 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1413 = icmp eq i32 %4866, 0, !dbg !55
  %4867 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1412, float %4862, float 0x3FC10B2820000000) #5, !dbg !55
  %4868 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1412, float %4862, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1414 = select i1 %.not2.i1413, float %4868, float %4867, !dbg !55
  %4869 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1415 = icmp eq i32 %4869, 0, !dbg !55
  %4870 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1414, float %4862, float 0xBFD5553DA0000000) #5, !dbg !55
  %4871 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1414, float %4862, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1416 = select i1 %.not3.i1415, float %4871, float %4870, !dbg !55
  %4872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1417 = icmp eq i32 %4872, 0, !dbg !55
  %4873 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1416, float %4862, float 0.000000e+00) #5, !dbg !55
  %4874 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1416, float %4862, float 0.000000e+00) #5, !dbg !55
  %.04.i1418 = select i1 %.not4.i1417, float %4874, float %4873, !dbg !55
  %4875 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1419 = icmp eq i32 %4875, 0, !dbg !55
  %4876 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1418, float %2861, float %2861) #5, !dbg !55
  %4877 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1418, float %2861, float %2861) #5, !dbg !55
  %.02.i1420 = select i1 %.not5.i1419, float %4877, float %4876, !dbg !55
  br label %__nv_tanhf.exit1421, !dbg !55

__nv_tanhf.exit1421:                              ; preds = %__internal_fmad.exit1.i1405, %__internal_fmad.exit3.i1410
  %s.1.i1409 = phi float [ %4861, %__internal_fmad.exit1.i1405 ], [ %.02.i1420, %__internal_fmad.exit3.i1410 ], !dbg !55
  %4878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1422 = icmp eq i32 %4878, 0, !dbg !55
  %4879 = tail call float @llvm.nvvm.fabs.ftz.f(float %2862) #5, !dbg !55
  %4880 = tail call float @llvm.nvvm.fabs.f(float %2862) #5, !dbg !55
  %.01.i1423 = select i1 %.not.i1422, float %4880, float %4879, !dbg !55
  %4881 = fcmp ult float %.01.i1423, 0x3FE3333340000000, !dbg !55
  br i1 %4881, label %__internal_fmad.exit3.i1429, label %__internal_fmad.exit1.i1424, !dbg !55

__internal_fmad.exit1.i1424:                      ; preds = %__nv_tanhf.exit1421
  %4882 = fmul float %.01.i1423, 0x4007154760000000, !dbg !55
  %4883 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4882) #5, !dbg !55
  %4884 = fadd float %4883, 1.000000e+00, !dbg !55
  %4885 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4884) #6, !dbg !55, !srcloc !56
  %4886 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1425 = icmp eq i32 %4886, 0, !dbg !55
  %4887 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4885, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4888 = tail call float @llvm.nvvm.fma.rn.f(float %4885, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1426 = select i1 %.not6.i1425, float %4888, float %4887, !dbg !55
  %4889 = fcmp oge float %.01.i1423, 0x4022059680000000, !dbg !55
  %s.0.i1427 = select i1 %4889, float 1.000000e+00, float %.03.i1426, !dbg !55
  %4890 = bitcast float %s.0.i1427 to i32, !dbg !55
  %4891 = bitcast float %2862 to i32, !dbg !55
  %4892 = and i32 %4891, -2147483648, !dbg !55
  %4893 = or i32 %4892, %4890, !dbg !55
  %4894 = bitcast i32 %4893 to float, !dbg !55
  br label %__nv_tanhf.exit1440, !dbg !55

__internal_fmad.exit3.i1429:                      ; preds = %__nv_tanhf.exit1421
  %4895 = fmul float %2862, %2862, !dbg !55
  %4896 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1430 = icmp eq i32 %4896, 0, !dbg !55
  %4897 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4895, float 0xBFAAC795C0000000) #5, !dbg !55
  %4898 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4895, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1431 = select i1 %.not1.i1430, float %4898, float %4897, !dbg !55
  %4899 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1432 = icmp eq i32 %4899, 0, !dbg !55
  %4900 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1431, float %4895, float 0x3FC10B2820000000) #5, !dbg !55
  %4901 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1431, float %4895, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1433 = select i1 %.not2.i1432, float %4901, float %4900, !dbg !55
  %4902 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1434 = icmp eq i32 %4902, 0, !dbg !55
  %4903 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1433, float %4895, float 0xBFD5553DA0000000) #5, !dbg !55
  %4904 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1433, float %4895, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1435 = select i1 %.not3.i1434, float %4904, float %4903, !dbg !55
  %4905 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1436 = icmp eq i32 %4905, 0, !dbg !55
  %4906 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1435, float %4895, float 0.000000e+00) #5, !dbg !55
  %4907 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1435, float %4895, float 0.000000e+00) #5, !dbg !55
  %.04.i1437 = select i1 %.not4.i1436, float %4907, float %4906, !dbg !55
  %4908 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1438 = icmp eq i32 %4908, 0, !dbg !55
  %4909 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1437, float %2862, float %2862) #5, !dbg !55
  %4910 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1437, float %2862, float %2862) #5, !dbg !55
  %.02.i1439 = select i1 %.not5.i1438, float %4910, float %4909, !dbg !55
  br label %__nv_tanhf.exit1440, !dbg !55

__nv_tanhf.exit1440:                              ; preds = %__internal_fmad.exit1.i1424, %__internal_fmad.exit3.i1429
  %s.1.i1428 = phi float [ %4894, %__internal_fmad.exit1.i1424 ], [ %.02.i1439, %__internal_fmad.exit3.i1429 ], !dbg !55
  %4911 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1441 = icmp eq i32 %4911, 0, !dbg !55
  %4912 = tail call float @llvm.nvvm.fabs.ftz.f(float %2863) #5, !dbg !55
  %4913 = tail call float @llvm.nvvm.fabs.f(float %2863) #5, !dbg !55
  %.01.i1442 = select i1 %.not.i1441, float %4913, float %4912, !dbg !55
  %4914 = fcmp ult float %.01.i1442, 0x3FE3333340000000, !dbg !55
  br i1 %4914, label %__internal_fmad.exit3.i1448, label %__internal_fmad.exit1.i1443, !dbg !55

__internal_fmad.exit1.i1443:                      ; preds = %__nv_tanhf.exit1440
  %4915 = fmul float %.01.i1442, 0x4007154760000000, !dbg !55
  %4916 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4915) #5, !dbg !55
  %4917 = fadd float %4916, 1.000000e+00, !dbg !55
  %4918 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4917) #6, !dbg !55, !srcloc !56
  %4919 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1444 = icmp eq i32 %4919, 0, !dbg !55
  %4920 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4918, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4921 = tail call float @llvm.nvvm.fma.rn.f(float %4918, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1445 = select i1 %.not6.i1444, float %4921, float %4920, !dbg !55
  %4922 = fcmp oge float %.01.i1442, 0x4022059680000000, !dbg !55
  %s.0.i1446 = select i1 %4922, float 1.000000e+00, float %.03.i1445, !dbg !55
  %4923 = bitcast float %s.0.i1446 to i32, !dbg !55
  %4924 = bitcast float %2863 to i32, !dbg !55
  %4925 = and i32 %4924, -2147483648, !dbg !55
  %4926 = or i32 %4925, %4923, !dbg !55
  %4927 = bitcast i32 %4926 to float, !dbg !55
  br label %__nv_tanhf.exit1459, !dbg !55

__internal_fmad.exit3.i1448:                      ; preds = %__nv_tanhf.exit1440
  %4928 = fmul float %2863, %2863, !dbg !55
  %4929 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1449 = icmp eq i32 %4929, 0, !dbg !55
  %4930 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4928, float 0xBFAAC795C0000000) #5, !dbg !55
  %4931 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4928, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1450 = select i1 %.not1.i1449, float %4931, float %4930, !dbg !55
  %4932 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1451 = icmp eq i32 %4932, 0, !dbg !55
  %4933 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1450, float %4928, float 0x3FC10B2820000000) #5, !dbg !55
  %4934 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1450, float %4928, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1452 = select i1 %.not2.i1451, float %4934, float %4933, !dbg !55
  %4935 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1453 = icmp eq i32 %4935, 0, !dbg !55
  %4936 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1452, float %4928, float 0xBFD5553DA0000000) #5, !dbg !55
  %4937 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1452, float %4928, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1454 = select i1 %.not3.i1453, float %4937, float %4936, !dbg !55
  %4938 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1455 = icmp eq i32 %4938, 0, !dbg !55
  %4939 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1454, float %4928, float 0.000000e+00) #5, !dbg !55
  %4940 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1454, float %4928, float 0.000000e+00) #5, !dbg !55
  %.04.i1456 = select i1 %.not4.i1455, float %4940, float %4939, !dbg !55
  %4941 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1457 = icmp eq i32 %4941, 0, !dbg !55
  %4942 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1456, float %2863, float %2863) #5, !dbg !55
  %4943 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1456, float %2863, float %2863) #5, !dbg !55
  %.02.i1458 = select i1 %.not5.i1457, float %4943, float %4942, !dbg !55
  br label %__nv_tanhf.exit1459, !dbg !55

__nv_tanhf.exit1459:                              ; preds = %__internal_fmad.exit1.i1443, %__internal_fmad.exit3.i1448
  %s.1.i1447 = phi float [ %4927, %__internal_fmad.exit1.i1443 ], [ %.02.i1458, %__internal_fmad.exit3.i1448 ], !dbg !55
  %4944 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1460 = icmp eq i32 %4944, 0, !dbg !55
  %4945 = tail call float @llvm.nvvm.fabs.ftz.f(float %2864) #5, !dbg !55
  %4946 = tail call float @llvm.nvvm.fabs.f(float %2864) #5, !dbg !55
  %.01.i1461 = select i1 %.not.i1460, float %4946, float %4945, !dbg !55
  %4947 = fcmp ult float %.01.i1461, 0x3FE3333340000000, !dbg !55
  br i1 %4947, label %__internal_fmad.exit3.i1467, label %__internal_fmad.exit1.i1462, !dbg !55

__internal_fmad.exit1.i1462:                      ; preds = %__nv_tanhf.exit1459
  %4948 = fmul float %.01.i1461, 0x4007154760000000, !dbg !55
  %4949 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4948) #5, !dbg !55
  %4950 = fadd float %4949, 1.000000e+00, !dbg !55
  %4951 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4950) #6, !dbg !55, !srcloc !56
  %4952 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1463 = icmp eq i32 %4952, 0, !dbg !55
  %4953 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4951, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4954 = tail call float @llvm.nvvm.fma.rn.f(float %4951, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1464 = select i1 %.not6.i1463, float %4954, float %4953, !dbg !55
  %4955 = fcmp oge float %.01.i1461, 0x4022059680000000, !dbg !55
  %s.0.i1465 = select i1 %4955, float 1.000000e+00, float %.03.i1464, !dbg !55
  %4956 = bitcast float %s.0.i1465 to i32, !dbg !55
  %4957 = bitcast float %2864 to i32, !dbg !55
  %4958 = and i32 %4957, -2147483648, !dbg !55
  %4959 = or i32 %4958, %4956, !dbg !55
  %4960 = bitcast i32 %4959 to float, !dbg !55
  br label %__nv_tanhf.exit1478, !dbg !55

__internal_fmad.exit3.i1467:                      ; preds = %__nv_tanhf.exit1459
  %4961 = fmul float %2864, %2864, !dbg !55
  %4962 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1468 = icmp eq i32 %4962, 0, !dbg !55
  %4963 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4961, float 0xBFAAC795C0000000) #5, !dbg !55
  %4964 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4961, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1469 = select i1 %.not1.i1468, float %4964, float %4963, !dbg !55
  %4965 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1470 = icmp eq i32 %4965, 0, !dbg !55
  %4966 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1469, float %4961, float 0x3FC10B2820000000) #5, !dbg !55
  %4967 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1469, float %4961, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1471 = select i1 %.not2.i1470, float %4967, float %4966, !dbg !55
  %4968 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1472 = icmp eq i32 %4968, 0, !dbg !55
  %4969 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1471, float %4961, float 0xBFD5553DA0000000) #5, !dbg !55
  %4970 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1471, float %4961, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1473 = select i1 %.not3.i1472, float %4970, float %4969, !dbg !55
  %4971 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1474 = icmp eq i32 %4971, 0, !dbg !55
  %4972 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1473, float %4961, float 0.000000e+00) #5, !dbg !55
  %4973 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1473, float %4961, float 0.000000e+00) #5, !dbg !55
  %.04.i1475 = select i1 %.not4.i1474, float %4973, float %4972, !dbg !55
  %4974 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1476 = icmp eq i32 %4974, 0, !dbg !55
  %4975 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1475, float %2864, float %2864) #5, !dbg !55
  %4976 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1475, float %2864, float %2864) #5, !dbg !55
  %.02.i1477 = select i1 %.not5.i1476, float %4976, float %4975, !dbg !55
  br label %__nv_tanhf.exit1478, !dbg !55

__nv_tanhf.exit1478:                              ; preds = %__internal_fmad.exit1.i1462, %__internal_fmad.exit3.i1467
  %s.1.i1466 = phi float [ %4960, %__internal_fmad.exit1.i1462 ], [ %.02.i1477, %__internal_fmad.exit3.i1467 ], !dbg !55
  %4977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1479 = icmp eq i32 %4977, 0, !dbg !55
  %4978 = tail call float @llvm.nvvm.fabs.ftz.f(float %2865) #5, !dbg !55
  %4979 = tail call float @llvm.nvvm.fabs.f(float %2865) #5, !dbg !55
  %.01.i1480 = select i1 %.not.i1479, float %4979, float %4978, !dbg !55
  %4980 = fcmp ult float %.01.i1480, 0x3FE3333340000000, !dbg !55
  br i1 %4980, label %__internal_fmad.exit3.i1486, label %__internal_fmad.exit1.i1481, !dbg !55

__internal_fmad.exit1.i1481:                      ; preds = %__nv_tanhf.exit1478
  %4981 = fmul float %.01.i1480, 0x4007154760000000, !dbg !55
  %4982 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4981) #5, !dbg !55
  %4983 = fadd float %4982, 1.000000e+00, !dbg !55
  %4984 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %4983) #6, !dbg !55, !srcloc !56
  %4985 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1482 = icmp eq i32 %4985, 0, !dbg !55
  %4986 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4984, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %4987 = tail call float @llvm.nvvm.fma.rn.f(float %4984, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1483 = select i1 %.not6.i1482, float %4987, float %4986, !dbg !55
  %4988 = fcmp oge float %.01.i1480, 0x4022059680000000, !dbg !55
  %s.0.i1484 = select i1 %4988, float 1.000000e+00, float %.03.i1483, !dbg !55
  %4989 = bitcast float %s.0.i1484 to i32, !dbg !55
  %4990 = bitcast float %2865 to i32, !dbg !55
  %4991 = and i32 %4990, -2147483648, !dbg !55
  %4992 = or i32 %4991, %4989, !dbg !55
  %4993 = bitcast i32 %4992 to float, !dbg !55
  br label %__nv_tanhf.exit1497, !dbg !55

__internal_fmad.exit3.i1486:                      ; preds = %__nv_tanhf.exit1478
  %4994 = fmul float %2865, %2865, !dbg !55
  %4995 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1487 = icmp eq i32 %4995, 0, !dbg !55
  %4996 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %4994, float 0xBFAAC795C0000000) #5, !dbg !55
  %4997 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %4994, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1488 = select i1 %.not1.i1487, float %4997, float %4996, !dbg !55
  %4998 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1489 = icmp eq i32 %4998, 0, !dbg !55
  %4999 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1488, float %4994, float 0x3FC10B2820000000) #5, !dbg !55
  %5000 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1488, float %4994, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1490 = select i1 %.not2.i1489, float %5000, float %4999, !dbg !55
  %5001 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1491 = icmp eq i32 %5001, 0, !dbg !55
  %5002 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1490, float %4994, float 0xBFD5553DA0000000) #5, !dbg !55
  %5003 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1490, float %4994, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1492 = select i1 %.not3.i1491, float %5003, float %5002, !dbg !55
  %5004 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1493 = icmp eq i32 %5004, 0, !dbg !55
  %5005 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1492, float %4994, float 0.000000e+00) #5, !dbg !55
  %5006 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1492, float %4994, float 0.000000e+00) #5, !dbg !55
  %.04.i1494 = select i1 %.not4.i1493, float %5006, float %5005, !dbg !55
  %5007 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1495 = icmp eq i32 %5007, 0, !dbg !55
  %5008 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1494, float %2865, float %2865) #5, !dbg !55
  %5009 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1494, float %2865, float %2865) #5, !dbg !55
  %.02.i1496 = select i1 %.not5.i1495, float %5009, float %5008, !dbg !55
  br label %__nv_tanhf.exit1497, !dbg !55

__nv_tanhf.exit1497:                              ; preds = %__internal_fmad.exit1.i1481, %__internal_fmad.exit3.i1486
  %s.1.i1485 = phi float [ %4993, %__internal_fmad.exit1.i1481 ], [ %.02.i1496, %__internal_fmad.exit3.i1486 ], !dbg !55
  %5010 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1498 = icmp eq i32 %5010, 0, !dbg !55
  %5011 = tail call float @llvm.nvvm.fabs.ftz.f(float %2866) #5, !dbg !55
  %5012 = tail call float @llvm.nvvm.fabs.f(float %2866) #5, !dbg !55
  %.01.i1499 = select i1 %.not.i1498, float %5012, float %5011, !dbg !55
  %5013 = fcmp ult float %.01.i1499, 0x3FE3333340000000, !dbg !55
  br i1 %5013, label %__internal_fmad.exit3.i1505, label %__internal_fmad.exit1.i1500, !dbg !55

__internal_fmad.exit1.i1500:                      ; preds = %__nv_tanhf.exit1497
  %5014 = fmul float %.01.i1499, 0x4007154760000000, !dbg !55
  %5015 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5014) #5, !dbg !55
  %5016 = fadd float %5015, 1.000000e+00, !dbg !55
  %5017 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5016) #6, !dbg !55, !srcloc !56
  %5018 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1501 = icmp eq i32 %5018, 0, !dbg !55
  %5019 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5017, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5020 = tail call float @llvm.nvvm.fma.rn.f(float %5017, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1502 = select i1 %.not6.i1501, float %5020, float %5019, !dbg !55
  %5021 = fcmp oge float %.01.i1499, 0x4022059680000000, !dbg !55
  %s.0.i1503 = select i1 %5021, float 1.000000e+00, float %.03.i1502, !dbg !55
  %5022 = bitcast float %s.0.i1503 to i32, !dbg !55
  %5023 = bitcast float %2866 to i32, !dbg !55
  %5024 = and i32 %5023, -2147483648, !dbg !55
  %5025 = or i32 %5024, %5022, !dbg !55
  %5026 = bitcast i32 %5025 to float, !dbg !55
  br label %__nv_tanhf.exit1516, !dbg !55

__internal_fmad.exit3.i1505:                      ; preds = %__nv_tanhf.exit1497
  %5027 = fmul float %2866, %2866, !dbg !55
  %5028 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1506 = icmp eq i32 %5028, 0, !dbg !55
  %5029 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5027, float 0xBFAAC795C0000000) #5, !dbg !55
  %5030 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5027, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1507 = select i1 %.not1.i1506, float %5030, float %5029, !dbg !55
  %5031 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1508 = icmp eq i32 %5031, 0, !dbg !55
  %5032 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1507, float %5027, float 0x3FC10B2820000000) #5, !dbg !55
  %5033 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1507, float %5027, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1509 = select i1 %.not2.i1508, float %5033, float %5032, !dbg !55
  %5034 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1510 = icmp eq i32 %5034, 0, !dbg !55
  %5035 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1509, float %5027, float 0xBFD5553DA0000000) #5, !dbg !55
  %5036 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1509, float %5027, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1511 = select i1 %.not3.i1510, float %5036, float %5035, !dbg !55
  %5037 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1512 = icmp eq i32 %5037, 0, !dbg !55
  %5038 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1511, float %5027, float 0.000000e+00) #5, !dbg !55
  %5039 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1511, float %5027, float 0.000000e+00) #5, !dbg !55
  %.04.i1513 = select i1 %.not4.i1512, float %5039, float %5038, !dbg !55
  %5040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1514 = icmp eq i32 %5040, 0, !dbg !55
  %5041 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1513, float %2866, float %2866) #5, !dbg !55
  %5042 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1513, float %2866, float %2866) #5, !dbg !55
  %.02.i1515 = select i1 %.not5.i1514, float %5042, float %5041, !dbg !55
  br label %__nv_tanhf.exit1516, !dbg !55

__nv_tanhf.exit1516:                              ; preds = %__internal_fmad.exit1.i1500, %__internal_fmad.exit3.i1505
  %s.1.i1504 = phi float [ %5026, %__internal_fmad.exit1.i1500 ], [ %.02.i1515, %__internal_fmad.exit3.i1505 ], !dbg !55
  %5043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1517 = icmp eq i32 %5043, 0, !dbg !55
  %5044 = tail call float @llvm.nvvm.fabs.ftz.f(float %2867) #5, !dbg !55
  %5045 = tail call float @llvm.nvvm.fabs.f(float %2867) #5, !dbg !55
  %.01.i1518 = select i1 %.not.i1517, float %5045, float %5044, !dbg !55
  %5046 = fcmp ult float %.01.i1518, 0x3FE3333340000000, !dbg !55
  br i1 %5046, label %__internal_fmad.exit3.i1524, label %__internal_fmad.exit1.i1519, !dbg !55

__internal_fmad.exit1.i1519:                      ; preds = %__nv_tanhf.exit1516
  %5047 = fmul float %.01.i1518, 0x4007154760000000, !dbg !55
  %5048 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5047) #5, !dbg !55
  %5049 = fadd float %5048, 1.000000e+00, !dbg !55
  %5050 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5049) #6, !dbg !55, !srcloc !56
  %5051 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1520 = icmp eq i32 %5051, 0, !dbg !55
  %5052 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5050, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5053 = tail call float @llvm.nvvm.fma.rn.f(float %5050, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1521 = select i1 %.not6.i1520, float %5053, float %5052, !dbg !55
  %5054 = fcmp oge float %.01.i1518, 0x4022059680000000, !dbg !55
  %s.0.i1522 = select i1 %5054, float 1.000000e+00, float %.03.i1521, !dbg !55
  %5055 = bitcast float %s.0.i1522 to i32, !dbg !55
  %5056 = bitcast float %2867 to i32, !dbg !55
  %5057 = and i32 %5056, -2147483648, !dbg !55
  %5058 = or i32 %5057, %5055, !dbg !55
  %5059 = bitcast i32 %5058 to float, !dbg !55
  br label %__nv_tanhf.exit1535, !dbg !55

__internal_fmad.exit3.i1524:                      ; preds = %__nv_tanhf.exit1516
  %5060 = fmul float %2867, %2867, !dbg !55
  %5061 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1525 = icmp eq i32 %5061, 0, !dbg !55
  %5062 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5060, float 0xBFAAC795C0000000) #5, !dbg !55
  %5063 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5060, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1526 = select i1 %.not1.i1525, float %5063, float %5062, !dbg !55
  %5064 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1527 = icmp eq i32 %5064, 0, !dbg !55
  %5065 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1526, float %5060, float 0x3FC10B2820000000) #5, !dbg !55
  %5066 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1526, float %5060, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1528 = select i1 %.not2.i1527, float %5066, float %5065, !dbg !55
  %5067 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1529 = icmp eq i32 %5067, 0, !dbg !55
  %5068 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1528, float %5060, float 0xBFD5553DA0000000) #5, !dbg !55
  %5069 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1528, float %5060, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1530 = select i1 %.not3.i1529, float %5069, float %5068, !dbg !55
  %5070 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1531 = icmp eq i32 %5070, 0, !dbg !55
  %5071 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1530, float %5060, float 0.000000e+00) #5, !dbg !55
  %5072 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1530, float %5060, float 0.000000e+00) #5, !dbg !55
  %.04.i1532 = select i1 %.not4.i1531, float %5072, float %5071, !dbg !55
  %5073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1533 = icmp eq i32 %5073, 0, !dbg !55
  %5074 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1532, float %2867, float %2867) #5, !dbg !55
  %5075 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1532, float %2867, float %2867) #5, !dbg !55
  %.02.i1534 = select i1 %.not5.i1533, float %5075, float %5074, !dbg !55
  br label %__nv_tanhf.exit1535, !dbg !55

__nv_tanhf.exit1535:                              ; preds = %__internal_fmad.exit1.i1519, %__internal_fmad.exit3.i1524
  %s.1.i1523 = phi float [ %5059, %__internal_fmad.exit1.i1519 ], [ %.02.i1534, %__internal_fmad.exit3.i1524 ], !dbg !55
  %5076 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1536 = icmp eq i32 %5076, 0, !dbg !55
  %5077 = tail call float @llvm.nvvm.fabs.ftz.f(float %2868) #5, !dbg !55
  %5078 = tail call float @llvm.nvvm.fabs.f(float %2868) #5, !dbg !55
  %.01.i1537 = select i1 %.not.i1536, float %5078, float %5077, !dbg !55
  %5079 = fcmp ult float %.01.i1537, 0x3FE3333340000000, !dbg !55
  br i1 %5079, label %__internal_fmad.exit3.i1543, label %__internal_fmad.exit1.i1538, !dbg !55

__internal_fmad.exit1.i1538:                      ; preds = %__nv_tanhf.exit1535
  %5080 = fmul float %.01.i1537, 0x4007154760000000, !dbg !55
  %5081 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5080) #5, !dbg !55
  %5082 = fadd float %5081, 1.000000e+00, !dbg !55
  %5083 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5082) #6, !dbg !55, !srcloc !56
  %5084 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1539 = icmp eq i32 %5084, 0, !dbg !55
  %5085 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5083, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5086 = tail call float @llvm.nvvm.fma.rn.f(float %5083, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1540 = select i1 %.not6.i1539, float %5086, float %5085, !dbg !55
  %5087 = fcmp oge float %.01.i1537, 0x4022059680000000, !dbg !55
  %s.0.i1541 = select i1 %5087, float 1.000000e+00, float %.03.i1540, !dbg !55
  %5088 = bitcast float %s.0.i1541 to i32, !dbg !55
  %5089 = bitcast float %2868 to i32, !dbg !55
  %5090 = and i32 %5089, -2147483648, !dbg !55
  %5091 = or i32 %5090, %5088, !dbg !55
  %5092 = bitcast i32 %5091 to float, !dbg !55
  br label %__nv_tanhf.exit1554, !dbg !55

__internal_fmad.exit3.i1543:                      ; preds = %__nv_tanhf.exit1535
  %5093 = fmul float %2868, %2868, !dbg !55
  %5094 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1544 = icmp eq i32 %5094, 0, !dbg !55
  %5095 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5093, float 0xBFAAC795C0000000) #5, !dbg !55
  %5096 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5093, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1545 = select i1 %.not1.i1544, float %5096, float %5095, !dbg !55
  %5097 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1546 = icmp eq i32 %5097, 0, !dbg !55
  %5098 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1545, float %5093, float 0x3FC10B2820000000) #5, !dbg !55
  %5099 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1545, float %5093, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1547 = select i1 %.not2.i1546, float %5099, float %5098, !dbg !55
  %5100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1548 = icmp eq i32 %5100, 0, !dbg !55
  %5101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1547, float %5093, float 0xBFD5553DA0000000) #5, !dbg !55
  %5102 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1547, float %5093, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1549 = select i1 %.not3.i1548, float %5102, float %5101, !dbg !55
  %5103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1550 = icmp eq i32 %5103, 0, !dbg !55
  %5104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1549, float %5093, float 0.000000e+00) #5, !dbg !55
  %5105 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1549, float %5093, float 0.000000e+00) #5, !dbg !55
  %.04.i1551 = select i1 %.not4.i1550, float %5105, float %5104, !dbg !55
  %5106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1552 = icmp eq i32 %5106, 0, !dbg !55
  %5107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1551, float %2868, float %2868) #5, !dbg !55
  %5108 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1551, float %2868, float %2868) #5, !dbg !55
  %.02.i1553 = select i1 %.not5.i1552, float %5108, float %5107, !dbg !55
  br label %__nv_tanhf.exit1554, !dbg !55

__nv_tanhf.exit1554:                              ; preds = %__internal_fmad.exit1.i1538, %__internal_fmad.exit3.i1543
  %s.1.i1542 = phi float [ %5092, %__internal_fmad.exit1.i1538 ], [ %.02.i1553, %__internal_fmad.exit3.i1543 ], !dbg !55
  %5109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1555 = icmp eq i32 %5109, 0, !dbg !55
  %5110 = tail call float @llvm.nvvm.fabs.ftz.f(float %2869) #5, !dbg !55
  %5111 = tail call float @llvm.nvvm.fabs.f(float %2869) #5, !dbg !55
  %.01.i1556 = select i1 %.not.i1555, float %5111, float %5110, !dbg !55
  %5112 = fcmp ult float %.01.i1556, 0x3FE3333340000000, !dbg !55
  br i1 %5112, label %__internal_fmad.exit3.i1562, label %__internal_fmad.exit1.i1557, !dbg !55

__internal_fmad.exit1.i1557:                      ; preds = %__nv_tanhf.exit1554
  %5113 = fmul float %.01.i1556, 0x4007154760000000, !dbg !55
  %5114 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5113) #5, !dbg !55
  %5115 = fadd float %5114, 1.000000e+00, !dbg !55
  %5116 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5115) #6, !dbg !55, !srcloc !56
  %5117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1558 = icmp eq i32 %5117, 0, !dbg !55
  %5118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5116, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5119 = tail call float @llvm.nvvm.fma.rn.f(float %5116, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1559 = select i1 %.not6.i1558, float %5119, float %5118, !dbg !55
  %5120 = fcmp oge float %.01.i1556, 0x4022059680000000, !dbg !55
  %s.0.i1560 = select i1 %5120, float 1.000000e+00, float %.03.i1559, !dbg !55
  %5121 = bitcast float %s.0.i1560 to i32, !dbg !55
  %5122 = bitcast float %2869 to i32, !dbg !55
  %5123 = and i32 %5122, -2147483648, !dbg !55
  %5124 = or i32 %5123, %5121, !dbg !55
  %5125 = bitcast i32 %5124 to float, !dbg !55
  br label %__nv_tanhf.exit1573, !dbg !55

__internal_fmad.exit3.i1562:                      ; preds = %__nv_tanhf.exit1554
  %5126 = fmul float %2869, %2869, !dbg !55
  %5127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1563 = icmp eq i32 %5127, 0, !dbg !55
  %5128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5126, float 0xBFAAC795C0000000) #5, !dbg !55
  %5129 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5126, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1564 = select i1 %.not1.i1563, float %5129, float %5128, !dbg !55
  %5130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1565 = icmp eq i32 %5130, 0, !dbg !55
  %5131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1564, float %5126, float 0x3FC10B2820000000) #5, !dbg !55
  %5132 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1564, float %5126, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1566 = select i1 %.not2.i1565, float %5132, float %5131, !dbg !55
  %5133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1567 = icmp eq i32 %5133, 0, !dbg !55
  %5134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1566, float %5126, float 0xBFD5553DA0000000) #5, !dbg !55
  %5135 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1566, float %5126, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1568 = select i1 %.not3.i1567, float %5135, float %5134, !dbg !55
  %5136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1569 = icmp eq i32 %5136, 0, !dbg !55
  %5137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1568, float %5126, float 0.000000e+00) #5, !dbg !55
  %5138 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1568, float %5126, float 0.000000e+00) #5, !dbg !55
  %.04.i1570 = select i1 %.not4.i1569, float %5138, float %5137, !dbg !55
  %5139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1571 = icmp eq i32 %5139, 0, !dbg !55
  %5140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1570, float %2869, float %2869) #5, !dbg !55
  %5141 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1570, float %2869, float %2869) #5, !dbg !55
  %.02.i1572 = select i1 %.not5.i1571, float %5141, float %5140, !dbg !55
  br label %__nv_tanhf.exit1573, !dbg !55

__nv_tanhf.exit1573:                              ; preds = %__internal_fmad.exit1.i1557, %__internal_fmad.exit3.i1562
  %s.1.i1561 = phi float [ %5125, %__internal_fmad.exit1.i1557 ], [ %.02.i1572, %__internal_fmad.exit3.i1562 ], !dbg !55
  %5142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1574 = icmp eq i32 %5142, 0, !dbg !55
  %5143 = tail call float @llvm.nvvm.fabs.ftz.f(float %2870) #5, !dbg !55
  %5144 = tail call float @llvm.nvvm.fabs.f(float %2870) #5, !dbg !55
  %.01.i1575 = select i1 %.not.i1574, float %5144, float %5143, !dbg !55
  %5145 = fcmp ult float %.01.i1575, 0x3FE3333340000000, !dbg !55
  br i1 %5145, label %__internal_fmad.exit3.i1581, label %__internal_fmad.exit1.i1576, !dbg !55

__internal_fmad.exit1.i1576:                      ; preds = %__nv_tanhf.exit1573
  %5146 = fmul float %.01.i1575, 0x4007154760000000, !dbg !55
  %5147 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5146) #5, !dbg !55
  %5148 = fadd float %5147, 1.000000e+00, !dbg !55
  %5149 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5148) #6, !dbg !55, !srcloc !56
  %5150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1577 = icmp eq i32 %5150, 0, !dbg !55
  %5151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5149, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5152 = tail call float @llvm.nvvm.fma.rn.f(float %5149, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1578 = select i1 %.not6.i1577, float %5152, float %5151, !dbg !55
  %5153 = fcmp oge float %.01.i1575, 0x4022059680000000, !dbg !55
  %s.0.i1579 = select i1 %5153, float 1.000000e+00, float %.03.i1578, !dbg !55
  %5154 = bitcast float %s.0.i1579 to i32, !dbg !55
  %5155 = bitcast float %2870 to i32, !dbg !55
  %5156 = and i32 %5155, -2147483648, !dbg !55
  %5157 = or i32 %5156, %5154, !dbg !55
  %5158 = bitcast i32 %5157 to float, !dbg !55
  br label %__nv_tanhf.exit1592, !dbg !55

__internal_fmad.exit3.i1581:                      ; preds = %__nv_tanhf.exit1573
  %5159 = fmul float %2870, %2870, !dbg !55
  %5160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1582 = icmp eq i32 %5160, 0, !dbg !55
  %5161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5159, float 0xBFAAC795C0000000) #5, !dbg !55
  %5162 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5159, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1583 = select i1 %.not1.i1582, float %5162, float %5161, !dbg !55
  %5163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1584 = icmp eq i32 %5163, 0, !dbg !55
  %5164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1583, float %5159, float 0x3FC10B2820000000) #5, !dbg !55
  %5165 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1583, float %5159, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1585 = select i1 %.not2.i1584, float %5165, float %5164, !dbg !55
  %5166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1586 = icmp eq i32 %5166, 0, !dbg !55
  %5167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1585, float %5159, float 0xBFD5553DA0000000) #5, !dbg !55
  %5168 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1585, float %5159, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1587 = select i1 %.not3.i1586, float %5168, float %5167, !dbg !55
  %5169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1588 = icmp eq i32 %5169, 0, !dbg !55
  %5170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1587, float %5159, float 0.000000e+00) #5, !dbg !55
  %5171 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1587, float %5159, float 0.000000e+00) #5, !dbg !55
  %.04.i1589 = select i1 %.not4.i1588, float %5171, float %5170, !dbg !55
  %5172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1590 = icmp eq i32 %5172, 0, !dbg !55
  %5173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1589, float %2870, float %2870) #5, !dbg !55
  %5174 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1589, float %2870, float %2870) #5, !dbg !55
  %.02.i1591 = select i1 %.not5.i1590, float %5174, float %5173, !dbg !55
  br label %__nv_tanhf.exit1592, !dbg !55

__nv_tanhf.exit1592:                              ; preds = %__internal_fmad.exit1.i1576, %__internal_fmad.exit3.i1581
  %s.1.i1580 = phi float [ %5158, %__internal_fmad.exit1.i1576 ], [ %.02.i1591, %__internal_fmad.exit3.i1581 ], !dbg !55
  %5175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1593 = icmp eq i32 %5175, 0, !dbg !55
  %5176 = tail call float @llvm.nvvm.fabs.ftz.f(float %2871) #5, !dbg !55
  %5177 = tail call float @llvm.nvvm.fabs.f(float %2871) #5, !dbg !55
  %.01.i1594 = select i1 %.not.i1593, float %5177, float %5176, !dbg !55
  %5178 = fcmp ult float %.01.i1594, 0x3FE3333340000000, !dbg !55
  br i1 %5178, label %__internal_fmad.exit3.i1600, label %__internal_fmad.exit1.i1595, !dbg !55

__internal_fmad.exit1.i1595:                      ; preds = %__nv_tanhf.exit1592
  %5179 = fmul float %.01.i1594, 0x4007154760000000, !dbg !55
  %5180 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5179) #5, !dbg !55
  %5181 = fadd float %5180, 1.000000e+00, !dbg !55
  %5182 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5181) #6, !dbg !55, !srcloc !56
  %5183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1596 = icmp eq i32 %5183, 0, !dbg !55
  %5184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5182, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5185 = tail call float @llvm.nvvm.fma.rn.f(float %5182, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1597 = select i1 %.not6.i1596, float %5185, float %5184, !dbg !55
  %5186 = fcmp oge float %.01.i1594, 0x4022059680000000, !dbg !55
  %s.0.i1598 = select i1 %5186, float 1.000000e+00, float %.03.i1597, !dbg !55
  %5187 = bitcast float %s.0.i1598 to i32, !dbg !55
  %5188 = bitcast float %2871 to i32, !dbg !55
  %5189 = and i32 %5188, -2147483648, !dbg !55
  %5190 = or i32 %5189, %5187, !dbg !55
  %5191 = bitcast i32 %5190 to float, !dbg !55
  br label %__nv_tanhf.exit1611, !dbg !55

__internal_fmad.exit3.i1600:                      ; preds = %__nv_tanhf.exit1592
  %5192 = fmul float %2871, %2871, !dbg !55
  %5193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1601 = icmp eq i32 %5193, 0, !dbg !55
  %5194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5192, float 0xBFAAC795C0000000) #5, !dbg !55
  %5195 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5192, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1602 = select i1 %.not1.i1601, float %5195, float %5194, !dbg !55
  %5196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1603 = icmp eq i32 %5196, 0, !dbg !55
  %5197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1602, float %5192, float 0x3FC10B2820000000) #5, !dbg !55
  %5198 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1602, float %5192, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1604 = select i1 %.not2.i1603, float %5198, float %5197, !dbg !55
  %5199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1605 = icmp eq i32 %5199, 0, !dbg !55
  %5200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1604, float %5192, float 0xBFD5553DA0000000) #5, !dbg !55
  %5201 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1604, float %5192, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1606 = select i1 %.not3.i1605, float %5201, float %5200, !dbg !55
  %5202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1607 = icmp eq i32 %5202, 0, !dbg !55
  %5203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1606, float %5192, float 0.000000e+00) #5, !dbg !55
  %5204 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1606, float %5192, float 0.000000e+00) #5, !dbg !55
  %.04.i1608 = select i1 %.not4.i1607, float %5204, float %5203, !dbg !55
  %5205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1609 = icmp eq i32 %5205, 0, !dbg !55
  %5206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1608, float %2871, float %2871) #5, !dbg !55
  %5207 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1608, float %2871, float %2871) #5, !dbg !55
  %.02.i1610 = select i1 %.not5.i1609, float %5207, float %5206, !dbg !55
  br label %__nv_tanhf.exit1611, !dbg !55

__nv_tanhf.exit1611:                              ; preds = %__internal_fmad.exit1.i1595, %__internal_fmad.exit3.i1600
  %s.1.i1599 = phi float [ %5191, %__internal_fmad.exit1.i1595 ], [ %.02.i1610, %__internal_fmad.exit3.i1600 ], !dbg !55
  %5208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1612 = icmp eq i32 %5208, 0, !dbg !55
  %5209 = tail call float @llvm.nvvm.fabs.ftz.f(float %2872) #5, !dbg !55
  %5210 = tail call float @llvm.nvvm.fabs.f(float %2872) #5, !dbg !55
  %.01.i1613 = select i1 %.not.i1612, float %5210, float %5209, !dbg !55
  %5211 = fcmp ult float %.01.i1613, 0x3FE3333340000000, !dbg !55
  br i1 %5211, label %__internal_fmad.exit3.i1619, label %__internal_fmad.exit1.i1614, !dbg !55

__internal_fmad.exit1.i1614:                      ; preds = %__nv_tanhf.exit1611
  %5212 = fmul float %.01.i1613, 0x4007154760000000, !dbg !55
  %5213 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5212) #5, !dbg !55
  %5214 = fadd float %5213, 1.000000e+00, !dbg !55
  %5215 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5214) #6, !dbg !55, !srcloc !56
  %5216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1615 = icmp eq i32 %5216, 0, !dbg !55
  %5217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5215, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5218 = tail call float @llvm.nvvm.fma.rn.f(float %5215, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1616 = select i1 %.not6.i1615, float %5218, float %5217, !dbg !55
  %5219 = fcmp oge float %.01.i1613, 0x4022059680000000, !dbg !55
  %s.0.i1617 = select i1 %5219, float 1.000000e+00, float %.03.i1616, !dbg !55
  %5220 = bitcast float %s.0.i1617 to i32, !dbg !55
  %5221 = bitcast float %2872 to i32, !dbg !55
  %5222 = and i32 %5221, -2147483648, !dbg !55
  %5223 = or i32 %5222, %5220, !dbg !55
  %5224 = bitcast i32 %5223 to float, !dbg !55
  br label %__nv_tanhf.exit1630, !dbg !55

__internal_fmad.exit3.i1619:                      ; preds = %__nv_tanhf.exit1611
  %5225 = fmul float %2872, %2872, !dbg !55
  %5226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1620 = icmp eq i32 %5226, 0, !dbg !55
  %5227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5225, float 0xBFAAC795C0000000) #5, !dbg !55
  %5228 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5225, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1621 = select i1 %.not1.i1620, float %5228, float %5227, !dbg !55
  %5229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1622 = icmp eq i32 %5229, 0, !dbg !55
  %5230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1621, float %5225, float 0x3FC10B2820000000) #5, !dbg !55
  %5231 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1621, float %5225, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1623 = select i1 %.not2.i1622, float %5231, float %5230, !dbg !55
  %5232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1624 = icmp eq i32 %5232, 0, !dbg !55
  %5233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1623, float %5225, float 0xBFD5553DA0000000) #5, !dbg !55
  %5234 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1623, float %5225, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1625 = select i1 %.not3.i1624, float %5234, float %5233, !dbg !55
  %5235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1626 = icmp eq i32 %5235, 0, !dbg !55
  %5236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1625, float %5225, float 0.000000e+00) #5, !dbg !55
  %5237 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1625, float %5225, float 0.000000e+00) #5, !dbg !55
  %.04.i1627 = select i1 %.not4.i1626, float %5237, float %5236, !dbg !55
  %5238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1628 = icmp eq i32 %5238, 0, !dbg !55
  %5239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1627, float %2872, float %2872) #5, !dbg !55
  %5240 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1627, float %2872, float %2872) #5, !dbg !55
  %.02.i1629 = select i1 %.not5.i1628, float %5240, float %5239, !dbg !55
  br label %__nv_tanhf.exit1630, !dbg !55

__nv_tanhf.exit1630:                              ; preds = %__internal_fmad.exit1.i1614, %__internal_fmad.exit3.i1619
  %s.1.i1618 = phi float [ %5224, %__internal_fmad.exit1.i1614 ], [ %.02.i1629, %__internal_fmad.exit3.i1619 ], !dbg !55
  %5241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1631 = icmp eq i32 %5241, 0, !dbg !55
  %5242 = tail call float @llvm.nvvm.fabs.ftz.f(float %2873) #5, !dbg !55
  %5243 = tail call float @llvm.nvvm.fabs.f(float %2873) #5, !dbg !55
  %.01.i1632 = select i1 %.not.i1631, float %5243, float %5242, !dbg !55
  %5244 = fcmp ult float %.01.i1632, 0x3FE3333340000000, !dbg !55
  br i1 %5244, label %__internal_fmad.exit3.i1638, label %__internal_fmad.exit1.i1633, !dbg !55

__internal_fmad.exit1.i1633:                      ; preds = %__nv_tanhf.exit1630
  %5245 = fmul float %.01.i1632, 0x4007154760000000, !dbg !55
  %5246 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5245) #5, !dbg !55
  %5247 = fadd float %5246, 1.000000e+00, !dbg !55
  %5248 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5247) #6, !dbg !55, !srcloc !56
  %5249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1634 = icmp eq i32 %5249, 0, !dbg !55
  %5250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5248, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5251 = tail call float @llvm.nvvm.fma.rn.f(float %5248, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1635 = select i1 %.not6.i1634, float %5251, float %5250, !dbg !55
  %5252 = fcmp oge float %.01.i1632, 0x4022059680000000, !dbg !55
  %s.0.i1636 = select i1 %5252, float 1.000000e+00, float %.03.i1635, !dbg !55
  %5253 = bitcast float %s.0.i1636 to i32, !dbg !55
  %5254 = bitcast float %2873 to i32, !dbg !55
  %5255 = and i32 %5254, -2147483648, !dbg !55
  %5256 = or i32 %5255, %5253, !dbg !55
  %5257 = bitcast i32 %5256 to float, !dbg !55
  br label %__nv_tanhf.exit1649, !dbg !55

__internal_fmad.exit3.i1638:                      ; preds = %__nv_tanhf.exit1630
  %5258 = fmul float %2873, %2873, !dbg !55
  %5259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1639 = icmp eq i32 %5259, 0, !dbg !55
  %5260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5258, float 0xBFAAC795C0000000) #5, !dbg !55
  %5261 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5258, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1640 = select i1 %.not1.i1639, float %5261, float %5260, !dbg !55
  %5262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1641 = icmp eq i32 %5262, 0, !dbg !55
  %5263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1640, float %5258, float 0x3FC10B2820000000) #5, !dbg !55
  %5264 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1640, float %5258, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1642 = select i1 %.not2.i1641, float %5264, float %5263, !dbg !55
  %5265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1643 = icmp eq i32 %5265, 0, !dbg !55
  %5266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1642, float %5258, float 0xBFD5553DA0000000) #5, !dbg !55
  %5267 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1642, float %5258, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1644 = select i1 %.not3.i1643, float %5267, float %5266, !dbg !55
  %5268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1645 = icmp eq i32 %5268, 0, !dbg !55
  %5269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1644, float %5258, float 0.000000e+00) #5, !dbg !55
  %5270 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1644, float %5258, float 0.000000e+00) #5, !dbg !55
  %.04.i1646 = select i1 %.not4.i1645, float %5270, float %5269, !dbg !55
  %5271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1647 = icmp eq i32 %5271, 0, !dbg !55
  %5272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1646, float %2873, float %2873) #5, !dbg !55
  %5273 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1646, float %2873, float %2873) #5, !dbg !55
  %.02.i1648 = select i1 %.not5.i1647, float %5273, float %5272, !dbg !55
  br label %__nv_tanhf.exit1649, !dbg !55

__nv_tanhf.exit1649:                              ; preds = %__internal_fmad.exit1.i1633, %__internal_fmad.exit3.i1638
  %s.1.i1637 = phi float [ %5257, %__internal_fmad.exit1.i1633 ], [ %.02.i1648, %__internal_fmad.exit3.i1638 ], !dbg !55
  %5274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1650 = icmp eq i32 %5274, 0, !dbg !55
  %5275 = tail call float @llvm.nvvm.fabs.ftz.f(float %2874) #5, !dbg !55
  %5276 = tail call float @llvm.nvvm.fabs.f(float %2874) #5, !dbg !55
  %.01.i1651 = select i1 %.not.i1650, float %5276, float %5275, !dbg !55
  %5277 = fcmp ult float %.01.i1651, 0x3FE3333340000000, !dbg !55
  br i1 %5277, label %__internal_fmad.exit3.i1657, label %__internal_fmad.exit1.i1652, !dbg !55

__internal_fmad.exit1.i1652:                      ; preds = %__nv_tanhf.exit1649
  %5278 = fmul float %.01.i1651, 0x4007154760000000, !dbg !55
  %5279 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5278) #5, !dbg !55
  %5280 = fadd float %5279, 1.000000e+00, !dbg !55
  %5281 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5280) #6, !dbg !55, !srcloc !56
  %5282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1653 = icmp eq i32 %5282, 0, !dbg !55
  %5283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5281, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5284 = tail call float @llvm.nvvm.fma.rn.f(float %5281, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1654 = select i1 %.not6.i1653, float %5284, float %5283, !dbg !55
  %5285 = fcmp oge float %.01.i1651, 0x4022059680000000, !dbg !55
  %s.0.i1655 = select i1 %5285, float 1.000000e+00, float %.03.i1654, !dbg !55
  %5286 = bitcast float %s.0.i1655 to i32, !dbg !55
  %5287 = bitcast float %2874 to i32, !dbg !55
  %5288 = and i32 %5287, -2147483648, !dbg !55
  %5289 = or i32 %5288, %5286, !dbg !55
  %5290 = bitcast i32 %5289 to float, !dbg !55
  br label %__nv_tanhf.exit1668, !dbg !55

__internal_fmad.exit3.i1657:                      ; preds = %__nv_tanhf.exit1649
  %5291 = fmul float %2874, %2874, !dbg !55
  %5292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1658 = icmp eq i32 %5292, 0, !dbg !55
  %5293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5291, float 0xBFAAC795C0000000) #5, !dbg !55
  %5294 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5291, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1659 = select i1 %.not1.i1658, float %5294, float %5293, !dbg !55
  %5295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1660 = icmp eq i32 %5295, 0, !dbg !55
  %5296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1659, float %5291, float 0x3FC10B2820000000) #5, !dbg !55
  %5297 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1659, float %5291, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1661 = select i1 %.not2.i1660, float %5297, float %5296, !dbg !55
  %5298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1662 = icmp eq i32 %5298, 0, !dbg !55
  %5299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1661, float %5291, float 0xBFD5553DA0000000) #5, !dbg !55
  %5300 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1661, float %5291, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1663 = select i1 %.not3.i1662, float %5300, float %5299, !dbg !55
  %5301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1664 = icmp eq i32 %5301, 0, !dbg !55
  %5302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1663, float %5291, float 0.000000e+00) #5, !dbg !55
  %5303 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1663, float %5291, float 0.000000e+00) #5, !dbg !55
  %.04.i1665 = select i1 %.not4.i1664, float %5303, float %5302, !dbg !55
  %5304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1666 = icmp eq i32 %5304, 0, !dbg !55
  %5305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1665, float %2874, float %2874) #5, !dbg !55
  %5306 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1665, float %2874, float %2874) #5, !dbg !55
  %.02.i1667 = select i1 %.not5.i1666, float %5306, float %5305, !dbg !55
  br label %__nv_tanhf.exit1668, !dbg !55

__nv_tanhf.exit1668:                              ; preds = %__internal_fmad.exit1.i1652, %__internal_fmad.exit3.i1657
  %s.1.i1656 = phi float [ %5290, %__internal_fmad.exit1.i1652 ], [ %.02.i1667, %__internal_fmad.exit3.i1657 ], !dbg !55
  %5307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1669 = icmp eq i32 %5307, 0, !dbg !55
  %5308 = tail call float @llvm.nvvm.fabs.ftz.f(float %2875) #5, !dbg !55
  %5309 = tail call float @llvm.nvvm.fabs.f(float %2875) #5, !dbg !55
  %.01.i1670 = select i1 %.not.i1669, float %5309, float %5308, !dbg !55
  %5310 = fcmp ult float %.01.i1670, 0x3FE3333340000000, !dbg !55
  br i1 %5310, label %__internal_fmad.exit3.i1676, label %__internal_fmad.exit1.i1671, !dbg !55

__internal_fmad.exit1.i1671:                      ; preds = %__nv_tanhf.exit1668
  %5311 = fmul float %.01.i1670, 0x4007154760000000, !dbg !55
  %5312 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5311) #5, !dbg !55
  %5313 = fadd float %5312, 1.000000e+00, !dbg !55
  %5314 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5313) #6, !dbg !55, !srcloc !56
  %5315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1672 = icmp eq i32 %5315, 0, !dbg !55
  %5316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5314, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5317 = tail call float @llvm.nvvm.fma.rn.f(float %5314, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1673 = select i1 %.not6.i1672, float %5317, float %5316, !dbg !55
  %5318 = fcmp oge float %.01.i1670, 0x4022059680000000, !dbg !55
  %s.0.i1674 = select i1 %5318, float 1.000000e+00, float %.03.i1673, !dbg !55
  %5319 = bitcast float %s.0.i1674 to i32, !dbg !55
  %5320 = bitcast float %2875 to i32, !dbg !55
  %5321 = and i32 %5320, -2147483648, !dbg !55
  %5322 = or i32 %5321, %5319, !dbg !55
  %5323 = bitcast i32 %5322 to float, !dbg !55
  br label %__nv_tanhf.exit1687, !dbg !55

__internal_fmad.exit3.i1676:                      ; preds = %__nv_tanhf.exit1668
  %5324 = fmul float %2875, %2875, !dbg !55
  %5325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1677 = icmp eq i32 %5325, 0, !dbg !55
  %5326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5324, float 0xBFAAC795C0000000) #5, !dbg !55
  %5327 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5324, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1678 = select i1 %.not1.i1677, float %5327, float %5326, !dbg !55
  %5328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1679 = icmp eq i32 %5328, 0, !dbg !55
  %5329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1678, float %5324, float 0x3FC10B2820000000) #5, !dbg !55
  %5330 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1678, float %5324, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1680 = select i1 %.not2.i1679, float %5330, float %5329, !dbg !55
  %5331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1681 = icmp eq i32 %5331, 0, !dbg !55
  %5332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1680, float %5324, float 0xBFD5553DA0000000) #5, !dbg !55
  %5333 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1680, float %5324, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1682 = select i1 %.not3.i1681, float %5333, float %5332, !dbg !55
  %5334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1683 = icmp eq i32 %5334, 0, !dbg !55
  %5335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1682, float %5324, float 0.000000e+00) #5, !dbg !55
  %5336 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1682, float %5324, float 0.000000e+00) #5, !dbg !55
  %.04.i1684 = select i1 %.not4.i1683, float %5336, float %5335, !dbg !55
  %5337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1685 = icmp eq i32 %5337, 0, !dbg !55
  %5338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1684, float %2875, float %2875) #5, !dbg !55
  %5339 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1684, float %2875, float %2875) #5, !dbg !55
  %.02.i1686 = select i1 %.not5.i1685, float %5339, float %5338, !dbg !55
  br label %__nv_tanhf.exit1687, !dbg !55

__nv_tanhf.exit1687:                              ; preds = %__internal_fmad.exit1.i1671, %__internal_fmad.exit3.i1676
  %s.1.i1675 = phi float [ %5323, %__internal_fmad.exit1.i1671 ], [ %.02.i1686, %__internal_fmad.exit3.i1676 ], !dbg !55
  %5340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1688 = icmp eq i32 %5340, 0, !dbg !55
  %5341 = tail call float @llvm.nvvm.fabs.ftz.f(float %2876) #5, !dbg !55
  %5342 = tail call float @llvm.nvvm.fabs.f(float %2876) #5, !dbg !55
  %.01.i1689 = select i1 %.not.i1688, float %5342, float %5341, !dbg !55
  %5343 = fcmp ult float %.01.i1689, 0x3FE3333340000000, !dbg !55
  br i1 %5343, label %__internal_fmad.exit3.i1695, label %__internal_fmad.exit1.i1690, !dbg !55

__internal_fmad.exit1.i1690:                      ; preds = %__nv_tanhf.exit1687
  %5344 = fmul float %.01.i1689, 0x4007154760000000, !dbg !55
  %5345 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5344) #5, !dbg !55
  %5346 = fadd float %5345, 1.000000e+00, !dbg !55
  %5347 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5346) #6, !dbg !55, !srcloc !56
  %5348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1691 = icmp eq i32 %5348, 0, !dbg !55
  %5349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5347, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5350 = tail call float @llvm.nvvm.fma.rn.f(float %5347, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1692 = select i1 %.not6.i1691, float %5350, float %5349, !dbg !55
  %5351 = fcmp oge float %.01.i1689, 0x4022059680000000, !dbg !55
  %s.0.i1693 = select i1 %5351, float 1.000000e+00, float %.03.i1692, !dbg !55
  %5352 = bitcast float %s.0.i1693 to i32, !dbg !55
  %5353 = bitcast float %2876 to i32, !dbg !55
  %5354 = and i32 %5353, -2147483648, !dbg !55
  %5355 = or i32 %5354, %5352, !dbg !55
  %5356 = bitcast i32 %5355 to float, !dbg !55
  br label %__nv_tanhf.exit1706, !dbg !55

__internal_fmad.exit3.i1695:                      ; preds = %__nv_tanhf.exit1687
  %5357 = fmul float %2876, %2876, !dbg !55
  %5358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1696 = icmp eq i32 %5358, 0, !dbg !55
  %5359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5357, float 0xBFAAC795C0000000) #5, !dbg !55
  %5360 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5357, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1697 = select i1 %.not1.i1696, float %5360, float %5359, !dbg !55
  %5361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1698 = icmp eq i32 %5361, 0, !dbg !55
  %5362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1697, float %5357, float 0x3FC10B2820000000) #5, !dbg !55
  %5363 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1697, float %5357, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1699 = select i1 %.not2.i1698, float %5363, float %5362, !dbg !55
  %5364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1700 = icmp eq i32 %5364, 0, !dbg !55
  %5365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1699, float %5357, float 0xBFD5553DA0000000) #5, !dbg !55
  %5366 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1699, float %5357, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1701 = select i1 %.not3.i1700, float %5366, float %5365, !dbg !55
  %5367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1702 = icmp eq i32 %5367, 0, !dbg !55
  %5368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1701, float %5357, float 0.000000e+00) #5, !dbg !55
  %5369 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1701, float %5357, float 0.000000e+00) #5, !dbg !55
  %.04.i1703 = select i1 %.not4.i1702, float %5369, float %5368, !dbg !55
  %5370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1704 = icmp eq i32 %5370, 0, !dbg !55
  %5371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1703, float %2876, float %2876) #5, !dbg !55
  %5372 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1703, float %2876, float %2876) #5, !dbg !55
  %.02.i1705 = select i1 %.not5.i1704, float %5372, float %5371, !dbg !55
  br label %__nv_tanhf.exit1706, !dbg !55

__nv_tanhf.exit1706:                              ; preds = %__internal_fmad.exit1.i1690, %__internal_fmad.exit3.i1695
  %s.1.i1694 = phi float [ %5356, %__internal_fmad.exit1.i1690 ], [ %.02.i1705, %__internal_fmad.exit3.i1695 ], !dbg !55
  %5373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1707 = icmp eq i32 %5373, 0, !dbg !55
  %5374 = tail call float @llvm.nvvm.fabs.ftz.f(float %2877) #5, !dbg !55
  %5375 = tail call float @llvm.nvvm.fabs.f(float %2877) #5, !dbg !55
  %.01.i1708 = select i1 %.not.i1707, float %5375, float %5374, !dbg !55
  %5376 = fcmp ult float %.01.i1708, 0x3FE3333340000000, !dbg !55
  br i1 %5376, label %__internal_fmad.exit3.i1714, label %__internal_fmad.exit1.i1709, !dbg !55

__internal_fmad.exit1.i1709:                      ; preds = %__nv_tanhf.exit1706
  %5377 = fmul float %.01.i1708, 0x4007154760000000, !dbg !55
  %5378 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5377) #5, !dbg !55
  %5379 = fadd float %5378, 1.000000e+00, !dbg !55
  %5380 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5379) #6, !dbg !55, !srcloc !56
  %5381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1710 = icmp eq i32 %5381, 0, !dbg !55
  %5382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5380, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5383 = tail call float @llvm.nvvm.fma.rn.f(float %5380, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1711 = select i1 %.not6.i1710, float %5383, float %5382, !dbg !55
  %5384 = fcmp oge float %.01.i1708, 0x4022059680000000, !dbg !55
  %s.0.i1712 = select i1 %5384, float 1.000000e+00, float %.03.i1711, !dbg !55
  %5385 = bitcast float %s.0.i1712 to i32, !dbg !55
  %5386 = bitcast float %2877 to i32, !dbg !55
  %5387 = and i32 %5386, -2147483648, !dbg !55
  %5388 = or i32 %5387, %5385, !dbg !55
  %5389 = bitcast i32 %5388 to float, !dbg !55
  br label %__nv_tanhf.exit1725, !dbg !55

__internal_fmad.exit3.i1714:                      ; preds = %__nv_tanhf.exit1706
  %5390 = fmul float %2877, %2877, !dbg !55
  %5391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1715 = icmp eq i32 %5391, 0, !dbg !55
  %5392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5390, float 0xBFAAC795C0000000) #5, !dbg !55
  %5393 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5390, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1716 = select i1 %.not1.i1715, float %5393, float %5392, !dbg !55
  %5394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1717 = icmp eq i32 %5394, 0, !dbg !55
  %5395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1716, float %5390, float 0x3FC10B2820000000) #5, !dbg !55
  %5396 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1716, float %5390, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1718 = select i1 %.not2.i1717, float %5396, float %5395, !dbg !55
  %5397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1719 = icmp eq i32 %5397, 0, !dbg !55
  %5398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1718, float %5390, float 0xBFD5553DA0000000) #5, !dbg !55
  %5399 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1718, float %5390, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1720 = select i1 %.not3.i1719, float %5399, float %5398, !dbg !55
  %5400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1721 = icmp eq i32 %5400, 0, !dbg !55
  %5401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1720, float %5390, float 0.000000e+00) #5, !dbg !55
  %5402 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1720, float %5390, float 0.000000e+00) #5, !dbg !55
  %.04.i1722 = select i1 %.not4.i1721, float %5402, float %5401, !dbg !55
  %5403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1723 = icmp eq i32 %5403, 0, !dbg !55
  %5404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1722, float %2877, float %2877) #5, !dbg !55
  %5405 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1722, float %2877, float %2877) #5, !dbg !55
  %.02.i1724 = select i1 %.not5.i1723, float %5405, float %5404, !dbg !55
  br label %__nv_tanhf.exit1725, !dbg !55

__nv_tanhf.exit1725:                              ; preds = %__internal_fmad.exit1.i1709, %__internal_fmad.exit3.i1714
  %s.1.i1713 = phi float [ %5389, %__internal_fmad.exit1.i1709 ], [ %.02.i1724, %__internal_fmad.exit3.i1714 ], !dbg !55
  %5406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1726 = icmp eq i32 %5406, 0, !dbg !55
  %5407 = tail call float @llvm.nvvm.fabs.ftz.f(float %2878) #5, !dbg !55
  %5408 = tail call float @llvm.nvvm.fabs.f(float %2878) #5, !dbg !55
  %.01.i1727 = select i1 %.not.i1726, float %5408, float %5407, !dbg !55
  %5409 = fcmp ult float %.01.i1727, 0x3FE3333340000000, !dbg !55
  br i1 %5409, label %__internal_fmad.exit3.i1733, label %__internal_fmad.exit1.i1728, !dbg !55

__internal_fmad.exit1.i1728:                      ; preds = %__nv_tanhf.exit1725
  %5410 = fmul float %.01.i1727, 0x4007154760000000, !dbg !55
  %5411 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5410) #5, !dbg !55
  %5412 = fadd float %5411, 1.000000e+00, !dbg !55
  %5413 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5412) #6, !dbg !55, !srcloc !56
  %5414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1729 = icmp eq i32 %5414, 0, !dbg !55
  %5415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5413, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5416 = tail call float @llvm.nvvm.fma.rn.f(float %5413, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1730 = select i1 %.not6.i1729, float %5416, float %5415, !dbg !55
  %5417 = fcmp oge float %.01.i1727, 0x4022059680000000, !dbg !55
  %s.0.i1731 = select i1 %5417, float 1.000000e+00, float %.03.i1730, !dbg !55
  %5418 = bitcast float %s.0.i1731 to i32, !dbg !55
  %5419 = bitcast float %2878 to i32, !dbg !55
  %5420 = and i32 %5419, -2147483648, !dbg !55
  %5421 = or i32 %5420, %5418, !dbg !55
  %5422 = bitcast i32 %5421 to float, !dbg !55
  br label %__nv_tanhf.exit1744, !dbg !55

__internal_fmad.exit3.i1733:                      ; preds = %__nv_tanhf.exit1725
  %5423 = fmul float %2878, %2878, !dbg !55
  %5424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1734 = icmp eq i32 %5424, 0, !dbg !55
  %5425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5423, float 0xBFAAC795C0000000) #5, !dbg !55
  %5426 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5423, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1735 = select i1 %.not1.i1734, float %5426, float %5425, !dbg !55
  %5427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1736 = icmp eq i32 %5427, 0, !dbg !55
  %5428 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1735, float %5423, float 0x3FC10B2820000000) #5, !dbg !55
  %5429 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1735, float %5423, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1737 = select i1 %.not2.i1736, float %5429, float %5428, !dbg !55
  %5430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1738 = icmp eq i32 %5430, 0, !dbg !55
  %5431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1737, float %5423, float 0xBFD5553DA0000000) #5, !dbg !55
  %5432 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1737, float %5423, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1739 = select i1 %.not3.i1738, float %5432, float %5431, !dbg !55
  %5433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1740 = icmp eq i32 %5433, 0, !dbg !55
  %5434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1739, float %5423, float 0.000000e+00) #5, !dbg !55
  %5435 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1739, float %5423, float 0.000000e+00) #5, !dbg !55
  %.04.i1741 = select i1 %.not4.i1740, float %5435, float %5434, !dbg !55
  %5436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1742 = icmp eq i32 %5436, 0, !dbg !55
  %5437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1741, float %2878, float %2878) #5, !dbg !55
  %5438 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1741, float %2878, float %2878) #5, !dbg !55
  %.02.i1743 = select i1 %.not5.i1742, float %5438, float %5437, !dbg !55
  br label %__nv_tanhf.exit1744, !dbg !55

__nv_tanhf.exit1744:                              ; preds = %__internal_fmad.exit1.i1728, %__internal_fmad.exit3.i1733
  %s.1.i1732 = phi float [ %5422, %__internal_fmad.exit1.i1728 ], [ %.02.i1743, %__internal_fmad.exit3.i1733 ], !dbg !55
  %5439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1745 = icmp eq i32 %5439, 0, !dbg !55
  %5440 = tail call float @llvm.nvvm.fabs.ftz.f(float %2879) #5, !dbg !55
  %5441 = tail call float @llvm.nvvm.fabs.f(float %2879) #5, !dbg !55
  %.01.i1746 = select i1 %.not.i1745, float %5441, float %5440, !dbg !55
  %5442 = fcmp ult float %.01.i1746, 0x3FE3333340000000, !dbg !55
  br i1 %5442, label %__internal_fmad.exit3.i1752, label %__internal_fmad.exit1.i1747, !dbg !55

__internal_fmad.exit1.i1747:                      ; preds = %__nv_tanhf.exit1744
  %5443 = fmul float %.01.i1746, 0x4007154760000000, !dbg !55
  %5444 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5443) #5, !dbg !55
  %5445 = fadd float %5444, 1.000000e+00, !dbg !55
  %5446 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5445) #6, !dbg !55, !srcloc !56
  %5447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1748 = icmp eq i32 %5447, 0, !dbg !55
  %5448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5446, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5449 = tail call float @llvm.nvvm.fma.rn.f(float %5446, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1749 = select i1 %.not6.i1748, float %5449, float %5448, !dbg !55
  %5450 = fcmp oge float %.01.i1746, 0x4022059680000000, !dbg !55
  %s.0.i1750 = select i1 %5450, float 1.000000e+00, float %.03.i1749, !dbg !55
  %5451 = bitcast float %s.0.i1750 to i32, !dbg !55
  %5452 = bitcast float %2879 to i32, !dbg !55
  %5453 = and i32 %5452, -2147483648, !dbg !55
  %5454 = or i32 %5453, %5451, !dbg !55
  %5455 = bitcast i32 %5454 to float, !dbg !55
  br label %__nv_tanhf.exit1763, !dbg !55

__internal_fmad.exit3.i1752:                      ; preds = %__nv_tanhf.exit1744
  %5456 = fmul float %2879, %2879, !dbg !55
  %5457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1753 = icmp eq i32 %5457, 0, !dbg !55
  %5458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5456, float 0xBFAAC795C0000000) #5, !dbg !55
  %5459 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5456, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1754 = select i1 %.not1.i1753, float %5459, float %5458, !dbg !55
  %5460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1755 = icmp eq i32 %5460, 0, !dbg !55
  %5461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1754, float %5456, float 0x3FC10B2820000000) #5, !dbg !55
  %5462 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1754, float %5456, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1756 = select i1 %.not2.i1755, float %5462, float %5461, !dbg !55
  %5463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1757 = icmp eq i32 %5463, 0, !dbg !55
  %5464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1756, float %5456, float 0xBFD5553DA0000000) #5, !dbg !55
  %5465 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1756, float %5456, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1758 = select i1 %.not3.i1757, float %5465, float %5464, !dbg !55
  %5466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1759 = icmp eq i32 %5466, 0, !dbg !55
  %5467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1758, float %5456, float 0.000000e+00) #5, !dbg !55
  %5468 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1758, float %5456, float 0.000000e+00) #5, !dbg !55
  %.04.i1760 = select i1 %.not4.i1759, float %5468, float %5467, !dbg !55
  %5469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1761 = icmp eq i32 %5469, 0, !dbg !55
  %5470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1760, float %2879, float %2879) #5, !dbg !55
  %5471 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1760, float %2879, float %2879) #5, !dbg !55
  %.02.i1762 = select i1 %.not5.i1761, float %5471, float %5470, !dbg !55
  br label %__nv_tanhf.exit1763, !dbg !55

__nv_tanhf.exit1763:                              ; preds = %__internal_fmad.exit1.i1747, %__internal_fmad.exit3.i1752
  %s.1.i1751 = phi float [ %5455, %__internal_fmad.exit1.i1747 ], [ %.02.i1762, %__internal_fmad.exit3.i1752 ], !dbg !55
  %5472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1764 = icmp eq i32 %5472, 0, !dbg !55
  %5473 = tail call float @llvm.nvvm.fabs.ftz.f(float %2880) #5, !dbg !55
  %5474 = tail call float @llvm.nvvm.fabs.f(float %2880) #5, !dbg !55
  %.01.i1765 = select i1 %.not.i1764, float %5474, float %5473, !dbg !55
  %5475 = fcmp ult float %.01.i1765, 0x3FE3333340000000, !dbg !55
  br i1 %5475, label %__internal_fmad.exit3.i1771, label %__internal_fmad.exit1.i1766, !dbg !55

__internal_fmad.exit1.i1766:                      ; preds = %__nv_tanhf.exit1763
  %5476 = fmul float %.01.i1765, 0x4007154760000000, !dbg !55
  %5477 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5476) #5, !dbg !55
  %5478 = fadd float %5477, 1.000000e+00, !dbg !55
  %5479 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5478) #6, !dbg !55, !srcloc !56
  %5480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1767 = icmp eq i32 %5480, 0, !dbg !55
  %5481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5479, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5482 = tail call float @llvm.nvvm.fma.rn.f(float %5479, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1768 = select i1 %.not6.i1767, float %5482, float %5481, !dbg !55
  %5483 = fcmp oge float %.01.i1765, 0x4022059680000000, !dbg !55
  %s.0.i1769 = select i1 %5483, float 1.000000e+00, float %.03.i1768, !dbg !55
  %5484 = bitcast float %s.0.i1769 to i32, !dbg !55
  %5485 = bitcast float %2880 to i32, !dbg !55
  %5486 = and i32 %5485, -2147483648, !dbg !55
  %5487 = or i32 %5486, %5484, !dbg !55
  %5488 = bitcast i32 %5487 to float, !dbg !55
  br label %__nv_tanhf.exit1782, !dbg !55

__internal_fmad.exit3.i1771:                      ; preds = %__nv_tanhf.exit1763
  %5489 = fmul float %2880, %2880, !dbg !55
  %5490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1772 = icmp eq i32 %5490, 0, !dbg !55
  %5491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5489, float 0xBFAAC795C0000000) #5, !dbg !55
  %5492 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5489, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1773 = select i1 %.not1.i1772, float %5492, float %5491, !dbg !55
  %5493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1774 = icmp eq i32 %5493, 0, !dbg !55
  %5494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1773, float %5489, float 0x3FC10B2820000000) #5, !dbg !55
  %5495 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1773, float %5489, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1775 = select i1 %.not2.i1774, float %5495, float %5494, !dbg !55
  %5496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1776 = icmp eq i32 %5496, 0, !dbg !55
  %5497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1775, float %5489, float 0xBFD5553DA0000000) #5, !dbg !55
  %5498 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1775, float %5489, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1777 = select i1 %.not3.i1776, float %5498, float %5497, !dbg !55
  %5499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1778 = icmp eq i32 %5499, 0, !dbg !55
  %5500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1777, float %5489, float 0.000000e+00) #5, !dbg !55
  %5501 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1777, float %5489, float 0.000000e+00) #5, !dbg !55
  %.04.i1779 = select i1 %.not4.i1778, float %5501, float %5500, !dbg !55
  %5502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1780 = icmp eq i32 %5502, 0, !dbg !55
  %5503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1779, float %2880, float %2880) #5, !dbg !55
  %5504 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1779, float %2880, float %2880) #5, !dbg !55
  %.02.i1781 = select i1 %.not5.i1780, float %5504, float %5503, !dbg !55
  br label %__nv_tanhf.exit1782, !dbg !55

__nv_tanhf.exit1782:                              ; preds = %__internal_fmad.exit1.i1766, %__internal_fmad.exit3.i1771
  %s.1.i1770 = phi float [ %5488, %__internal_fmad.exit1.i1766 ], [ %.02.i1781, %__internal_fmad.exit3.i1771 ], !dbg !55
  %5505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1783 = icmp eq i32 %5505, 0, !dbg !55
  %5506 = tail call float @llvm.nvvm.fabs.ftz.f(float %2881) #5, !dbg !55
  %5507 = tail call float @llvm.nvvm.fabs.f(float %2881) #5, !dbg !55
  %.01.i1784 = select i1 %.not.i1783, float %5507, float %5506, !dbg !55
  %5508 = fcmp ult float %.01.i1784, 0x3FE3333340000000, !dbg !55
  br i1 %5508, label %__internal_fmad.exit3.i1790, label %__internal_fmad.exit1.i1785, !dbg !55

__internal_fmad.exit1.i1785:                      ; preds = %__nv_tanhf.exit1782
  %5509 = fmul float %.01.i1784, 0x4007154760000000, !dbg !55
  %5510 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5509) #5, !dbg !55
  %5511 = fadd float %5510, 1.000000e+00, !dbg !55
  %5512 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5511) #6, !dbg !55, !srcloc !56
  %5513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1786 = icmp eq i32 %5513, 0, !dbg !55
  %5514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5512, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5515 = tail call float @llvm.nvvm.fma.rn.f(float %5512, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1787 = select i1 %.not6.i1786, float %5515, float %5514, !dbg !55
  %5516 = fcmp oge float %.01.i1784, 0x4022059680000000, !dbg !55
  %s.0.i1788 = select i1 %5516, float 1.000000e+00, float %.03.i1787, !dbg !55
  %5517 = bitcast float %s.0.i1788 to i32, !dbg !55
  %5518 = bitcast float %2881 to i32, !dbg !55
  %5519 = and i32 %5518, -2147483648, !dbg !55
  %5520 = or i32 %5519, %5517, !dbg !55
  %5521 = bitcast i32 %5520 to float, !dbg !55
  br label %__nv_tanhf.exit1801, !dbg !55

__internal_fmad.exit3.i1790:                      ; preds = %__nv_tanhf.exit1782
  %5522 = fmul float %2881, %2881, !dbg !55
  %5523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1791 = icmp eq i32 %5523, 0, !dbg !55
  %5524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5522, float 0xBFAAC795C0000000) #5, !dbg !55
  %5525 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5522, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1792 = select i1 %.not1.i1791, float %5525, float %5524, !dbg !55
  %5526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1793 = icmp eq i32 %5526, 0, !dbg !55
  %5527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1792, float %5522, float 0x3FC10B2820000000) #5, !dbg !55
  %5528 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1792, float %5522, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1794 = select i1 %.not2.i1793, float %5528, float %5527, !dbg !55
  %5529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1795 = icmp eq i32 %5529, 0, !dbg !55
  %5530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1794, float %5522, float 0xBFD5553DA0000000) #5, !dbg !55
  %5531 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1794, float %5522, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1796 = select i1 %.not3.i1795, float %5531, float %5530, !dbg !55
  %5532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1797 = icmp eq i32 %5532, 0, !dbg !55
  %5533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1796, float %5522, float 0.000000e+00) #5, !dbg !55
  %5534 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1796, float %5522, float 0.000000e+00) #5, !dbg !55
  %.04.i1798 = select i1 %.not4.i1797, float %5534, float %5533, !dbg !55
  %5535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1799 = icmp eq i32 %5535, 0, !dbg !55
  %5536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1798, float %2881, float %2881) #5, !dbg !55
  %5537 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1798, float %2881, float %2881) #5, !dbg !55
  %.02.i1800 = select i1 %.not5.i1799, float %5537, float %5536, !dbg !55
  br label %__nv_tanhf.exit1801, !dbg !55

__nv_tanhf.exit1801:                              ; preds = %__internal_fmad.exit1.i1785, %__internal_fmad.exit3.i1790
  %s.1.i1789 = phi float [ %5521, %__internal_fmad.exit1.i1785 ], [ %.02.i1800, %__internal_fmad.exit3.i1790 ], !dbg !55
  %5538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1802 = icmp eq i32 %5538, 0, !dbg !55
  %5539 = tail call float @llvm.nvvm.fabs.ftz.f(float %2882) #5, !dbg !55
  %5540 = tail call float @llvm.nvvm.fabs.f(float %2882) #5, !dbg !55
  %.01.i1803 = select i1 %.not.i1802, float %5540, float %5539, !dbg !55
  %5541 = fcmp ult float %.01.i1803, 0x3FE3333340000000, !dbg !55
  br i1 %5541, label %__internal_fmad.exit3.i1809, label %__internal_fmad.exit1.i1804, !dbg !55

__internal_fmad.exit1.i1804:                      ; preds = %__nv_tanhf.exit1801
  %5542 = fmul float %.01.i1803, 0x4007154760000000, !dbg !55
  %5543 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5542) #5, !dbg !55
  %5544 = fadd float %5543, 1.000000e+00, !dbg !55
  %5545 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5544) #6, !dbg !55, !srcloc !56
  %5546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1805 = icmp eq i32 %5546, 0, !dbg !55
  %5547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5545, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5548 = tail call float @llvm.nvvm.fma.rn.f(float %5545, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1806 = select i1 %.not6.i1805, float %5548, float %5547, !dbg !55
  %5549 = fcmp oge float %.01.i1803, 0x4022059680000000, !dbg !55
  %s.0.i1807 = select i1 %5549, float 1.000000e+00, float %.03.i1806, !dbg !55
  %5550 = bitcast float %s.0.i1807 to i32, !dbg !55
  %5551 = bitcast float %2882 to i32, !dbg !55
  %5552 = and i32 %5551, -2147483648, !dbg !55
  %5553 = or i32 %5552, %5550, !dbg !55
  %5554 = bitcast i32 %5553 to float, !dbg !55
  br label %__nv_tanhf.exit1820, !dbg !55

__internal_fmad.exit3.i1809:                      ; preds = %__nv_tanhf.exit1801
  %5555 = fmul float %2882, %2882, !dbg !55
  %5556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1810 = icmp eq i32 %5556, 0, !dbg !55
  %5557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5555, float 0xBFAAC795C0000000) #5, !dbg !55
  %5558 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5555, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1811 = select i1 %.not1.i1810, float %5558, float %5557, !dbg !55
  %5559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1812 = icmp eq i32 %5559, 0, !dbg !55
  %5560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1811, float %5555, float 0x3FC10B2820000000) #5, !dbg !55
  %5561 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1811, float %5555, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1813 = select i1 %.not2.i1812, float %5561, float %5560, !dbg !55
  %5562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1814 = icmp eq i32 %5562, 0, !dbg !55
  %5563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1813, float %5555, float 0xBFD5553DA0000000) #5, !dbg !55
  %5564 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1813, float %5555, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1815 = select i1 %.not3.i1814, float %5564, float %5563, !dbg !55
  %5565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1816 = icmp eq i32 %5565, 0, !dbg !55
  %5566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1815, float %5555, float 0.000000e+00) #5, !dbg !55
  %5567 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1815, float %5555, float 0.000000e+00) #5, !dbg !55
  %.04.i1817 = select i1 %.not4.i1816, float %5567, float %5566, !dbg !55
  %5568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1818 = icmp eq i32 %5568, 0, !dbg !55
  %5569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1817, float %2882, float %2882) #5, !dbg !55
  %5570 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1817, float %2882, float %2882) #5, !dbg !55
  %.02.i1819 = select i1 %.not5.i1818, float %5570, float %5569, !dbg !55
  br label %__nv_tanhf.exit1820, !dbg !55

__nv_tanhf.exit1820:                              ; preds = %__internal_fmad.exit1.i1804, %__internal_fmad.exit3.i1809
  %s.1.i1808 = phi float [ %5554, %__internal_fmad.exit1.i1804 ], [ %.02.i1819, %__internal_fmad.exit3.i1809 ], !dbg !55
  %5571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1821 = icmp eq i32 %5571, 0, !dbg !55
  %5572 = tail call float @llvm.nvvm.fabs.ftz.f(float %2883) #5, !dbg !55
  %5573 = tail call float @llvm.nvvm.fabs.f(float %2883) #5, !dbg !55
  %.01.i1822 = select i1 %.not.i1821, float %5573, float %5572, !dbg !55
  %5574 = fcmp ult float %.01.i1822, 0x3FE3333340000000, !dbg !55
  br i1 %5574, label %__internal_fmad.exit3.i1828, label %__internal_fmad.exit1.i1823, !dbg !55

__internal_fmad.exit1.i1823:                      ; preds = %__nv_tanhf.exit1820
  %5575 = fmul float %.01.i1822, 0x4007154760000000, !dbg !55
  %5576 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5575) #5, !dbg !55
  %5577 = fadd float %5576, 1.000000e+00, !dbg !55
  %5578 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5577) #6, !dbg !55, !srcloc !56
  %5579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1824 = icmp eq i32 %5579, 0, !dbg !55
  %5580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5578, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5581 = tail call float @llvm.nvvm.fma.rn.f(float %5578, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1825 = select i1 %.not6.i1824, float %5581, float %5580, !dbg !55
  %5582 = fcmp oge float %.01.i1822, 0x4022059680000000, !dbg !55
  %s.0.i1826 = select i1 %5582, float 1.000000e+00, float %.03.i1825, !dbg !55
  %5583 = bitcast float %s.0.i1826 to i32, !dbg !55
  %5584 = bitcast float %2883 to i32, !dbg !55
  %5585 = and i32 %5584, -2147483648, !dbg !55
  %5586 = or i32 %5585, %5583, !dbg !55
  %5587 = bitcast i32 %5586 to float, !dbg !55
  br label %__nv_tanhf.exit1839, !dbg !55

__internal_fmad.exit3.i1828:                      ; preds = %__nv_tanhf.exit1820
  %5588 = fmul float %2883, %2883, !dbg !55
  %5589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1829 = icmp eq i32 %5589, 0, !dbg !55
  %5590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5588, float 0xBFAAC795C0000000) #5, !dbg !55
  %5591 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5588, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1830 = select i1 %.not1.i1829, float %5591, float %5590, !dbg !55
  %5592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1831 = icmp eq i32 %5592, 0, !dbg !55
  %5593 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1830, float %5588, float 0x3FC10B2820000000) #5, !dbg !55
  %5594 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1830, float %5588, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1832 = select i1 %.not2.i1831, float %5594, float %5593, !dbg !55
  %5595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1833 = icmp eq i32 %5595, 0, !dbg !55
  %5596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1832, float %5588, float 0xBFD5553DA0000000) #5, !dbg !55
  %5597 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1832, float %5588, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1834 = select i1 %.not3.i1833, float %5597, float %5596, !dbg !55
  %5598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1835 = icmp eq i32 %5598, 0, !dbg !55
  %5599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1834, float %5588, float 0.000000e+00) #5, !dbg !55
  %5600 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1834, float %5588, float 0.000000e+00) #5, !dbg !55
  %.04.i1836 = select i1 %.not4.i1835, float %5600, float %5599, !dbg !55
  %5601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1837 = icmp eq i32 %5601, 0, !dbg !55
  %5602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1836, float %2883, float %2883) #5, !dbg !55
  %5603 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1836, float %2883, float %2883) #5, !dbg !55
  %.02.i1838 = select i1 %.not5.i1837, float %5603, float %5602, !dbg !55
  br label %__nv_tanhf.exit1839, !dbg !55

__nv_tanhf.exit1839:                              ; preds = %__internal_fmad.exit1.i1823, %__internal_fmad.exit3.i1828
  %s.1.i1827 = phi float [ %5587, %__internal_fmad.exit1.i1823 ], [ %.02.i1838, %__internal_fmad.exit3.i1828 ], !dbg !55
  %5604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1840 = icmp eq i32 %5604, 0, !dbg !55
  %5605 = tail call float @llvm.nvvm.fabs.ftz.f(float %2884) #5, !dbg !55
  %5606 = tail call float @llvm.nvvm.fabs.f(float %2884) #5, !dbg !55
  %.01.i1841 = select i1 %.not.i1840, float %5606, float %5605, !dbg !55
  %5607 = fcmp ult float %.01.i1841, 0x3FE3333340000000, !dbg !55
  br i1 %5607, label %__internal_fmad.exit3.i1847, label %__internal_fmad.exit1.i1842, !dbg !55

__internal_fmad.exit1.i1842:                      ; preds = %__nv_tanhf.exit1839
  %5608 = fmul float %.01.i1841, 0x4007154760000000, !dbg !55
  %5609 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5608) #5, !dbg !55
  %5610 = fadd float %5609, 1.000000e+00, !dbg !55
  %5611 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5610) #6, !dbg !55, !srcloc !56
  %5612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1843 = icmp eq i32 %5612, 0, !dbg !55
  %5613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5611, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5614 = tail call float @llvm.nvvm.fma.rn.f(float %5611, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1844 = select i1 %.not6.i1843, float %5614, float %5613, !dbg !55
  %5615 = fcmp oge float %.01.i1841, 0x4022059680000000, !dbg !55
  %s.0.i1845 = select i1 %5615, float 1.000000e+00, float %.03.i1844, !dbg !55
  %5616 = bitcast float %s.0.i1845 to i32, !dbg !55
  %5617 = bitcast float %2884 to i32, !dbg !55
  %5618 = and i32 %5617, -2147483648, !dbg !55
  %5619 = or i32 %5618, %5616, !dbg !55
  %5620 = bitcast i32 %5619 to float, !dbg !55
  br label %__nv_tanhf.exit1858, !dbg !55

__internal_fmad.exit3.i1847:                      ; preds = %__nv_tanhf.exit1839
  %5621 = fmul float %2884, %2884, !dbg !55
  %5622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1848 = icmp eq i32 %5622, 0, !dbg !55
  %5623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5621, float 0xBFAAC795C0000000) #5, !dbg !55
  %5624 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5621, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1849 = select i1 %.not1.i1848, float %5624, float %5623, !dbg !55
  %5625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1850 = icmp eq i32 %5625, 0, !dbg !55
  %5626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1849, float %5621, float 0x3FC10B2820000000) #5, !dbg !55
  %5627 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1849, float %5621, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1851 = select i1 %.not2.i1850, float %5627, float %5626, !dbg !55
  %5628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1852 = icmp eq i32 %5628, 0, !dbg !55
  %5629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1851, float %5621, float 0xBFD5553DA0000000) #5, !dbg !55
  %5630 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1851, float %5621, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1853 = select i1 %.not3.i1852, float %5630, float %5629, !dbg !55
  %5631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1854 = icmp eq i32 %5631, 0, !dbg !55
  %5632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1853, float %5621, float 0.000000e+00) #5, !dbg !55
  %5633 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1853, float %5621, float 0.000000e+00) #5, !dbg !55
  %.04.i1855 = select i1 %.not4.i1854, float %5633, float %5632, !dbg !55
  %5634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1856 = icmp eq i32 %5634, 0, !dbg !55
  %5635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1855, float %2884, float %2884) #5, !dbg !55
  %5636 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1855, float %2884, float %2884) #5, !dbg !55
  %.02.i1857 = select i1 %.not5.i1856, float %5636, float %5635, !dbg !55
  br label %__nv_tanhf.exit1858, !dbg !55

__nv_tanhf.exit1858:                              ; preds = %__internal_fmad.exit1.i1842, %__internal_fmad.exit3.i1847
  %s.1.i1846 = phi float [ %5620, %__internal_fmad.exit1.i1842 ], [ %.02.i1857, %__internal_fmad.exit3.i1847 ], !dbg !55
  %5637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1859 = icmp eq i32 %5637, 0, !dbg !55
  %5638 = tail call float @llvm.nvvm.fabs.ftz.f(float %2885) #5, !dbg !55
  %5639 = tail call float @llvm.nvvm.fabs.f(float %2885) #5, !dbg !55
  %.01.i1860 = select i1 %.not.i1859, float %5639, float %5638, !dbg !55
  %5640 = fcmp ult float %.01.i1860, 0x3FE3333340000000, !dbg !55
  br i1 %5640, label %__internal_fmad.exit3.i1866, label %__internal_fmad.exit1.i1861, !dbg !55

__internal_fmad.exit1.i1861:                      ; preds = %__nv_tanhf.exit1858
  %5641 = fmul float %.01.i1860, 0x4007154760000000, !dbg !55
  %5642 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5641) #5, !dbg !55
  %5643 = fadd float %5642, 1.000000e+00, !dbg !55
  %5644 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5643) #6, !dbg !55, !srcloc !56
  %5645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1862 = icmp eq i32 %5645, 0, !dbg !55
  %5646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5644, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5647 = tail call float @llvm.nvvm.fma.rn.f(float %5644, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1863 = select i1 %.not6.i1862, float %5647, float %5646, !dbg !55
  %5648 = fcmp oge float %.01.i1860, 0x4022059680000000, !dbg !55
  %s.0.i1864 = select i1 %5648, float 1.000000e+00, float %.03.i1863, !dbg !55
  %5649 = bitcast float %s.0.i1864 to i32, !dbg !55
  %5650 = bitcast float %2885 to i32, !dbg !55
  %5651 = and i32 %5650, -2147483648, !dbg !55
  %5652 = or i32 %5651, %5649, !dbg !55
  %5653 = bitcast i32 %5652 to float, !dbg !55
  br label %__nv_tanhf.exit1877, !dbg !55

__internal_fmad.exit3.i1866:                      ; preds = %__nv_tanhf.exit1858
  %5654 = fmul float %2885, %2885, !dbg !55
  %5655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1867 = icmp eq i32 %5655, 0, !dbg !55
  %5656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5654, float 0xBFAAC795C0000000) #5, !dbg !55
  %5657 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5654, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1868 = select i1 %.not1.i1867, float %5657, float %5656, !dbg !55
  %5658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1869 = icmp eq i32 %5658, 0, !dbg !55
  %5659 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1868, float %5654, float 0x3FC10B2820000000) #5, !dbg !55
  %5660 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1868, float %5654, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1870 = select i1 %.not2.i1869, float %5660, float %5659, !dbg !55
  %5661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1871 = icmp eq i32 %5661, 0, !dbg !55
  %5662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1870, float %5654, float 0xBFD5553DA0000000) #5, !dbg !55
  %5663 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1870, float %5654, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1872 = select i1 %.not3.i1871, float %5663, float %5662, !dbg !55
  %5664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1873 = icmp eq i32 %5664, 0, !dbg !55
  %5665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1872, float %5654, float 0.000000e+00) #5, !dbg !55
  %5666 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1872, float %5654, float 0.000000e+00) #5, !dbg !55
  %.04.i1874 = select i1 %.not4.i1873, float %5666, float %5665, !dbg !55
  %5667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1875 = icmp eq i32 %5667, 0, !dbg !55
  %5668 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1874, float %2885, float %2885) #5, !dbg !55
  %5669 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1874, float %2885, float %2885) #5, !dbg !55
  %.02.i1876 = select i1 %.not5.i1875, float %5669, float %5668, !dbg !55
  br label %__nv_tanhf.exit1877, !dbg !55

__nv_tanhf.exit1877:                              ; preds = %__internal_fmad.exit1.i1861, %__internal_fmad.exit3.i1866
  %s.1.i1865 = phi float [ %5653, %__internal_fmad.exit1.i1861 ], [ %.02.i1876, %__internal_fmad.exit3.i1866 ], !dbg !55
  %5670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1878 = icmp eq i32 %5670, 0, !dbg !55
  %5671 = tail call float @llvm.nvvm.fabs.ftz.f(float %2886) #5, !dbg !55
  %5672 = tail call float @llvm.nvvm.fabs.f(float %2886) #5, !dbg !55
  %.01.i1879 = select i1 %.not.i1878, float %5672, float %5671, !dbg !55
  %5673 = fcmp ult float %.01.i1879, 0x3FE3333340000000, !dbg !55
  br i1 %5673, label %__internal_fmad.exit3.i1885, label %__internal_fmad.exit1.i1880, !dbg !55

__internal_fmad.exit1.i1880:                      ; preds = %__nv_tanhf.exit1877
  %5674 = fmul float %.01.i1879, 0x4007154760000000, !dbg !55
  %5675 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5674) #5, !dbg !55
  %5676 = fadd float %5675, 1.000000e+00, !dbg !55
  %5677 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5676) #6, !dbg !55, !srcloc !56
  %5678 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1881 = icmp eq i32 %5678, 0, !dbg !55
  %5679 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5677, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5680 = tail call float @llvm.nvvm.fma.rn.f(float %5677, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1882 = select i1 %.not6.i1881, float %5680, float %5679, !dbg !55
  %5681 = fcmp oge float %.01.i1879, 0x4022059680000000, !dbg !55
  %s.0.i1883 = select i1 %5681, float 1.000000e+00, float %.03.i1882, !dbg !55
  %5682 = bitcast float %s.0.i1883 to i32, !dbg !55
  %5683 = bitcast float %2886 to i32, !dbg !55
  %5684 = and i32 %5683, -2147483648, !dbg !55
  %5685 = or i32 %5684, %5682, !dbg !55
  %5686 = bitcast i32 %5685 to float, !dbg !55
  br label %__nv_tanhf.exit1896, !dbg !55

__internal_fmad.exit3.i1885:                      ; preds = %__nv_tanhf.exit1877
  %5687 = fmul float %2886, %2886, !dbg !55
  %5688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1886 = icmp eq i32 %5688, 0, !dbg !55
  %5689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5687, float 0xBFAAC795C0000000) #5, !dbg !55
  %5690 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5687, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1887 = select i1 %.not1.i1886, float %5690, float %5689, !dbg !55
  %5691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1888 = icmp eq i32 %5691, 0, !dbg !55
  %5692 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1887, float %5687, float 0x3FC10B2820000000) #5, !dbg !55
  %5693 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1887, float %5687, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1889 = select i1 %.not2.i1888, float %5693, float %5692, !dbg !55
  %5694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1890 = icmp eq i32 %5694, 0, !dbg !55
  %5695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1889, float %5687, float 0xBFD5553DA0000000) #5, !dbg !55
  %5696 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1889, float %5687, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1891 = select i1 %.not3.i1890, float %5696, float %5695, !dbg !55
  %5697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1892 = icmp eq i32 %5697, 0, !dbg !55
  %5698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1891, float %5687, float 0.000000e+00) #5, !dbg !55
  %5699 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1891, float %5687, float 0.000000e+00) #5, !dbg !55
  %.04.i1893 = select i1 %.not4.i1892, float %5699, float %5698, !dbg !55
  %5700 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1894 = icmp eq i32 %5700, 0, !dbg !55
  %5701 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1893, float %2886, float %2886) #5, !dbg !55
  %5702 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1893, float %2886, float %2886) #5, !dbg !55
  %.02.i1895 = select i1 %.not5.i1894, float %5702, float %5701, !dbg !55
  br label %__nv_tanhf.exit1896, !dbg !55

__nv_tanhf.exit1896:                              ; preds = %__internal_fmad.exit1.i1880, %__internal_fmad.exit3.i1885
  %s.1.i1884 = phi float [ %5686, %__internal_fmad.exit1.i1880 ], [ %.02.i1895, %__internal_fmad.exit3.i1885 ], !dbg !55
  %5703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1897 = icmp eq i32 %5703, 0, !dbg !55
  %5704 = tail call float @llvm.nvvm.fabs.ftz.f(float %2887) #5, !dbg !55
  %5705 = tail call float @llvm.nvvm.fabs.f(float %2887) #5, !dbg !55
  %.01.i1898 = select i1 %.not.i1897, float %5705, float %5704, !dbg !55
  %5706 = fcmp ult float %.01.i1898, 0x3FE3333340000000, !dbg !55
  br i1 %5706, label %__internal_fmad.exit3.i1904, label %__internal_fmad.exit1.i1899, !dbg !55

__internal_fmad.exit1.i1899:                      ; preds = %__nv_tanhf.exit1896
  %5707 = fmul float %.01.i1898, 0x4007154760000000, !dbg !55
  %5708 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5707) #5, !dbg !55
  %5709 = fadd float %5708, 1.000000e+00, !dbg !55
  %5710 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5709) #6, !dbg !55, !srcloc !56
  %5711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1900 = icmp eq i32 %5711, 0, !dbg !55
  %5712 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5710, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5713 = tail call float @llvm.nvvm.fma.rn.f(float %5710, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1901 = select i1 %.not6.i1900, float %5713, float %5712, !dbg !55
  %5714 = fcmp oge float %.01.i1898, 0x4022059680000000, !dbg !55
  %s.0.i1902 = select i1 %5714, float 1.000000e+00, float %.03.i1901, !dbg !55
  %5715 = bitcast float %s.0.i1902 to i32, !dbg !55
  %5716 = bitcast float %2887 to i32, !dbg !55
  %5717 = and i32 %5716, -2147483648, !dbg !55
  %5718 = or i32 %5717, %5715, !dbg !55
  %5719 = bitcast i32 %5718 to float, !dbg !55
  br label %__nv_tanhf.exit1915, !dbg !55

__internal_fmad.exit3.i1904:                      ; preds = %__nv_tanhf.exit1896
  %5720 = fmul float %2887, %2887, !dbg !55
  %5721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1905 = icmp eq i32 %5721, 0, !dbg !55
  %5722 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5720, float 0xBFAAC795C0000000) #5, !dbg !55
  %5723 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5720, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1906 = select i1 %.not1.i1905, float %5723, float %5722, !dbg !55
  %5724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1907 = icmp eq i32 %5724, 0, !dbg !55
  %5725 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1906, float %5720, float 0x3FC10B2820000000) #5, !dbg !55
  %5726 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1906, float %5720, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1908 = select i1 %.not2.i1907, float %5726, float %5725, !dbg !55
  %5727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1909 = icmp eq i32 %5727, 0, !dbg !55
  %5728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1908, float %5720, float 0xBFD5553DA0000000) #5, !dbg !55
  %5729 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1908, float %5720, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1910 = select i1 %.not3.i1909, float %5729, float %5728, !dbg !55
  %5730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1911 = icmp eq i32 %5730, 0, !dbg !55
  %5731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1910, float %5720, float 0.000000e+00) #5, !dbg !55
  %5732 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1910, float %5720, float 0.000000e+00) #5, !dbg !55
  %.04.i1912 = select i1 %.not4.i1911, float %5732, float %5731, !dbg !55
  %5733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1913 = icmp eq i32 %5733, 0, !dbg !55
  %5734 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1912, float %2887, float %2887) #5, !dbg !55
  %5735 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1912, float %2887, float %2887) #5, !dbg !55
  %.02.i1914 = select i1 %.not5.i1913, float %5735, float %5734, !dbg !55
  br label %__nv_tanhf.exit1915, !dbg !55

__nv_tanhf.exit1915:                              ; preds = %__internal_fmad.exit1.i1899, %__internal_fmad.exit3.i1904
  %s.1.i1903 = phi float [ %5719, %__internal_fmad.exit1.i1899 ], [ %.02.i1914, %__internal_fmad.exit3.i1904 ], !dbg !55
  %5736 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1916 = icmp eq i32 %5736, 0, !dbg !55
  %5737 = tail call float @llvm.nvvm.fabs.ftz.f(float %2888) #5, !dbg !55
  %5738 = tail call float @llvm.nvvm.fabs.f(float %2888) #5, !dbg !55
  %.01.i1917 = select i1 %.not.i1916, float %5738, float %5737, !dbg !55
  %5739 = fcmp ult float %.01.i1917, 0x3FE3333340000000, !dbg !55
  br i1 %5739, label %__internal_fmad.exit3.i1923, label %__internal_fmad.exit1.i1918, !dbg !55

__internal_fmad.exit1.i1918:                      ; preds = %__nv_tanhf.exit1915
  %5740 = fmul float %.01.i1917, 0x4007154760000000, !dbg !55
  %5741 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5740) #5, !dbg !55
  %5742 = fadd float %5741, 1.000000e+00, !dbg !55
  %5743 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5742) #6, !dbg !55, !srcloc !56
  %5744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1919 = icmp eq i32 %5744, 0, !dbg !55
  %5745 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5743, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5746 = tail call float @llvm.nvvm.fma.rn.f(float %5743, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1920 = select i1 %.not6.i1919, float %5746, float %5745, !dbg !55
  %5747 = fcmp oge float %.01.i1917, 0x4022059680000000, !dbg !55
  %s.0.i1921 = select i1 %5747, float 1.000000e+00, float %.03.i1920, !dbg !55
  %5748 = bitcast float %s.0.i1921 to i32, !dbg !55
  %5749 = bitcast float %2888 to i32, !dbg !55
  %5750 = and i32 %5749, -2147483648, !dbg !55
  %5751 = or i32 %5750, %5748, !dbg !55
  %5752 = bitcast i32 %5751 to float, !dbg !55
  br label %__nv_tanhf.exit1934, !dbg !55

__internal_fmad.exit3.i1923:                      ; preds = %__nv_tanhf.exit1915
  %5753 = fmul float %2888, %2888, !dbg !55
  %5754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1924 = icmp eq i32 %5754, 0, !dbg !55
  %5755 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5753, float 0xBFAAC795C0000000) #5, !dbg !55
  %5756 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5753, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1925 = select i1 %.not1.i1924, float %5756, float %5755, !dbg !55
  %5757 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1926 = icmp eq i32 %5757, 0, !dbg !55
  %5758 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1925, float %5753, float 0x3FC10B2820000000) #5, !dbg !55
  %5759 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1925, float %5753, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1927 = select i1 %.not2.i1926, float %5759, float %5758, !dbg !55
  %5760 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1928 = icmp eq i32 %5760, 0, !dbg !55
  %5761 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1927, float %5753, float 0xBFD5553DA0000000) #5, !dbg !55
  %5762 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1927, float %5753, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1929 = select i1 %.not3.i1928, float %5762, float %5761, !dbg !55
  %5763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1930 = icmp eq i32 %5763, 0, !dbg !55
  %5764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1929, float %5753, float 0.000000e+00) #5, !dbg !55
  %5765 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1929, float %5753, float 0.000000e+00) #5, !dbg !55
  %.04.i1931 = select i1 %.not4.i1930, float %5765, float %5764, !dbg !55
  %5766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1932 = icmp eq i32 %5766, 0, !dbg !55
  %5767 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1931, float %2888, float %2888) #5, !dbg !55
  %5768 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1931, float %2888, float %2888) #5, !dbg !55
  %.02.i1933 = select i1 %.not5.i1932, float %5768, float %5767, !dbg !55
  br label %__nv_tanhf.exit1934, !dbg !55

__nv_tanhf.exit1934:                              ; preds = %__internal_fmad.exit1.i1918, %__internal_fmad.exit3.i1923
  %s.1.i1922 = phi float [ %5752, %__internal_fmad.exit1.i1918 ], [ %.02.i1933, %__internal_fmad.exit3.i1923 ], !dbg !55
  %5769 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1935 = icmp eq i32 %5769, 0, !dbg !55
  %5770 = tail call float @llvm.nvvm.fabs.ftz.f(float %2889) #5, !dbg !55
  %5771 = tail call float @llvm.nvvm.fabs.f(float %2889) #5, !dbg !55
  %.01.i1936 = select i1 %.not.i1935, float %5771, float %5770, !dbg !55
  %5772 = fcmp ult float %.01.i1936, 0x3FE3333340000000, !dbg !55
  br i1 %5772, label %__internal_fmad.exit3.i1942, label %__internal_fmad.exit1.i1937, !dbg !55

__internal_fmad.exit1.i1937:                      ; preds = %__nv_tanhf.exit1934
  %5773 = fmul float %.01.i1936, 0x4007154760000000, !dbg !55
  %5774 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5773) #5, !dbg !55
  %5775 = fadd float %5774, 1.000000e+00, !dbg !55
  %5776 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5775) #6, !dbg !55, !srcloc !56
  %5777 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1938 = icmp eq i32 %5777, 0, !dbg !55
  %5778 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5776, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5779 = tail call float @llvm.nvvm.fma.rn.f(float %5776, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1939 = select i1 %.not6.i1938, float %5779, float %5778, !dbg !55
  %5780 = fcmp oge float %.01.i1936, 0x4022059680000000, !dbg !55
  %s.0.i1940 = select i1 %5780, float 1.000000e+00, float %.03.i1939, !dbg !55
  %5781 = bitcast float %s.0.i1940 to i32, !dbg !55
  %5782 = bitcast float %2889 to i32, !dbg !55
  %5783 = and i32 %5782, -2147483648, !dbg !55
  %5784 = or i32 %5783, %5781, !dbg !55
  %5785 = bitcast i32 %5784 to float, !dbg !55
  br label %__nv_tanhf.exit1953, !dbg !55

__internal_fmad.exit3.i1942:                      ; preds = %__nv_tanhf.exit1934
  %5786 = fmul float %2889, %2889, !dbg !55
  %5787 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1943 = icmp eq i32 %5787, 0, !dbg !55
  %5788 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5786, float 0xBFAAC795C0000000) #5, !dbg !55
  %5789 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5786, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1944 = select i1 %.not1.i1943, float %5789, float %5788, !dbg !55
  %5790 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1945 = icmp eq i32 %5790, 0, !dbg !55
  %5791 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1944, float %5786, float 0x3FC10B2820000000) #5, !dbg !55
  %5792 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1944, float %5786, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1946 = select i1 %.not2.i1945, float %5792, float %5791, !dbg !55
  %5793 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1947 = icmp eq i32 %5793, 0, !dbg !55
  %5794 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1946, float %5786, float 0xBFD5553DA0000000) #5, !dbg !55
  %5795 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1946, float %5786, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1948 = select i1 %.not3.i1947, float %5795, float %5794, !dbg !55
  %5796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1949 = icmp eq i32 %5796, 0, !dbg !55
  %5797 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1948, float %5786, float 0.000000e+00) #5, !dbg !55
  %5798 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1948, float %5786, float 0.000000e+00) #5, !dbg !55
  %.04.i1950 = select i1 %.not4.i1949, float %5798, float %5797, !dbg !55
  %5799 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1951 = icmp eq i32 %5799, 0, !dbg !55
  %5800 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1950, float %2889, float %2889) #5, !dbg !55
  %5801 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1950, float %2889, float %2889) #5, !dbg !55
  %.02.i1952 = select i1 %.not5.i1951, float %5801, float %5800, !dbg !55
  br label %__nv_tanhf.exit1953, !dbg !55

__nv_tanhf.exit1953:                              ; preds = %__internal_fmad.exit1.i1937, %__internal_fmad.exit3.i1942
  %s.1.i1941 = phi float [ %5785, %__internal_fmad.exit1.i1937 ], [ %.02.i1952, %__internal_fmad.exit3.i1942 ], !dbg !55
  %5802 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1954 = icmp eq i32 %5802, 0, !dbg !55
  %5803 = tail call float @llvm.nvvm.fabs.ftz.f(float %2890) #5, !dbg !55
  %5804 = tail call float @llvm.nvvm.fabs.f(float %2890) #5, !dbg !55
  %.01.i1955 = select i1 %.not.i1954, float %5804, float %5803, !dbg !55
  %5805 = fcmp ult float %.01.i1955, 0x3FE3333340000000, !dbg !55
  br i1 %5805, label %__internal_fmad.exit3.i1961, label %__internal_fmad.exit1.i1956, !dbg !55

__internal_fmad.exit1.i1956:                      ; preds = %__nv_tanhf.exit1953
  %5806 = fmul float %.01.i1955, 0x4007154760000000, !dbg !55
  %5807 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5806) #5, !dbg !55
  %5808 = fadd float %5807, 1.000000e+00, !dbg !55
  %5809 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5808) #6, !dbg !55, !srcloc !56
  %5810 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1957 = icmp eq i32 %5810, 0, !dbg !55
  %5811 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5809, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5812 = tail call float @llvm.nvvm.fma.rn.f(float %5809, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1958 = select i1 %.not6.i1957, float %5812, float %5811, !dbg !55
  %5813 = fcmp oge float %.01.i1955, 0x4022059680000000, !dbg !55
  %s.0.i1959 = select i1 %5813, float 1.000000e+00, float %.03.i1958, !dbg !55
  %5814 = bitcast float %s.0.i1959 to i32, !dbg !55
  %5815 = bitcast float %2890 to i32, !dbg !55
  %5816 = and i32 %5815, -2147483648, !dbg !55
  %5817 = or i32 %5816, %5814, !dbg !55
  %5818 = bitcast i32 %5817 to float, !dbg !55
  br label %__nv_tanhf.exit1972, !dbg !55

__internal_fmad.exit3.i1961:                      ; preds = %__nv_tanhf.exit1953
  %5819 = fmul float %2890, %2890, !dbg !55
  %5820 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1962 = icmp eq i32 %5820, 0, !dbg !55
  %5821 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5819, float 0xBFAAC795C0000000) #5, !dbg !55
  %5822 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5819, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1963 = select i1 %.not1.i1962, float %5822, float %5821, !dbg !55
  %5823 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1964 = icmp eq i32 %5823, 0, !dbg !55
  %5824 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1963, float %5819, float 0x3FC10B2820000000) #5, !dbg !55
  %5825 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1963, float %5819, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1965 = select i1 %.not2.i1964, float %5825, float %5824, !dbg !55
  %5826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1966 = icmp eq i32 %5826, 0, !dbg !55
  %5827 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1965, float %5819, float 0xBFD5553DA0000000) #5, !dbg !55
  %5828 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1965, float %5819, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1967 = select i1 %.not3.i1966, float %5828, float %5827, !dbg !55
  %5829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1968 = icmp eq i32 %5829, 0, !dbg !55
  %5830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1967, float %5819, float 0.000000e+00) #5, !dbg !55
  %5831 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1967, float %5819, float 0.000000e+00) #5, !dbg !55
  %.04.i1969 = select i1 %.not4.i1968, float %5831, float %5830, !dbg !55
  %5832 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1970 = icmp eq i32 %5832, 0, !dbg !55
  %5833 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1969, float %2890, float %2890) #5, !dbg !55
  %5834 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1969, float %2890, float %2890) #5, !dbg !55
  %.02.i1971 = select i1 %.not5.i1970, float %5834, float %5833, !dbg !55
  br label %__nv_tanhf.exit1972, !dbg !55

__nv_tanhf.exit1972:                              ; preds = %__internal_fmad.exit1.i1956, %__internal_fmad.exit3.i1961
  %s.1.i1960 = phi float [ %5818, %__internal_fmad.exit1.i1956 ], [ %.02.i1971, %__internal_fmad.exit3.i1961 ], !dbg !55
  %5835 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1973 = icmp eq i32 %5835, 0, !dbg !55
  %5836 = tail call float @llvm.nvvm.fabs.ftz.f(float %2891) #5, !dbg !55
  %5837 = tail call float @llvm.nvvm.fabs.f(float %2891) #5, !dbg !55
  %.01.i1974 = select i1 %.not.i1973, float %5837, float %5836, !dbg !55
  %5838 = fcmp ult float %.01.i1974, 0x3FE3333340000000, !dbg !55
  br i1 %5838, label %__internal_fmad.exit3.i1980, label %__internal_fmad.exit1.i1975, !dbg !55

__internal_fmad.exit1.i1975:                      ; preds = %__nv_tanhf.exit1972
  %5839 = fmul float %.01.i1974, 0x4007154760000000, !dbg !55
  %5840 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5839) #5, !dbg !55
  %5841 = fadd float %5840, 1.000000e+00, !dbg !55
  %5842 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5841) #6, !dbg !55, !srcloc !56
  %5843 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1976 = icmp eq i32 %5843, 0, !dbg !55
  %5844 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5842, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5845 = tail call float @llvm.nvvm.fma.rn.f(float %5842, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1977 = select i1 %.not6.i1976, float %5845, float %5844, !dbg !55
  %5846 = fcmp oge float %.01.i1974, 0x4022059680000000, !dbg !55
  %s.0.i1978 = select i1 %5846, float 1.000000e+00, float %.03.i1977, !dbg !55
  %5847 = bitcast float %s.0.i1978 to i32, !dbg !55
  %5848 = bitcast float %2891 to i32, !dbg !55
  %5849 = and i32 %5848, -2147483648, !dbg !55
  %5850 = or i32 %5849, %5847, !dbg !55
  %5851 = bitcast i32 %5850 to float, !dbg !55
  br label %__nv_tanhf.exit1991, !dbg !55

__internal_fmad.exit3.i1980:                      ; preds = %__nv_tanhf.exit1972
  %5852 = fmul float %2891, %2891, !dbg !55
  %5853 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i1981 = icmp eq i32 %5853, 0, !dbg !55
  %5854 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5852, float 0xBFAAC795C0000000) #5, !dbg !55
  %5855 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5852, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i1982 = select i1 %.not1.i1981, float %5855, float %5854, !dbg !55
  %5856 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i1983 = icmp eq i32 %5856, 0, !dbg !55
  %5857 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1982, float %5852, float 0x3FC10B2820000000) #5, !dbg !55
  %5858 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1982, float %5852, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i1984 = select i1 %.not2.i1983, float %5858, float %5857, !dbg !55
  %5859 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i1985 = icmp eq i32 %5859, 0, !dbg !55
  %5860 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1984, float %5852, float 0xBFD5553DA0000000) #5, !dbg !55
  %5861 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1984, float %5852, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i1986 = select i1 %.not3.i1985, float %5861, float %5860, !dbg !55
  %5862 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i1987 = icmp eq i32 %5862, 0, !dbg !55
  %5863 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1986, float %5852, float 0.000000e+00) #5, !dbg !55
  %5864 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1986, float %5852, float 0.000000e+00) #5, !dbg !55
  %.04.i1988 = select i1 %.not4.i1987, float %5864, float %5863, !dbg !55
  %5865 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i1989 = icmp eq i32 %5865, 0, !dbg !55
  %5866 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1988, float %2891, float %2891) #5, !dbg !55
  %5867 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1988, float %2891, float %2891) #5, !dbg !55
  %.02.i1990 = select i1 %.not5.i1989, float %5867, float %5866, !dbg !55
  br label %__nv_tanhf.exit1991, !dbg !55

__nv_tanhf.exit1991:                              ; preds = %__internal_fmad.exit1.i1975, %__internal_fmad.exit3.i1980
  %s.1.i1979 = phi float [ %5851, %__internal_fmad.exit1.i1975 ], [ %.02.i1990, %__internal_fmad.exit3.i1980 ], !dbg !55
  %5868 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i1992 = icmp eq i32 %5868, 0, !dbg !55
  %5869 = tail call float @llvm.nvvm.fabs.ftz.f(float %2892) #5, !dbg !55
  %5870 = tail call float @llvm.nvvm.fabs.f(float %2892) #5, !dbg !55
  %.01.i1993 = select i1 %.not.i1992, float %5870, float %5869, !dbg !55
  %5871 = fcmp ult float %.01.i1993, 0x3FE3333340000000, !dbg !55
  br i1 %5871, label %__internal_fmad.exit3.i1999, label %__internal_fmad.exit1.i1994, !dbg !55

__internal_fmad.exit1.i1994:                      ; preds = %__nv_tanhf.exit1991
  %5872 = fmul float %.01.i1993, 0x4007154760000000, !dbg !55
  %5873 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5872) #5, !dbg !55
  %5874 = fadd float %5873, 1.000000e+00, !dbg !55
  %5875 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5874) #6, !dbg !55, !srcloc !56
  %5876 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i1995 = icmp eq i32 %5876, 0, !dbg !55
  %5877 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5875, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5878 = tail call float @llvm.nvvm.fma.rn.f(float %5875, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i1996 = select i1 %.not6.i1995, float %5878, float %5877, !dbg !55
  %5879 = fcmp oge float %.01.i1993, 0x4022059680000000, !dbg !55
  %s.0.i1997 = select i1 %5879, float 1.000000e+00, float %.03.i1996, !dbg !55
  %5880 = bitcast float %s.0.i1997 to i32, !dbg !55
  %5881 = bitcast float %2892 to i32, !dbg !55
  %5882 = and i32 %5881, -2147483648, !dbg !55
  %5883 = or i32 %5882, %5880, !dbg !55
  %5884 = bitcast i32 %5883 to float, !dbg !55
  br label %__nv_tanhf.exit2010, !dbg !55

__internal_fmad.exit3.i1999:                      ; preds = %__nv_tanhf.exit1991
  %5885 = fmul float %2892, %2892, !dbg !55
  %5886 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2000 = icmp eq i32 %5886, 0, !dbg !55
  %5887 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5885, float 0xBFAAC795C0000000) #5, !dbg !55
  %5888 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5885, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2001 = select i1 %.not1.i2000, float %5888, float %5887, !dbg !55
  %5889 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2002 = icmp eq i32 %5889, 0, !dbg !55
  %5890 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2001, float %5885, float 0x3FC10B2820000000) #5, !dbg !55
  %5891 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2001, float %5885, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2003 = select i1 %.not2.i2002, float %5891, float %5890, !dbg !55
  %5892 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2004 = icmp eq i32 %5892, 0, !dbg !55
  %5893 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2003, float %5885, float 0xBFD5553DA0000000) #5, !dbg !55
  %5894 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2003, float %5885, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2005 = select i1 %.not3.i2004, float %5894, float %5893, !dbg !55
  %5895 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2006 = icmp eq i32 %5895, 0, !dbg !55
  %5896 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2005, float %5885, float 0.000000e+00) #5, !dbg !55
  %5897 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2005, float %5885, float 0.000000e+00) #5, !dbg !55
  %.04.i2007 = select i1 %.not4.i2006, float %5897, float %5896, !dbg !55
  %5898 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2008 = icmp eq i32 %5898, 0, !dbg !55
  %5899 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2007, float %2892, float %2892) #5, !dbg !55
  %5900 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2007, float %2892, float %2892) #5, !dbg !55
  %.02.i2009 = select i1 %.not5.i2008, float %5900, float %5899, !dbg !55
  br label %__nv_tanhf.exit2010, !dbg !55

__nv_tanhf.exit2010:                              ; preds = %__internal_fmad.exit1.i1994, %__internal_fmad.exit3.i1999
  %s.1.i1998 = phi float [ %5884, %__internal_fmad.exit1.i1994 ], [ %.02.i2009, %__internal_fmad.exit3.i1999 ], !dbg !55
  %5901 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2011 = icmp eq i32 %5901, 0, !dbg !55
  %5902 = tail call float @llvm.nvvm.fabs.ftz.f(float %2893) #5, !dbg !55
  %5903 = tail call float @llvm.nvvm.fabs.f(float %2893) #5, !dbg !55
  %.01.i2012 = select i1 %.not.i2011, float %5903, float %5902, !dbg !55
  %5904 = fcmp ult float %.01.i2012, 0x3FE3333340000000, !dbg !55
  br i1 %5904, label %__internal_fmad.exit3.i2018, label %__internal_fmad.exit1.i2013, !dbg !55

__internal_fmad.exit1.i2013:                      ; preds = %__nv_tanhf.exit2010
  %5905 = fmul float %.01.i2012, 0x4007154760000000, !dbg !55
  %5906 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5905) #5, !dbg !55
  %5907 = fadd float %5906, 1.000000e+00, !dbg !55
  %5908 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5907) #6, !dbg !55, !srcloc !56
  %5909 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2014 = icmp eq i32 %5909, 0, !dbg !55
  %5910 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5908, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5911 = tail call float @llvm.nvvm.fma.rn.f(float %5908, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2015 = select i1 %.not6.i2014, float %5911, float %5910, !dbg !55
  %5912 = fcmp oge float %.01.i2012, 0x4022059680000000, !dbg !55
  %s.0.i2016 = select i1 %5912, float 1.000000e+00, float %.03.i2015, !dbg !55
  %5913 = bitcast float %s.0.i2016 to i32, !dbg !55
  %5914 = bitcast float %2893 to i32, !dbg !55
  %5915 = and i32 %5914, -2147483648, !dbg !55
  %5916 = or i32 %5915, %5913, !dbg !55
  %5917 = bitcast i32 %5916 to float, !dbg !55
  br label %__nv_tanhf.exit2029, !dbg !55

__internal_fmad.exit3.i2018:                      ; preds = %__nv_tanhf.exit2010
  %5918 = fmul float %2893, %2893, !dbg !55
  %5919 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2019 = icmp eq i32 %5919, 0, !dbg !55
  %5920 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5918, float 0xBFAAC795C0000000) #5, !dbg !55
  %5921 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5918, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2020 = select i1 %.not1.i2019, float %5921, float %5920, !dbg !55
  %5922 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2021 = icmp eq i32 %5922, 0, !dbg !55
  %5923 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2020, float %5918, float 0x3FC10B2820000000) #5, !dbg !55
  %5924 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2020, float %5918, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2022 = select i1 %.not2.i2021, float %5924, float %5923, !dbg !55
  %5925 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2023 = icmp eq i32 %5925, 0, !dbg !55
  %5926 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2022, float %5918, float 0xBFD5553DA0000000) #5, !dbg !55
  %5927 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2022, float %5918, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2024 = select i1 %.not3.i2023, float %5927, float %5926, !dbg !55
  %5928 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2025 = icmp eq i32 %5928, 0, !dbg !55
  %5929 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2024, float %5918, float 0.000000e+00) #5, !dbg !55
  %5930 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2024, float %5918, float 0.000000e+00) #5, !dbg !55
  %.04.i2026 = select i1 %.not4.i2025, float %5930, float %5929, !dbg !55
  %5931 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2027 = icmp eq i32 %5931, 0, !dbg !55
  %5932 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2026, float %2893, float %2893) #5, !dbg !55
  %5933 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2026, float %2893, float %2893) #5, !dbg !55
  %.02.i2028 = select i1 %.not5.i2027, float %5933, float %5932, !dbg !55
  br label %__nv_tanhf.exit2029, !dbg !55

__nv_tanhf.exit2029:                              ; preds = %__internal_fmad.exit1.i2013, %__internal_fmad.exit3.i2018
  %s.1.i2017 = phi float [ %5917, %__internal_fmad.exit1.i2013 ], [ %.02.i2028, %__internal_fmad.exit3.i2018 ], !dbg !55
  %5934 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2030 = icmp eq i32 %5934, 0, !dbg !55
  %5935 = tail call float @llvm.nvvm.fabs.ftz.f(float %2894) #5, !dbg !55
  %5936 = tail call float @llvm.nvvm.fabs.f(float %2894) #5, !dbg !55
  %.01.i2031 = select i1 %.not.i2030, float %5936, float %5935, !dbg !55
  %5937 = fcmp ult float %.01.i2031, 0x3FE3333340000000, !dbg !55
  br i1 %5937, label %__internal_fmad.exit3.i2037, label %__internal_fmad.exit1.i2032, !dbg !55

__internal_fmad.exit1.i2032:                      ; preds = %__nv_tanhf.exit2029
  %5938 = fmul float %.01.i2031, 0x4007154760000000, !dbg !55
  %5939 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5938) #5, !dbg !55
  %5940 = fadd float %5939, 1.000000e+00, !dbg !55
  %5941 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5940) #6, !dbg !55, !srcloc !56
  %5942 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2033 = icmp eq i32 %5942, 0, !dbg !55
  %5943 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5941, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5944 = tail call float @llvm.nvvm.fma.rn.f(float %5941, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2034 = select i1 %.not6.i2033, float %5944, float %5943, !dbg !55
  %5945 = fcmp oge float %.01.i2031, 0x4022059680000000, !dbg !55
  %s.0.i2035 = select i1 %5945, float 1.000000e+00, float %.03.i2034, !dbg !55
  %5946 = bitcast float %s.0.i2035 to i32, !dbg !55
  %5947 = bitcast float %2894 to i32, !dbg !55
  %5948 = and i32 %5947, -2147483648, !dbg !55
  %5949 = or i32 %5948, %5946, !dbg !55
  %5950 = bitcast i32 %5949 to float, !dbg !55
  br label %__nv_tanhf.exit2048, !dbg !55

__internal_fmad.exit3.i2037:                      ; preds = %__nv_tanhf.exit2029
  %5951 = fmul float %2894, %2894, !dbg !55
  %5952 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2038 = icmp eq i32 %5952, 0, !dbg !55
  %5953 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5951, float 0xBFAAC795C0000000) #5, !dbg !55
  %5954 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5951, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2039 = select i1 %.not1.i2038, float %5954, float %5953, !dbg !55
  %5955 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2040 = icmp eq i32 %5955, 0, !dbg !55
  %5956 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2039, float %5951, float 0x3FC10B2820000000) #5, !dbg !55
  %5957 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2039, float %5951, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2041 = select i1 %.not2.i2040, float %5957, float %5956, !dbg !55
  %5958 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2042 = icmp eq i32 %5958, 0, !dbg !55
  %5959 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2041, float %5951, float 0xBFD5553DA0000000) #5, !dbg !55
  %5960 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2041, float %5951, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2043 = select i1 %.not3.i2042, float %5960, float %5959, !dbg !55
  %5961 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2044 = icmp eq i32 %5961, 0, !dbg !55
  %5962 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2043, float %5951, float 0.000000e+00) #5, !dbg !55
  %5963 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2043, float %5951, float 0.000000e+00) #5, !dbg !55
  %.04.i2045 = select i1 %.not4.i2044, float %5963, float %5962, !dbg !55
  %5964 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2046 = icmp eq i32 %5964, 0, !dbg !55
  %5965 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2045, float %2894, float %2894) #5, !dbg !55
  %5966 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2045, float %2894, float %2894) #5, !dbg !55
  %.02.i2047 = select i1 %.not5.i2046, float %5966, float %5965, !dbg !55
  br label %__nv_tanhf.exit2048, !dbg !55

__nv_tanhf.exit2048:                              ; preds = %__internal_fmad.exit1.i2032, %__internal_fmad.exit3.i2037
  %s.1.i2036 = phi float [ %5950, %__internal_fmad.exit1.i2032 ], [ %.02.i2047, %__internal_fmad.exit3.i2037 ], !dbg !55
  %5967 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2049 = icmp eq i32 %5967, 0, !dbg !55
  %5968 = tail call float @llvm.nvvm.fabs.ftz.f(float %2895) #5, !dbg !55
  %5969 = tail call float @llvm.nvvm.fabs.f(float %2895) #5, !dbg !55
  %.01.i2050 = select i1 %.not.i2049, float %5969, float %5968, !dbg !55
  %5970 = fcmp ult float %.01.i2050, 0x3FE3333340000000, !dbg !55
  br i1 %5970, label %__internal_fmad.exit3.i2056, label %__internal_fmad.exit1.i2051, !dbg !55

__internal_fmad.exit1.i2051:                      ; preds = %__nv_tanhf.exit2048
  %5971 = fmul float %.01.i2050, 0x4007154760000000, !dbg !55
  %5972 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %5971) #5, !dbg !55
  %5973 = fadd float %5972, 1.000000e+00, !dbg !55
  %5974 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %5973) #6, !dbg !55, !srcloc !56
  %5975 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2052 = icmp eq i32 %5975, 0, !dbg !55
  %5976 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %5974, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %5977 = tail call float @llvm.nvvm.fma.rn.f(float %5974, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2053 = select i1 %.not6.i2052, float %5977, float %5976, !dbg !55
  %5978 = fcmp oge float %.01.i2050, 0x4022059680000000, !dbg !55
  %s.0.i2054 = select i1 %5978, float 1.000000e+00, float %.03.i2053, !dbg !55
  %5979 = bitcast float %s.0.i2054 to i32, !dbg !55
  %5980 = bitcast float %2895 to i32, !dbg !55
  %5981 = and i32 %5980, -2147483648, !dbg !55
  %5982 = or i32 %5981, %5979, !dbg !55
  %5983 = bitcast i32 %5982 to float, !dbg !55
  br label %__nv_tanhf.exit2067, !dbg !55

__internal_fmad.exit3.i2056:                      ; preds = %__nv_tanhf.exit2048
  %5984 = fmul float %2895, %2895, !dbg !55
  %5985 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2057 = icmp eq i32 %5985, 0, !dbg !55
  %5986 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %5984, float 0xBFAAC795C0000000) #5, !dbg !55
  %5987 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %5984, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2058 = select i1 %.not1.i2057, float %5987, float %5986, !dbg !55
  %5988 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2059 = icmp eq i32 %5988, 0, !dbg !55
  %5989 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2058, float %5984, float 0x3FC10B2820000000) #5, !dbg !55
  %5990 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2058, float %5984, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2060 = select i1 %.not2.i2059, float %5990, float %5989, !dbg !55
  %5991 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2061 = icmp eq i32 %5991, 0, !dbg !55
  %5992 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2060, float %5984, float 0xBFD5553DA0000000) #5, !dbg !55
  %5993 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2060, float %5984, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2062 = select i1 %.not3.i2061, float %5993, float %5992, !dbg !55
  %5994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2063 = icmp eq i32 %5994, 0, !dbg !55
  %5995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2062, float %5984, float 0.000000e+00) #5, !dbg !55
  %5996 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2062, float %5984, float 0.000000e+00) #5, !dbg !55
  %.04.i2064 = select i1 %.not4.i2063, float %5996, float %5995, !dbg !55
  %5997 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2065 = icmp eq i32 %5997, 0, !dbg !55
  %5998 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2064, float %2895, float %2895) #5, !dbg !55
  %5999 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2064, float %2895, float %2895) #5, !dbg !55
  %.02.i2066 = select i1 %.not5.i2065, float %5999, float %5998, !dbg !55
  br label %__nv_tanhf.exit2067, !dbg !55

__nv_tanhf.exit2067:                              ; preds = %__internal_fmad.exit1.i2051, %__internal_fmad.exit3.i2056
  %s.1.i2055 = phi float [ %5983, %__internal_fmad.exit1.i2051 ], [ %.02.i2066, %__internal_fmad.exit3.i2056 ], !dbg !55
  %6000 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2068 = icmp eq i32 %6000, 0, !dbg !55
  %6001 = tail call float @llvm.nvvm.fabs.ftz.f(float %2896) #5, !dbg !55
  %6002 = tail call float @llvm.nvvm.fabs.f(float %2896) #5, !dbg !55
  %.01.i2069 = select i1 %.not.i2068, float %6002, float %6001, !dbg !55
  %6003 = fcmp ult float %.01.i2069, 0x3FE3333340000000, !dbg !55
  br i1 %6003, label %__internal_fmad.exit3.i2075, label %__internal_fmad.exit1.i2070, !dbg !55

__internal_fmad.exit1.i2070:                      ; preds = %__nv_tanhf.exit2067
  %6004 = fmul float %.01.i2069, 0x4007154760000000, !dbg !55
  %6005 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6004) #5, !dbg !55
  %6006 = fadd float %6005, 1.000000e+00, !dbg !55
  %6007 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6006) #6, !dbg !55, !srcloc !56
  %6008 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2071 = icmp eq i32 %6008, 0, !dbg !55
  %6009 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6007, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6010 = tail call float @llvm.nvvm.fma.rn.f(float %6007, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2072 = select i1 %.not6.i2071, float %6010, float %6009, !dbg !55
  %6011 = fcmp oge float %.01.i2069, 0x4022059680000000, !dbg !55
  %s.0.i2073 = select i1 %6011, float 1.000000e+00, float %.03.i2072, !dbg !55
  %6012 = bitcast float %s.0.i2073 to i32, !dbg !55
  %6013 = bitcast float %2896 to i32, !dbg !55
  %6014 = and i32 %6013, -2147483648, !dbg !55
  %6015 = or i32 %6014, %6012, !dbg !55
  %6016 = bitcast i32 %6015 to float, !dbg !55
  br label %__nv_tanhf.exit2086, !dbg !55

__internal_fmad.exit3.i2075:                      ; preds = %__nv_tanhf.exit2067
  %6017 = fmul float %2896, %2896, !dbg !55
  %6018 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2076 = icmp eq i32 %6018, 0, !dbg !55
  %6019 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6017, float 0xBFAAC795C0000000) #5, !dbg !55
  %6020 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6017, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2077 = select i1 %.not1.i2076, float %6020, float %6019, !dbg !55
  %6021 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2078 = icmp eq i32 %6021, 0, !dbg !55
  %6022 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2077, float %6017, float 0x3FC10B2820000000) #5, !dbg !55
  %6023 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2077, float %6017, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2079 = select i1 %.not2.i2078, float %6023, float %6022, !dbg !55
  %6024 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2080 = icmp eq i32 %6024, 0, !dbg !55
  %6025 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2079, float %6017, float 0xBFD5553DA0000000) #5, !dbg !55
  %6026 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2079, float %6017, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2081 = select i1 %.not3.i2080, float %6026, float %6025, !dbg !55
  %6027 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2082 = icmp eq i32 %6027, 0, !dbg !55
  %6028 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2081, float %6017, float 0.000000e+00) #5, !dbg !55
  %6029 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2081, float %6017, float 0.000000e+00) #5, !dbg !55
  %.04.i2083 = select i1 %.not4.i2082, float %6029, float %6028, !dbg !55
  %6030 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2084 = icmp eq i32 %6030, 0, !dbg !55
  %6031 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2083, float %2896, float %2896) #5, !dbg !55
  %6032 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2083, float %2896, float %2896) #5, !dbg !55
  %.02.i2085 = select i1 %.not5.i2084, float %6032, float %6031, !dbg !55
  br label %__nv_tanhf.exit2086, !dbg !55

__nv_tanhf.exit2086:                              ; preds = %__internal_fmad.exit1.i2070, %__internal_fmad.exit3.i2075
  %s.1.i2074 = phi float [ %6016, %__internal_fmad.exit1.i2070 ], [ %.02.i2085, %__internal_fmad.exit3.i2075 ], !dbg !55
  %6033 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2087 = icmp eq i32 %6033, 0, !dbg !55
  %6034 = tail call float @llvm.nvvm.fabs.ftz.f(float %2897) #5, !dbg !55
  %6035 = tail call float @llvm.nvvm.fabs.f(float %2897) #5, !dbg !55
  %.01.i2088 = select i1 %.not.i2087, float %6035, float %6034, !dbg !55
  %6036 = fcmp ult float %.01.i2088, 0x3FE3333340000000, !dbg !55
  br i1 %6036, label %__internal_fmad.exit3.i2094, label %__internal_fmad.exit1.i2089, !dbg !55

__internal_fmad.exit1.i2089:                      ; preds = %__nv_tanhf.exit2086
  %6037 = fmul float %.01.i2088, 0x4007154760000000, !dbg !55
  %6038 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6037) #5, !dbg !55
  %6039 = fadd float %6038, 1.000000e+00, !dbg !55
  %6040 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6039) #6, !dbg !55, !srcloc !56
  %6041 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2090 = icmp eq i32 %6041, 0, !dbg !55
  %6042 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6040, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6043 = tail call float @llvm.nvvm.fma.rn.f(float %6040, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2091 = select i1 %.not6.i2090, float %6043, float %6042, !dbg !55
  %6044 = fcmp oge float %.01.i2088, 0x4022059680000000, !dbg !55
  %s.0.i2092 = select i1 %6044, float 1.000000e+00, float %.03.i2091, !dbg !55
  %6045 = bitcast float %s.0.i2092 to i32, !dbg !55
  %6046 = bitcast float %2897 to i32, !dbg !55
  %6047 = and i32 %6046, -2147483648, !dbg !55
  %6048 = or i32 %6047, %6045, !dbg !55
  %6049 = bitcast i32 %6048 to float, !dbg !55
  br label %__nv_tanhf.exit2105, !dbg !55

__internal_fmad.exit3.i2094:                      ; preds = %__nv_tanhf.exit2086
  %6050 = fmul float %2897, %2897, !dbg !55
  %6051 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2095 = icmp eq i32 %6051, 0, !dbg !55
  %6052 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6050, float 0xBFAAC795C0000000) #5, !dbg !55
  %6053 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6050, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2096 = select i1 %.not1.i2095, float %6053, float %6052, !dbg !55
  %6054 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2097 = icmp eq i32 %6054, 0, !dbg !55
  %6055 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2096, float %6050, float 0x3FC10B2820000000) #5, !dbg !55
  %6056 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2096, float %6050, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2098 = select i1 %.not2.i2097, float %6056, float %6055, !dbg !55
  %6057 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2099 = icmp eq i32 %6057, 0, !dbg !55
  %6058 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2098, float %6050, float 0xBFD5553DA0000000) #5, !dbg !55
  %6059 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2098, float %6050, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2100 = select i1 %.not3.i2099, float %6059, float %6058, !dbg !55
  %6060 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2101 = icmp eq i32 %6060, 0, !dbg !55
  %6061 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2100, float %6050, float 0.000000e+00) #5, !dbg !55
  %6062 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2100, float %6050, float 0.000000e+00) #5, !dbg !55
  %.04.i2102 = select i1 %.not4.i2101, float %6062, float %6061, !dbg !55
  %6063 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2103 = icmp eq i32 %6063, 0, !dbg !55
  %6064 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2102, float %2897, float %2897) #5, !dbg !55
  %6065 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2102, float %2897, float %2897) #5, !dbg !55
  %.02.i2104 = select i1 %.not5.i2103, float %6065, float %6064, !dbg !55
  br label %__nv_tanhf.exit2105, !dbg !55

__nv_tanhf.exit2105:                              ; preds = %__internal_fmad.exit1.i2089, %__internal_fmad.exit3.i2094
  %s.1.i2093 = phi float [ %6049, %__internal_fmad.exit1.i2089 ], [ %.02.i2104, %__internal_fmad.exit3.i2094 ], !dbg !55
  %6066 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2106 = icmp eq i32 %6066, 0, !dbg !55
  %6067 = tail call float @llvm.nvvm.fabs.ftz.f(float %2898) #5, !dbg !55
  %6068 = tail call float @llvm.nvvm.fabs.f(float %2898) #5, !dbg !55
  %.01.i2107 = select i1 %.not.i2106, float %6068, float %6067, !dbg !55
  %6069 = fcmp ult float %.01.i2107, 0x3FE3333340000000, !dbg !55
  br i1 %6069, label %__internal_fmad.exit3.i2113, label %__internal_fmad.exit1.i2108, !dbg !55

__internal_fmad.exit1.i2108:                      ; preds = %__nv_tanhf.exit2105
  %6070 = fmul float %.01.i2107, 0x4007154760000000, !dbg !55
  %6071 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6070) #5, !dbg !55
  %6072 = fadd float %6071, 1.000000e+00, !dbg !55
  %6073 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6072) #6, !dbg !55, !srcloc !56
  %6074 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2109 = icmp eq i32 %6074, 0, !dbg !55
  %6075 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6073, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6076 = tail call float @llvm.nvvm.fma.rn.f(float %6073, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2110 = select i1 %.not6.i2109, float %6076, float %6075, !dbg !55
  %6077 = fcmp oge float %.01.i2107, 0x4022059680000000, !dbg !55
  %s.0.i2111 = select i1 %6077, float 1.000000e+00, float %.03.i2110, !dbg !55
  %6078 = bitcast float %s.0.i2111 to i32, !dbg !55
  %6079 = bitcast float %2898 to i32, !dbg !55
  %6080 = and i32 %6079, -2147483648, !dbg !55
  %6081 = or i32 %6080, %6078, !dbg !55
  %6082 = bitcast i32 %6081 to float, !dbg !55
  br label %__nv_tanhf.exit2124, !dbg !55

__internal_fmad.exit3.i2113:                      ; preds = %__nv_tanhf.exit2105
  %6083 = fmul float %2898, %2898, !dbg !55
  %6084 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2114 = icmp eq i32 %6084, 0, !dbg !55
  %6085 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6083, float 0xBFAAC795C0000000) #5, !dbg !55
  %6086 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6083, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2115 = select i1 %.not1.i2114, float %6086, float %6085, !dbg !55
  %6087 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2116 = icmp eq i32 %6087, 0, !dbg !55
  %6088 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2115, float %6083, float 0x3FC10B2820000000) #5, !dbg !55
  %6089 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2115, float %6083, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2117 = select i1 %.not2.i2116, float %6089, float %6088, !dbg !55
  %6090 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2118 = icmp eq i32 %6090, 0, !dbg !55
  %6091 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2117, float %6083, float 0xBFD5553DA0000000) #5, !dbg !55
  %6092 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2117, float %6083, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2119 = select i1 %.not3.i2118, float %6092, float %6091, !dbg !55
  %6093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2120 = icmp eq i32 %6093, 0, !dbg !55
  %6094 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2119, float %6083, float 0.000000e+00) #5, !dbg !55
  %6095 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2119, float %6083, float 0.000000e+00) #5, !dbg !55
  %.04.i2121 = select i1 %.not4.i2120, float %6095, float %6094, !dbg !55
  %6096 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2122 = icmp eq i32 %6096, 0, !dbg !55
  %6097 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2121, float %2898, float %2898) #5, !dbg !55
  %6098 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2121, float %2898, float %2898) #5, !dbg !55
  %.02.i2123 = select i1 %.not5.i2122, float %6098, float %6097, !dbg !55
  br label %__nv_tanhf.exit2124, !dbg !55

__nv_tanhf.exit2124:                              ; preds = %__internal_fmad.exit1.i2108, %__internal_fmad.exit3.i2113
  %s.1.i2112 = phi float [ %6082, %__internal_fmad.exit1.i2108 ], [ %.02.i2123, %__internal_fmad.exit3.i2113 ], !dbg !55
  %6099 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2125 = icmp eq i32 %6099, 0, !dbg !55
  %6100 = tail call float @llvm.nvvm.fabs.ftz.f(float %2899) #5, !dbg !55
  %6101 = tail call float @llvm.nvvm.fabs.f(float %2899) #5, !dbg !55
  %.01.i2126 = select i1 %.not.i2125, float %6101, float %6100, !dbg !55
  %6102 = fcmp ult float %.01.i2126, 0x3FE3333340000000, !dbg !55
  br i1 %6102, label %__internal_fmad.exit3.i2132, label %__internal_fmad.exit1.i2127, !dbg !55

__internal_fmad.exit1.i2127:                      ; preds = %__nv_tanhf.exit2124
  %6103 = fmul float %.01.i2126, 0x4007154760000000, !dbg !55
  %6104 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6103) #5, !dbg !55
  %6105 = fadd float %6104, 1.000000e+00, !dbg !55
  %6106 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6105) #6, !dbg !55, !srcloc !56
  %6107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2128 = icmp eq i32 %6107, 0, !dbg !55
  %6108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6106, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6109 = tail call float @llvm.nvvm.fma.rn.f(float %6106, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2129 = select i1 %.not6.i2128, float %6109, float %6108, !dbg !55
  %6110 = fcmp oge float %.01.i2126, 0x4022059680000000, !dbg !55
  %s.0.i2130 = select i1 %6110, float 1.000000e+00, float %.03.i2129, !dbg !55
  %6111 = bitcast float %s.0.i2130 to i32, !dbg !55
  %6112 = bitcast float %2899 to i32, !dbg !55
  %6113 = and i32 %6112, -2147483648, !dbg !55
  %6114 = or i32 %6113, %6111, !dbg !55
  %6115 = bitcast i32 %6114 to float, !dbg !55
  br label %__nv_tanhf.exit2143, !dbg !55

__internal_fmad.exit3.i2132:                      ; preds = %__nv_tanhf.exit2124
  %6116 = fmul float %2899, %2899, !dbg !55
  %6117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2133 = icmp eq i32 %6117, 0, !dbg !55
  %6118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6116, float 0xBFAAC795C0000000) #5, !dbg !55
  %6119 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6116, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2134 = select i1 %.not1.i2133, float %6119, float %6118, !dbg !55
  %6120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2135 = icmp eq i32 %6120, 0, !dbg !55
  %6121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2134, float %6116, float 0x3FC10B2820000000) #5, !dbg !55
  %6122 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2134, float %6116, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2136 = select i1 %.not2.i2135, float %6122, float %6121, !dbg !55
  %6123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2137 = icmp eq i32 %6123, 0, !dbg !55
  %6124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2136, float %6116, float 0xBFD5553DA0000000) #5, !dbg !55
  %6125 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2136, float %6116, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2138 = select i1 %.not3.i2137, float %6125, float %6124, !dbg !55
  %6126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2139 = icmp eq i32 %6126, 0, !dbg !55
  %6127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2138, float %6116, float 0.000000e+00) #5, !dbg !55
  %6128 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2138, float %6116, float 0.000000e+00) #5, !dbg !55
  %.04.i2140 = select i1 %.not4.i2139, float %6128, float %6127, !dbg !55
  %6129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2141 = icmp eq i32 %6129, 0, !dbg !55
  %6130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2140, float %2899, float %2899) #5, !dbg !55
  %6131 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2140, float %2899, float %2899) #5, !dbg !55
  %.02.i2142 = select i1 %.not5.i2141, float %6131, float %6130, !dbg !55
  br label %__nv_tanhf.exit2143, !dbg !55

__nv_tanhf.exit2143:                              ; preds = %__internal_fmad.exit1.i2127, %__internal_fmad.exit3.i2132
  %s.1.i2131 = phi float [ %6115, %__internal_fmad.exit1.i2127 ], [ %.02.i2142, %__internal_fmad.exit3.i2132 ], !dbg !55
  %6132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2144 = icmp eq i32 %6132, 0, !dbg !55
  %6133 = tail call float @llvm.nvvm.fabs.ftz.f(float %2900) #5, !dbg !55
  %6134 = tail call float @llvm.nvvm.fabs.f(float %2900) #5, !dbg !55
  %.01.i2145 = select i1 %.not.i2144, float %6134, float %6133, !dbg !55
  %6135 = fcmp ult float %.01.i2145, 0x3FE3333340000000, !dbg !55
  br i1 %6135, label %__internal_fmad.exit3.i2151, label %__internal_fmad.exit1.i2146, !dbg !55

__internal_fmad.exit1.i2146:                      ; preds = %__nv_tanhf.exit2143
  %6136 = fmul float %.01.i2145, 0x4007154760000000, !dbg !55
  %6137 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6136) #5, !dbg !55
  %6138 = fadd float %6137, 1.000000e+00, !dbg !55
  %6139 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6138) #6, !dbg !55, !srcloc !56
  %6140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2147 = icmp eq i32 %6140, 0, !dbg !55
  %6141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6139, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6142 = tail call float @llvm.nvvm.fma.rn.f(float %6139, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2148 = select i1 %.not6.i2147, float %6142, float %6141, !dbg !55
  %6143 = fcmp oge float %.01.i2145, 0x4022059680000000, !dbg !55
  %s.0.i2149 = select i1 %6143, float 1.000000e+00, float %.03.i2148, !dbg !55
  %6144 = bitcast float %s.0.i2149 to i32, !dbg !55
  %6145 = bitcast float %2900 to i32, !dbg !55
  %6146 = and i32 %6145, -2147483648, !dbg !55
  %6147 = or i32 %6146, %6144, !dbg !55
  %6148 = bitcast i32 %6147 to float, !dbg !55
  br label %__nv_tanhf.exit2162, !dbg !55

__internal_fmad.exit3.i2151:                      ; preds = %__nv_tanhf.exit2143
  %6149 = fmul float %2900, %2900, !dbg !55
  %6150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2152 = icmp eq i32 %6150, 0, !dbg !55
  %6151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6149, float 0xBFAAC795C0000000) #5, !dbg !55
  %6152 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6149, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2153 = select i1 %.not1.i2152, float %6152, float %6151, !dbg !55
  %6153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2154 = icmp eq i32 %6153, 0, !dbg !55
  %6154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2153, float %6149, float 0x3FC10B2820000000) #5, !dbg !55
  %6155 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2153, float %6149, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2155 = select i1 %.not2.i2154, float %6155, float %6154, !dbg !55
  %6156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2156 = icmp eq i32 %6156, 0, !dbg !55
  %6157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2155, float %6149, float 0xBFD5553DA0000000) #5, !dbg !55
  %6158 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2155, float %6149, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2157 = select i1 %.not3.i2156, float %6158, float %6157, !dbg !55
  %6159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2158 = icmp eq i32 %6159, 0, !dbg !55
  %6160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2157, float %6149, float 0.000000e+00) #5, !dbg !55
  %6161 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2157, float %6149, float 0.000000e+00) #5, !dbg !55
  %.04.i2159 = select i1 %.not4.i2158, float %6161, float %6160, !dbg !55
  %6162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2160 = icmp eq i32 %6162, 0, !dbg !55
  %6163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2159, float %2900, float %2900) #5, !dbg !55
  %6164 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2159, float %2900, float %2900) #5, !dbg !55
  %.02.i2161 = select i1 %.not5.i2160, float %6164, float %6163, !dbg !55
  br label %__nv_tanhf.exit2162, !dbg !55

__nv_tanhf.exit2162:                              ; preds = %__internal_fmad.exit1.i2146, %__internal_fmad.exit3.i2151
  %s.1.i2150 = phi float [ %6148, %__internal_fmad.exit1.i2146 ], [ %.02.i2161, %__internal_fmad.exit3.i2151 ], !dbg !55
  %6165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2163 = icmp eq i32 %6165, 0, !dbg !55
  %6166 = tail call float @llvm.nvvm.fabs.ftz.f(float %2901) #5, !dbg !55
  %6167 = tail call float @llvm.nvvm.fabs.f(float %2901) #5, !dbg !55
  %.01.i2164 = select i1 %.not.i2163, float %6167, float %6166, !dbg !55
  %6168 = fcmp ult float %.01.i2164, 0x3FE3333340000000, !dbg !55
  br i1 %6168, label %__internal_fmad.exit3.i2170, label %__internal_fmad.exit1.i2165, !dbg !55

__internal_fmad.exit1.i2165:                      ; preds = %__nv_tanhf.exit2162
  %6169 = fmul float %.01.i2164, 0x4007154760000000, !dbg !55
  %6170 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6169) #5, !dbg !55
  %6171 = fadd float %6170, 1.000000e+00, !dbg !55
  %6172 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6171) #6, !dbg !55, !srcloc !56
  %6173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2166 = icmp eq i32 %6173, 0, !dbg !55
  %6174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6172, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6175 = tail call float @llvm.nvvm.fma.rn.f(float %6172, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2167 = select i1 %.not6.i2166, float %6175, float %6174, !dbg !55
  %6176 = fcmp oge float %.01.i2164, 0x4022059680000000, !dbg !55
  %s.0.i2168 = select i1 %6176, float 1.000000e+00, float %.03.i2167, !dbg !55
  %6177 = bitcast float %s.0.i2168 to i32, !dbg !55
  %6178 = bitcast float %2901 to i32, !dbg !55
  %6179 = and i32 %6178, -2147483648, !dbg !55
  %6180 = or i32 %6179, %6177, !dbg !55
  %6181 = bitcast i32 %6180 to float, !dbg !55
  br label %__nv_tanhf.exit2181, !dbg !55

__internal_fmad.exit3.i2170:                      ; preds = %__nv_tanhf.exit2162
  %6182 = fmul float %2901, %2901, !dbg !55
  %6183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2171 = icmp eq i32 %6183, 0, !dbg !55
  %6184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6182, float 0xBFAAC795C0000000) #5, !dbg !55
  %6185 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6182, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2172 = select i1 %.not1.i2171, float %6185, float %6184, !dbg !55
  %6186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2173 = icmp eq i32 %6186, 0, !dbg !55
  %6187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2172, float %6182, float 0x3FC10B2820000000) #5, !dbg !55
  %6188 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2172, float %6182, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2174 = select i1 %.not2.i2173, float %6188, float %6187, !dbg !55
  %6189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2175 = icmp eq i32 %6189, 0, !dbg !55
  %6190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2174, float %6182, float 0xBFD5553DA0000000) #5, !dbg !55
  %6191 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2174, float %6182, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2176 = select i1 %.not3.i2175, float %6191, float %6190, !dbg !55
  %6192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2177 = icmp eq i32 %6192, 0, !dbg !55
  %6193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2176, float %6182, float 0.000000e+00) #5, !dbg !55
  %6194 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2176, float %6182, float 0.000000e+00) #5, !dbg !55
  %.04.i2178 = select i1 %.not4.i2177, float %6194, float %6193, !dbg !55
  %6195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2179 = icmp eq i32 %6195, 0, !dbg !55
  %6196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2178, float %2901, float %2901) #5, !dbg !55
  %6197 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2178, float %2901, float %2901) #5, !dbg !55
  %.02.i2180 = select i1 %.not5.i2179, float %6197, float %6196, !dbg !55
  br label %__nv_tanhf.exit2181, !dbg !55

__nv_tanhf.exit2181:                              ; preds = %__internal_fmad.exit1.i2165, %__internal_fmad.exit3.i2170
  %s.1.i2169 = phi float [ %6181, %__internal_fmad.exit1.i2165 ], [ %.02.i2180, %__internal_fmad.exit3.i2170 ], !dbg !55
  %6198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2182 = icmp eq i32 %6198, 0, !dbg !55
  %6199 = tail call float @llvm.nvvm.fabs.ftz.f(float %2902) #5, !dbg !55
  %6200 = tail call float @llvm.nvvm.fabs.f(float %2902) #5, !dbg !55
  %.01.i2183 = select i1 %.not.i2182, float %6200, float %6199, !dbg !55
  %6201 = fcmp ult float %.01.i2183, 0x3FE3333340000000, !dbg !55
  br i1 %6201, label %__internal_fmad.exit3.i2189, label %__internal_fmad.exit1.i2184, !dbg !55

__internal_fmad.exit1.i2184:                      ; preds = %__nv_tanhf.exit2181
  %6202 = fmul float %.01.i2183, 0x4007154760000000, !dbg !55
  %6203 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6202) #5, !dbg !55
  %6204 = fadd float %6203, 1.000000e+00, !dbg !55
  %6205 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6204) #6, !dbg !55, !srcloc !56
  %6206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2185 = icmp eq i32 %6206, 0, !dbg !55
  %6207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6205, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6208 = tail call float @llvm.nvvm.fma.rn.f(float %6205, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2186 = select i1 %.not6.i2185, float %6208, float %6207, !dbg !55
  %6209 = fcmp oge float %.01.i2183, 0x4022059680000000, !dbg !55
  %s.0.i2187 = select i1 %6209, float 1.000000e+00, float %.03.i2186, !dbg !55
  %6210 = bitcast float %s.0.i2187 to i32, !dbg !55
  %6211 = bitcast float %2902 to i32, !dbg !55
  %6212 = and i32 %6211, -2147483648, !dbg !55
  %6213 = or i32 %6212, %6210, !dbg !55
  %6214 = bitcast i32 %6213 to float, !dbg !55
  br label %__nv_tanhf.exit2200, !dbg !55

__internal_fmad.exit3.i2189:                      ; preds = %__nv_tanhf.exit2181
  %6215 = fmul float %2902, %2902, !dbg !55
  %6216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2190 = icmp eq i32 %6216, 0, !dbg !55
  %6217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6215, float 0xBFAAC795C0000000) #5, !dbg !55
  %6218 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6215, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2191 = select i1 %.not1.i2190, float %6218, float %6217, !dbg !55
  %6219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2192 = icmp eq i32 %6219, 0, !dbg !55
  %6220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2191, float %6215, float 0x3FC10B2820000000) #5, !dbg !55
  %6221 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2191, float %6215, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2193 = select i1 %.not2.i2192, float %6221, float %6220, !dbg !55
  %6222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2194 = icmp eq i32 %6222, 0, !dbg !55
  %6223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2193, float %6215, float 0xBFD5553DA0000000) #5, !dbg !55
  %6224 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2193, float %6215, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2195 = select i1 %.not3.i2194, float %6224, float %6223, !dbg !55
  %6225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2196 = icmp eq i32 %6225, 0, !dbg !55
  %6226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2195, float %6215, float 0.000000e+00) #5, !dbg !55
  %6227 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2195, float %6215, float 0.000000e+00) #5, !dbg !55
  %.04.i2197 = select i1 %.not4.i2196, float %6227, float %6226, !dbg !55
  %6228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2198 = icmp eq i32 %6228, 0, !dbg !55
  %6229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2197, float %2902, float %2902) #5, !dbg !55
  %6230 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2197, float %2902, float %2902) #5, !dbg !55
  %.02.i2199 = select i1 %.not5.i2198, float %6230, float %6229, !dbg !55
  br label %__nv_tanhf.exit2200, !dbg !55

__nv_tanhf.exit2200:                              ; preds = %__internal_fmad.exit1.i2184, %__internal_fmad.exit3.i2189
  %s.1.i2188 = phi float [ %6214, %__internal_fmad.exit1.i2184 ], [ %.02.i2199, %__internal_fmad.exit3.i2189 ], !dbg !55
  %6231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2201 = icmp eq i32 %6231, 0, !dbg !55
  %6232 = tail call float @llvm.nvvm.fabs.ftz.f(float %2903) #5, !dbg !55
  %6233 = tail call float @llvm.nvvm.fabs.f(float %2903) #5, !dbg !55
  %.01.i2202 = select i1 %.not.i2201, float %6233, float %6232, !dbg !55
  %6234 = fcmp ult float %.01.i2202, 0x3FE3333340000000, !dbg !55
  br i1 %6234, label %__internal_fmad.exit3.i2208, label %__internal_fmad.exit1.i2203, !dbg !55

__internal_fmad.exit1.i2203:                      ; preds = %__nv_tanhf.exit2200
  %6235 = fmul float %.01.i2202, 0x4007154760000000, !dbg !55
  %6236 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6235) #5, !dbg !55
  %6237 = fadd float %6236, 1.000000e+00, !dbg !55
  %6238 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6237) #6, !dbg !55, !srcloc !56
  %6239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2204 = icmp eq i32 %6239, 0, !dbg !55
  %6240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6238, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6241 = tail call float @llvm.nvvm.fma.rn.f(float %6238, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2205 = select i1 %.not6.i2204, float %6241, float %6240, !dbg !55
  %6242 = fcmp oge float %.01.i2202, 0x4022059680000000, !dbg !55
  %s.0.i2206 = select i1 %6242, float 1.000000e+00, float %.03.i2205, !dbg !55
  %6243 = bitcast float %s.0.i2206 to i32, !dbg !55
  %6244 = bitcast float %2903 to i32, !dbg !55
  %6245 = and i32 %6244, -2147483648, !dbg !55
  %6246 = or i32 %6245, %6243, !dbg !55
  %6247 = bitcast i32 %6246 to float, !dbg !55
  br label %__nv_tanhf.exit2219, !dbg !55

__internal_fmad.exit3.i2208:                      ; preds = %__nv_tanhf.exit2200
  %6248 = fmul float %2903, %2903, !dbg !55
  %6249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2209 = icmp eq i32 %6249, 0, !dbg !55
  %6250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6248, float 0xBFAAC795C0000000) #5, !dbg !55
  %6251 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6248, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2210 = select i1 %.not1.i2209, float %6251, float %6250, !dbg !55
  %6252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2211 = icmp eq i32 %6252, 0, !dbg !55
  %6253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2210, float %6248, float 0x3FC10B2820000000) #5, !dbg !55
  %6254 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2210, float %6248, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2212 = select i1 %.not2.i2211, float %6254, float %6253, !dbg !55
  %6255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2213 = icmp eq i32 %6255, 0, !dbg !55
  %6256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2212, float %6248, float 0xBFD5553DA0000000) #5, !dbg !55
  %6257 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2212, float %6248, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2214 = select i1 %.not3.i2213, float %6257, float %6256, !dbg !55
  %6258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2215 = icmp eq i32 %6258, 0, !dbg !55
  %6259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2214, float %6248, float 0.000000e+00) #5, !dbg !55
  %6260 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2214, float %6248, float 0.000000e+00) #5, !dbg !55
  %.04.i2216 = select i1 %.not4.i2215, float %6260, float %6259, !dbg !55
  %6261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2217 = icmp eq i32 %6261, 0, !dbg !55
  %6262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2216, float %2903, float %2903) #5, !dbg !55
  %6263 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2216, float %2903, float %2903) #5, !dbg !55
  %.02.i2218 = select i1 %.not5.i2217, float %6263, float %6262, !dbg !55
  br label %__nv_tanhf.exit2219, !dbg !55

__nv_tanhf.exit2219:                              ; preds = %__internal_fmad.exit1.i2203, %__internal_fmad.exit3.i2208
  %s.1.i2207 = phi float [ %6247, %__internal_fmad.exit1.i2203 ], [ %.02.i2218, %__internal_fmad.exit3.i2208 ], !dbg !55
  %6264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2220 = icmp eq i32 %6264, 0, !dbg !55
  %6265 = tail call float @llvm.nvvm.fabs.ftz.f(float %2904) #5, !dbg !55
  %6266 = tail call float @llvm.nvvm.fabs.f(float %2904) #5, !dbg !55
  %.01.i2221 = select i1 %.not.i2220, float %6266, float %6265, !dbg !55
  %6267 = fcmp ult float %.01.i2221, 0x3FE3333340000000, !dbg !55
  br i1 %6267, label %__internal_fmad.exit3.i2227, label %__internal_fmad.exit1.i2222, !dbg !55

__internal_fmad.exit1.i2222:                      ; preds = %__nv_tanhf.exit2219
  %6268 = fmul float %.01.i2221, 0x4007154760000000, !dbg !55
  %6269 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6268) #5, !dbg !55
  %6270 = fadd float %6269, 1.000000e+00, !dbg !55
  %6271 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6270) #6, !dbg !55, !srcloc !56
  %6272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2223 = icmp eq i32 %6272, 0, !dbg !55
  %6273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6271, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6274 = tail call float @llvm.nvvm.fma.rn.f(float %6271, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2224 = select i1 %.not6.i2223, float %6274, float %6273, !dbg !55
  %6275 = fcmp oge float %.01.i2221, 0x4022059680000000, !dbg !55
  %s.0.i2225 = select i1 %6275, float 1.000000e+00, float %.03.i2224, !dbg !55
  %6276 = bitcast float %s.0.i2225 to i32, !dbg !55
  %6277 = bitcast float %2904 to i32, !dbg !55
  %6278 = and i32 %6277, -2147483648, !dbg !55
  %6279 = or i32 %6278, %6276, !dbg !55
  %6280 = bitcast i32 %6279 to float, !dbg !55
  br label %__nv_tanhf.exit2238, !dbg !55

__internal_fmad.exit3.i2227:                      ; preds = %__nv_tanhf.exit2219
  %6281 = fmul float %2904, %2904, !dbg !55
  %6282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2228 = icmp eq i32 %6282, 0, !dbg !55
  %6283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6281, float 0xBFAAC795C0000000) #5, !dbg !55
  %6284 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6281, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2229 = select i1 %.not1.i2228, float %6284, float %6283, !dbg !55
  %6285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2230 = icmp eq i32 %6285, 0, !dbg !55
  %6286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2229, float %6281, float 0x3FC10B2820000000) #5, !dbg !55
  %6287 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2229, float %6281, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2231 = select i1 %.not2.i2230, float %6287, float %6286, !dbg !55
  %6288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2232 = icmp eq i32 %6288, 0, !dbg !55
  %6289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2231, float %6281, float 0xBFD5553DA0000000) #5, !dbg !55
  %6290 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2231, float %6281, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2233 = select i1 %.not3.i2232, float %6290, float %6289, !dbg !55
  %6291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2234 = icmp eq i32 %6291, 0, !dbg !55
  %6292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2233, float %6281, float 0.000000e+00) #5, !dbg !55
  %6293 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2233, float %6281, float 0.000000e+00) #5, !dbg !55
  %.04.i2235 = select i1 %.not4.i2234, float %6293, float %6292, !dbg !55
  %6294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2236 = icmp eq i32 %6294, 0, !dbg !55
  %6295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2235, float %2904, float %2904) #5, !dbg !55
  %6296 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2235, float %2904, float %2904) #5, !dbg !55
  %.02.i2237 = select i1 %.not5.i2236, float %6296, float %6295, !dbg !55
  br label %__nv_tanhf.exit2238, !dbg !55

__nv_tanhf.exit2238:                              ; preds = %__internal_fmad.exit1.i2222, %__internal_fmad.exit3.i2227
  %s.1.i2226 = phi float [ %6280, %__internal_fmad.exit1.i2222 ], [ %.02.i2237, %__internal_fmad.exit3.i2227 ], !dbg !55
  %6297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2239 = icmp eq i32 %6297, 0, !dbg !55
  %6298 = tail call float @llvm.nvvm.fabs.ftz.f(float %2905) #5, !dbg !55
  %6299 = tail call float @llvm.nvvm.fabs.f(float %2905) #5, !dbg !55
  %.01.i2240 = select i1 %.not.i2239, float %6299, float %6298, !dbg !55
  %6300 = fcmp ult float %.01.i2240, 0x3FE3333340000000, !dbg !55
  br i1 %6300, label %__internal_fmad.exit3.i2246, label %__internal_fmad.exit1.i2241, !dbg !55

__internal_fmad.exit1.i2241:                      ; preds = %__nv_tanhf.exit2238
  %6301 = fmul float %.01.i2240, 0x4007154760000000, !dbg !55
  %6302 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6301) #5, !dbg !55
  %6303 = fadd float %6302, 1.000000e+00, !dbg !55
  %6304 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6303) #6, !dbg !55, !srcloc !56
  %6305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2242 = icmp eq i32 %6305, 0, !dbg !55
  %6306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6304, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6307 = tail call float @llvm.nvvm.fma.rn.f(float %6304, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2243 = select i1 %.not6.i2242, float %6307, float %6306, !dbg !55
  %6308 = fcmp oge float %.01.i2240, 0x4022059680000000, !dbg !55
  %s.0.i2244 = select i1 %6308, float 1.000000e+00, float %.03.i2243, !dbg !55
  %6309 = bitcast float %s.0.i2244 to i32, !dbg !55
  %6310 = bitcast float %2905 to i32, !dbg !55
  %6311 = and i32 %6310, -2147483648, !dbg !55
  %6312 = or i32 %6311, %6309, !dbg !55
  %6313 = bitcast i32 %6312 to float, !dbg !55
  br label %__nv_tanhf.exit2257, !dbg !55

__internal_fmad.exit3.i2246:                      ; preds = %__nv_tanhf.exit2238
  %6314 = fmul float %2905, %2905, !dbg !55
  %6315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2247 = icmp eq i32 %6315, 0, !dbg !55
  %6316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6314, float 0xBFAAC795C0000000) #5, !dbg !55
  %6317 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6314, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2248 = select i1 %.not1.i2247, float %6317, float %6316, !dbg !55
  %6318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2249 = icmp eq i32 %6318, 0, !dbg !55
  %6319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2248, float %6314, float 0x3FC10B2820000000) #5, !dbg !55
  %6320 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2248, float %6314, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2250 = select i1 %.not2.i2249, float %6320, float %6319, !dbg !55
  %6321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2251 = icmp eq i32 %6321, 0, !dbg !55
  %6322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2250, float %6314, float 0xBFD5553DA0000000) #5, !dbg !55
  %6323 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2250, float %6314, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2252 = select i1 %.not3.i2251, float %6323, float %6322, !dbg !55
  %6324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2253 = icmp eq i32 %6324, 0, !dbg !55
  %6325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2252, float %6314, float 0.000000e+00) #5, !dbg !55
  %6326 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2252, float %6314, float 0.000000e+00) #5, !dbg !55
  %.04.i2254 = select i1 %.not4.i2253, float %6326, float %6325, !dbg !55
  %6327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2255 = icmp eq i32 %6327, 0, !dbg !55
  %6328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2254, float %2905, float %2905) #5, !dbg !55
  %6329 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2254, float %2905, float %2905) #5, !dbg !55
  %.02.i2256 = select i1 %.not5.i2255, float %6329, float %6328, !dbg !55
  br label %__nv_tanhf.exit2257, !dbg !55

__nv_tanhf.exit2257:                              ; preds = %__internal_fmad.exit1.i2241, %__internal_fmad.exit3.i2246
  %s.1.i2245 = phi float [ %6313, %__internal_fmad.exit1.i2241 ], [ %.02.i2256, %__internal_fmad.exit3.i2246 ], !dbg !55
  %6330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2258 = icmp eq i32 %6330, 0, !dbg !55
  %6331 = tail call float @llvm.nvvm.fabs.ftz.f(float %2906) #5, !dbg !55
  %6332 = tail call float @llvm.nvvm.fabs.f(float %2906) #5, !dbg !55
  %.01.i2259 = select i1 %.not.i2258, float %6332, float %6331, !dbg !55
  %6333 = fcmp ult float %.01.i2259, 0x3FE3333340000000, !dbg !55
  br i1 %6333, label %__internal_fmad.exit3.i2265, label %__internal_fmad.exit1.i2260, !dbg !55

__internal_fmad.exit1.i2260:                      ; preds = %__nv_tanhf.exit2257
  %6334 = fmul float %.01.i2259, 0x4007154760000000, !dbg !55
  %6335 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6334) #5, !dbg !55
  %6336 = fadd float %6335, 1.000000e+00, !dbg !55
  %6337 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6336) #6, !dbg !55, !srcloc !56
  %6338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2261 = icmp eq i32 %6338, 0, !dbg !55
  %6339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6337, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6340 = tail call float @llvm.nvvm.fma.rn.f(float %6337, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2262 = select i1 %.not6.i2261, float %6340, float %6339, !dbg !55
  %6341 = fcmp oge float %.01.i2259, 0x4022059680000000, !dbg !55
  %s.0.i2263 = select i1 %6341, float 1.000000e+00, float %.03.i2262, !dbg !55
  %6342 = bitcast float %s.0.i2263 to i32, !dbg !55
  %6343 = bitcast float %2906 to i32, !dbg !55
  %6344 = and i32 %6343, -2147483648, !dbg !55
  %6345 = or i32 %6344, %6342, !dbg !55
  %6346 = bitcast i32 %6345 to float, !dbg !55
  br label %__nv_tanhf.exit2276, !dbg !55

__internal_fmad.exit3.i2265:                      ; preds = %__nv_tanhf.exit2257
  %6347 = fmul float %2906, %2906, !dbg !55
  %6348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2266 = icmp eq i32 %6348, 0, !dbg !55
  %6349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6347, float 0xBFAAC795C0000000) #5, !dbg !55
  %6350 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6347, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2267 = select i1 %.not1.i2266, float %6350, float %6349, !dbg !55
  %6351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2268 = icmp eq i32 %6351, 0, !dbg !55
  %6352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2267, float %6347, float 0x3FC10B2820000000) #5, !dbg !55
  %6353 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2267, float %6347, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2269 = select i1 %.not2.i2268, float %6353, float %6352, !dbg !55
  %6354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2270 = icmp eq i32 %6354, 0, !dbg !55
  %6355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2269, float %6347, float 0xBFD5553DA0000000) #5, !dbg !55
  %6356 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2269, float %6347, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2271 = select i1 %.not3.i2270, float %6356, float %6355, !dbg !55
  %6357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2272 = icmp eq i32 %6357, 0, !dbg !55
  %6358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2271, float %6347, float 0.000000e+00) #5, !dbg !55
  %6359 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2271, float %6347, float 0.000000e+00) #5, !dbg !55
  %.04.i2273 = select i1 %.not4.i2272, float %6359, float %6358, !dbg !55
  %6360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2274 = icmp eq i32 %6360, 0, !dbg !55
  %6361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2273, float %2906, float %2906) #5, !dbg !55
  %6362 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2273, float %2906, float %2906) #5, !dbg !55
  %.02.i2275 = select i1 %.not5.i2274, float %6362, float %6361, !dbg !55
  br label %__nv_tanhf.exit2276, !dbg !55

__nv_tanhf.exit2276:                              ; preds = %__internal_fmad.exit1.i2260, %__internal_fmad.exit3.i2265
  %s.1.i2264 = phi float [ %6346, %__internal_fmad.exit1.i2260 ], [ %.02.i2275, %__internal_fmad.exit3.i2265 ], !dbg !55
  %6363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2277 = icmp eq i32 %6363, 0, !dbg !55
  %6364 = tail call float @llvm.nvvm.fabs.ftz.f(float %2907) #5, !dbg !55
  %6365 = tail call float @llvm.nvvm.fabs.f(float %2907) #5, !dbg !55
  %.01.i2278 = select i1 %.not.i2277, float %6365, float %6364, !dbg !55
  %6366 = fcmp ult float %.01.i2278, 0x3FE3333340000000, !dbg !55
  br i1 %6366, label %__internal_fmad.exit3.i2284, label %__internal_fmad.exit1.i2279, !dbg !55

__internal_fmad.exit1.i2279:                      ; preds = %__nv_tanhf.exit2276
  %6367 = fmul float %.01.i2278, 0x4007154760000000, !dbg !55
  %6368 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6367) #5, !dbg !55
  %6369 = fadd float %6368, 1.000000e+00, !dbg !55
  %6370 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6369) #6, !dbg !55, !srcloc !56
  %6371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2280 = icmp eq i32 %6371, 0, !dbg !55
  %6372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6370, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6373 = tail call float @llvm.nvvm.fma.rn.f(float %6370, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2281 = select i1 %.not6.i2280, float %6373, float %6372, !dbg !55
  %6374 = fcmp oge float %.01.i2278, 0x4022059680000000, !dbg !55
  %s.0.i2282 = select i1 %6374, float 1.000000e+00, float %.03.i2281, !dbg !55
  %6375 = bitcast float %s.0.i2282 to i32, !dbg !55
  %6376 = bitcast float %2907 to i32, !dbg !55
  %6377 = and i32 %6376, -2147483648, !dbg !55
  %6378 = or i32 %6377, %6375, !dbg !55
  %6379 = bitcast i32 %6378 to float, !dbg !55
  br label %__nv_tanhf.exit2295, !dbg !55

__internal_fmad.exit3.i2284:                      ; preds = %__nv_tanhf.exit2276
  %6380 = fmul float %2907, %2907, !dbg !55
  %6381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2285 = icmp eq i32 %6381, 0, !dbg !55
  %6382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6380, float 0xBFAAC795C0000000) #5, !dbg !55
  %6383 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6380, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2286 = select i1 %.not1.i2285, float %6383, float %6382, !dbg !55
  %6384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2287 = icmp eq i32 %6384, 0, !dbg !55
  %6385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2286, float %6380, float 0x3FC10B2820000000) #5, !dbg !55
  %6386 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2286, float %6380, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2288 = select i1 %.not2.i2287, float %6386, float %6385, !dbg !55
  %6387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2289 = icmp eq i32 %6387, 0, !dbg !55
  %6388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2288, float %6380, float 0xBFD5553DA0000000) #5, !dbg !55
  %6389 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2288, float %6380, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2290 = select i1 %.not3.i2289, float %6389, float %6388, !dbg !55
  %6390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2291 = icmp eq i32 %6390, 0, !dbg !55
  %6391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2290, float %6380, float 0.000000e+00) #5, !dbg !55
  %6392 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2290, float %6380, float 0.000000e+00) #5, !dbg !55
  %.04.i2292 = select i1 %.not4.i2291, float %6392, float %6391, !dbg !55
  %6393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2293 = icmp eq i32 %6393, 0, !dbg !55
  %6394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2292, float %2907, float %2907) #5, !dbg !55
  %6395 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2292, float %2907, float %2907) #5, !dbg !55
  %.02.i2294 = select i1 %.not5.i2293, float %6395, float %6394, !dbg !55
  br label %__nv_tanhf.exit2295, !dbg !55

__nv_tanhf.exit2295:                              ; preds = %__internal_fmad.exit1.i2279, %__internal_fmad.exit3.i2284
  %s.1.i2283 = phi float [ %6379, %__internal_fmad.exit1.i2279 ], [ %.02.i2294, %__internal_fmad.exit3.i2284 ], !dbg !55
  %6396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2296 = icmp eq i32 %6396, 0, !dbg !55
  %6397 = tail call float @llvm.nvvm.fabs.ftz.f(float %2908) #5, !dbg !55
  %6398 = tail call float @llvm.nvvm.fabs.f(float %2908) #5, !dbg !55
  %.01.i2297 = select i1 %.not.i2296, float %6398, float %6397, !dbg !55
  %6399 = fcmp ult float %.01.i2297, 0x3FE3333340000000, !dbg !55
  br i1 %6399, label %__internal_fmad.exit3.i2303, label %__internal_fmad.exit1.i2298, !dbg !55

__internal_fmad.exit1.i2298:                      ; preds = %__nv_tanhf.exit2295
  %6400 = fmul float %.01.i2297, 0x4007154760000000, !dbg !55
  %6401 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6400) #5, !dbg !55
  %6402 = fadd float %6401, 1.000000e+00, !dbg !55
  %6403 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6402) #6, !dbg !55, !srcloc !56
  %6404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2299 = icmp eq i32 %6404, 0, !dbg !55
  %6405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6403, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6406 = tail call float @llvm.nvvm.fma.rn.f(float %6403, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2300 = select i1 %.not6.i2299, float %6406, float %6405, !dbg !55
  %6407 = fcmp oge float %.01.i2297, 0x4022059680000000, !dbg !55
  %s.0.i2301 = select i1 %6407, float 1.000000e+00, float %.03.i2300, !dbg !55
  %6408 = bitcast float %s.0.i2301 to i32, !dbg !55
  %6409 = bitcast float %2908 to i32, !dbg !55
  %6410 = and i32 %6409, -2147483648, !dbg !55
  %6411 = or i32 %6410, %6408, !dbg !55
  %6412 = bitcast i32 %6411 to float, !dbg !55
  br label %__nv_tanhf.exit2314, !dbg !55

__internal_fmad.exit3.i2303:                      ; preds = %__nv_tanhf.exit2295
  %6413 = fmul float %2908, %2908, !dbg !55
  %6414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2304 = icmp eq i32 %6414, 0, !dbg !55
  %6415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6413, float 0xBFAAC795C0000000) #5, !dbg !55
  %6416 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6413, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2305 = select i1 %.not1.i2304, float %6416, float %6415, !dbg !55
  %6417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2306 = icmp eq i32 %6417, 0, !dbg !55
  %6418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2305, float %6413, float 0x3FC10B2820000000) #5, !dbg !55
  %6419 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2305, float %6413, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2307 = select i1 %.not2.i2306, float %6419, float %6418, !dbg !55
  %6420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2308 = icmp eq i32 %6420, 0, !dbg !55
  %6421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2307, float %6413, float 0xBFD5553DA0000000) #5, !dbg !55
  %6422 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2307, float %6413, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2309 = select i1 %.not3.i2308, float %6422, float %6421, !dbg !55
  %6423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2310 = icmp eq i32 %6423, 0, !dbg !55
  %6424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2309, float %6413, float 0.000000e+00) #5, !dbg !55
  %6425 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2309, float %6413, float 0.000000e+00) #5, !dbg !55
  %.04.i2311 = select i1 %.not4.i2310, float %6425, float %6424, !dbg !55
  %6426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2312 = icmp eq i32 %6426, 0, !dbg !55
  %6427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2311, float %2908, float %2908) #5, !dbg !55
  %6428 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2311, float %2908, float %2908) #5, !dbg !55
  %.02.i2313 = select i1 %.not5.i2312, float %6428, float %6427, !dbg !55
  br label %__nv_tanhf.exit2314, !dbg !55

__nv_tanhf.exit2314:                              ; preds = %__internal_fmad.exit1.i2298, %__internal_fmad.exit3.i2303
  %s.1.i2302 = phi float [ %6412, %__internal_fmad.exit1.i2298 ], [ %.02.i2313, %__internal_fmad.exit3.i2303 ], !dbg !55
  %6429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2315 = icmp eq i32 %6429, 0, !dbg !55
  %6430 = tail call float @llvm.nvvm.fabs.ftz.f(float %2909) #5, !dbg !55
  %6431 = tail call float @llvm.nvvm.fabs.f(float %2909) #5, !dbg !55
  %.01.i2316 = select i1 %.not.i2315, float %6431, float %6430, !dbg !55
  %6432 = fcmp ult float %.01.i2316, 0x3FE3333340000000, !dbg !55
  br i1 %6432, label %__internal_fmad.exit3.i2322, label %__internal_fmad.exit1.i2317, !dbg !55

__internal_fmad.exit1.i2317:                      ; preds = %__nv_tanhf.exit2314
  %6433 = fmul float %.01.i2316, 0x4007154760000000, !dbg !55
  %6434 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6433) #5, !dbg !55
  %6435 = fadd float %6434, 1.000000e+00, !dbg !55
  %6436 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6435) #6, !dbg !55, !srcloc !56
  %6437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2318 = icmp eq i32 %6437, 0, !dbg !55
  %6438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6436, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6439 = tail call float @llvm.nvvm.fma.rn.f(float %6436, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2319 = select i1 %.not6.i2318, float %6439, float %6438, !dbg !55
  %6440 = fcmp oge float %.01.i2316, 0x4022059680000000, !dbg !55
  %s.0.i2320 = select i1 %6440, float 1.000000e+00, float %.03.i2319, !dbg !55
  %6441 = bitcast float %s.0.i2320 to i32, !dbg !55
  %6442 = bitcast float %2909 to i32, !dbg !55
  %6443 = and i32 %6442, -2147483648, !dbg !55
  %6444 = or i32 %6443, %6441, !dbg !55
  %6445 = bitcast i32 %6444 to float, !dbg !55
  br label %__nv_tanhf.exit2333, !dbg !55

__internal_fmad.exit3.i2322:                      ; preds = %__nv_tanhf.exit2314
  %6446 = fmul float %2909, %2909, !dbg !55
  %6447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2323 = icmp eq i32 %6447, 0, !dbg !55
  %6448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6446, float 0xBFAAC795C0000000) #5, !dbg !55
  %6449 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6446, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2324 = select i1 %.not1.i2323, float %6449, float %6448, !dbg !55
  %6450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2325 = icmp eq i32 %6450, 0, !dbg !55
  %6451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2324, float %6446, float 0x3FC10B2820000000) #5, !dbg !55
  %6452 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2324, float %6446, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2326 = select i1 %.not2.i2325, float %6452, float %6451, !dbg !55
  %6453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2327 = icmp eq i32 %6453, 0, !dbg !55
  %6454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2326, float %6446, float 0xBFD5553DA0000000) #5, !dbg !55
  %6455 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2326, float %6446, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2328 = select i1 %.not3.i2327, float %6455, float %6454, !dbg !55
  %6456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2329 = icmp eq i32 %6456, 0, !dbg !55
  %6457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2328, float %6446, float 0.000000e+00) #5, !dbg !55
  %6458 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2328, float %6446, float 0.000000e+00) #5, !dbg !55
  %.04.i2330 = select i1 %.not4.i2329, float %6458, float %6457, !dbg !55
  %6459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2331 = icmp eq i32 %6459, 0, !dbg !55
  %6460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2330, float %2909, float %2909) #5, !dbg !55
  %6461 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2330, float %2909, float %2909) #5, !dbg !55
  %.02.i2332 = select i1 %.not5.i2331, float %6461, float %6460, !dbg !55
  br label %__nv_tanhf.exit2333, !dbg !55

__nv_tanhf.exit2333:                              ; preds = %__internal_fmad.exit1.i2317, %__internal_fmad.exit3.i2322
  %s.1.i2321 = phi float [ %6445, %__internal_fmad.exit1.i2317 ], [ %.02.i2332, %__internal_fmad.exit3.i2322 ], !dbg !55
  %6462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2334 = icmp eq i32 %6462, 0, !dbg !55
  %6463 = tail call float @llvm.nvvm.fabs.ftz.f(float %2910) #5, !dbg !55
  %6464 = tail call float @llvm.nvvm.fabs.f(float %2910) #5, !dbg !55
  %.01.i2335 = select i1 %.not.i2334, float %6464, float %6463, !dbg !55
  %6465 = fcmp ult float %.01.i2335, 0x3FE3333340000000, !dbg !55
  br i1 %6465, label %__internal_fmad.exit3.i2341, label %__internal_fmad.exit1.i2336, !dbg !55

__internal_fmad.exit1.i2336:                      ; preds = %__nv_tanhf.exit2333
  %6466 = fmul float %.01.i2335, 0x4007154760000000, !dbg !55
  %6467 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6466) #5, !dbg !55
  %6468 = fadd float %6467, 1.000000e+00, !dbg !55
  %6469 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6468) #6, !dbg !55, !srcloc !56
  %6470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2337 = icmp eq i32 %6470, 0, !dbg !55
  %6471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6469, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6472 = tail call float @llvm.nvvm.fma.rn.f(float %6469, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2338 = select i1 %.not6.i2337, float %6472, float %6471, !dbg !55
  %6473 = fcmp oge float %.01.i2335, 0x4022059680000000, !dbg !55
  %s.0.i2339 = select i1 %6473, float 1.000000e+00, float %.03.i2338, !dbg !55
  %6474 = bitcast float %s.0.i2339 to i32, !dbg !55
  %6475 = bitcast float %2910 to i32, !dbg !55
  %6476 = and i32 %6475, -2147483648, !dbg !55
  %6477 = or i32 %6476, %6474, !dbg !55
  %6478 = bitcast i32 %6477 to float, !dbg !55
  br label %__nv_tanhf.exit2352, !dbg !55

__internal_fmad.exit3.i2341:                      ; preds = %__nv_tanhf.exit2333
  %6479 = fmul float %2910, %2910, !dbg !55
  %6480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2342 = icmp eq i32 %6480, 0, !dbg !55
  %6481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6479, float 0xBFAAC795C0000000) #5, !dbg !55
  %6482 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6479, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2343 = select i1 %.not1.i2342, float %6482, float %6481, !dbg !55
  %6483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2344 = icmp eq i32 %6483, 0, !dbg !55
  %6484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2343, float %6479, float 0x3FC10B2820000000) #5, !dbg !55
  %6485 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2343, float %6479, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2345 = select i1 %.not2.i2344, float %6485, float %6484, !dbg !55
  %6486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2346 = icmp eq i32 %6486, 0, !dbg !55
  %6487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2345, float %6479, float 0xBFD5553DA0000000) #5, !dbg !55
  %6488 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2345, float %6479, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2347 = select i1 %.not3.i2346, float %6488, float %6487, !dbg !55
  %6489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2348 = icmp eq i32 %6489, 0, !dbg !55
  %6490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2347, float %6479, float 0.000000e+00) #5, !dbg !55
  %6491 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2347, float %6479, float 0.000000e+00) #5, !dbg !55
  %.04.i2349 = select i1 %.not4.i2348, float %6491, float %6490, !dbg !55
  %6492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2350 = icmp eq i32 %6492, 0, !dbg !55
  %6493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2349, float %2910, float %2910) #5, !dbg !55
  %6494 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2349, float %2910, float %2910) #5, !dbg !55
  %.02.i2351 = select i1 %.not5.i2350, float %6494, float %6493, !dbg !55
  br label %__nv_tanhf.exit2352, !dbg !55

__nv_tanhf.exit2352:                              ; preds = %__internal_fmad.exit1.i2336, %__internal_fmad.exit3.i2341
  %s.1.i2340 = phi float [ %6478, %__internal_fmad.exit1.i2336 ], [ %.02.i2351, %__internal_fmad.exit3.i2341 ], !dbg !55
  %6495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2353 = icmp eq i32 %6495, 0, !dbg !55
  %6496 = tail call float @llvm.nvvm.fabs.ftz.f(float %2911) #5, !dbg !55
  %6497 = tail call float @llvm.nvvm.fabs.f(float %2911) #5, !dbg !55
  %.01.i2354 = select i1 %.not.i2353, float %6497, float %6496, !dbg !55
  %6498 = fcmp ult float %.01.i2354, 0x3FE3333340000000, !dbg !55
  br i1 %6498, label %__internal_fmad.exit3.i2360, label %__internal_fmad.exit1.i2355, !dbg !55

__internal_fmad.exit1.i2355:                      ; preds = %__nv_tanhf.exit2352
  %6499 = fmul float %.01.i2354, 0x4007154760000000, !dbg !55
  %6500 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6499) #5, !dbg !55
  %6501 = fadd float %6500, 1.000000e+00, !dbg !55
  %6502 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6501) #6, !dbg !55, !srcloc !56
  %6503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2356 = icmp eq i32 %6503, 0, !dbg !55
  %6504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6502, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6505 = tail call float @llvm.nvvm.fma.rn.f(float %6502, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2357 = select i1 %.not6.i2356, float %6505, float %6504, !dbg !55
  %6506 = fcmp oge float %.01.i2354, 0x4022059680000000, !dbg !55
  %s.0.i2358 = select i1 %6506, float 1.000000e+00, float %.03.i2357, !dbg !55
  %6507 = bitcast float %s.0.i2358 to i32, !dbg !55
  %6508 = bitcast float %2911 to i32, !dbg !55
  %6509 = and i32 %6508, -2147483648, !dbg !55
  %6510 = or i32 %6509, %6507, !dbg !55
  %6511 = bitcast i32 %6510 to float, !dbg !55
  br label %__nv_tanhf.exit2371, !dbg !55

__internal_fmad.exit3.i2360:                      ; preds = %__nv_tanhf.exit2352
  %6512 = fmul float %2911, %2911, !dbg !55
  %6513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2361 = icmp eq i32 %6513, 0, !dbg !55
  %6514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6512, float 0xBFAAC795C0000000) #5, !dbg !55
  %6515 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6512, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2362 = select i1 %.not1.i2361, float %6515, float %6514, !dbg !55
  %6516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2363 = icmp eq i32 %6516, 0, !dbg !55
  %6517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2362, float %6512, float 0x3FC10B2820000000) #5, !dbg !55
  %6518 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2362, float %6512, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2364 = select i1 %.not2.i2363, float %6518, float %6517, !dbg !55
  %6519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2365 = icmp eq i32 %6519, 0, !dbg !55
  %6520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2364, float %6512, float 0xBFD5553DA0000000) #5, !dbg !55
  %6521 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2364, float %6512, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2366 = select i1 %.not3.i2365, float %6521, float %6520, !dbg !55
  %6522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2367 = icmp eq i32 %6522, 0, !dbg !55
  %6523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2366, float %6512, float 0.000000e+00) #5, !dbg !55
  %6524 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2366, float %6512, float 0.000000e+00) #5, !dbg !55
  %.04.i2368 = select i1 %.not4.i2367, float %6524, float %6523, !dbg !55
  %6525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2369 = icmp eq i32 %6525, 0, !dbg !55
  %6526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2368, float %2911, float %2911) #5, !dbg !55
  %6527 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2368, float %2911, float %2911) #5, !dbg !55
  %.02.i2370 = select i1 %.not5.i2369, float %6527, float %6526, !dbg !55
  br label %__nv_tanhf.exit2371, !dbg !55

__nv_tanhf.exit2371:                              ; preds = %__internal_fmad.exit1.i2355, %__internal_fmad.exit3.i2360
  %s.1.i2359 = phi float [ %6511, %__internal_fmad.exit1.i2355 ], [ %.02.i2370, %__internal_fmad.exit3.i2360 ], !dbg !55
  %6528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2372 = icmp eq i32 %6528, 0, !dbg !55
  %6529 = tail call float @llvm.nvvm.fabs.ftz.f(float %2912) #5, !dbg !55
  %6530 = tail call float @llvm.nvvm.fabs.f(float %2912) #5, !dbg !55
  %.01.i2373 = select i1 %.not.i2372, float %6530, float %6529, !dbg !55
  %6531 = fcmp ult float %.01.i2373, 0x3FE3333340000000, !dbg !55
  br i1 %6531, label %__internal_fmad.exit3.i2379, label %__internal_fmad.exit1.i2374, !dbg !55

__internal_fmad.exit1.i2374:                      ; preds = %__nv_tanhf.exit2371
  %6532 = fmul float %.01.i2373, 0x4007154760000000, !dbg !55
  %6533 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6532) #5, !dbg !55
  %6534 = fadd float %6533, 1.000000e+00, !dbg !55
  %6535 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6534) #6, !dbg !55, !srcloc !56
  %6536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2375 = icmp eq i32 %6536, 0, !dbg !55
  %6537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6535, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6538 = tail call float @llvm.nvvm.fma.rn.f(float %6535, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2376 = select i1 %.not6.i2375, float %6538, float %6537, !dbg !55
  %6539 = fcmp oge float %.01.i2373, 0x4022059680000000, !dbg !55
  %s.0.i2377 = select i1 %6539, float 1.000000e+00, float %.03.i2376, !dbg !55
  %6540 = bitcast float %s.0.i2377 to i32, !dbg !55
  %6541 = bitcast float %2912 to i32, !dbg !55
  %6542 = and i32 %6541, -2147483648, !dbg !55
  %6543 = or i32 %6542, %6540, !dbg !55
  %6544 = bitcast i32 %6543 to float, !dbg !55
  br label %__nv_tanhf.exit2390, !dbg !55

__internal_fmad.exit3.i2379:                      ; preds = %__nv_tanhf.exit2371
  %6545 = fmul float %2912, %2912, !dbg !55
  %6546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2380 = icmp eq i32 %6546, 0, !dbg !55
  %6547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6545, float 0xBFAAC795C0000000) #5, !dbg !55
  %6548 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6545, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2381 = select i1 %.not1.i2380, float %6548, float %6547, !dbg !55
  %6549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2382 = icmp eq i32 %6549, 0, !dbg !55
  %6550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2381, float %6545, float 0x3FC10B2820000000) #5, !dbg !55
  %6551 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2381, float %6545, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2383 = select i1 %.not2.i2382, float %6551, float %6550, !dbg !55
  %6552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2384 = icmp eq i32 %6552, 0, !dbg !55
  %6553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2383, float %6545, float 0xBFD5553DA0000000) #5, !dbg !55
  %6554 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2383, float %6545, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2385 = select i1 %.not3.i2384, float %6554, float %6553, !dbg !55
  %6555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2386 = icmp eq i32 %6555, 0, !dbg !55
  %6556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2385, float %6545, float 0.000000e+00) #5, !dbg !55
  %6557 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2385, float %6545, float 0.000000e+00) #5, !dbg !55
  %.04.i2387 = select i1 %.not4.i2386, float %6557, float %6556, !dbg !55
  %6558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2388 = icmp eq i32 %6558, 0, !dbg !55
  %6559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2387, float %2912, float %2912) #5, !dbg !55
  %6560 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2387, float %2912, float %2912) #5, !dbg !55
  %.02.i2389 = select i1 %.not5.i2388, float %6560, float %6559, !dbg !55
  br label %__nv_tanhf.exit2390, !dbg !55

__nv_tanhf.exit2390:                              ; preds = %__internal_fmad.exit1.i2374, %__internal_fmad.exit3.i2379
  %s.1.i2378 = phi float [ %6544, %__internal_fmad.exit1.i2374 ], [ %.02.i2389, %__internal_fmad.exit3.i2379 ], !dbg !55
  %6561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2391 = icmp eq i32 %6561, 0, !dbg !55
  %6562 = tail call float @llvm.nvvm.fabs.ftz.f(float %2913) #5, !dbg !55
  %6563 = tail call float @llvm.nvvm.fabs.f(float %2913) #5, !dbg !55
  %.01.i2392 = select i1 %.not.i2391, float %6563, float %6562, !dbg !55
  %6564 = fcmp ult float %.01.i2392, 0x3FE3333340000000, !dbg !55
  br i1 %6564, label %__internal_fmad.exit3.i2398, label %__internal_fmad.exit1.i2393, !dbg !55

__internal_fmad.exit1.i2393:                      ; preds = %__nv_tanhf.exit2390
  %6565 = fmul float %.01.i2392, 0x4007154760000000, !dbg !55
  %6566 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6565) #5, !dbg !55
  %6567 = fadd float %6566, 1.000000e+00, !dbg !55
  %6568 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6567) #6, !dbg !55, !srcloc !56
  %6569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2394 = icmp eq i32 %6569, 0, !dbg !55
  %6570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6568, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6571 = tail call float @llvm.nvvm.fma.rn.f(float %6568, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2395 = select i1 %.not6.i2394, float %6571, float %6570, !dbg !55
  %6572 = fcmp oge float %.01.i2392, 0x4022059680000000, !dbg !55
  %s.0.i2396 = select i1 %6572, float 1.000000e+00, float %.03.i2395, !dbg !55
  %6573 = bitcast float %s.0.i2396 to i32, !dbg !55
  %6574 = bitcast float %2913 to i32, !dbg !55
  %6575 = and i32 %6574, -2147483648, !dbg !55
  %6576 = or i32 %6575, %6573, !dbg !55
  %6577 = bitcast i32 %6576 to float, !dbg !55
  br label %__nv_tanhf.exit2409, !dbg !55

__internal_fmad.exit3.i2398:                      ; preds = %__nv_tanhf.exit2390
  %6578 = fmul float %2913, %2913, !dbg !55
  %6579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2399 = icmp eq i32 %6579, 0, !dbg !55
  %6580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6578, float 0xBFAAC795C0000000) #5, !dbg !55
  %6581 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6578, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2400 = select i1 %.not1.i2399, float %6581, float %6580, !dbg !55
  %6582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2401 = icmp eq i32 %6582, 0, !dbg !55
  %6583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2400, float %6578, float 0x3FC10B2820000000) #5, !dbg !55
  %6584 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2400, float %6578, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2402 = select i1 %.not2.i2401, float %6584, float %6583, !dbg !55
  %6585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2403 = icmp eq i32 %6585, 0, !dbg !55
  %6586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2402, float %6578, float 0xBFD5553DA0000000) #5, !dbg !55
  %6587 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2402, float %6578, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2404 = select i1 %.not3.i2403, float %6587, float %6586, !dbg !55
  %6588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2405 = icmp eq i32 %6588, 0, !dbg !55
  %6589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2404, float %6578, float 0.000000e+00) #5, !dbg !55
  %6590 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2404, float %6578, float 0.000000e+00) #5, !dbg !55
  %.04.i2406 = select i1 %.not4.i2405, float %6590, float %6589, !dbg !55
  %6591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2407 = icmp eq i32 %6591, 0, !dbg !55
  %6592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2406, float %2913, float %2913) #5, !dbg !55
  %6593 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2406, float %2913, float %2913) #5, !dbg !55
  %.02.i2408 = select i1 %.not5.i2407, float %6593, float %6592, !dbg !55
  br label %__nv_tanhf.exit2409, !dbg !55

__nv_tanhf.exit2409:                              ; preds = %__internal_fmad.exit1.i2393, %__internal_fmad.exit3.i2398
  %s.1.i2397 = phi float [ %6577, %__internal_fmad.exit1.i2393 ], [ %.02.i2408, %__internal_fmad.exit3.i2398 ], !dbg !55
  %6594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2410 = icmp eq i32 %6594, 0, !dbg !55
  %6595 = tail call float @llvm.nvvm.fabs.ftz.f(float %2914) #5, !dbg !55
  %6596 = tail call float @llvm.nvvm.fabs.f(float %2914) #5, !dbg !55
  %.01.i2411 = select i1 %.not.i2410, float %6596, float %6595, !dbg !55
  %6597 = fcmp ult float %.01.i2411, 0x3FE3333340000000, !dbg !55
  br i1 %6597, label %__internal_fmad.exit3.i2417, label %__internal_fmad.exit1.i2412, !dbg !55

__internal_fmad.exit1.i2412:                      ; preds = %__nv_tanhf.exit2409
  %6598 = fmul float %.01.i2411, 0x4007154760000000, !dbg !55
  %6599 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6598) #5, !dbg !55
  %6600 = fadd float %6599, 1.000000e+00, !dbg !55
  %6601 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6600) #6, !dbg !55, !srcloc !56
  %6602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2413 = icmp eq i32 %6602, 0, !dbg !55
  %6603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6601, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6604 = tail call float @llvm.nvvm.fma.rn.f(float %6601, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2414 = select i1 %.not6.i2413, float %6604, float %6603, !dbg !55
  %6605 = fcmp oge float %.01.i2411, 0x4022059680000000, !dbg !55
  %s.0.i2415 = select i1 %6605, float 1.000000e+00, float %.03.i2414, !dbg !55
  %6606 = bitcast float %s.0.i2415 to i32, !dbg !55
  %6607 = bitcast float %2914 to i32, !dbg !55
  %6608 = and i32 %6607, -2147483648, !dbg !55
  %6609 = or i32 %6608, %6606, !dbg !55
  %6610 = bitcast i32 %6609 to float, !dbg !55
  br label %__nv_tanhf.exit2428, !dbg !55

__internal_fmad.exit3.i2417:                      ; preds = %__nv_tanhf.exit2409
  %6611 = fmul float %2914, %2914, !dbg !55
  %6612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2418 = icmp eq i32 %6612, 0, !dbg !55
  %6613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6611, float 0xBFAAC795C0000000) #5, !dbg !55
  %6614 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6611, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2419 = select i1 %.not1.i2418, float %6614, float %6613, !dbg !55
  %6615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2420 = icmp eq i32 %6615, 0, !dbg !55
  %6616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2419, float %6611, float 0x3FC10B2820000000) #5, !dbg !55
  %6617 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2419, float %6611, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2421 = select i1 %.not2.i2420, float %6617, float %6616, !dbg !55
  %6618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2422 = icmp eq i32 %6618, 0, !dbg !55
  %6619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2421, float %6611, float 0xBFD5553DA0000000) #5, !dbg !55
  %6620 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2421, float %6611, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2423 = select i1 %.not3.i2422, float %6620, float %6619, !dbg !55
  %6621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2424 = icmp eq i32 %6621, 0, !dbg !55
  %6622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2423, float %6611, float 0.000000e+00) #5, !dbg !55
  %6623 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2423, float %6611, float 0.000000e+00) #5, !dbg !55
  %.04.i2425 = select i1 %.not4.i2424, float %6623, float %6622, !dbg !55
  %6624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2426 = icmp eq i32 %6624, 0, !dbg !55
  %6625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2425, float %2914, float %2914) #5, !dbg !55
  %6626 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2425, float %2914, float %2914) #5, !dbg !55
  %.02.i2427 = select i1 %.not5.i2426, float %6626, float %6625, !dbg !55
  br label %__nv_tanhf.exit2428, !dbg !55

__nv_tanhf.exit2428:                              ; preds = %__internal_fmad.exit1.i2412, %__internal_fmad.exit3.i2417
  %s.1.i2416 = phi float [ %6610, %__internal_fmad.exit1.i2412 ], [ %.02.i2427, %__internal_fmad.exit3.i2417 ], !dbg !55
  %6627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2429 = icmp eq i32 %6627, 0, !dbg !55
  %6628 = tail call float @llvm.nvvm.fabs.ftz.f(float %2915) #5, !dbg !55
  %6629 = tail call float @llvm.nvvm.fabs.f(float %2915) #5, !dbg !55
  %.01.i2430 = select i1 %.not.i2429, float %6629, float %6628, !dbg !55
  %6630 = fcmp ult float %.01.i2430, 0x3FE3333340000000, !dbg !55
  br i1 %6630, label %__internal_fmad.exit3.i2436, label %__internal_fmad.exit1.i2431, !dbg !55

__internal_fmad.exit1.i2431:                      ; preds = %__nv_tanhf.exit2428
  %6631 = fmul float %.01.i2430, 0x4007154760000000, !dbg !55
  %6632 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6631) #5, !dbg !55
  %6633 = fadd float %6632, 1.000000e+00, !dbg !55
  %6634 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6633) #6, !dbg !55, !srcloc !56
  %6635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2432 = icmp eq i32 %6635, 0, !dbg !55
  %6636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6634, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6637 = tail call float @llvm.nvvm.fma.rn.f(float %6634, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2433 = select i1 %.not6.i2432, float %6637, float %6636, !dbg !55
  %6638 = fcmp oge float %.01.i2430, 0x4022059680000000, !dbg !55
  %s.0.i2434 = select i1 %6638, float 1.000000e+00, float %.03.i2433, !dbg !55
  %6639 = bitcast float %s.0.i2434 to i32, !dbg !55
  %6640 = bitcast float %2915 to i32, !dbg !55
  %6641 = and i32 %6640, -2147483648, !dbg !55
  %6642 = or i32 %6641, %6639, !dbg !55
  %6643 = bitcast i32 %6642 to float, !dbg !55
  br label %__nv_tanhf.exit2447, !dbg !55

__internal_fmad.exit3.i2436:                      ; preds = %__nv_tanhf.exit2428
  %6644 = fmul float %2915, %2915, !dbg !55
  %6645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2437 = icmp eq i32 %6645, 0, !dbg !55
  %6646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6644, float 0xBFAAC795C0000000) #5, !dbg !55
  %6647 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6644, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2438 = select i1 %.not1.i2437, float %6647, float %6646, !dbg !55
  %6648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2439 = icmp eq i32 %6648, 0, !dbg !55
  %6649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2438, float %6644, float 0x3FC10B2820000000) #5, !dbg !55
  %6650 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2438, float %6644, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2440 = select i1 %.not2.i2439, float %6650, float %6649, !dbg !55
  %6651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2441 = icmp eq i32 %6651, 0, !dbg !55
  %6652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2440, float %6644, float 0xBFD5553DA0000000) #5, !dbg !55
  %6653 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2440, float %6644, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2442 = select i1 %.not3.i2441, float %6653, float %6652, !dbg !55
  %6654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2443 = icmp eq i32 %6654, 0, !dbg !55
  %6655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2442, float %6644, float 0.000000e+00) #5, !dbg !55
  %6656 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2442, float %6644, float 0.000000e+00) #5, !dbg !55
  %.04.i2444 = select i1 %.not4.i2443, float %6656, float %6655, !dbg !55
  %6657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2445 = icmp eq i32 %6657, 0, !dbg !55
  %6658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2444, float %2915, float %2915) #5, !dbg !55
  %6659 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2444, float %2915, float %2915) #5, !dbg !55
  %.02.i2446 = select i1 %.not5.i2445, float %6659, float %6658, !dbg !55
  br label %__nv_tanhf.exit2447, !dbg !55

__nv_tanhf.exit2447:                              ; preds = %__internal_fmad.exit1.i2431, %__internal_fmad.exit3.i2436
  %s.1.i2435 = phi float [ %6643, %__internal_fmad.exit1.i2431 ], [ %.02.i2446, %__internal_fmad.exit3.i2436 ], !dbg !55
  %6660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2448 = icmp eq i32 %6660, 0, !dbg !55
  %6661 = tail call float @llvm.nvvm.fabs.ftz.f(float %2916) #5, !dbg !55
  %6662 = tail call float @llvm.nvvm.fabs.f(float %2916) #5, !dbg !55
  %.01.i2449 = select i1 %.not.i2448, float %6662, float %6661, !dbg !55
  %6663 = fcmp ult float %.01.i2449, 0x3FE3333340000000, !dbg !55
  br i1 %6663, label %__internal_fmad.exit3.i2455, label %__internal_fmad.exit1.i2450, !dbg !55

__internal_fmad.exit1.i2450:                      ; preds = %__nv_tanhf.exit2447
  %6664 = fmul float %.01.i2449, 0x4007154760000000, !dbg !55
  %6665 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6664) #5, !dbg !55
  %6666 = fadd float %6665, 1.000000e+00, !dbg !55
  %6667 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6666) #6, !dbg !55, !srcloc !56
  %6668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2451 = icmp eq i32 %6668, 0, !dbg !55
  %6669 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6667, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6670 = tail call float @llvm.nvvm.fma.rn.f(float %6667, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2452 = select i1 %.not6.i2451, float %6670, float %6669, !dbg !55
  %6671 = fcmp oge float %.01.i2449, 0x4022059680000000, !dbg !55
  %s.0.i2453 = select i1 %6671, float 1.000000e+00, float %.03.i2452, !dbg !55
  %6672 = bitcast float %s.0.i2453 to i32, !dbg !55
  %6673 = bitcast float %2916 to i32, !dbg !55
  %6674 = and i32 %6673, -2147483648, !dbg !55
  %6675 = or i32 %6674, %6672, !dbg !55
  %6676 = bitcast i32 %6675 to float, !dbg !55
  br label %__nv_tanhf.exit2466, !dbg !55

__internal_fmad.exit3.i2455:                      ; preds = %__nv_tanhf.exit2447
  %6677 = fmul float %2916, %2916, !dbg !55
  %6678 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2456 = icmp eq i32 %6678, 0, !dbg !55
  %6679 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6677, float 0xBFAAC795C0000000) #5, !dbg !55
  %6680 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6677, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2457 = select i1 %.not1.i2456, float %6680, float %6679, !dbg !55
  %6681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2458 = icmp eq i32 %6681, 0, !dbg !55
  %6682 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2457, float %6677, float 0x3FC10B2820000000) #5, !dbg !55
  %6683 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2457, float %6677, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2459 = select i1 %.not2.i2458, float %6683, float %6682, !dbg !55
  %6684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2460 = icmp eq i32 %6684, 0, !dbg !55
  %6685 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2459, float %6677, float 0xBFD5553DA0000000) #5, !dbg !55
  %6686 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2459, float %6677, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2461 = select i1 %.not3.i2460, float %6686, float %6685, !dbg !55
  %6687 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2462 = icmp eq i32 %6687, 0, !dbg !55
  %6688 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2461, float %6677, float 0.000000e+00) #5, !dbg !55
  %6689 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2461, float %6677, float 0.000000e+00) #5, !dbg !55
  %.04.i2463 = select i1 %.not4.i2462, float %6689, float %6688, !dbg !55
  %6690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2464 = icmp eq i32 %6690, 0, !dbg !55
  %6691 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2463, float %2916, float %2916) #5, !dbg !55
  %6692 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2463, float %2916, float %2916) #5, !dbg !55
  %.02.i2465 = select i1 %.not5.i2464, float %6692, float %6691, !dbg !55
  br label %__nv_tanhf.exit2466, !dbg !55

__nv_tanhf.exit2466:                              ; preds = %__internal_fmad.exit1.i2450, %__internal_fmad.exit3.i2455
  %s.1.i2454 = phi float [ %6676, %__internal_fmad.exit1.i2450 ], [ %.02.i2465, %__internal_fmad.exit3.i2455 ], !dbg !55
  %6693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2467 = icmp eq i32 %6693, 0, !dbg !55
  %6694 = tail call float @llvm.nvvm.fabs.ftz.f(float %2917) #5, !dbg !55
  %6695 = tail call float @llvm.nvvm.fabs.f(float %2917) #5, !dbg !55
  %.01.i2468 = select i1 %.not.i2467, float %6695, float %6694, !dbg !55
  %6696 = fcmp ult float %.01.i2468, 0x3FE3333340000000, !dbg !55
  br i1 %6696, label %__internal_fmad.exit3.i2474, label %__internal_fmad.exit1.i2469, !dbg !55

__internal_fmad.exit1.i2469:                      ; preds = %__nv_tanhf.exit2466
  %6697 = fmul float %.01.i2468, 0x4007154760000000, !dbg !55
  %6698 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6697) #5, !dbg !55
  %6699 = fadd float %6698, 1.000000e+00, !dbg !55
  %6700 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6699) #6, !dbg !55, !srcloc !56
  %6701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2470 = icmp eq i32 %6701, 0, !dbg !55
  %6702 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6700, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6703 = tail call float @llvm.nvvm.fma.rn.f(float %6700, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2471 = select i1 %.not6.i2470, float %6703, float %6702, !dbg !55
  %6704 = fcmp oge float %.01.i2468, 0x4022059680000000, !dbg !55
  %s.0.i2472 = select i1 %6704, float 1.000000e+00, float %.03.i2471, !dbg !55
  %6705 = bitcast float %s.0.i2472 to i32, !dbg !55
  %6706 = bitcast float %2917 to i32, !dbg !55
  %6707 = and i32 %6706, -2147483648, !dbg !55
  %6708 = or i32 %6707, %6705, !dbg !55
  %6709 = bitcast i32 %6708 to float, !dbg !55
  br label %__nv_tanhf.exit2485, !dbg !55

__internal_fmad.exit3.i2474:                      ; preds = %__nv_tanhf.exit2466
  %6710 = fmul float %2917, %2917, !dbg !55
  %6711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2475 = icmp eq i32 %6711, 0, !dbg !55
  %6712 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6710, float 0xBFAAC795C0000000) #5, !dbg !55
  %6713 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6710, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2476 = select i1 %.not1.i2475, float %6713, float %6712, !dbg !55
  %6714 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2477 = icmp eq i32 %6714, 0, !dbg !55
  %6715 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2476, float %6710, float 0x3FC10B2820000000) #5, !dbg !55
  %6716 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2476, float %6710, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2478 = select i1 %.not2.i2477, float %6716, float %6715, !dbg !55
  %6717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2479 = icmp eq i32 %6717, 0, !dbg !55
  %6718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2478, float %6710, float 0xBFD5553DA0000000) #5, !dbg !55
  %6719 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2478, float %6710, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2480 = select i1 %.not3.i2479, float %6719, float %6718, !dbg !55
  %6720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2481 = icmp eq i32 %6720, 0, !dbg !55
  %6721 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2480, float %6710, float 0.000000e+00) #5, !dbg !55
  %6722 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2480, float %6710, float 0.000000e+00) #5, !dbg !55
  %.04.i2482 = select i1 %.not4.i2481, float %6722, float %6721, !dbg !55
  %6723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2483 = icmp eq i32 %6723, 0, !dbg !55
  %6724 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2482, float %2917, float %2917) #5, !dbg !55
  %6725 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2482, float %2917, float %2917) #5, !dbg !55
  %.02.i2484 = select i1 %.not5.i2483, float %6725, float %6724, !dbg !55
  br label %__nv_tanhf.exit2485, !dbg !55

__nv_tanhf.exit2485:                              ; preds = %__internal_fmad.exit1.i2469, %__internal_fmad.exit3.i2474
  %s.1.i2473 = phi float [ %6709, %__internal_fmad.exit1.i2469 ], [ %.02.i2484, %__internal_fmad.exit3.i2474 ], !dbg !55
  %6726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2486 = icmp eq i32 %6726, 0, !dbg !55
  %6727 = tail call float @llvm.nvvm.fabs.ftz.f(float %2918) #5, !dbg !55
  %6728 = tail call float @llvm.nvvm.fabs.f(float %2918) #5, !dbg !55
  %.01.i2487 = select i1 %.not.i2486, float %6728, float %6727, !dbg !55
  %6729 = fcmp ult float %.01.i2487, 0x3FE3333340000000, !dbg !55
  br i1 %6729, label %__internal_fmad.exit3.i2493, label %__internal_fmad.exit1.i2488, !dbg !55

__internal_fmad.exit1.i2488:                      ; preds = %__nv_tanhf.exit2485
  %6730 = fmul float %.01.i2487, 0x4007154760000000, !dbg !55
  %6731 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6730) #5, !dbg !55
  %6732 = fadd float %6731, 1.000000e+00, !dbg !55
  %6733 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6732) #6, !dbg !55, !srcloc !56
  %6734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2489 = icmp eq i32 %6734, 0, !dbg !55
  %6735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6733, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6736 = tail call float @llvm.nvvm.fma.rn.f(float %6733, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2490 = select i1 %.not6.i2489, float %6736, float %6735, !dbg !55
  %6737 = fcmp oge float %.01.i2487, 0x4022059680000000, !dbg !55
  %s.0.i2491 = select i1 %6737, float 1.000000e+00, float %.03.i2490, !dbg !55
  %6738 = bitcast float %s.0.i2491 to i32, !dbg !55
  %6739 = bitcast float %2918 to i32, !dbg !55
  %6740 = and i32 %6739, -2147483648, !dbg !55
  %6741 = or i32 %6740, %6738, !dbg !55
  %6742 = bitcast i32 %6741 to float, !dbg !55
  br label %__nv_tanhf.exit2504, !dbg !55

__internal_fmad.exit3.i2493:                      ; preds = %__nv_tanhf.exit2485
  %6743 = fmul float %2918, %2918, !dbg !55
  %6744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2494 = icmp eq i32 %6744, 0, !dbg !55
  %6745 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6743, float 0xBFAAC795C0000000) #5, !dbg !55
  %6746 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6743, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2495 = select i1 %.not1.i2494, float %6746, float %6745, !dbg !55
  %6747 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2496 = icmp eq i32 %6747, 0, !dbg !55
  %6748 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2495, float %6743, float 0x3FC10B2820000000) #5, !dbg !55
  %6749 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2495, float %6743, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2497 = select i1 %.not2.i2496, float %6749, float %6748, !dbg !55
  %6750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2498 = icmp eq i32 %6750, 0, !dbg !55
  %6751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2497, float %6743, float 0xBFD5553DA0000000) #5, !dbg !55
  %6752 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2497, float %6743, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2499 = select i1 %.not3.i2498, float %6752, float %6751, !dbg !55
  %6753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2500 = icmp eq i32 %6753, 0, !dbg !55
  %6754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2499, float %6743, float 0.000000e+00) #5, !dbg !55
  %6755 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2499, float %6743, float 0.000000e+00) #5, !dbg !55
  %.04.i2501 = select i1 %.not4.i2500, float %6755, float %6754, !dbg !55
  %6756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2502 = icmp eq i32 %6756, 0, !dbg !55
  %6757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2501, float %2918, float %2918) #5, !dbg !55
  %6758 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2501, float %2918, float %2918) #5, !dbg !55
  %.02.i2503 = select i1 %.not5.i2502, float %6758, float %6757, !dbg !55
  br label %__nv_tanhf.exit2504, !dbg !55

__nv_tanhf.exit2504:                              ; preds = %__internal_fmad.exit1.i2488, %__internal_fmad.exit3.i2493
  %s.1.i2492 = phi float [ %6742, %__internal_fmad.exit1.i2488 ], [ %.02.i2503, %__internal_fmad.exit3.i2493 ], !dbg !55
  %6759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2505 = icmp eq i32 %6759, 0, !dbg !55
  %6760 = tail call float @llvm.nvvm.fabs.ftz.f(float %2919) #5, !dbg !55
  %6761 = tail call float @llvm.nvvm.fabs.f(float %2919) #5, !dbg !55
  %.01.i2506 = select i1 %.not.i2505, float %6761, float %6760, !dbg !55
  %6762 = fcmp ult float %.01.i2506, 0x3FE3333340000000, !dbg !55
  br i1 %6762, label %__internal_fmad.exit3.i2512, label %__internal_fmad.exit1.i2507, !dbg !55

__internal_fmad.exit1.i2507:                      ; preds = %__nv_tanhf.exit2504
  %6763 = fmul float %.01.i2506, 0x4007154760000000, !dbg !55
  %6764 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6763) #5, !dbg !55
  %6765 = fadd float %6764, 1.000000e+00, !dbg !55
  %6766 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6765) #6, !dbg !55, !srcloc !56
  %6767 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2508 = icmp eq i32 %6767, 0, !dbg !55
  %6768 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6766, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6769 = tail call float @llvm.nvvm.fma.rn.f(float %6766, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2509 = select i1 %.not6.i2508, float %6769, float %6768, !dbg !55
  %6770 = fcmp oge float %.01.i2506, 0x4022059680000000, !dbg !55
  %s.0.i2510 = select i1 %6770, float 1.000000e+00, float %.03.i2509, !dbg !55
  %6771 = bitcast float %s.0.i2510 to i32, !dbg !55
  %6772 = bitcast float %2919 to i32, !dbg !55
  %6773 = and i32 %6772, -2147483648, !dbg !55
  %6774 = or i32 %6773, %6771, !dbg !55
  %6775 = bitcast i32 %6774 to float, !dbg !55
  br label %__nv_tanhf.exit2523, !dbg !55

__internal_fmad.exit3.i2512:                      ; preds = %__nv_tanhf.exit2504
  %6776 = fmul float %2919, %2919, !dbg !55
  %6777 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2513 = icmp eq i32 %6777, 0, !dbg !55
  %6778 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6776, float 0xBFAAC795C0000000) #5, !dbg !55
  %6779 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6776, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2514 = select i1 %.not1.i2513, float %6779, float %6778, !dbg !55
  %6780 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2515 = icmp eq i32 %6780, 0, !dbg !55
  %6781 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2514, float %6776, float 0x3FC10B2820000000) #5, !dbg !55
  %6782 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2514, float %6776, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2516 = select i1 %.not2.i2515, float %6782, float %6781, !dbg !55
  %6783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2517 = icmp eq i32 %6783, 0, !dbg !55
  %6784 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2516, float %6776, float 0xBFD5553DA0000000) #5, !dbg !55
  %6785 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2516, float %6776, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2518 = select i1 %.not3.i2517, float %6785, float %6784, !dbg !55
  %6786 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2519 = icmp eq i32 %6786, 0, !dbg !55
  %6787 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2518, float %6776, float 0.000000e+00) #5, !dbg !55
  %6788 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2518, float %6776, float 0.000000e+00) #5, !dbg !55
  %.04.i2520 = select i1 %.not4.i2519, float %6788, float %6787, !dbg !55
  %6789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2521 = icmp eq i32 %6789, 0, !dbg !55
  %6790 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2520, float %2919, float %2919) #5, !dbg !55
  %6791 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2520, float %2919, float %2919) #5, !dbg !55
  %.02.i2522 = select i1 %.not5.i2521, float %6791, float %6790, !dbg !55
  br label %__nv_tanhf.exit2523, !dbg !55

__nv_tanhf.exit2523:                              ; preds = %__internal_fmad.exit1.i2507, %__internal_fmad.exit3.i2512
  %s.1.i2511 = phi float [ %6775, %__internal_fmad.exit1.i2507 ], [ %.02.i2522, %__internal_fmad.exit3.i2512 ], !dbg !55
  %6792 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2524 = icmp eq i32 %6792, 0, !dbg !55
  %6793 = tail call float @llvm.nvvm.fabs.ftz.f(float %2920) #5, !dbg !55
  %6794 = tail call float @llvm.nvvm.fabs.f(float %2920) #5, !dbg !55
  %.01.i2525 = select i1 %.not.i2524, float %6794, float %6793, !dbg !55
  %6795 = fcmp ult float %.01.i2525, 0x3FE3333340000000, !dbg !55
  br i1 %6795, label %__internal_fmad.exit3.i2531, label %__internal_fmad.exit1.i2526, !dbg !55

__internal_fmad.exit1.i2526:                      ; preds = %__nv_tanhf.exit2523
  %6796 = fmul float %.01.i2525, 0x4007154760000000, !dbg !55
  %6797 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6796) #5, !dbg !55
  %6798 = fadd float %6797, 1.000000e+00, !dbg !55
  %6799 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6798) #6, !dbg !55, !srcloc !56
  %6800 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2527 = icmp eq i32 %6800, 0, !dbg !55
  %6801 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6799, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6802 = tail call float @llvm.nvvm.fma.rn.f(float %6799, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2528 = select i1 %.not6.i2527, float %6802, float %6801, !dbg !55
  %6803 = fcmp oge float %.01.i2525, 0x4022059680000000, !dbg !55
  %s.0.i2529 = select i1 %6803, float 1.000000e+00, float %.03.i2528, !dbg !55
  %6804 = bitcast float %s.0.i2529 to i32, !dbg !55
  %6805 = bitcast float %2920 to i32, !dbg !55
  %6806 = and i32 %6805, -2147483648, !dbg !55
  %6807 = or i32 %6806, %6804, !dbg !55
  %6808 = bitcast i32 %6807 to float, !dbg !55
  br label %__nv_tanhf.exit2542, !dbg !55

__internal_fmad.exit3.i2531:                      ; preds = %__nv_tanhf.exit2523
  %6809 = fmul float %2920, %2920, !dbg !55
  %6810 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2532 = icmp eq i32 %6810, 0, !dbg !55
  %6811 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6809, float 0xBFAAC795C0000000) #5, !dbg !55
  %6812 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6809, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2533 = select i1 %.not1.i2532, float %6812, float %6811, !dbg !55
  %6813 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2534 = icmp eq i32 %6813, 0, !dbg !55
  %6814 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2533, float %6809, float 0x3FC10B2820000000) #5, !dbg !55
  %6815 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2533, float %6809, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2535 = select i1 %.not2.i2534, float %6815, float %6814, !dbg !55
  %6816 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2536 = icmp eq i32 %6816, 0, !dbg !55
  %6817 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2535, float %6809, float 0xBFD5553DA0000000) #5, !dbg !55
  %6818 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2535, float %6809, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2537 = select i1 %.not3.i2536, float %6818, float %6817, !dbg !55
  %6819 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2538 = icmp eq i32 %6819, 0, !dbg !55
  %6820 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2537, float %6809, float 0.000000e+00) #5, !dbg !55
  %6821 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2537, float %6809, float 0.000000e+00) #5, !dbg !55
  %.04.i2539 = select i1 %.not4.i2538, float %6821, float %6820, !dbg !55
  %6822 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2540 = icmp eq i32 %6822, 0, !dbg !55
  %6823 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2539, float %2920, float %2920) #5, !dbg !55
  %6824 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2539, float %2920, float %2920) #5, !dbg !55
  %.02.i2541 = select i1 %.not5.i2540, float %6824, float %6823, !dbg !55
  br label %__nv_tanhf.exit2542, !dbg !55

__nv_tanhf.exit2542:                              ; preds = %__internal_fmad.exit1.i2526, %__internal_fmad.exit3.i2531
  %s.1.i2530 = phi float [ %6808, %__internal_fmad.exit1.i2526 ], [ %.02.i2541, %__internal_fmad.exit3.i2531 ], !dbg !55
  %6825 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2543 = icmp eq i32 %6825, 0, !dbg !55
  %6826 = tail call float @llvm.nvvm.fabs.ftz.f(float %2921) #5, !dbg !55
  %6827 = tail call float @llvm.nvvm.fabs.f(float %2921) #5, !dbg !55
  %.01.i2544 = select i1 %.not.i2543, float %6827, float %6826, !dbg !55
  %6828 = fcmp ult float %.01.i2544, 0x3FE3333340000000, !dbg !55
  br i1 %6828, label %__internal_fmad.exit3.i2550, label %__internal_fmad.exit1.i2545, !dbg !55

__internal_fmad.exit1.i2545:                      ; preds = %__nv_tanhf.exit2542
  %6829 = fmul float %.01.i2544, 0x4007154760000000, !dbg !55
  %6830 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6829) #5, !dbg !55
  %6831 = fadd float %6830, 1.000000e+00, !dbg !55
  %6832 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6831) #6, !dbg !55, !srcloc !56
  %6833 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2546 = icmp eq i32 %6833, 0, !dbg !55
  %6834 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6832, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6835 = tail call float @llvm.nvvm.fma.rn.f(float %6832, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2547 = select i1 %.not6.i2546, float %6835, float %6834, !dbg !55
  %6836 = fcmp oge float %.01.i2544, 0x4022059680000000, !dbg !55
  %s.0.i2548 = select i1 %6836, float 1.000000e+00, float %.03.i2547, !dbg !55
  %6837 = bitcast float %s.0.i2548 to i32, !dbg !55
  %6838 = bitcast float %2921 to i32, !dbg !55
  %6839 = and i32 %6838, -2147483648, !dbg !55
  %6840 = or i32 %6839, %6837, !dbg !55
  %6841 = bitcast i32 %6840 to float, !dbg !55
  br label %__nv_tanhf.exit2561, !dbg !55

__internal_fmad.exit3.i2550:                      ; preds = %__nv_tanhf.exit2542
  %6842 = fmul float %2921, %2921, !dbg !55
  %6843 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2551 = icmp eq i32 %6843, 0, !dbg !55
  %6844 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6842, float 0xBFAAC795C0000000) #5, !dbg !55
  %6845 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6842, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2552 = select i1 %.not1.i2551, float %6845, float %6844, !dbg !55
  %6846 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2553 = icmp eq i32 %6846, 0, !dbg !55
  %6847 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2552, float %6842, float 0x3FC10B2820000000) #5, !dbg !55
  %6848 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2552, float %6842, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2554 = select i1 %.not2.i2553, float %6848, float %6847, !dbg !55
  %6849 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2555 = icmp eq i32 %6849, 0, !dbg !55
  %6850 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2554, float %6842, float 0xBFD5553DA0000000) #5, !dbg !55
  %6851 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2554, float %6842, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2556 = select i1 %.not3.i2555, float %6851, float %6850, !dbg !55
  %6852 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2557 = icmp eq i32 %6852, 0, !dbg !55
  %6853 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2556, float %6842, float 0.000000e+00) #5, !dbg !55
  %6854 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2556, float %6842, float 0.000000e+00) #5, !dbg !55
  %.04.i2558 = select i1 %.not4.i2557, float %6854, float %6853, !dbg !55
  %6855 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2559 = icmp eq i32 %6855, 0, !dbg !55
  %6856 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2558, float %2921, float %2921) #5, !dbg !55
  %6857 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2558, float %2921, float %2921) #5, !dbg !55
  %.02.i2560 = select i1 %.not5.i2559, float %6857, float %6856, !dbg !55
  br label %__nv_tanhf.exit2561, !dbg !55

__nv_tanhf.exit2561:                              ; preds = %__internal_fmad.exit1.i2545, %__internal_fmad.exit3.i2550
  %s.1.i2549 = phi float [ %6841, %__internal_fmad.exit1.i2545 ], [ %.02.i2560, %__internal_fmad.exit3.i2550 ], !dbg !55
  %6858 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2562 = icmp eq i32 %6858, 0, !dbg !55
  %6859 = tail call float @llvm.nvvm.fabs.ftz.f(float %2922) #5, !dbg !55
  %6860 = tail call float @llvm.nvvm.fabs.f(float %2922) #5, !dbg !55
  %.01.i2563 = select i1 %.not.i2562, float %6860, float %6859, !dbg !55
  %6861 = fcmp ult float %.01.i2563, 0x3FE3333340000000, !dbg !55
  br i1 %6861, label %__internal_fmad.exit3.i2569, label %__internal_fmad.exit1.i2564, !dbg !55

__internal_fmad.exit1.i2564:                      ; preds = %__nv_tanhf.exit2561
  %6862 = fmul float %.01.i2563, 0x4007154760000000, !dbg !55
  %6863 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6862) #5, !dbg !55
  %6864 = fadd float %6863, 1.000000e+00, !dbg !55
  %6865 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6864) #6, !dbg !55, !srcloc !56
  %6866 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2565 = icmp eq i32 %6866, 0, !dbg !55
  %6867 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6865, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6868 = tail call float @llvm.nvvm.fma.rn.f(float %6865, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2566 = select i1 %.not6.i2565, float %6868, float %6867, !dbg !55
  %6869 = fcmp oge float %.01.i2563, 0x4022059680000000, !dbg !55
  %s.0.i2567 = select i1 %6869, float 1.000000e+00, float %.03.i2566, !dbg !55
  %6870 = bitcast float %s.0.i2567 to i32, !dbg !55
  %6871 = bitcast float %2922 to i32, !dbg !55
  %6872 = and i32 %6871, -2147483648, !dbg !55
  %6873 = or i32 %6872, %6870, !dbg !55
  %6874 = bitcast i32 %6873 to float, !dbg !55
  br label %__nv_tanhf.exit2580, !dbg !55

__internal_fmad.exit3.i2569:                      ; preds = %__nv_tanhf.exit2561
  %6875 = fmul float %2922, %2922, !dbg !55
  %6876 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2570 = icmp eq i32 %6876, 0, !dbg !55
  %6877 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6875, float 0xBFAAC795C0000000) #5, !dbg !55
  %6878 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6875, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2571 = select i1 %.not1.i2570, float %6878, float %6877, !dbg !55
  %6879 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2572 = icmp eq i32 %6879, 0, !dbg !55
  %6880 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2571, float %6875, float 0x3FC10B2820000000) #5, !dbg !55
  %6881 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2571, float %6875, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2573 = select i1 %.not2.i2572, float %6881, float %6880, !dbg !55
  %6882 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2574 = icmp eq i32 %6882, 0, !dbg !55
  %6883 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2573, float %6875, float 0xBFD5553DA0000000) #5, !dbg !55
  %6884 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2573, float %6875, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2575 = select i1 %.not3.i2574, float %6884, float %6883, !dbg !55
  %6885 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2576 = icmp eq i32 %6885, 0, !dbg !55
  %6886 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2575, float %6875, float 0.000000e+00) #5, !dbg !55
  %6887 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2575, float %6875, float 0.000000e+00) #5, !dbg !55
  %.04.i2577 = select i1 %.not4.i2576, float %6887, float %6886, !dbg !55
  %6888 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2578 = icmp eq i32 %6888, 0, !dbg !55
  %6889 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2577, float %2922, float %2922) #5, !dbg !55
  %6890 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2577, float %2922, float %2922) #5, !dbg !55
  %.02.i2579 = select i1 %.not5.i2578, float %6890, float %6889, !dbg !55
  br label %__nv_tanhf.exit2580, !dbg !55

__nv_tanhf.exit2580:                              ; preds = %__internal_fmad.exit1.i2564, %__internal_fmad.exit3.i2569
  %s.1.i2568 = phi float [ %6874, %__internal_fmad.exit1.i2564 ], [ %.02.i2579, %__internal_fmad.exit3.i2569 ], !dbg !55
  %6891 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2581 = icmp eq i32 %6891, 0, !dbg !55
  %6892 = tail call float @llvm.nvvm.fabs.ftz.f(float %2923) #5, !dbg !55
  %6893 = tail call float @llvm.nvvm.fabs.f(float %2923) #5, !dbg !55
  %.01.i2582 = select i1 %.not.i2581, float %6893, float %6892, !dbg !55
  %6894 = fcmp ult float %.01.i2582, 0x3FE3333340000000, !dbg !55
  br i1 %6894, label %__internal_fmad.exit3.i2588, label %__internal_fmad.exit1.i2583, !dbg !55

__internal_fmad.exit1.i2583:                      ; preds = %__nv_tanhf.exit2580
  %6895 = fmul float %.01.i2582, 0x4007154760000000, !dbg !55
  %6896 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6895) #5, !dbg !55
  %6897 = fadd float %6896, 1.000000e+00, !dbg !55
  %6898 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6897) #6, !dbg !55, !srcloc !56
  %6899 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2584 = icmp eq i32 %6899, 0, !dbg !55
  %6900 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6898, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6901 = tail call float @llvm.nvvm.fma.rn.f(float %6898, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2585 = select i1 %.not6.i2584, float %6901, float %6900, !dbg !55
  %6902 = fcmp oge float %.01.i2582, 0x4022059680000000, !dbg !55
  %s.0.i2586 = select i1 %6902, float 1.000000e+00, float %.03.i2585, !dbg !55
  %6903 = bitcast float %s.0.i2586 to i32, !dbg !55
  %6904 = bitcast float %2923 to i32, !dbg !55
  %6905 = and i32 %6904, -2147483648, !dbg !55
  %6906 = or i32 %6905, %6903, !dbg !55
  %6907 = bitcast i32 %6906 to float, !dbg !55
  br label %__nv_tanhf.exit2599, !dbg !55

__internal_fmad.exit3.i2588:                      ; preds = %__nv_tanhf.exit2580
  %6908 = fmul float %2923, %2923, !dbg !55
  %6909 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2589 = icmp eq i32 %6909, 0, !dbg !55
  %6910 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6908, float 0xBFAAC795C0000000) #5, !dbg !55
  %6911 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6908, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2590 = select i1 %.not1.i2589, float %6911, float %6910, !dbg !55
  %6912 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2591 = icmp eq i32 %6912, 0, !dbg !55
  %6913 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2590, float %6908, float 0x3FC10B2820000000) #5, !dbg !55
  %6914 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2590, float %6908, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2592 = select i1 %.not2.i2591, float %6914, float %6913, !dbg !55
  %6915 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2593 = icmp eq i32 %6915, 0, !dbg !55
  %6916 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2592, float %6908, float 0xBFD5553DA0000000) #5, !dbg !55
  %6917 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2592, float %6908, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2594 = select i1 %.not3.i2593, float %6917, float %6916, !dbg !55
  %6918 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2595 = icmp eq i32 %6918, 0, !dbg !55
  %6919 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2594, float %6908, float 0.000000e+00) #5, !dbg !55
  %6920 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2594, float %6908, float 0.000000e+00) #5, !dbg !55
  %.04.i2596 = select i1 %.not4.i2595, float %6920, float %6919, !dbg !55
  %6921 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2597 = icmp eq i32 %6921, 0, !dbg !55
  %6922 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2596, float %2923, float %2923) #5, !dbg !55
  %6923 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2596, float %2923, float %2923) #5, !dbg !55
  %.02.i2598 = select i1 %.not5.i2597, float %6923, float %6922, !dbg !55
  br label %__nv_tanhf.exit2599, !dbg !55

__nv_tanhf.exit2599:                              ; preds = %__internal_fmad.exit1.i2583, %__internal_fmad.exit3.i2588
  %s.1.i2587 = phi float [ %6907, %__internal_fmad.exit1.i2583 ], [ %.02.i2598, %__internal_fmad.exit3.i2588 ], !dbg !55
  %6924 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2600 = icmp eq i32 %6924, 0, !dbg !55
  %6925 = tail call float @llvm.nvvm.fabs.ftz.f(float %2924) #5, !dbg !55
  %6926 = tail call float @llvm.nvvm.fabs.f(float %2924) #5, !dbg !55
  %.01.i2601 = select i1 %.not.i2600, float %6926, float %6925, !dbg !55
  %6927 = fcmp ult float %.01.i2601, 0x3FE3333340000000, !dbg !55
  br i1 %6927, label %__internal_fmad.exit3.i2607, label %__internal_fmad.exit1.i2602, !dbg !55

__internal_fmad.exit1.i2602:                      ; preds = %__nv_tanhf.exit2599
  %6928 = fmul float %.01.i2601, 0x4007154760000000, !dbg !55
  %6929 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6928) #5, !dbg !55
  %6930 = fadd float %6929, 1.000000e+00, !dbg !55
  %6931 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6930) #6, !dbg !55, !srcloc !56
  %6932 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2603 = icmp eq i32 %6932, 0, !dbg !55
  %6933 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6931, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6934 = tail call float @llvm.nvvm.fma.rn.f(float %6931, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2604 = select i1 %.not6.i2603, float %6934, float %6933, !dbg !55
  %6935 = fcmp oge float %.01.i2601, 0x4022059680000000, !dbg !55
  %s.0.i2605 = select i1 %6935, float 1.000000e+00, float %.03.i2604, !dbg !55
  %6936 = bitcast float %s.0.i2605 to i32, !dbg !55
  %6937 = bitcast float %2924 to i32, !dbg !55
  %6938 = and i32 %6937, -2147483648, !dbg !55
  %6939 = or i32 %6938, %6936, !dbg !55
  %6940 = bitcast i32 %6939 to float, !dbg !55
  br label %__nv_tanhf.exit2618, !dbg !55

__internal_fmad.exit3.i2607:                      ; preds = %__nv_tanhf.exit2599
  %6941 = fmul float %2924, %2924, !dbg !55
  %6942 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2608 = icmp eq i32 %6942, 0, !dbg !55
  %6943 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6941, float 0xBFAAC795C0000000) #5, !dbg !55
  %6944 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6941, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2609 = select i1 %.not1.i2608, float %6944, float %6943, !dbg !55
  %6945 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2610 = icmp eq i32 %6945, 0, !dbg !55
  %6946 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2609, float %6941, float 0x3FC10B2820000000) #5, !dbg !55
  %6947 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2609, float %6941, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2611 = select i1 %.not2.i2610, float %6947, float %6946, !dbg !55
  %6948 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2612 = icmp eq i32 %6948, 0, !dbg !55
  %6949 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2611, float %6941, float 0xBFD5553DA0000000) #5, !dbg !55
  %6950 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2611, float %6941, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2613 = select i1 %.not3.i2612, float %6950, float %6949, !dbg !55
  %6951 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2614 = icmp eq i32 %6951, 0, !dbg !55
  %6952 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2613, float %6941, float 0.000000e+00) #5, !dbg !55
  %6953 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2613, float %6941, float 0.000000e+00) #5, !dbg !55
  %.04.i2615 = select i1 %.not4.i2614, float %6953, float %6952, !dbg !55
  %6954 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2616 = icmp eq i32 %6954, 0, !dbg !55
  %6955 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2615, float %2924, float %2924) #5, !dbg !55
  %6956 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2615, float %2924, float %2924) #5, !dbg !55
  %.02.i2617 = select i1 %.not5.i2616, float %6956, float %6955, !dbg !55
  br label %__nv_tanhf.exit2618, !dbg !55

__nv_tanhf.exit2618:                              ; preds = %__internal_fmad.exit1.i2602, %__internal_fmad.exit3.i2607
  %s.1.i2606 = phi float [ %6940, %__internal_fmad.exit1.i2602 ], [ %.02.i2617, %__internal_fmad.exit3.i2607 ], !dbg !55
  %6957 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2619 = icmp eq i32 %6957, 0, !dbg !55
  %6958 = tail call float @llvm.nvvm.fabs.ftz.f(float %2925) #5, !dbg !55
  %6959 = tail call float @llvm.nvvm.fabs.f(float %2925) #5, !dbg !55
  %.01.i2620 = select i1 %.not.i2619, float %6959, float %6958, !dbg !55
  %6960 = fcmp ult float %.01.i2620, 0x3FE3333340000000, !dbg !55
  br i1 %6960, label %__internal_fmad.exit3.i2626, label %__internal_fmad.exit1.i2621, !dbg !55

__internal_fmad.exit1.i2621:                      ; preds = %__nv_tanhf.exit2618
  %6961 = fmul float %.01.i2620, 0x4007154760000000, !dbg !55
  %6962 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6961) #5, !dbg !55
  %6963 = fadd float %6962, 1.000000e+00, !dbg !55
  %6964 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6963) #6, !dbg !55, !srcloc !56
  %6965 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2622 = icmp eq i32 %6965, 0, !dbg !55
  %6966 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6964, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %6967 = tail call float @llvm.nvvm.fma.rn.f(float %6964, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2623 = select i1 %.not6.i2622, float %6967, float %6966, !dbg !55
  %6968 = fcmp oge float %.01.i2620, 0x4022059680000000, !dbg !55
  %s.0.i2624 = select i1 %6968, float 1.000000e+00, float %.03.i2623, !dbg !55
  %6969 = bitcast float %s.0.i2624 to i32, !dbg !55
  %6970 = bitcast float %2925 to i32, !dbg !55
  %6971 = and i32 %6970, -2147483648, !dbg !55
  %6972 = or i32 %6971, %6969, !dbg !55
  %6973 = bitcast i32 %6972 to float, !dbg !55
  br label %__nv_tanhf.exit2637, !dbg !55

__internal_fmad.exit3.i2626:                      ; preds = %__nv_tanhf.exit2618
  %6974 = fmul float %2925, %2925, !dbg !55
  %6975 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2627 = icmp eq i32 %6975, 0, !dbg !55
  %6976 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %6974, float 0xBFAAC795C0000000) #5, !dbg !55
  %6977 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %6974, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2628 = select i1 %.not1.i2627, float %6977, float %6976, !dbg !55
  %6978 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2629 = icmp eq i32 %6978, 0, !dbg !55
  %6979 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2628, float %6974, float 0x3FC10B2820000000) #5, !dbg !55
  %6980 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2628, float %6974, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2630 = select i1 %.not2.i2629, float %6980, float %6979, !dbg !55
  %6981 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2631 = icmp eq i32 %6981, 0, !dbg !55
  %6982 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2630, float %6974, float 0xBFD5553DA0000000) #5, !dbg !55
  %6983 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2630, float %6974, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2632 = select i1 %.not3.i2631, float %6983, float %6982, !dbg !55
  %6984 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2633 = icmp eq i32 %6984, 0, !dbg !55
  %6985 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2632, float %6974, float 0.000000e+00) #5, !dbg !55
  %6986 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2632, float %6974, float 0.000000e+00) #5, !dbg !55
  %.04.i2634 = select i1 %.not4.i2633, float %6986, float %6985, !dbg !55
  %6987 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2635 = icmp eq i32 %6987, 0, !dbg !55
  %6988 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2634, float %2925, float %2925) #5, !dbg !55
  %6989 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2634, float %2925, float %2925) #5, !dbg !55
  %.02.i2636 = select i1 %.not5.i2635, float %6989, float %6988, !dbg !55
  br label %__nv_tanhf.exit2637, !dbg !55

__nv_tanhf.exit2637:                              ; preds = %__internal_fmad.exit1.i2621, %__internal_fmad.exit3.i2626
  %s.1.i2625 = phi float [ %6973, %__internal_fmad.exit1.i2621 ], [ %.02.i2636, %__internal_fmad.exit3.i2626 ], !dbg !55
  %6990 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2638 = icmp eq i32 %6990, 0, !dbg !55
  %6991 = tail call float @llvm.nvvm.fabs.ftz.f(float %2926) #5, !dbg !55
  %6992 = tail call float @llvm.nvvm.fabs.f(float %2926) #5, !dbg !55
  %.01.i2639 = select i1 %.not.i2638, float %6992, float %6991, !dbg !55
  %6993 = fcmp ult float %.01.i2639, 0x3FE3333340000000, !dbg !55
  br i1 %6993, label %__internal_fmad.exit3.i2645, label %__internal_fmad.exit1.i2640, !dbg !55

__internal_fmad.exit1.i2640:                      ; preds = %__nv_tanhf.exit2637
  %6994 = fmul float %.01.i2639, 0x4007154760000000, !dbg !55
  %6995 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %6994) #5, !dbg !55
  %6996 = fadd float %6995, 1.000000e+00, !dbg !55
  %6997 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6996) #6, !dbg !55, !srcloc !56
  %6998 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2641 = icmp eq i32 %6998, 0, !dbg !55
  %6999 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %6997, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %7000 = tail call float @llvm.nvvm.fma.rn.f(float %6997, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2642 = select i1 %.not6.i2641, float %7000, float %6999, !dbg !55
  %7001 = fcmp oge float %.01.i2639, 0x4022059680000000, !dbg !55
  %s.0.i2643 = select i1 %7001, float 1.000000e+00, float %.03.i2642, !dbg !55
  %7002 = bitcast float %s.0.i2643 to i32, !dbg !55
  %7003 = bitcast float %2926 to i32, !dbg !55
  %7004 = and i32 %7003, -2147483648, !dbg !55
  %7005 = or i32 %7004, %7002, !dbg !55
  %7006 = bitcast i32 %7005 to float, !dbg !55
  br label %__nv_tanhf.exit2656, !dbg !55

__internal_fmad.exit3.i2645:                      ; preds = %__nv_tanhf.exit2637
  %7007 = fmul float %2926, %2926, !dbg !55
  %7008 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2646 = icmp eq i32 %7008, 0, !dbg !55
  %7009 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %7007, float 0xBFAAC795C0000000) #5, !dbg !55
  %7010 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %7007, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2647 = select i1 %.not1.i2646, float %7010, float %7009, !dbg !55
  %7011 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2648 = icmp eq i32 %7011, 0, !dbg !55
  %7012 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2647, float %7007, float 0x3FC10B2820000000) #5, !dbg !55
  %7013 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2647, float %7007, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2649 = select i1 %.not2.i2648, float %7013, float %7012, !dbg !55
  %7014 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2650 = icmp eq i32 %7014, 0, !dbg !55
  %7015 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2649, float %7007, float 0xBFD5553DA0000000) #5, !dbg !55
  %7016 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2649, float %7007, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2651 = select i1 %.not3.i2650, float %7016, float %7015, !dbg !55
  %7017 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2652 = icmp eq i32 %7017, 0, !dbg !55
  %7018 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2651, float %7007, float 0.000000e+00) #5, !dbg !55
  %7019 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2651, float %7007, float 0.000000e+00) #5, !dbg !55
  %.04.i2653 = select i1 %.not4.i2652, float %7019, float %7018, !dbg !55
  %7020 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2654 = icmp eq i32 %7020, 0, !dbg !55
  %7021 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2653, float %2926, float %2926) #5, !dbg !55
  %7022 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2653, float %2926, float %2926) #5, !dbg !55
  %.02.i2655 = select i1 %.not5.i2654, float %7022, float %7021, !dbg !55
  br label %__nv_tanhf.exit2656, !dbg !55

__nv_tanhf.exit2656:                              ; preds = %__internal_fmad.exit1.i2640, %__internal_fmad.exit3.i2645
  %s.1.i2644 = phi float [ %7006, %__internal_fmad.exit1.i2640 ], [ %.02.i2655, %__internal_fmad.exit3.i2645 ], !dbg !55
  %7023 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2657 = icmp eq i32 %7023, 0, !dbg !55
  %7024 = tail call float @llvm.nvvm.fabs.ftz.f(float %2927) #5, !dbg !55
  %7025 = tail call float @llvm.nvvm.fabs.f(float %2927) #5, !dbg !55
  %.01.i2658 = select i1 %.not.i2657, float %7025, float %7024, !dbg !55
  %7026 = fcmp ult float %.01.i2658, 0x3FE3333340000000, !dbg !55
  br i1 %7026, label %__internal_fmad.exit3.i2664, label %__internal_fmad.exit1.i2659, !dbg !55

__internal_fmad.exit1.i2659:                      ; preds = %__nv_tanhf.exit2656
  %7027 = fmul float %.01.i2658, 0x4007154760000000, !dbg !55
  %7028 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %7027) #5, !dbg !55
  %7029 = fadd float %7028, 1.000000e+00, !dbg !55
  %7030 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %7029) #6, !dbg !55, !srcloc !56
  %7031 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2660 = icmp eq i32 %7031, 0, !dbg !55
  %7032 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7030, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %7033 = tail call float @llvm.nvvm.fma.rn.f(float %7030, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2661 = select i1 %.not6.i2660, float %7033, float %7032, !dbg !55
  %7034 = fcmp oge float %.01.i2658, 0x4022059680000000, !dbg !55
  %s.0.i2662 = select i1 %7034, float 1.000000e+00, float %.03.i2661, !dbg !55
  %7035 = bitcast float %s.0.i2662 to i32, !dbg !55
  %7036 = bitcast float %2927 to i32, !dbg !55
  %7037 = and i32 %7036, -2147483648, !dbg !55
  %7038 = or i32 %7037, %7035, !dbg !55
  %7039 = bitcast i32 %7038 to float, !dbg !55
  br label %__nv_tanhf.exit2675, !dbg !55

__internal_fmad.exit3.i2664:                      ; preds = %__nv_tanhf.exit2656
  %7040 = fmul float %2927, %2927, !dbg !55
  %7041 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2665 = icmp eq i32 %7041, 0, !dbg !55
  %7042 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %7040, float 0xBFAAC795C0000000) #5, !dbg !55
  %7043 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %7040, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2666 = select i1 %.not1.i2665, float %7043, float %7042, !dbg !55
  %7044 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2667 = icmp eq i32 %7044, 0, !dbg !55
  %7045 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2666, float %7040, float 0x3FC10B2820000000) #5, !dbg !55
  %7046 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2666, float %7040, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2668 = select i1 %.not2.i2667, float %7046, float %7045, !dbg !55
  %7047 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2669 = icmp eq i32 %7047, 0, !dbg !55
  %7048 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2668, float %7040, float 0xBFD5553DA0000000) #5, !dbg !55
  %7049 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2668, float %7040, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2670 = select i1 %.not3.i2669, float %7049, float %7048, !dbg !55
  %7050 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2671 = icmp eq i32 %7050, 0, !dbg !55
  %7051 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2670, float %7040, float 0.000000e+00) #5, !dbg !55
  %7052 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2670, float %7040, float 0.000000e+00) #5, !dbg !55
  %.04.i2672 = select i1 %.not4.i2671, float %7052, float %7051, !dbg !55
  %7053 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2673 = icmp eq i32 %7053, 0, !dbg !55
  %7054 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2672, float %2927, float %2927) #5, !dbg !55
  %7055 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2672, float %2927, float %2927) #5, !dbg !55
  %.02.i2674 = select i1 %.not5.i2673, float %7055, float %7054, !dbg !55
  br label %__nv_tanhf.exit2675, !dbg !55

__nv_tanhf.exit2675:                              ; preds = %__internal_fmad.exit1.i2659, %__internal_fmad.exit3.i2664
  %s.1.i2663 = phi float [ %7039, %__internal_fmad.exit1.i2659 ], [ %.02.i2674, %__internal_fmad.exit3.i2664 ], !dbg !55
  %7056 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2676 = icmp eq i32 %7056, 0, !dbg !55
  %7057 = tail call float @llvm.nvvm.fabs.ftz.f(float %2928) #5, !dbg !55
  %7058 = tail call float @llvm.nvvm.fabs.f(float %2928) #5, !dbg !55
  %.01.i2677 = select i1 %.not.i2676, float %7058, float %7057, !dbg !55
  %7059 = fcmp ult float %.01.i2677, 0x3FE3333340000000, !dbg !55
  br i1 %7059, label %__internal_fmad.exit3.i2683, label %__internal_fmad.exit1.i2678, !dbg !55

__internal_fmad.exit1.i2678:                      ; preds = %__nv_tanhf.exit2675
  %7060 = fmul float %.01.i2677, 0x4007154760000000, !dbg !55
  %7061 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %7060) #5, !dbg !55
  %7062 = fadd float %7061, 1.000000e+00, !dbg !55
  %7063 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %7062) #6, !dbg !55, !srcloc !56
  %7064 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2679 = icmp eq i32 %7064, 0, !dbg !55
  %7065 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7063, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %7066 = tail call float @llvm.nvvm.fma.rn.f(float %7063, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2680 = select i1 %.not6.i2679, float %7066, float %7065, !dbg !55
  %7067 = fcmp oge float %.01.i2677, 0x4022059680000000, !dbg !55
  %s.0.i2681 = select i1 %7067, float 1.000000e+00, float %.03.i2680, !dbg !55
  %7068 = bitcast float %s.0.i2681 to i32, !dbg !55
  %7069 = bitcast float %2928 to i32, !dbg !55
  %7070 = and i32 %7069, -2147483648, !dbg !55
  %7071 = or i32 %7070, %7068, !dbg !55
  %7072 = bitcast i32 %7071 to float, !dbg !55
  br label %__nv_tanhf.exit2694, !dbg !55

__internal_fmad.exit3.i2683:                      ; preds = %__nv_tanhf.exit2675
  %7073 = fmul float %2928, %2928, !dbg !55
  %7074 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2684 = icmp eq i32 %7074, 0, !dbg !55
  %7075 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %7073, float 0xBFAAC795C0000000) #5, !dbg !55
  %7076 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %7073, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2685 = select i1 %.not1.i2684, float %7076, float %7075, !dbg !55
  %7077 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2686 = icmp eq i32 %7077, 0, !dbg !55
  %7078 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2685, float %7073, float 0x3FC10B2820000000) #5, !dbg !55
  %7079 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2685, float %7073, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2687 = select i1 %.not2.i2686, float %7079, float %7078, !dbg !55
  %7080 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2688 = icmp eq i32 %7080, 0, !dbg !55
  %7081 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2687, float %7073, float 0xBFD5553DA0000000) #5, !dbg !55
  %7082 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2687, float %7073, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2689 = select i1 %.not3.i2688, float %7082, float %7081, !dbg !55
  %7083 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2690 = icmp eq i32 %7083, 0, !dbg !55
  %7084 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2689, float %7073, float 0.000000e+00) #5, !dbg !55
  %7085 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2689, float %7073, float 0.000000e+00) #5, !dbg !55
  %.04.i2691 = select i1 %.not4.i2690, float %7085, float %7084, !dbg !55
  %7086 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2692 = icmp eq i32 %7086, 0, !dbg !55
  %7087 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2691, float %2928, float %2928) #5, !dbg !55
  %7088 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2691, float %2928, float %2928) #5, !dbg !55
  %.02.i2693 = select i1 %.not5.i2692, float %7088, float %7087, !dbg !55
  br label %__nv_tanhf.exit2694, !dbg !55

__nv_tanhf.exit2694:                              ; preds = %__internal_fmad.exit1.i2678, %__internal_fmad.exit3.i2683
  %s.1.i2682 = phi float [ %7072, %__internal_fmad.exit1.i2678 ], [ %.02.i2693, %__internal_fmad.exit3.i2683 ], !dbg !55
  %7089 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2695 = icmp eq i32 %7089, 0, !dbg !55
  %7090 = tail call float @llvm.nvvm.fabs.ftz.f(float %2929) #5, !dbg !55
  %7091 = tail call float @llvm.nvvm.fabs.f(float %2929) #5, !dbg !55
  %.01.i2696 = select i1 %.not.i2695, float %7091, float %7090, !dbg !55
  %7092 = fcmp ult float %.01.i2696, 0x3FE3333340000000, !dbg !55
  br i1 %7092, label %__internal_fmad.exit3.i2702, label %__internal_fmad.exit1.i2697, !dbg !55

__internal_fmad.exit1.i2697:                      ; preds = %__nv_tanhf.exit2694
  %7093 = fmul float %.01.i2696, 0x4007154760000000, !dbg !55
  %7094 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %7093) #5, !dbg !55
  %7095 = fadd float %7094, 1.000000e+00, !dbg !55
  %7096 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %7095) #6, !dbg !55, !srcloc !56
  %7097 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2698 = icmp eq i32 %7097, 0, !dbg !55
  %7098 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7096, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %7099 = tail call float @llvm.nvvm.fma.rn.f(float %7096, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2699 = select i1 %.not6.i2698, float %7099, float %7098, !dbg !55
  %7100 = fcmp oge float %.01.i2696, 0x4022059680000000, !dbg !55
  %s.0.i2700 = select i1 %7100, float 1.000000e+00, float %.03.i2699, !dbg !55
  %7101 = bitcast float %s.0.i2700 to i32, !dbg !55
  %7102 = bitcast float %2929 to i32, !dbg !55
  %7103 = and i32 %7102, -2147483648, !dbg !55
  %7104 = or i32 %7103, %7101, !dbg !55
  %7105 = bitcast i32 %7104 to float, !dbg !55
  br label %__nv_tanhf.exit2713, !dbg !55

__internal_fmad.exit3.i2702:                      ; preds = %__nv_tanhf.exit2694
  %7106 = fmul float %2929, %2929, !dbg !55
  %7107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2703 = icmp eq i32 %7107, 0, !dbg !55
  %7108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %7106, float 0xBFAAC795C0000000) #5, !dbg !55
  %7109 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %7106, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2704 = select i1 %.not1.i2703, float %7109, float %7108, !dbg !55
  %7110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2705 = icmp eq i32 %7110, 0, !dbg !55
  %7111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2704, float %7106, float 0x3FC10B2820000000) #5, !dbg !55
  %7112 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2704, float %7106, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2706 = select i1 %.not2.i2705, float %7112, float %7111, !dbg !55
  %7113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2707 = icmp eq i32 %7113, 0, !dbg !55
  %7114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2706, float %7106, float 0xBFD5553DA0000000) #5, !dbg !55
  %7115 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2706, float %7106, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2708 = select i1 %.not3.i2707, float %7115, float %7114, !dbg !55
  %7116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2709 = icmp eq i32 %7116, 0, !dbg !55
  %7117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2708, float %7106, float 0.000000e+00) #5, !dbg !55
  %7118 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2708, float %7106, float 0.000000e+00) #5, !dbg !55
  %.04.i2710 = select i1 %.not4.i2709, float %7118, float %7117, !dbg !55
  %7119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2711 = icmp eq i32 %7119, 0, !dbg !55
  %7120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2710, float %2929, float %2929) #5, !dbg !55
  %7121 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2710, float %2929, float %2929) #5, !dbg !55
  %.02.i2712 = select i1 %.not5.i2711, float %7121, float %7120, !dbg !55
  br label %__nv_tanhf.exit2713, !dbg !55

__nv_tanhf.exit2713:                              ; preds = %__internal_fmad.exit1.i2697, %__internal_fmad.exit3.i2702
  %s.1.i2701 = phi float [ %7105, %__internal_fmad.exit1.i2697 ], [ %.02.i2712, %__internal_fmad.exit3.i2702 ], !dbg !55
  %7122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i2714 = icmp eq i32 %7122, 0, !dbg !55
  %7123 = tail call float @llvm.nvvm.fabs.ftz.f(float %2930) #5, !dbg !55
  %7124 = tail call float @llvm.nvvm.fabs.f(float %2930) #5, !dbg !55
  %.01.i2715 = select i1 %.not.i2714, float %7124, float %7123, !dbg !55
  %7125 = fcmp ult float %.01.i2715, 0x3FE3333340000000, !dbg !55
  br i1 %7125, label %__internal_fmad.exit3.i2721, label %__internal_fmad.exit1.i2716, !dbg !55

__internal_fmad.exit1.i2716:                      ; preds = %__nv_tanhf.exit2713
  %7126 = fmul float %.01.i2715, 0x4007154760000000, !dbg !55
  %7127 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %7126) #5, !dbg !55
  %7128 = fadd float %7127, 1.000000e+00, !dbg !55
  %7129 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %7128) #6, !dbg !55, !srcloc !56
  %7130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not6.i2717 = icmp eq i32 %7130, 0, !dbg !55
  %7131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7129, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %7132 = tail call float @llvm.nvvm.fma.rn.f(float %7129, float -2.000000e+00, float 1.000000e+00) #5, !dbg !55
  %.03.i2718 = select i1 %.not6.i2717, float %7132, float %7131, !dbg !55
  %7133 = fcmp oge float %.01.i2715, 0x4022059680000000, !dbg !55
  %s.0.i2719 = select i1 %7133, float 1.000000e+00, float %.03.i2718, !dbg !55
  %7134 = bitcast float %s.0.i2719 to i32, !dbg !55
  %7135 = bitcast float %2930 to i32, !dbg !55
  %7136 = and i32 %7135, -2147483648, !dbg !55
  %7137 = or i32 %7136, %7134, !dbg !55
  %7138 = bitcast i32 %7137 to float, !dbg !55
  br label %__nv_tanhf.exit2732, !dbg !55

__internal_fmad.exit3.i2721:                      ; preds = %__nv_tanhf.exit2713
  %7139 = fmul float %2930, %2930, !dbg !55
  %7140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not1.i2722 = icmp eq i32 %7140, 0, !dbg !55
  %7141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %7139, float 0xBFAAC795C0000000) #5, !dbg !55
  %7142 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %7139, float 0xBFAAC795C0000000) #5, !dbg !55
  %.06.i2723 = select i1 %.not1.i2722, float %7142, float %7141, !dbg !55
  %7143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not2.i2724 = icmp eq i32 %7143, 0, !dbg !55
  %7144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i2723, float %7139, float 0x3FC10B2820000000) #5, !dbg !55
  %7145 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i2723, float %7139, float 0x3FC10B2820000000) #5, !dbg !55
  %.05.i2725 = select i1 %.not2.i2724, float %7145, float %7144, !dbg !55
  %7146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not3.i2726 = icmp eq i32 %7146, 0, !dbg !55
  %7147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i2725, float %7139, float 0xBFD5553DA0000000) #5, !dbg !55
  %7148 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i2725, float %7139, float 0xBFD5553DA0000000) #5, !dbg !55
  %.0.i2727 = select i1 %.not3.i2726, float %7148, float %7147, !dbg !55
  %7149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not4.i2728 = icmp eq i32 %7149, 0, !dbg !55
  %7150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2727, float %7139, float 0.000000e+00) #5, !dbg !55
  %7151 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2727, float %7139, float 0.000000e+00) #5, !dbg !55
  %.04.i2729 = select i1 %.not4.i2728, float %7151, float %7150, !dbg !55
  %7152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not5.i2730 = icmp eq i32 %7152, 0, !dbg !55
  %7153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i2729, float %2930, float %2930) #5, !dbg !55
  %7154 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i2729, float %2930, float %2930) #5, !dbg !55
  %.02.i2731 = select i1 %.not5.i2730, float %7154, float %7153, !dbg !55
  br label %__nv_tanhf.exit2732, !dbg !55

__nv_tanhf.exit2732:                              ; preds = %__internal_fmad.exit1.i2716, %__internal_fmad.exit3.i2721
  %s.1.i2720 = phi float [ %7138, %__internal_fmad.exit1.i2716 ], [ %.02.i2731, %__internal_fmad.exit3.i2721 ], !dbg !55
  %7155 = fadd float %s.1.i, 1.000000e+00, !dbg !57
  %7156 = fadd float %s.1.i326, 1.000000e+00, !dbg !57
  %7157 = fadd float %s.1.i345, 1.000000e+00, !dbg !57
  %7158 = fadd float %s.1.i364, 1.000000e+00, !dbg !57
  %7159 = fadd float %s.1.i383, 1.000000e+00, !dbg !57
  %7160 = fadd float %s.1.i402, 1.000000e+00, !dbg !57
  %7161 = fadd float %s.1.i421, 1.000000e+00, !dbg !57
  %7162 = fadd float %s.1.i440, 1.000000e+00, !dbg !57
  %7163 = fadd float %s.1.i459, 1.000000e+00, !dbg !57
  %7164 = fadd float %s.1.i478, 1.000000e+00, !dbg !57
  %7165 = fadd float %s.1.i497, 1.000000e+00, !dbg !57
  %7166 = fadd float %s.1.i516, 1.000000e+00, !dbg !57
  %7167 = fadd float %s.1.i535, 1.000000e+00, !dbg !57
  %7168 = fadd float %s.1.i554, 1.000000e+00, !dbg !57
  %7169 = fadd float %s.1.i573, 1.000000e+00, !dbg !57
  %7170 = fadd float %s.1.i592, 1.000000e+00, !dbg !57
  %7171 = fadd float %s.1.i611, 1.000000e+00, !dbg !57
  %7172 = fadd float %s.1.i630, 1.000000e+00, !dbg !57
  %7173 = fadd float %s.1.i649, 1.000000e+00, !dbg !57
  %7174 = fadd float %s.1.i668, 1.000000e+00, !dbg !57
  %7175 = fadd float %s.1.i687, 1.000000e+00, !dbg !57
  %7176 = fadd float %s.1.i706, 1.000000e+00, !dbg !57
  %7177 = fadd float %s.1.i725, 1.000000e+00, !dbg !57
  %7178 = fadd float %s.1.i744, 1.000000e+00, !dbg !57
  %7179 = fadd float %s.1.i763, 1.000000e+00, !dbg !57
  %7180 = fadd float %s.1.i782, 1.000000e+00, !dbg !57
  %7181 = fadd float %s.1.i801, 1.000000e+00, !dbg !57
  %7182 = fadd float %s.1.i820, 1.000000e+00, !dbg !57
  %7183 = fadd float %s.1.i839, 1.000000e+00, !dbg !57
  %7184 = fadd float %s.1.i858, 1.000000e+00, !dbg !57
  %7185 = fadd float %s.1.i877, 1.000000e+00, !dbg !57
  %7186 = fadd float %s.1.i896, 1.000000e+00, !dbg !57
  %7187 = fadd float %s.1.i915, 1.000000e+00, !dbg !57
  %7188 = fadd float %s.1.i934, 1.000000e+00, !dbg !57
  %7189 = fadd float %s.1.i953, 1.000000e+00, !dbg !57
  %7190 = fadd float %s.1.i972, 1.000000e+00, !dbg !57
  %7191 = fadd float %s.1.i991, 1.000000e+00, !dbg !57
  %7192 = fadd float %s.1.i1010, 1.000000e+00, !dbg !57
  %7193 = fadd float %s.1.i1029, 1.000000e+00, !dbg !57
  %7194 = fadd float %s.1.i1048, 1.000000e+00, !dbg !57
  %7195 = fadd float %s.1.i1067, 1.000000e+00, !dbg !57
  %7196 = fadd float %s.1.i1086, 1.000000e+00, !dbg !57
  %7197 = fadd float %s.1.i1105, 1.000000e+00, !dbg !57
  %7198 = fadd float %s.1.i1124, 1.000000e+00, !dbg !57
  %7199 = fadd float %s.1.i1143, 1.000000e+00, !dbg !57
  %7200 = fadd float %s.1.i1162, 1.000000e+00, !dbg !57
  %7201 = fadd float %s.1.i1181, 1.000000e+00, !dbg !57
  %7202 = fadd float %s.1.i1200, 1.000000e+00, !dbg !57
  %7203 = fadd float %s.1.i1219, 1.000000e+00, !dbg !57
  %7204 = fadd float %s.1.i1238, 1.000000e+00, !dbg !57
  %7205 = fadd float %s.1.i1257, 1.000000e+00, !dbg !57
  %7206 = fadd float %s.1.i1276, 1.000000e+00, !dbg !57
  %7207 = fadd float %s.1.i1295, 1.000000e+00, !dbg !57
  %7208 = fadd float %s.1.i1314, 1.000000e+00, !dbg !57
  %7209 = fadd float %s.1.i1333, 1.000000e+00, !dbg !57
  %7210 = fadd float %s.1.i1352, 1.000000e+00, !dbg !57
  %7211 = fadd float %s.1.i1371, 1.000000e+00, !dbg !57
  %7212 = fadd float %s.1.i1390, 1.000000e+00, !dbg !57
  %7213 = fadd float %s.1.i1409, 1.000000e+00, !dbg !57
  %7214 = fadd float %s.1.i1428, 1.000000e+00, !dbg !57
  %7215 = fadd float %s.1.i1447, 1.000000e+00, !dbg !57
  %7216 = fadd float %s.1.i1466, 1.000000e+00, !dbg !57
  %7217 = fadd float %s.1.i1485, 1.000000e+00, !dbg !57
  %7218 = fadd float %s.1.i1504, 1.000000e+00, !dbg !57
  %7219 = fadd float %s.1.i1523, 1.000000e+00, !dbg !57
  %7220 = fadd float %s.1.i1542, 1.000000e+00, !dbg !57
  %7221 = fadd float %s.1.i1561, 1.000000e+00, !dbg !57
  %7222 = fadd float %s.1.i1580, 1.000000e+00, !dbg !57
  %7223 = fadd float %s.1.i1599, 1.000000e+00, !dbg !57
  %7224 = fadd float %s.1.i1618, 1.000000e+00, !dbg !57
  %7225 = fadd float %s.1.i1637, 1.000000e+00, !dbg !57
  %7226 = fadd float %s.1.i1656, 1.000000e+00, !dbg !57
  %7227 = fadd float %s.1.i1675, 1.000000e+00, !dbg !57
  %7228 = fadd float %s.1.i1694, 1.000000e+00, !dbg !57
  %7229 = fadd float %s.1.i1713, 1.000000e+00, !dbg !57
  %7230 = fadd float %s.1.i1732, 1.000000e+00, !dbg !57
  %7231 = fadd float %s.1.i1751, 1.000000e+00, !dbg !57
  %7232 = fadd float %s.1.i1770, 1.000000e+00, !dbg !57
  %7233 = fadd float %s.1.i1789, 1.000000e+00, !dbg !57
  %7234 = fadd float %s.1.i1808, 1.000000e+00, !dbg !57
  %7235 = fadd float %s.1.i1827, 1.000000e+00, !dbg !57
  %7236 = fadd float %s.1.i1846, 1.000000e+00, !dbg !57
  %7237 = fadd float %s.1.i1865, 1.000000e+00, !dbg !57
  %7238 = fadd float %s.1.i1884, 1.000000e+00, !dbg !57
  %7239 = fadd float %s.1.i1903, 1.000000e+00, !dbg !57
  %7240 = fadd float %s.1.i1922, 1.000000e+00, !dbg !57
  %7241 = fadd float %s.1.i1941, 1.000000e+00, !dbg !57
  %7242 = fadd float %s.1.i1960, 1.000000e+00, !dbg !57
  %7243 = fadd float %s.1.i1979, 1.000000e+00, !dbg !57
  %7244 = fadd float %s.1.i1998, 1.000000e+00, !dbg !57
  %7245 = fadd float %s.1.i2017, 1.000000e+00, !dbg !57
  %7246 = fadd float %s.1.i2036, 1.000000e+00, !dbg !57
  %7247 = fadd float %s.1.i2055, 1.000000e+00, !dbg !57
  %7248 = fadd float %s.1.i2074, 1.000000e+00, !dbg !57
  %7249 = fadd float %s.1.i2093, 1.000000e+00, !dbg !57
  %7250 = fadd float %s.1.i2112, 1.000000e+00, !dbg !57
  %7251 = fadd float %s.1.i2131, 1.000000e+00, !dbg !57
  %7252 = fadd float %s.1.i2150, 1.000000e+00, !dbg !57
  %7253 = fadd float %s.1.i2169, 1.000000e+00, !dbg !57
  %7254 = fadd float %s.1.i2188, 1.000000e+00, !dbg !57
  %7255 = fadd float %s.1.i2207, 1.000000e+00, !dbg !57
  %7256 = fadd float %s.1.i2226, 1.000000e+00, !dbg !57
  %7257 = fadd float %s.1.i2245, 1.000000e+00, !dbg !57
  %7258 = fadd float %s.1.i2264, 1.000000e+00, !dbg !57
  %7259 = fadd float %s.1.i2283, 1.000000e+00, !dbg !57
  %7260 = fadd float %s.1.i2302, 1.000000e+00, !dbg !57
  %7261 = fadd float %s.1.i2321, 1.000000e+00, !dbg !57
  %7262 = fadd float %s.1.i2340, 1.000000e+00, !dbg !57
  %7263 = fadd float %s.1.i2359, 1.000000e+00, !dbg !57
  %7264 = fadd float %s.1.i2378, 1.000000e+00, !dbg !57
  %7265 = fadd float %s.1.i2397, 1.000000e+00, !dbg !57
  %7266 = fadd float %s.1.i2416, 1.000000e+00, !dbg !57
  %7267 = fadd float %s.1.i2435, 1.000000e+00, !dbg !57
  %7268 = fadd float %s.1.i2454, 1.000000e+00, !dbg !57
  %7269 = fadd float %s.1.i2473, 1.000000e+00, !dbg !57
  %7270 = fadd float %s.1.i2492, 1.000000e+00, !dbg !57
  %7271 = fadd float %s.1.i2511, 1.000000e+00, !dbg !57
  %7272 = fadd float %s.1.i2530, 1.000000e+00, !dbg !57
  %7273 = fadd float %s.1.i2549, 1.000000e+00, !dbg !57
  %7274 = fadd float %s.1.i2568, 1.000000e+00, !dbg !57
  %7275 = fadd float %s.1.i2587, 1.000000e+00, !dbg !57
  %7276 = fadd float %s.1.i2606, 1.000000e+00, !dbg !57
  %7277 = fadd float %s.1.i2625, 1.000000e+00, !dbg !57
  %7278 = fadd float %s.1.i2644, 1.000000e+00, !dbg !57
  %7279 = fadd float %s.1.i2663, 1.000000e+00, !dbg !57
  %7280 = fadd float %s.1.i2682, 1.000000e+00, !dbg !57
  %7281 = fadd float %s.1.i2701, 1.000000e+00, !dbg !57
  %7282 = fadd float %s.1.i2720, 1.000000e+00, !dbg !57
  %7283 = fmul float %2163, %7155, !dbg !58
  %7284 = fmul float %2164, %7156, !dbg !58
  %7285 = fmul float %2165, %7157, !dbg !58
  %7286 = fmul float %2166, %7158, !dbg !58
  %7287 = fmul float %2167, %7159, !dbg !58
  %7288 = fmul float %2168, %7160, !dbg !58
  %7289 = fmul float %2169, %7161, !dbg !58
  %7290 = fmul float %2170, %7162, !dbg !58
  %7291 = fmul float %2171, %7163, !dbg !58
  %7292 = fmul float %2172, %7164, !dbg !58
  %7293 = fmul float %2173, %7165, !dbg !58
  %7294 = fmul float %2174, %7166, !dbg !58
  %7295 = fmul float %2175, %7167, !dbg !58
  %7296 = fmul float %2176, %7168, !dbg !58
  %7297 = fmul float %2177, %7169, !dbg !58
  %7298 = fmul float %2178, %7170, !dbg !58
  %7299 = fmul float %2179, %7171, !dbg !58
  %7300 = fmul float %2180, %7172, !dbg !58
  %7301 = fmul float %2181, %7173, !dbg !58
  %7302 = fmul float %2182, %7174, !dbg !58
  %7303 = fmul float %2183, %7175, !dbg !58
  %7304 = fmul float %2184, %7176, !dbg !58
  %7305 = fmul float %2185, %7177, !dbg !58
  %7306 = fmul float %2186, %7178, !dbg !58
  %7307 = fmul float %2187, %7179, !dbg !58
  %7308 = fmul float %2188, %7180, !dbg !58
  %7309 = fmul float %2189, %7181, !dbg !58
  %7310 = fmul float %2190, %7182, !dbg !58
  %7311 = fmul float %2191, %7183, !dbg !58
  %7312 = fmul float %2192, %7184, !dbg !58
  %7313 = fmul float %2193, %7185, !dbg !58
  %7314 = fmul float %2194, %7186, !dbg !58
  %7315 = fmul float %2195, %7187, !dbg !58
  %7316 = fmul float %2196, %7188, !dbg !58
  %7317 = fmul float %2197, %7189, !dbg !58
  %7318 = fmul float %2198, %7190, !dbg !58
  %7319 = fmul float %2199, %7191, !dbg !58
  %7320 = fmul float %2200, %7192, !dbg !58
  %7321 = fmul float %2201, %7193, !dbg !58
  %7322 = fmul float %2202, %7194, !dbg !58
  %7323 = fmul float %2203, %7195, !dbg !58
  %7324 = fmul float %2204, %7196, !dbg !58
  %7325 = fmul float %2205, %7197, !dbg !58
  %7326 = fmul float %2206, %7198, !dbg !58
  %7327 = fmul float %2207, %7199, !dbg !58
  %7328 = fmul float %2208, %7200, !dbg !58
  %7329 = fmul float %2209, %7201, !dbg !58
  %7330 = fmul float %2210, %7202, !dbg !58
  %7331 = fmul float %2211, %7203, !dbg !58
  %7332 = fmul float %2212, %7204, !dbg !58
  %7333 = fmul float %2213, %7205, !dbg !58
  %7334 = fmul float %2214, %7206, !dbg !58
  %7335 = fmul float %2215, %7207, !dbg !58
  %7336 = fmul float %2216, %7208, !dbg !58
  %7337 = fmul float %2217, %7209, !dbg !58
  %7338 = fmul float %2218, %7210, !dbg !58
  %7339 = fmul float %2219, %7211, !dbg !58
  %7340 = fmul float %2220, %7212, !dbg !58
  %7341 = fmul float %2221, %7213, !dbg !58
  %7342 = fmul float %2222, %7214, !dbg !58
  %7343 = fmul float %2223, %7215, !dbg !58
  %7344 = fmul float %2224, %7216, !dbg !58
  %7345 = fmul float %2225, %7217, !dbg !58
  %7346 = fmul float %2226, %7218, !dbg !58
  %7347 = fmul float %2227, %7219, !dbg !58
  %7348 = fmul float %2228, %7220, !dbg !58
  %7349 = fmul float %2229, %7221, !dbg !58
  %7350 = fmul float %2230, %7222, !dbg !58
  %7351 = fmul float %2231, %7223, !dbg !58
  %7352 = fmul float %2232, %7224, !dbg !58
  %7353 = fmul float %2233, %7225, !dbg !58
  %7354 = fmul float %2234, %7226, !dbg !58
  %7355 = fmul float %2235, %7227, !dbg !58
  %7356 = fmul float %2236, %7228, !dbg !58
  %7357 = fmul float %2237, %7229, !dbg !58
  %7358 = fmul float %2238, %7230, !dbg !58
  %7359 = fmul float %2239, %7231, !dbg !58
  %7360 = fmul float %2240, %7232, !dbg !58
  %7361 = fmul float %2241, %7233, !dbg !58
  %7362 = fmul float %2242, %7234, !dbg !58
  %7363 = fmul float %2243, %7235, !dbg !58
  %7364 = fmul float %2244, %7236, !dbg !58
  %7365 = fmul float %2245, %7237, !dbg !58
  %7366 = fmul float %2246, %7238, !dbg !58
  %7367 = fmul float %2247, %7239, !dbg !58
  %7368 = fmul float %2248, %7240, !dbg !58
  %7369 = fmul float %2249, %7241, !dbg !58
  %7370 = fmul float %2250, %7242, !dbg !58
  %7371 = fmul float %2251, %7243, !dbg !58
  %7372 = fmul float %2252, %7244, !dbg !58
  %7373 = fmul float %2253, %7245, !dbg !58
  %7374 = fmul float %2254, %7246, !dbg !58
  %7375 = fmul float %2255, %7247, !dbg !58
  %7376 = fmul float %2256, %7248, !dbg !58
  %7377 = fmul float %2257, %7249, !dbg !58
  %7378 = fmul float %2258, %7250, !dbg !58
  %7379 = fmul float %2259, %7251, !dbg !58
  %7380 = fmul float %2260, %7252, !dbg !58
  %7381 = fmul float %2261, %7253, !dbg !58
  %7382 = fmul float %2262, %7254, !dbg !58
  %7383 = fmul float %2263, %7255, !dbg !58
  %7384 = fmul float %2264, %7256, !dbg !58
  %7385 = fmul float %2265, %7257, !dbg !58
  %7386 = fmul float %2266, %7258, !dbg !58
  %7387 = fmul float %2267, %7259, !dbg !58
  %7388 = fmul float %2268, %7260, !dbg !58
  %7389 = fmul float %2269, %7261, !dbg !58
  %7390 = fmul float %2270, %7262, !dbg !58
  %7391 = fmul float %2271, %7263, !dbg !58
  %7392 = fmul float %2272, %7264, !dbg !58
  %7393 = fmul float %2273, %7265, !dbg !58
  %7394 = fmul float %2274, %7266, !dbg !58
  %7395 = fmul float %2275, %7267, !dbg !58
  %7396 = fmul float %2276, %7268, !dbg !58
  %7397 = fmul float %2277, %7269, !dbg !58
  %7398 = fmul float %2278, %7270, !dbg !58
  %7399 = fmul float %2279, %7271, !dbg !58
  %7400 = fmul float %2280, %7272, !dbg !58
  %7401 = fmul float %2281, %7273, !dbg !58
  %7402 = fmul float %2282, %7274, !dbg !58
  %7403 = fmul float %2283, %7275, !dbg !58
  %7404 = fmul float %2284, %7276, !dbg !58
  %7405 = fmul float %2285, %7277, !dbg !58
  %7406 = fmul float %2286, %7278, !dbg !58
  %7407 = fmul float %2287, %7279, !dbg !58
  %7408 = fmul float %2288, %7280, !dbg !58
  %7409 = fmul float %2289, %7281, !dbg !58
  %7410 = fmul float %2290, %7282, !dbg !58
  %7411 = mul i32 %44, 12288, !dbg !59
  %7412 = mul i32 %1073, 12288, !dbg !59
  %7413 = mul i32 %1074, 12288, !dbg !59
  %7414 = mul i32 %1075, 12288, !dbg !59
  %7415 = mul i32 %1076, 12288, !dbg !59
  %7416 = mul i32 %1077, 12288, !dbg !59
  %7417 = mul i32 %1078, 12288, !dbg !59
  %7418 = mul i32 %1079, 12288, !dbg !59
  %7419 = mul i32 %1080, 12288, !dbg !59
  %7420 = mul i32 %1081, 12288, !dbg !59
  %7421 = mul i32 %1082, 12288, !dbg !59
  %7422 = mul i32 %1083, 12288, !dbg !59
  %7423 = mul i32 %1084, 12288, !dbg !59
  %7424 = mul i32 %1085, 12288, !dbg !59
  %7425 = mul i32 %1086, 12288, !dbg !59
  %7426 = mul i32 %1087, 12288, !dbg !59
  %7427 = add i32 %7411, %1088, !dbg !60
  %7428 = add i32 %1088, %7412, !dbg !60
  %7429 = add i32 %1088, %7413, !dbg !60
  %7430 = add i32 %1088, %7414, !dbg !60
  %7431 = add i32 %1088, %7415, !dbg !60
  %7432 = add i32 %1088, %7416, !dbg !60
  %7433 = add i32 %1088, %7417, !dbg !60
  %7434 = add i32 %1088, %7418, !dbg !60
  %7435 = add i32 %1088, %7419, !dbg !60
  %7436 = add i32 %1088, %7420, !dbg !60
  %7437 = add i32 %1088, %7421, !dbg !60
  %7438 = add i32 %1088, %7422, !dbg !60
  %7439 = add i32 %1088, %7423, !dbg !60
  %7440 = add i32 %1088, %7424, !dbg !60
  %7441 = add i32 %1088, %7425, !dbg !60
  %7442 = add i32 %1088, %7426, !dbg !60
  %7443 = sext i32 %7427 to i64, !dbg !61
  %7444 = getelementptr i16, ptr addrspace(1) %3, i64 %7443, !dbg !61
  %7445 = sext i32 %7428 to i64, !dbg !61
  %7446 = getelementptr i16, ptr addrspace(1) %3, i64 %7445, !dbg !61
  %7447 = sext i32 %7429 to i64, !dbg !61
  %7448 = getelementptr i16, ptr addrspace(1) %3, i64 %7447, !dbg !61
  %7449 = sext i32 %7430 to i64, !dbg !61
  %7450 = getelementptr i16, ptr addrspace(1) %3, i64 %7449, !dbg !61
  %7451 = sext i32 %7431 to i64, !dbg !61
  %7452 = getelementptr i16, ptr addrspace(1) %3, i64 %7451, !dbg !61
  %7453 = sext i32 %7432 to i64, !dbg !61
  %7454 = getelementptr i16, ptr addrspace(1) %3, i64 %7453, !dbg !61
  %7455 = sext i32 %7433 to i64, !dbg !61
  %7456 = getelementptr i16, ptr addrspace(1) %3, i64 %7455, !dbg !61
  %7457 = sext i32 %7434 to i64, !dbg !61
  %7458 = getelementptr i16, ptr addrspace(1) %3, i64 %7457, !dbg !61
  %7459 = sext i32 %7435 to i64, !dbg !61
  %7460 = getelementptr i16, ptr addrspace(1) %3, i64 %7459, !dbg !61
  %7461 = sext i32 %7436 to i64, !dbg !61
  %7462 = getelementptr i16, ptr addrspace(1) %3, i64 %7461, !dbg !61
  %7463 = sext i32 %7437 to i64, !dbg !61
  %7464 = getelementptr i16, ptr addrspace(1) %3, i64 %7463, !dbg !61
  %7465 = sext i32 %7438 to i64, !dbg !61
  %7466 = getelementptr i16, ptr addrspace(1) %3, i64 %7465, !dbg !61
  %7467 = sext i32 %7439 to i64, !dbg !61
  %7468 = getelementptr i16, ptr addrspace(1) %3, i64 %7467, !dbg !61
  %7469 = sext i32 %7440 to i64, !dbg !61
  %7470 = getelementptr i16, ptr addrspace(1) %3, i64 %7469, !dbg !61
  %7471 = sext i32 %7441 to i64, !dbg !61
  %7472 = getelementptr i16, ptr addrspace(1) %3, i64 %7471, !dbg !61
  %7473 = sext i32 %7442 to i64, !dbg !61
  %7474 = getelementptr i16, ptr addrspace(1) %3, i64 %7473, !dbg !61
  %7475 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7283) #5, !dbg !62
  %7476 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7284) #5, !dbg !62
  %7477 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7285) #5, !dbg !62
  %7478 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7286) #5, !dbg !62
  %7479 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7287) #5, !dbg !62
  %7480 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7288) #5, !dbg !62
  %7481 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7289) #5, !dbg !62
  %7482 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7290) #5, !dbg !62
  %7483 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7291) #5, !dbg !62
  %7484 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7292) #5, !dbg !62
  %7485 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7293) #5, !dbg !62
  %7486 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7294) #5, !dbg !62
  %7487 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7295) #5, !dbg !62
  %7488 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7296) #5, !dbg !62
  %7489 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7297) #5, !dbg !62
  %7490 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7298) #5, !dbg !62
  %7491 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7299) #5, !dbg !62
  %7492 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7300) #5, !dbg !62
  %7493 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7301) #5, !dbg !62
  %7494 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7302) #5, !dbg !62
  %7495 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7303) #5, !dbg !62
  %7496 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7304) #5, !dbg !62
  %7497 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7305) #5, !dbg !62
  %7498 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7306) #5, !dbg !62
  %7499 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7307) #5, !dbg !62
  %7500 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7308) #5, !dbg !62
  %7501 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7309) #5, !dbg !62
  %7502 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7310) #5, !dbg !62
  %7503 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7311) #5, !dbg !62
  %7504 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7312) #5, !dbg !62
  %7505 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7313) #5, !dbg !62
  %7506 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7314) #5, !dbg !62
  %7507 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7315) #5, !dbg !62
  %7508 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7316) #5, !dbg !62
  %7509 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7317) #5, !dbg !62
  %7510 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7318) #5, !dbg !62
  %7511 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7319) #5, !dbg !62
  %7512 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7320) #5, !dbg !62
  %7513 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7321) #5, !dbg !62
  %7514 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7322) #5, !dbg !62
  %7515 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7323) #5, !dbg !62
  %7516 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7324) #5, !dbg !62
  %7517 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7325) #5, !dbg !62
  %7518 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7326) #5, !dbg !62
  %7519 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7327) #5, !dbg !62
  %7520 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7328) #5, !dbg !62
  %7521 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7329) #5, !dbg !62
  %7522 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7330) #5, !dbg !62
  %7523 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7331) #5, !dbg !62
  %7524 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7332) #5, !dbg !62
  %7525 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7333) #5, !dbg !62
  %7526 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7334) #5, !dbg !62
  %7527 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7335) #5, !dbg !62
  %7528 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7336) #5, !dbg !62
  %7529 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7337) #5, !dbg !62
  %7530 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7338) #5, !dbg !62
  %7531 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7339) #5, !dbg !62
  %7532 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7340) #5, !dbg !62
  %7533 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7341) #5, !dbg !62
  %7534 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7342) #5, !dbg !62
  %7535 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7343) #5, !dbg !62
  %7536 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7344) #5, !dbg !62
  %7537 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7345) #5, !dbg !62
  %7538 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7346) #5, !dbg !62
  %7539 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7347) #5, !dbg !62
  %7540 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7348) #5, !dbg !62
  %7541 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7349) #5, !dbg !62
  %7542 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7350) #5, !dbg !62
  %7543 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7351) #5, !dbg !62
  %7544 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7352) #5, !dbg !62
  %7545 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7353) #5, !dbg !62
  %7546 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7354) #5, !dbg !62
  %7547 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7355) #5, !dbg !62
  %7548 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7356) #5, !dbg !62
  %7549 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7357) #5, !dbg !62
  %7550 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7358) #5, !dbg !62
  %7551 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7359) #5, !dbg !62
  %7552 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7360) #5, !dbg !62
  %7553 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7361) #5, !dbg !62
  %7554 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7362) #5, !dbg !62
  %7555 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7363) #5, !dbg !62
  %7556 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7364) #5, !dbg !62
  %7557 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7365) #5, !dbg !62
  %7558 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7366) #5, !dbg !62
  %7559 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7367) #5, !dbg !62
  %7560 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7368) #5, !dbg !62
  %7561 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7369) #5, !dbg !62
  %7562 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7370) #5, !dbg !62
  %7563 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7371) #5, !dbg !62
  %7564 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7372) #5, !dbg !62
  %7565 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7373) #5, !dbg !62
  %7566 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7374) #5, !dbg !62
  %7567 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7375) #5, !dbg !62
  %7568 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7376) #5, !dbg !62
  %7569 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7377) #5, !dbg !62
  %7570 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7378) #5, !dbg !62
  %7571 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7379) #5, !dbg !62
  %7572 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7380) #5, !dbg !62
  %7573 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7381) #5, !dbg !62
  %7574 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7382) #5, !dbg !62
  %7575 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7383) #5, !dbg !62
  %7576 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7384) #5, !dbg !62
  %7577 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7385) #5, !dbg !62
  %7578 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7386) #5, !dbg !62
  %7579 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7387) #5, !dbg !62
  %7580 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7388) #5, !dbg !62
  %7581 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7389) #5, !dbg !62
  %7582 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7390) #5, !dbg !62
  %7583 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7391) #5, !dbg !62
  %7584 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7392) #5, !dbg !62
  %7585 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7393) #5, !dbg !62
  %7586 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7394) #5, !dbg !62
  %7587 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7395) #5, !dbg !62
  %7588 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7396) #5, !dbg !62
  %7589 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7397) #5, !dbg !62
  %7590 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7398) #5, !dbg !62
  %7591 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7399) #5, !dbg !62
  %7592 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7400) #5, !dbg !62
  %7593 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7401) #5, !dbg !62
  %7594 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7402) #5, !dbg !62
  %7595 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7403) #5, !dbg !62
  %7596 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7404) #5, !dbg !62
  %7597 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7405) #5, !dbg !62
  %7598 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7406) #5, !dbg !62
  %7599 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7407) #5, !dbg !62
  %7600 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7408) #5, !dbg !62
  %7601 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7409) #5, !dbg !62
  %7602 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %7410) #5, !dbg !62
  %7603 = insertelement <2 x i16> poison, i16 %7475, i64 0, !dbg !62
  %7604 = insertelement <2 x i16> %7603, i16 %7476, i64 1, !dbg !62
  %7605 = bitcast <2 x i16> %7604 to i32, !dbg !62
  %7606 = insertelement <2 x i16> poison, i16 %7477, i64 0, !dbg !62
  %7607 = insertelement <2 x i16> %7606, i16 %7478, i64 1, !dbg !62
  %7608 = bitcast <2 x i16> %7607 to i32, !dbg !62
  %7609 = insertelement <2 x i16> poison, i16 %7479, i64 0, !dbg !62
  %7610 = insertelement <2 x i16> %7609, i16 %7480, i64 1, !dbg !62
  %7611 = bitcast <2 x i16> %7610 to i32, !dbg !62
  %7612 = insertelement <2 x i16> poison, i16 %7481, i64 0, !dbg !62
  %7613 = insertelement <2 x i16> %7612, i16 %7482, i64 1, !dbg !62
  %7614 = bitcast <2 x i16> %7613 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7605, i32 %7608, i32 %7611, i32 %7614, ptr addrspace(1) %7444, i1 %1681) #5, !dbg !62
  %7615 = insertelement <2 x i16> poison, i16 %7483, i64 0, !dbg !62
  %7616 = insertelement <2 x i16> %7615, i16 %7484, i64 1, !dbg !62
  %7617 = bitcast <2 x i16> %7616 to i32, !dbg !62
  %7618 = insertelement <2 x i16> poison, i16 %7485, i64 0, !dbg !62
  %7619 = insertelement <2 x i16> %7618, i16 %7486, i64 1, !dbg !62
  %7620 = bitcast <2 x i16> %7619 to i32, !dbg !62
  %7621 = insertelement <2 x i16> poison, i16 %7487, i64 0, !dbg !62
  %7622 = insertelement <2 x i16> %7621, i16 %7488, i64 1, !dbg !62
  %7623 = bitcast <2 x i16> %7622 to i32, !dbg !62
  %7624 = insertelement <2 x i16> poison, i16 %7489, i64 0, !dbg !62
  %7625 = insertelement <2 x i16> %7624, i16 %7490, i64 1, !dbg !62
  %7626 = bitcast <2 x i16> %7625 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7617, i32 %7620, i32 %7623, i32 %7626, ptr addrspace(1) %7446, i1 %1682) #5, !dbg !62
  %7627 = insertelement <2 x i16> poison, i16 %7491, i64 0, !dbg !62
  %7628 = insertelement <2 x i16> %7627, i16 %7492, i64 1, !dbg !62
  %7629 = bitcast <2 x i16> %7628 to i32, !dbg !62
  %7630 = insertelement <2 x i16> poison, i16 %7493, i64 0, !dbg !62
  %7631 = insertelement <2 x i16> %7630, i16 %7494, i64 1, !dbg !62
  %7632 = bitcast <2 x i16> %7631 to i32, !dbg !62
  %7633 = insertelement <2 x i16> poison, i16 %7495, i64 0, !dbg !62
  %7634 = insertelement <2 x i16> %7633, i16 %7496, i64 1, !dbg !62
  %7635 = bitcast <2 x i16> %7634 to i32, !dbg !62
  %7636 = insertelement <2 x i16> poison, i16 %7497, i64 0, !dbg !62
  %7637 = insertelement <2 x i16> %7636, i16 %7498, i64 1, !dbg !62
  %7638 = bitcast <2 x i16> %7637 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7629, i32 %7632, i32 %7635, i32 %7638, ptr addrspace(1) %7448, i1 %1683) #5, !dbg !62
  %7639 = insertelement <2 x i16> poison, i16 %7499, i64 0, !dbg !62
  %7640 = insertelement <2 x i16> %7639, i16 %7500, i64 1, !dbg !62
  %7641 = bitcast <2 x i16> %7640 to i32, !dbg !62
  %7642 = insertelement <2 x i16> poison, i16 %7501, i64 0, !dbg !62
  %7643 = insertelement <2 x i16> %7642, i16 %7502, i64 1, !dbg !62
  %7644 = bitcast <2 x i16> %7643 to i32, !dbg !62
  %7645 = insertelement <2 x i16> poison, i16 %7503, i64 0, !dbg !62
  %7646 = insertelement <2 x i16> %7645, i16 %7504, i64 1, !dbg !62
  %7647 = bitcast <2 x i16> %7646 to i32, !dbg !62
  %7648 = insertelement <2 x i16> poison, i16 %7505, i64 0, !dbg !62
  %7649 = insertelement <2 x i16> %7648, i16 %7506, i64 1, !dbg !62
  %7650 = bitcast <2 x i16> %7649 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7641, i32 %7644, i32 %7647, i32 %7650, ptr addrspace(1) %7450, i1 %1684) #5, !dbg !62
  %7651 = insertelement <2 x i16> poison, i16 %7507, i64 0, !dbg !62
  %7652 = insertelement <2 x i16> %7651, i16 %7508, i64 1, !dbg !62
  %7653 = bitcast <2 x i16> %7652 to i32, !dbg !62
  %7654 = insertelement <2 x i16> poison, i16 %7509, i64 0, !dbg !62
  %7655 = insertelement <2 x i16> %7654, i16 %7510, i64 1, !dbg !62
  %7656 = bitcast <2 x i16> %7655 to i32, !dbg !62
  %7657 = insertelement <2 x i16> poison, i16 %7511, i64 0, !dbg !62
  %7658 = insertelement <2 x i16> %7657, i16 %7512, i64 1, !dbg !62
  %7659 = bitcast <2 x i16> %7658 to i32, !dbg !62
  %7660 = insertelement <2 x i16> poison, i16 %7513, i64 0, !dbg !62
  %7661 = insertelement <2 x i16> %7660, i16 %7514, i64 1, !dbg !62
  %7662 = bitcast <2 x i16> %7661 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7653, i32 %7656, i32 %7659, i32 %7662, ptr addrspace(1) %7452, i1 %1685) #5, !dbg !62
  %7663 = insertelement <2 x i16> poison, i16 %7515, i64 0, !dbg !62
  %7664 = insertelement <2 x i16> %7663, i16 %7516, i64 1, !dbg !62
  %7665 = bitcast <2 x i16> %7664 to i32, !dbg !62
  %7666 = insertelement <2 x i16> poison, i16 %7517, i64 0, !dbg !62
  %7667 = insertelement <2 x i16> %7666, i16 %7518, i64 1, !dbg !62
  %7668 = bitcast <2 x i16> %7667 to i32, !dbg !62
  %7669 = insertelement <2 x i16> poison, i16 %7519, i64 0, !dbg !62
  %7670 = insertelement <2 x i16> %7669, i16 %7520, i64 1, !dbg !62
  %7671 = bitcast <2 x i16> %7670 to i32, !dbg !62
  %7672 = insertelement <2 x i16> poison, i16 %7521, i64 0, !dbg !62
  %7673 = insertelement <2 x i16> %7672, i16 %7522, i64 1, !dbg !62
  %7674 = bitcast <2 x i16> %7673 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7665, i32 %7668, i32 %7671, i32 %7674, ptr addrspace(1) %7454, i1 %1686) #5, !dbg !62
  %7675 = insertelement <2 x i16> poison, i16 %7523, i64 0, !dbg !62
  %7676 = insertelement <2 x i16> %7675, i16 %7524, i64 1, !dbg !62
  %7677 = bitcast <2 x i16> %7676 to i32, !dbg !62
  %7678 = insertelement <2 x i16> poison, i16 %7525, i64 0, !dbg !62
  %7679 = insertelement <2 x i16> %7678, i16 %7526, i64 1, !dbg !62
  %7680 = bitcast <2 x i16> %7679 to i32, !dbg !62
  %7681 = insertelement <2 x i16> poison, i16 %7527, i64 0, !dbg !62
  %7682 = insertelement <2 x i16> %7681, i16 %7528, i64 1, !dbg !62
  %7683 = bitcast <2 x i16> %7682 to i32, !dbg !62
  %7684 = insertelement <2 x i16> poison, i16 %7529, i64 0, !dbg !62
  %7685 = insertelement <2 x i16> %7684, i16 %7530, i64 1, !dbg !62
  %7686 = bitcast <2 x i16> %7685 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7677, i32 %7680, i32 %7683, i32 %7686, ptr addrspace(1) %7456, i1 %1687) #5, !dbg !62
  %7687 = insertelement <2 x i16> poison, i16 %7531, i64 0, !dbg !62
  %7688 = insertelement <2 x i16> %7687, i16 %7532, i64 1, !dbg !62
  %7689 = bitcast <2 x i16> %7688 to i32, !dbg !62
  %7690 = insertelement <2 x i16> poison, i16 %7533, i64 0, !dbg !62
  %7691 = insertelement <2 x i16> %7690, i16 %7534, i64 1, !dbg !62
  %7692 = bitcast <2 x i16> %7691 to i32, !dbg !62
  %7693 = insertelement <2 x i16> poison, i16 %7535, i64 0, !dbg !62
  %7694 = insertelement <2 x i16> %7693, i16 %7536, i64 1, !dbg !62
  %7695 = bitcast <2 x i16> %7694 to i32, !dbg !62
  %7696 = insertelement <2 x i16> poison, i16 %7537, i64 0, !dbg !62
  %7697 = insertelement <2 x i16> %7696, i16 %7538, i64 1, !dbg !62
  %7698 = bitcast <2 x i16> %7697 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7689, i32 %7692, i32 %7695, i32 %7698, ptr addrspace(1) %7458, i1 %1688) #5, !dbg !62
  %7699 = insertelement <2 x i16> poison, i16 %7539, i64 0, !dbg !62
  %7700 = insertelement <2 x i16> %7699, i16 %7540, i64 1, !dbg !62
  %7701 = bitcast <2 x i16> %7700 to i32, !dbg !62
  %7702 = insertelement <2 x i16> poison, i16 %7541, i64 0, !dbg !62
  %7703 = insertelement <2 x i16> %7702, i16 %7542, i64 1, !dbg !62
  %7704 = bitcast <2 x i16> %7703 to i32, !dbg !62
  %7705 = insertelement <2 x i16> poison, i16 %7543, i64 0, !dbg !62
  %7706 = insertelement <2 x i16> %7705, i16 %7544, i64 1, !dbg !62
  %7707 = bitcast <2 x i16> %7706 to i32, !dbg !62
  %7708 = insertelement <2 x i16> poison, i16 %7545, i64 0, !dbg !62
  %7709 = insertelement <2 x i16> %7708, i16 %7546, i64 1, !dbg !62
  %7710 = bitcast <2 x i16> %7709 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7701, i32 %7704, i32 %7707, i32 %7710, ptr addrspace(1) %7460, i1 %1689) #5, !dbg !62
  %7711 = insertelement <2 x i16> poison, i16 %7547, i64 0, !dbg !62
  %7712 = insertelement <2 x i16> %7711, i16 %7548, i64 1, !dbg !62
  %7713 = bitcast <2 x i16> %7712 to i32, !dbg !62
  %7714 = insertelement <2 x i16> poison, i16 %7549, i64 0, !dbg !62
  %7715 = insertelement <2 x i16> %7714, i16 %7550, i64 1, !dbg !62
  %7716 = bitcast <2 x i16> %7715 to i32, !dbg !62
  %7717 = insertelement <2 x i16> poison, i16 %7551, i64 0, !dbg !62
  %7718 = insertelement <2 x i16> %7717, i16 %7552, i64 1, !dbg !62
  %7719 = bitcast <2 x i16> %7718 to i32, !dbg !62
  %7720 = insertelement <2 x i16> poison, i16 %7553, i64 0, !dbg !62
  %7721 = insertelement <2 x i16> %7720, i16 %7554, i64 1, !dbg !62
  %7722 = bitcast <2 x i16> %7721 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7713, i32 %7716, i32 %7719, i32 %7722, ptr addrspace(1) %7462, i1 %1690) #5, !dbg !62
  %7723 = insertelement <2 x i16> poison, i16 %7555, i64 0, !dbg !62
  %7724 = insertelement <2 x i16> %7723, i16 %7556, i64 1, !dbg !62
  %7725 = bitcast <2 x i16> %7724 to i32, !dbg !62
  %7726 = insertelement <2 x i16> poison, i16 %7557, i64 0, !dbg !62
  %7727 = insertelement <2 x i16> %7726, i16 %7558, i64 1, !dbg !62
  %7728 = bitcast <2 x i16> %7727 to i32, !dbg !62
  %7729 = insertelement <2 x i16> poison, i16 %7559, i64 0, !dbg !62
  %7730 = insertelement <2 x i16> %7729, i16 %7560, i64 1, !dbg !62
  %7731 = bitcast <2 x i16> %7730 to i32, !dbg !62
  %7732 = insertelement <2 x i16> poison, i16 %7561, i64 0, !dbg !62
  %7733 = insertelement <2 x i16> %7732, i16 %7562, i64 1, !dbg !62
  %7734 = bitcast <2 x i16> %7733 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7725, i32 %7728, i32 %7731, i32 %7734, ptr addrspace(1) %7464, i1 %1691) #5, !dbg !62
  %7735 = insertelement <2 x i16> poison, i16 %7563, i64 0, !dbg !62
  %7736 = insertelement <2 x i16> %7735, i16 %7564, i64 1, !dbg !62
  %7737 = bitcast <2 x i16> %7736 to i32, !dbg !62
  %7738 = insertelement <2 x i16> poison, i16 %7565, i64 0, !dbg !62
  %7739 = insertelement <2 x i16> %7738, i16 %7566, i64 1, !dbg !62
  %7740 = bitcast <2 x i16> %7739 to i32, !dbg !62
  %7741 = insertelement <2 x i16> poison, i16 %7567, i64 0, !dbg !62
  %7742 = insertelement <2 x i16> %7741, i16 %7568, i64 1, !dbg !62
  %7743 = bitcast <2 x i16> %7742 to i32, !dbg !62
  %7744 = insertelement <2 x i16> poison, i16 %7569, i64 0, !dbg !62
  %7745 = insertelement <2 x i16> %7744, i16 %7570, i64 1, !dbg !62
  %7746 = bitcast <2 x i16> %7745 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7737, i32 %7740, i32 %7743, i32 %7746, ptr addrspace(1) %7466, i1 %1692) #5, !dbg !62
  %7747 = insertelement <2 x i16> poison, i16 %7571, i64 0, !dbg !62
  %7748 = insertelement <2 x i16> %7747, i16 %7572, i64 1, !dbg !62
  %7749 = bitcast <2 x i16> %7748 to i32, !dbg !62
  %7750 = insertelement <2 x i16> poison, i16 %7573, i64 0, !dbg !62
  %7751 = insertelement <2 x i16> %7750, i16 %7574, i64 1, !dbg !62
  %7752 = bitcast <2 x i16> %7751 to i32, !dbg !62
  %7753 = insertelement <2 x i16> poison, i16 %7575, i64 0, !dbg !62
  %7754 = insertelement <2 x i16> %7753, i16 %7576, i64 1, !dbg !62
  %7755 = bitcast <2 x i16> %7754 to i32, !dbg !62
  %7756 = insertelement <2 x i16> poison, i16 %7577, i64 0, !dbg !62
  %7757 = insertelement <2 x i16> %7756, i16 %7578, i64 1, !dbg !62
  %7758 = bitcast <2 x i16> %7757 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7749, i32 %7752, i32 %7755, i32 %7758, ptr addrspace(1) %7468, i1 %1693) #5, !dbg !62
  %7759 = insertelement <2 x i16> poison, i16 %7579, i64 0, !dbg !62
  %7760 = insertelement <2 x i16> %7759, i16 %7580, i64 1, !dbg !62
  %7761 = bitcast <2 x i16> %7760 to i32, !dbg !62
  %7762 = insertelement <2 x i16> poison, i16 %7581, i64 0, !dbg !62
  %7763 = insertelement <2 x i16> %7762, i16 %7582, i64 1, !dbg !62
  %7764 = bitcast <2 x i16> %7763 to i32, !dbg !62
  %7765 = insertelement <2 x i16> poison, i16 %7583, i64 0, !dbg !62
  %7766 = insertelement <2 x i16> %7765, i16 %7584, i64 1, !dbg !62
  %7767 = bitcast <2 x i16> %7766 to i32, !dbg !62
  %7768 = insertelement <2 x i16> poison, i16 %7585, i64 0, !dbg !62
  %7769 = insertelement <2 x i16> %7768, i16 %7586, i64 1, !dbg !62
  %7770 = bitcast <2 x i16> %7769 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7761, i32 %7764, i32 %7767, i32 %7770, ptr addrspace(1) %7470, i1 %1694) #5, !dbg !62
  %7771 = insertelement <2 x i16> poison, i16 %7587, i64 0, !dbg !62
  %7772 = insertelement <2 x i16> %7771, i16 %7588, i64 1, !dbg !62
  %7773 = bitcast <2 x i16> %7772 to i32, !dbg !62
  %7774 = insertelement <2 x i16> poison, i16 %7589, i64 0, !dbg !62
  %7775 = insertelement <2 x i16> %7774, i16 %7590, i64 1, !dbg !62
  %7776 = bitcast <2 x i16> %7775 to i32, !dbg !62
  %7777 = insertelement <2 x i16> poison, i16 %7591, i64 0, !dbg !62
  %7778 = insertelement <2 x i16> %7777, i16 %7592, i64 1, !dbg !62
  %7779 = bitcast <2 x i16> %7778 to i32, !dbg !62
  %7780 = insertelement <2 x i16> poison, i16 %7593, i64 0, !dbg !62
  %7781 = insertelement <2 x i16> %7780, i16 %7594, i64 1, !dbg !62
  %7782 = bitcast <2 x i16> %7781 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7773, i32 %7776, i32 %7779, i32 %7782, ptr addrspace(1) %7472, i1 %1695) #5, !dbg !62
  %7783 = insertelement <2 x i16> poison, i16 %7595, i64 0, !dbg !62
  %7784 = insertelement <2 x i16> %7783, i16 %7596, i64 1, !dbg !62
  %7785 = bitcast <2 x i16> %7784 to i32, !dbg !62
  %7786 = insertelement <2 x i16> poison, i16 %7597, i64 0, !dbg !62
  %7787 = insertelement <2 x i16> %7786, i16 %7598, i64 1, !dbg !62
  %7788 = bitcast <2 x i16> %7787 to i32, !dbg !62
  %7789 = insertelement <2 x i16> poison, i16 %7599, i64 0, !dbg !62
  %7790 = insertelement <2 x i16> %7789, i16 %7600, i64 1, !dbg !62
  %7791 = bitcast <2 x i16> %7790 to i32, !dbg !62
  %7792 = insertelement <2 x i16> poison, i16 %7601, i64 0, !dbg !62
  %7793 = insertelement <2 x i16> %7792, i16 %7602, i64 1, !dbg !62
  %7794 = bitcast <2 x i16> %7793 to i32, !dbg !62
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %7785, i32 %7788, i32 %7791, i32 %7794, ptr addrspace(1) %7474, i1 %1696) #5, !dbg !62
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "co6bvp73x56e75754qhiydaztvt6yn3kfb4iguxfjoen7umb4jvq.py", directory: "/opt/inductor_cache/o6")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 24, type: !8, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 39, column: 11, scope: !7)
!11 = !DILocation(line: 39, column: 16, scope: !7)
!12 = !DILocation(line: 0, scope: !7)
!13 = !DILocation(line: 48, column: 24, scope: !7)
!14 = !DILocation(line: 49, column: 28, scope: !7)
!15 = !DILocation(line: 49, column: 34, scope: !7)
!16 = !DILocation(line: 54, column: 22, scope: !7)
!17 = !DILocation(line: 55, column: 41, scope: !7)
!18 = !DILocation(line: 55, column: 30, scope: !7)
!19 = !DILocation(line: 55, column: 50, scope: !7)
!20 = !DILocation(line: 56, column: 40, scope: !7)
!21 = !DILocation(line: 56, column: 34, scope: !7)
!22 = !DILocation(line: 57, column: 30, scope: !7)
!23 = !DILocation(line: 59, column: 17, scope: !7)
!24 = !DILocation(line: 59, column: 40, scope: !7)
!25 = !DILocation(line: 59, column: 27, scope: !7)
!26 = !DILocation(line: 60, column: 17, scope: !7)
!27 = !DILocation(line: 60, column: 27, scope: !7)
!28 = !DILocation(line: 62, column: 52, scope: !7)
!29 = !DILocation(line: 66, column: 52, scope: !7)
!30 = !DILocation(line: 70, column: 28, scope: !7)
!31 = !DILocation(line: 70, column: 40, scope: !7)
!32 = !DILocation(line: 70, column: 13, scope: !7)
!33 = !DILocation(line: 71, column: 54, scope: !7)
!34 = !DILocation(line: 71, column: 39, scope: !7)
!35 = !DILocation(line: 71, column: 13, scope: !7)
!36 = !DILocation(line: 76, column: 24, scope: !7)
!37 = !DILocation(line: 77, column: 24, scope: !7)
!38 = !DILocation(line: 84, column: 13, scope: !7)
!39 = !DILocation(line: 85, column: 13, scope: !7)
!40 = !DILocation(line: 74, column: 25, scope: !7)
!41 = !DILocation(line: 83, column: 25, scope: !7)
!42 = !DILocation(line: 92, column: 20, scope: !7)
!43 = !DILocation(line: 92, column: 34, scope: !7)
!44 = !DILocation(line: 92, column: 26, scope: !7)
!45 = !DILocation(line: 96, column: 30, scope: !7)
!46 = !DILocation(line: 96, column: 66, scope: !7)
!47 = !DILocation(line: 96, column: 105, scope: !7)
!48 = !DILocation(line: 97, column: 17, scope: !7)
!49 = !DILocation(line: 100, column: 18, scope: !7)
!50 = !DILocation(line: 101, column: 18, scope: !7)
!51 = !DILocation(line: 102, column: 18, scope: !7)
!52 = !DILocation(line: 104, column: 18, scope: !7)
!53 = !DILocation(line: 105, column: 18, scope: !7)
!54 = !DILocation(line: 107, column: 19, scope: !7)
!55 = !DILocation(line: 108, column: 27, scope: !7)
!56 = !{i32 21046}
!57 = !DILocation(line: 110, column: 20, scope: !7)
!58 = !DILocation(line: 111, column: 19, scope: !7)
!59 = !DILocation(line: 113, column: 56, scope: !7)
!60 = !DILocation(line: 113, column: 50, scope: !7)
!61 = !DILocation(line: 113, column: 25, scope: !7)
!62 = !DILocation(line: 113, column: 84, scope: !7)
