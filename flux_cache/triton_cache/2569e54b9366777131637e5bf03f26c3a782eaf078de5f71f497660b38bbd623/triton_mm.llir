; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = mul i32 %4, 3072, !dbg !10
  %7 = icmp eq i32 %6, 0, !dbg !11
  br i1 %7, label %common.ret, label %8, !dbg !11

common.ret:                                       ; preds = %5, %251
  ret void, !dbg !12

8:                                                ; preds = %5
  %9 = mul i32 %3, 3072, !dbg !13
  %10 = sext i32 %9 to i64, !dbg !14
  %11 = getelementptr i16, ptr addrspace(1) %0, i64 %10, !dbg !14
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %13 = add i32 %4, 63, !dbg !16
  %14 = sdiv i32 %13, 64, !dbg !17
  %.frozen = freeze i32 %12
  %15 = sdiv i32 %.frozen, 384, !dbg !18
  %16 = shl nsw i32 %15, 3, !dbg !19
  %17 = sub nsw i32 %14, %16, !dbg !20
  %18 = tail call i32 @llvm.smin.i32(i32 %17, i32 8), !dbg !21
  %19 = srem i32 %12, %18, !dbg !22
  %20 = add nsw i32 %16, %19, !dbg !23
  %21 = mul i32 %15, 384
  %.decomposed = sub i32 %.frozen, %21
  %22 = sdiv i32 %.decomposed, %18, !dbg !24
  %23 = shl i32 %20, 6, !dbg !25
  %24 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !26
  %25 = lshr i32 %24, 5, !dbg !26
  %26 = lshr i32 %24, 2, !dbg !26
  %27 = and i32 %26, 31, !dbg !26
  %28 = or disjoint i32 %27, 32, !dbg !26
  %29 = lshr i32 %24, 3, !dbg !26
  %30 = and i32 %29, 7, !dbg !26
  %31 = lshr i32 %24, 3, !dbg !26
  %32 = and i32 %31, 8, !dbg !26
  %33 = or disjoint i32 %30, %32, !dbg !26
  %34 = shl i32 %24, 3, !dbg !26
  %35 = and i32 %34, 24, !dbg !26
  %36 = or disjoint i32 %23, %27, !dbg !27
  %37 = or disjoint i32 %23, %28, !dbg !27
  %38 = or disjoint i32 %23, %33, !dbg !26
  %39 = shl nsw i32 %22, 6, !dbg !28
  %40 = or disjoint i32 %39, %27, !dbg !29
  %41 = or disjoint i32 %39, %28, !dbg !29
  %42 = srem i32 %36, %4, !dbg !30
  %43 = srem i32 %37, %4, !dbg !30
  %44 = srem i32 %40, 3072, !dbg !31
  %45 = srem i32 %41, 3072, !dbg !31
  %46 = mul i32 %42, 3072, !dbg !32
  %47 = mul i32 %43, 3072, !dbg !32
  %48 = or disjoint i32 %46, %35, !dbg !33
  %49 = or disjoint i32 %47, %35, !dbg !33
  %50 = sext i32 %48 to i64, !dbg !34
  %51 = getelementptr i16, ptr addrspace(1) %11, i64 %50, !dbg !34
  %52 = sext i32 %49 to i64, !dbg !34
  %53 = getelementptr i16, ptr addrspace(1) %11, i64 %52, !dbg !34
  %54 = mul nsw i32 %44, 3072, !dbg !35
  %55 = mul nsw i32 %45, 3072, !dbg !35
  %56 = or disjoint i32 %54, %35, !dbg !36
  %57 = or disjoint i32 %55, %35, !dbg !36
  %58 = sext i32 %56 to i64, !dbg !37
  %59 = getelementptr i16, ptr addrspace(1) %1, i64 %58, !dbg !37
  %60 = sext i32 %57 to i64, !dbg !37
  %61 = getelementptr i16, ptr addrspace(1) %1, i64 %60, !dbg !37
  %62 = shl nuw nsw i32 %27, 5, !dbg !38
  %63 = xor i32 %34, %24, !dbg !38
  %64 = and i32 %63, 24, !dbg !38
  %65 = or disjoint i32 %62, %64, !dbg !38
  %66 = zext nneg i32 %65 to i64, !dbg !38
  %67 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %66, !dbg !38
  %68 = shl nuw nsw i32 %28, 5, !dbg !38
  %69 = or disjoint i32 %68, %64, !dbg !38
  %70 = zext nneg i32 %69 to i64, !dbg !38
  %71 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %70, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %67, ptr addrspace(1) %51, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %71, ptr addrspace(1) %53, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %72 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %66, !dbg !39
  %73 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %70, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %72, ptr addrspace(1) %59, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %73, ptr addrspace(1) %61, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %74 = and i32 %25, 134217724
  br label %75, !dbg !40

75:                                               ; preds = %8, %75
  %76 = phi i32 [ -1, %8 ], [ %114, %75 ]
  %77 = phi i32 [ 0, %8 ], [ %240, %75 ]
  %.pn4899 = phi ptr addrspace(1) [ %61, %8 ], [ %237, %75 ]
  %.pn6498 = phi ptr addrspace(1) [ %59, %8 ], [ %236, %75 ]
  %.pn1697 = phi ptr addrspace(1) [ %53, %8 ], [ %235, %75 ]
  %.pn3296 = phi ptr addrspace(1) [ %51, %8 ], [ %234, %75 ]
  %78 = phi float [ 0.000000e+00, %8 ], [ %202, %75 ]
  %79 = phi float [ 0.000000e+00, %8 ], [ %203, %75 ]
  %80 = phi float [ 0.000000e+00, %8 ], [ %204, %75 ]
  %81 = phi float [ 0.000000e+00, %8 ], [ %205, %75 ]
  %82 = phi float [ 0.000000e+00, %8 ], [ %206, %75 ]
  %83 = phi float [ 0.000000e+00, %8 ], [ %207, %75 ]
  %84 = phi float [ 0.000000e+00, %8 ], [ %208, %75 ]
  %85 = phi float [ 0.000000e+00, %8 ], [ %209, %75 ]
  %86 = phi float [ 0.000000e+00, %8 ], [ %210, %75 ]
  %87 = phi float [ 0.000000e+00, %8 ], [ %211, %75 ]
  %88 = phi float [ 0.000000e+00, %8 ], [ %212, %75 ]
  %89 = phi float [ 0.000000e+00, %8 ], [ %213, %75 ]
  %90 = phi float [ 0.000000e+00, %8 ], [ %214, %75 ]
  %91 = phi float [ 0.000000e+00, %8 ], [ %215, %75 ]
  %92 = phi float [ 0.000000e+00, %8 ], [ %216, %75 ]
  %93 = phi float [ 0.000000e+00, %8 ], [ %217, %75 ]
  %94 = phi float [ 0.000000e+00, %8 ], [ %218, %75 ]
  %95 = phi float [ 0.000000e+00, %8 ], [ %219, %75 ]
  %96 = phi float [ 0.000000e+00, %8 ], [ %220, %75 ]
  %97 = phi float [ 0.000000e+00, %8 ], [ %221, %75 ]
  %98 = phi float [ 0.000000e+00, %8 ], [ %222, %75 ]
  %99 = phi float [ 0.000000e+00, %8 ], [ %223, %75 ]
  %100 = phi float [ 0.000000e+00, %8 ], [ %224, %75 ]
  %101 = phi float [ 0.000000e+00, %8 ], [ %225, %75 ]
  %102 = phi float [ 0.000000e+00, %8 ], [ %226, %75 ]
  %103 = phi float [ 0.000000e+00, %8 ], [ %227, %75 ]
  %104 = phi float [ 0.000000e+00, %8 ], [ %228, %75 ]
  %105 = phi float [ 0.000000e+00, %8 ], [ %229, %75 ]
  %106 = phi float [ 0.000000e+00, %8 ], [ %230, %75 ]
  %107 = phi float [ 0.000000e+00, %8 ], [ %231, %75 ]
  %108 = phi float [ 0.000000e+00, %8 ], [ %232, %75 ]
  %109 = phi float [ 0.000000e+00, %8 ], [ %233, %75 ]
  %110 = phi i32 [ 0, %8 ], [ %250, %75 ]
  %111 = icmp ult i32 %110, 3040, !dbg !40
  %112 = add i32 %76, 1, !dbg !40
  %113 = icmp slt i32 %112, 2, !dbg !40
  %114 = select i1 %113, i32 %112, i32 0, !dbg !40
  %115 = shl i32 %114, 11, !dbg !38
  %116 = sext i32 %115 to i64, !dbg !38
  %117 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %116, !dbg !38
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %118 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %116, !dbg !39
  %119 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %74, i32 0, i32 31), !dbg !41
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !41
  %120 = shl i32 %119, 6, !dbg !41
  %121 = and i32 %120, 192, !dbg !41
  %122 = zext nneg i32 %121 to i64, !dbg !41
  %123 = ptrtoint ptr addrspace(3) %117 to i64, !dbg !41
  %124 = lshr exact i64 %123, 4, !dbg !41
  %125 = and i64 %124, 16383, !dbg !41
  %126 = or disjoint i64 %125, -9223371899399045120, !dbg !41
  %127 = add nuw nsw i64 %126, %122, !dbg !41
  %128 = ptrtoint ptr addrspace(3) %118 to i64, !dbg !41
  %129 = lshr exact i64 %128, 4, !dbg !41
  %130 = and i64 %129, 16383, !dbg !41
  %131 = or disjoint i64 %130, -9223371899399045120, !dbg !41
  %132 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %78, float %79, float %80, float %81, float %82, float %83, float %84, float %85, float %86, float %87, float %88, float %89, float %90, float %91, float %92, float %93, float %94, float %95, float %96, float %97, float %98, float %99, float %100, float %101, float %102, float %103, float %104, float %105, float %106, float %107, float %108, float %109, i64 %127, i64 %131) #3, !dbg !41
  %133 = add nuw nsw i64 %125, -9223371899399045118, !dbg !41
  %134 = add nuw nsw i64 %133, %122, !dbg !41
  %135 = add nuw nsw i64 %130, -9223371899399045118, !dbg !41
  %136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 0, !dbg !41
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 1, !dbg !41
  %138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 2, !dbg !41
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 3, !dbg !41
  %140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 4, !dbg !41
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 5, !dbg !41
  %142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 6, !dbg !41
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 7, !dbg !41
  %144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 8, !dbg !41
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 9, !dbg !41
  %146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 10, !dbg !41
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 11, !dbg !41
  %148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 12, !dbg !41
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 13, !dbg !41
  %150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 14, !dbg !41
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 15, !dbg !41
  %152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 16, !dbg !41
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 17, !dbg !41
  %154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 18, !dbg !41
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 19, !dbg !41
  %156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 20, !dbg !41
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 21, !dbg !41
  %158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 22, !dbg !41
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 23, !dbg !41
  %160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 24, !dbg !41
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 25, !dbg !41
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 26, !dbg !41
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 27, !dbg !41
  %164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 28, !dbg !41
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 29, !dbg !41
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 30, !dbg !41
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %132, 31, !dbg !41
  %168 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, float %163, float %164, float %165, float %166, float %167, i64 %134, i64 %135) #3, !dbg !41
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 0, !dbg !41
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 1, !dbg !41
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 2, !dbg !41
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 3, !dbg !41
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 4, !dbg !41
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 5, !dbg !41
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 6, !dbg !41
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 7, !dbg !41
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 8, !dbg !41
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 9, !dbg !41
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 10, !dbg !41
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 11, !dbg !41
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 12, !dbg !41
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 13, !dbg !41
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 14, !dbg !41
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 15, !dbg !41
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 16, !dbg !41
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 17, !dbg !41
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 18, !dbg !41
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 19, !dbg !41
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 20, !dbg !41
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 21, !dbg !41
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 22, !dbg !41
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 23, !dbg !41
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 24, !dbg !41
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 25, !dbg !41
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 26, !dbg !41
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 27, !dbg !41
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 28, !dbg !41
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 29, !dbg !41
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 30, !dbg !41
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %168, 31, !dbg !41
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !41
  %201 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, float %197, float %198, float %199, float %200, ptr addrspace(3) %117, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %118, i32 1, i32 32, i32 0, i32 0) #3, !dbg !41
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 0, !dbg !41
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 1, !dbg !41
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 2, !dbg !41
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 3, !dbg !41
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 4, !dbg !41
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 5, !dbg !41
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 6, !dbg !41
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 7, !dbg !41
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 8, !dbg !41
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 9, !dbg !41
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 10, !dbg !41
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 11, !dbg !41
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 12, !dbg !41
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 13, !dbg !41
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 14, !dbg !41
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 15, !dbg !41
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 16, !dbg !41
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 17, !dbg !41
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 18, !dbg !41
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 19, !dbg !41
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 20, !dbg !41
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 21, !dbg !41
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 22, !dbg !41
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 23, !dbg !41
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 24, !dbg !41
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 25, !dbg !41
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 26, !dbg !41
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 27, !dbg !41
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 28, !dbg !41
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 29, !dbg !41
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 30, !dbg !41
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %201, 31, !dbg !41
  %234 = getelementptr i8, ptr addrspace(1) %.pn3296, i64 64, !dbg !42
  %235 = getelementptr i8, ptr addrspace(1) %.pn1697, i64 64, !dbg !42
  %236 = getelementptr i8, ptr addrspace(1) %.pn6498, i64 64, !dbg !43
  %237 = getelementptr i8, ptr addrspace(1) %.pn4899, i64 64, !dbg !43
  %238 = add i32 %77, 1, !dbg !40
  %239 = icmp slt i32 %238, 2, !dbg !40
  %240 = select i1 %239, i32 %238, i32 0, !dbg !40
  %241 = shl i32 %240, 11, !dbg !38
  %242 = sext i32 %241 to i64, !dbg !38
  %243 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %242, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %244 = getelementptr i16, ptr addrspace(3) %243, i64 %66, !dbg !38
  %245 = getelementptr i16, ptr addrspace(3) %243, i64 %70, !dbg !38
  %246 = select i1 %111, i32 16, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %244, ptr addrspace(1) %234, i32 %246, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %245, ptr addrspace(1) %235, i32 %246, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %247 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %242, !dbg !39
  %248 = getelementptr i16, ptr addrspace(3) %247, i64 %66, !dbg !39
  %249 = getelementptr i16, ptr addrspace(3) %247, i64 %70, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %248, ptr addrspace(1) %236, i32 %246, i1 true) #3, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %249, ptr addrspace(1) %237, i32 %246, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %250 = add nuw nsw i32 %110, 32, !dbg !40
  br i1 %111, label %75, label %251, !dbg !40

251:                                              ; preds = %75
  %252 = and i32 %34, 56, !dbg !26
  %253 = or disjoint i32 %38, 16, !dbg !27
  %254 = or disjoint i32 %38, 32, !dbg !27
  %255 = or disjoint i32 %38, 48, !dbg !27
  %256 = or disjoint i32 %252, %39, !dbg !29
  %257 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233) #3, !dbg !40
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %258 = icmp slt i32 %38, %4, !dbg !44
  %259 = icmp slt i32 %253, %4, !dbg !44
  %260 = icmp slt i32 %254, %4, !dbg !44
  %261 = icmp slt i32 %255, %4, !dbg !44
  %262 = icmp slt i32 %256, 3072, !dbg !45
  %263 = and i1 %262, %258, !dbg !46
  %264 = and i1 %259, %262, !dbg !46
  %265 = and i1 %260, %262, !dbg !46
  %266 = and i1 %261, %262, !dbg !46
  %267 = mul i32 %38, 3072, !dbg !47
  %268 = mul i32 %253, 3072, !dbg !47
  %269 = mul i32 %254, 3072, !dbg !47
  %270 = mul i32 %255, 3072, !dbg !47
  %271 = add i32 %267, %256, !dbg !48
  %272 = add i32 %256, %268, !dbg !48
  %273 = add i32 %256, %269, !dbg !48
  %274 = add i32 %256, %270, !dbg !48
  %275 = sext i32 %271 to i64, !dbg !49
  %276 = getelementptr i16, ptr addrspace(1) %2, i64 %275, !dbg !49
  %277 = sext i32 %272 to i64, !dbg !49
  %278 = getelementptr i16, ptr addrspace(1) %2, i64 %277, !dbg !49
  %279 = sext i32 %273 to i64, !dbg !49
  %280 = getelementptr i16, ptr addrspace(1) %2, i64 %279, !dbg !49
  %281 = sext i32 %274 to i64, !dbg !49
  %282 = getelementptr i16, ptr addrspace(1) %2, i64 %281, !dbg !49
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 0, !dbg !50
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 1, !dbg !50
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 2, !dbg !50
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 3, !dbg !50
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 4, !dbg !50
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 5, !dbg !50
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 6, !dbg !50
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 7, !dbg !50
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 8, !dbg !50
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 9, !dbg !50
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 10, !dbg !50
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 11, !dbg !50
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 12, !dbg !50
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 13, !dbg !50
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 14, !dbg !50
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 15, !dbg !50
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 16, !dbg !50
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 17, !dbg !50
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 18, !dbg !50
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 19, !dbg !50
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 20, !dbg !50
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 21, !dbg !50
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 22, !dbg !50
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 23, !dbg !50
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 24, !dbg !50
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 25, !dbg !50
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 26, !dbg !50
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 27, !dbg !50
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 28, !dbg !50
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 29, !dbg !50
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 30, !dbg !50
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %257, 31, !dbg !50
  %315 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %283) #3, !dbg !50
  %316 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %284) #3, !dbg !50
  %317 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %285) #3, !dbg !50
  %318 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %286) #3, !dbg !50
  %319 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %287) #3, !dbg !50
  %320 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %288) #3, !dbg !50
  %321 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %289) #3, !dbg !50
  %322 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %290) #3, !dbg !50
  %323 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %291) #3, !dbg !50
  %324 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %292) #3, !dbg !50
  %325 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %293) #3, !dbg !50
  %326 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %294) #3, !dbg !50
  %327 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %295) #3, !dbg !50
  %328 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %296) #3, !dbg !50
  %329 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %297) #3, !dbg !50
  %330 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %298) #3, !dbg !50
  %331 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %299) #3, !dbg !50
  %332 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %300) #3, !dbg !50
  %333 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %301) #3, !dbg !50
  %334 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %302) #3, !dbg !50
  %335 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %303) #3, !dbg !50
  %336 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %304) #3, !dbg !50
  %337 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %305) #3, !dbg !50
  %338 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %306) #3, !dbg !50
  %339 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %307) #3, !dbg !50
  %340 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %308) #3, !dbg !50
  %341 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %309) #3, !dbg !50
  %342 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %310) #3, !dbg !50
  %343 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %311) #3, !dbg !50
  %344 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %312) #3, !dbg !50
  %345 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %313) #3, !dbg !50
  %346 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %314) #3, !dbg !50
  %347 = and i32 %25, 3, !dbg !50
  %348 = and i32 %29, 3, !dbg !50
  %349 = and i32 %24, 15, !dbg !50
  %350 = shl nuw nsw i32 %29, 2, !dbg !50
  %351 = and i32 %350, 8, !dbg !50
  %352 = mul nuw nsw i32 %349, 72, !dbg !50
  %353 = add nuw nsw i32 %351, %352, !dbg !50
  %354 = mul nuw nsw i32 %347, 1152, !dbg !50
  %355 = add nuw nsw i32 %353, %354, !dbg !50
  %356 = insertelement <2 x i16> poison, i16 %315, i64 0, !dbg !50
  %357 = insertelement <2 x i16> %356, i16 %316, i64 1, !dbg !50
  %358 = bitcast <2 x i16> %357 to i32, !dbg !50
  %359 = insertelement <2 x i16> poison, i16 %317, i64 0, !dbg !50
  %360 = insertelement <2 x i16> %359, i16 %318, i64 1, !dbg !50
  %361 = bitcast <2 x i16> %360 to i32, !dbg !50
  %362 = insertelement <2 x i16> poison, i16 %319, i64 0, !dbg !50
  %363 = insertelement <2 x i16> %362, i16 %320, i64 1, !dbg !50
  %364 = bitcast <2 x i16> %363 to i32, !dbg !50
  %365 = insertelement <2 x i16> poison, i16 %321, i64 0, !dbg !50
  %366 = insertelement <2 x i16> %365, i16 %322, i64 1, !dbg !50
  %367 = bitcast <2 x i16> %366 to i32, !dbg !50
  %368 = zext nneg i32 %355 to i64, !dbg !50
  %369 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %368, !dbg !50
  %370 = ptrtoint ptr addrspace(3) %369 to i64, !dbg !50
  %371 = trunc i64 %370 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %371, i32 %358, i32 %361, i32 %364, i32 %367) #3, !dbg !50
  %372 = insertelement <2 x i16> poison, i16 %323, i64 0, !dbg !50
  %373 = insertelement <2 x i16> %372, i16 %324, i64 1, !dbg !50
  %374 = bitcast <2 x i16> %373 to i32, !dbg !50
  %375 = insertelement <2 x i16> poison, i16 %325, i64 0, !dbg !50
  %376 = insertelement <2 x i16> %375, i16 %326, i64 1, !dbg !50
  %377 = bitcast <2 x i16> %376 to i32, !dbg !50
  %378 = insertelement <2 x i16> poison, i16 %327, i64 0, !dbg !50
  %379 = insertelement <2 x i16> %378, i16 %328, i64 1, !dbg !50
  %380 = bitcast <2 x i16> %379 to i32, !dbg !50
  %381 = insertelement <2 x i16> poison, i16 %329, i64 0, !dbg !50
  %382 = insertelement <2 x i16> %381, i16 %330, i64 1, !dbg !50
  %383 = bitcast <2 x i16> %382 to i32, !dbg !50
  %384 = getelementptr i8, ptr addrspace(3) %369, i64 32, !dbg !50
  %385 = ptrtoint ptr addrspace(3) %384 to i64, !dbg !50
  %386 = trunc i64 %385 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %386, i32 %374, i32 %377, i32 %380, i32 %383) #3, !dbg !50
  %387 = insertelement <2 x i16> poison, i16 %331, i64 0, !dbg !50
  %388 = insertelement <2 x i16> %387, i16 %332, i64 1, !dbg !50
  %389 = bitcast <2 x i16> %388 to i32, !dbg !50
  %390 = insertelement <2 x i16> poison, i16 %333, i64 0, !dbg !50
  %391 = insertelement <2 x i16> %390, i16 %334, i64 1, !dbg !50
  %392 = bitcast <2 x i16> %391 to i32, !dbg !50
  %393 = insertelement <2 x i16> poison, i16 %335, i64 0, !dbg !50
  %394 = insertelement <2 x i16> %393, i16 %336, i64 1, !dbg !50
  %395 = bitcast <2 x i16> %394 to i32, !dbg !50
  %396 = insertelement <2 x i16> poison, i16 %337, i64 0, !dbg !50
  %397 = insertelement <2 x i16> %396, i16 %338, i64 1, !dbg !50
  %398 = bitcast <2 x i16> %397 to i32, !dbg !50
  %399 = getelementptr i8, ptr addrspace(3) %369, i64 64, !dbg !50
  %400 = ptrtoint ptr addrspace(3) %399 to i64, !dbg !50
  %401 = trunc i64 %400 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %401, i32 %389, i32 %392, i32 %395, i32 %398) #3, !dbg !50
  %402 = insertelement <2 x i16> poison, i16 %339, i64 0, !dbg !50
  %403 = insertelement <2 x i16> %402, i16 %340, i64 1, !dbg !50
  %404 = bitcast <2 x i16> %403 to i32, !dbg !50
  %405 = insertelement <2 x i16> poison, i16 %341, i64 0, !dbg !50
  %406 = insertelement <2 x i16> %405, i16 %342, i64 1, !dbg !50
  %407 = bitcast <2 x i16> %406 to i32, !dbg !50
  %408 = insertelement <2 x i16> poison, i16 %343, i64 0, !dbg !50
  %409 = insertelement <2 x i16> %408, i16 %344, i64 1, !dbg !50
  %410 = bitcast <2 x i16> %409 to i32, !dbg !50
  %411 = insertelement <2 x i16> poison, i16 %345, i64 0, !dbg !50
  %412 = insertelement <2 x i16> %411, i16 %346, i64 1, !dbg !50
  %413 = bitcast <2 x i16> %412 to i32, !dbg !50
  %414 = getelementptr i8, ptr addrspace(3) %369, i64 96, !dbg !50
  %415 = ptrtoint ptr addrspace(3) %414 to i64, !dbg !50
  %416 = trunc i64 %415 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %416, i32 %404, i32 %407, i32 %410, i32 %413) #3, !dbg !50
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %417 = shl nuw nsw i32 %347, 2, !dbg !50
  %418 = or disjoint i32 %417, %348, !dbg !50
  %419 = and i32 %34, 56, !dbg !50
  %420 = mul nuw nsw i32 %418, 72, !dbg !50
  %421 = add nuw nsw i32 %420, %419, !dbg !50
  %422 = zext nneg i32 %421 to i64, !dbg !50
  %423 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %422, !dbg !50
  %424 = getelementptr i8, ptr addrspace(3) %423, i64 2304, !dbg !50
  %425 = load <4 x i32>, ptr addrspace(3) %424, align 16, !dbg !50
  %426 = getelementptr i8, ptr addrspace(3) %423, i64 4608, !dbg !50
  %427 = load <4 x i32>, ptr addrspace(3) %426, align 16, !dbg !50
  %428 = getelementptr i8, ptr addrspace(3) %423, i64 6912, !dbg !50
  %429 = load <4 x i32>, ptr addrspace(3) %428, align 16, !dbg !50
  %.extract = load i32, ptr addrspace(3) %423, align 16, !dbg !50
  %430 = getelementptr inbounds i8, ptr addrspace(3) %423, i64 4, !dbg !50
  %.extract66 = load i32, ptr addrspace(3) %430, align 4, !dbg !50
  %431 = getelementptr inbounds i8, ptr addrspace(3) %423, i64 8, !dbg !50
  %.extract68 = load i32, ptr addrspace(3) %431, align 8, !dbg !50
  %432 = getelementptr inbounds i8, ptr addrspace(3) %423, i64 12, !dbg !50
  %.extract70 = load i32, ptr addrspace(3) %432, align 4, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract66, i32 %.extract68, i32 %.extract70, ptr addrspace(1) %276, i1 %263) #3, !dbg !50
  %.extract72 = extractelement <4 x i32> %425, i64 0, !dbg !50
  %.extract74 = extractelement <4 x i32> %425, i64 1, !dbg !50
  %.extract76 = extractelement <4 x i32> %425, i64 2, !dbg !50
  %.extract78 = extractelement <4 x i32> %425, i64 3, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract72, i32 %.extract74, i32 %.extract76, i32 %.extract78, ptr addrspace(1) %278, i1 %264) #3, !dbg !50
  %.extract80 = extractelement <4 x i32> %427, i64 0, !dbg !50
  %.extract82 = extractelement <4 x i32> %427, i64 1, !dbg !50
  %.extract84 = extractelement <4 x i32> %427, i64 2, !dbg !50
  %.extract86 = extractelement <4 x i32> %427, i64 3, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract80, i32 %.extract82, i32 %.extract84, i32 %.extract86, ptr addrspace(1) %280, i1 %265) #3, !dbg !50
  %.extract88 = extractelement <4 x i32> %429, i64 0, !dbg !50
  %.extract90 = extractelement <4 x i32> %429, i64 1, !dbg !50
  %.extract92 = extractelement <4 x i32> %429, i64 2, !dbg !50
  %.extract94 = extractelement <4 x i32> %429, i64 3, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract88, i32 %.extract90, i32 %.extract92, i32 %.extract94, ptr addrspace(1) %282, i1 %266) #3, !dbg !50
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyfb54zrrrcglxiihumrbypn6e2thxacpj676rlelfx3ms3la7t2.py", directory: "/opt/inductor_cache/yf")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 11, scope: !7)
!11 = !DILocation(line: 33, column: 16, scope: !7)
!12 = !DILocation(line: 0, scope: !7)
!13 = !DILocation(line: 27, column: 21, scope: !7)
!14 = !DILocation(line: 27, column: 16, scope: !7)
!15 = !DILocation(line: 42, column: 24, scope: !7)
!16 = !DILocation(line: 43, column: 28, scope: !7)
!17 = !DILocation(line: 43, column: 34, scope: !7)
!18 = !DILocation(line: 48, column: 22, scope: !7)
!19 = !DILocation(line: 49, column: 41, scope: !7)
!20 = !DILocation(line: 49, column: 30, scope: !7)
!21 = !DILocation(line: 49, column: 50, scope: !7)
!22 = !DILocation(line: 50, column: 40, scope: !7)
!23 = !DILocation(line: 50, column: 34, scope: !7)
!24 = !DILocation(line: 51, column: 30, scope: !7)
!25 = !DILocation(line: 53, column: 17, scope: !7)
!26 = !DILocation(line: 53, column: 40, scope: !7)
!27 = !DILocation(line: 53, column: 27, scope: !7)
!28 = !DILocation(line: 54, column: 17, scope: !7)
!29 = !DILocation(line: 54, column: 27, scope: !7)
!30 = !DILocation(line: 56, column: 52, scope: !7)
!31 = !DILocation(line: 60, column: 52, scope: !7)
!32 = !DILocation(line: 64, column: 28, scope: !7)
!33 = !DILocation(line: 64, column: 40, scope: !7)
!34 = !DILocation(line: 64, column: 13, scope: !7)
!35 = !DILocation(line: 65, column: 54, scope: !7)
!36 = !DILocation(line: 65, column: 39, scope: !7)
!37 = !DILocation(line: 65, column: 13, scope: !7)
!38 = !DILocation(line: 70, column: 24, scope: !7)
!39 = !DILocation(line: 71, column: 24, scope: !7)
!40 = !DILocation(line: 68, column: 25, scope: !7)
!41 = !DILocation(line: 77, column: 25, scope: !7)
!42 = !DILocation(line: 78, column: 13, scope: !7)
!43 = !DILocation(line: 79, column: 13, scope: !7)
!44 = !DILocation(line: 86, column: 20, scope: !7)
!45 = !DILocation(line: 86, column: 34, scope: !7)
!46 = !DILocation(line: 86, column: 26, scope: !7)
!47 = !DILocation(line: 89, column: 27, scope: !7)
!48 = !DILocation(line: 89, column: 22, scope: !7)
!49 = !DILocation(line: 90, column: 25, scope: !7)
!50 = !DILocation(line: 90, column: 67, scope: !7)
