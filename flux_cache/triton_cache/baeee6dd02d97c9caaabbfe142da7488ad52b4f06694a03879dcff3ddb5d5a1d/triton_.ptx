//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_1[12] = {95, 95, 67, 85, 68, 65, 95, 65, 82, 67, 72};
.global .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.global .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5,
	.param .u32 triton__param_6,
	.param .u32 triton__param_7
)
.maxntid 256, 1, 1
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<95>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<155>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<51>;
	.reg .f64 	%fd<217>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r33, [triton__param_7];
	ld.param.u32 	%r32, [triton__param_6];
	ld.param.u64 	%rd9, [triton__param_0];
	ld.param.u64 	%rd10, [triton__param_1];
	ld.param.u32 	%r39, [triton__param_4];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r34, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r40, %r34, 9;
	.loc	1 20 36
	mov.u32 	%r41, %tid.x;
	and.b32  	%r42, %r41, 255;
	.loc	1 20 23
	or.b32  	%r5, %r40, %r42;
	or.b32  	%r6, %r5, 256;
	.loc	1 21 21
	setp.lt.s32 	%p85, %r5, %r33;
	setp.lt.s32 	%p86, %r6, %r33;
	.loc	1 22 20
	mul.hi.s32 	%r44, %r5, -1840700269;
	mad.lo.s32 	%r45, %r5, 1, %r44;
	shr.u32 	%r46, %r45, 31;
	shr.s32 	%r47, %r45, 5;
	add.s32 	%r7, %r47, %r46;
	mul.hi.s32 	%r49, %r6, -1840700269;
	mad.lo.s32 	%r50, %r6, 1, %r49;
	shr.u32 	%r51, %r50, 31;
	shr.s32 	%r52, %r50, 5;
	add.s32 	%r8, %r52, %r51;
	mul.lo.s32 	%r53, %r7, 56;
	sub.s32 	%r9, %r5, %r53;
	mul.lo.s32 	%r54, %r8, 56;
	sub.s32 	%r10, %r6, %r54;
	.loc	1 28 18
	setp.lt.s32 	%p19, %r7, %r39;
	setp.lt.s32 	%p20, %r8, %r39;
	.loc	1 29 37
	mul.lo.s32 	%r55, %r7, 3;
	mul.lo.s32 	%r56, %r8, 3;
	.loc	1 29 30
	mul.wide.s32 	%rd15, %r55, 2;
	add.s64 	%rd16, %rd9, %rd15;
	add.s64 	%rd5, %rd16, 4;
	mul.wide.s32 	%rd17, %r56, 2;
	add.s64 	%rd18, %rd9, %rd17;
	add.s64 	%rd6, %rd18, 4;
	.loc	1 29 50
	and.pred  	%p9, %p85, %p19;
	and.pred  	%p11, %p20, %p86;
	mov.u16 	%rs2, 0;
	.loc	1 29 43
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p9 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd5 + 0 ];
	@!%p9 mov.u16 %rs1, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p11 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd6 + 0 ];
	@!%p11 mov.u16 %rs3, %rs2;
	// end inline asm
	.loc	1 29 101
	// begin inline asm
	cvt.f32.bf16 %r35, %rs1;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r36, %rs3;
	// end inline asm
	.loc	1 30 19
	setp.ge.s32 	%p21, %r7, %r39;
	setp.ge.s32 	%p22, %r8, %r39;
	.loc	1 33 44
	sub.s32 	%r57, %r7, %r39;
	sub.s32 	%r58, %r8, %r39;
	.loc	1 33 35
	mad.lo.s32 	%r59, %r57, 3, 2;
	mad.lo.s32 	%r60, %r58, 3, 2;
	.loc	1 33 30
	mul.wide.s32 	%rd19, %r59, 2;
	add.s64 	%rd7, %rd10, %rd19;
	mul.wide.s32 	%rd20, %r60, 2;
	add.s64 	%rd8, %rd10, %rd20;
	.loc	1 33 65
	and.pred  	%p13, %p85, %p21;
	and.pred  	%p15, %p22, %p86;
	.loc	1 33 58
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p13 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd7 + 0 ];
	@!%p13 mov.u16 %rs7, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs9, 0x0;
	@%p15 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd8 + 0 ];
	@!%p15 mov.u16 %rs9, %rs2;
	// end inline asm
	.loc	1 33 116
	// begin inline asm
	cvt.f32.bf16 %r37, %rs7;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r38, %rs9;
	// end inline asm
	.loc	1 37 37
	cvt.rn.f64.s32 	%fd3, %r32;
	.loc	1 39 21
	cvt.u16.u32 	%rs13, %r9;
	and.b16  	%rs14, %rs13, 128;
	shr.u16 	%rs15, %rs14, 7;
	add.s16 	%rs16, %rs13, %rs15;
	cvt.s16.s8 	%rs17, %rs16;
	shr.s16 	%rs18, %rs17, 1;
	cvt.u16.u32 	%rs19, %r10;
	and.b16  	%rs20, %rs19, 128;
	shr.u16 	%rs21, %rs20, 7;
	add.s16 	%rs22, %rs19, %rs21;
	cvt.s16.s8 	%rs23, %rs22;
	shr.s16 	%rs24, %rs23, 1;
	.loc	1 39 15
	mul.wide.s16 	%r61, %rs18, 2;
	mul.wide.s16 	%r62, %rs24, 2;
	.loc	1 40 21
	cvt.rn.f64.s32 	%fd47, %r61;
	cvt.rn.f64.s32 	%fd48, %r62;
	.loc	1 42 20
	mul.f64 	%fd4, %fd47, 0d3F92492492492492;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd3;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd4;
	}
	bfe.u32 	%r63, %r12, 20, 11;
	add.s32 	%r64, %r63, -1012;
	mov.b64 	%rd21, %fd4;
	shl.b64 	%rd1, %rd21, %r64;
	abs.f64 	%fd6, %fd3;
	{ // callseq 24, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd6;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd4;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd49, [retval0+0];
	} // callseq 24
	setp.ne.s32 	%p23, %r32, 0;
	setp.lt.s32 	%p91, %r11, 0;
	@%p23 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	setp.eq.s64 	%p93, %rd1, -9223372036854775808;
	setp.eq.s64 	%p25, %rd1, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r65, %temp}, %fd49;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd49;
	}
	xor.b32  	%r67, %r66, -2147483648;
	mov.b64 	%fd50, {%r65, %r67};
	selp.f64 	%fd51, %fd50, %fd49, %p25;
	selp.f64 	%fd52, %fd51, %fd49, %p91;
	cvt.rzi.f64.f64 	%fd53, %fd4;
	setp.neu.f64 	%p26, %fd53, %fd4;
	selp.f64 	%fd54, 0dFFF8000000000000, %fd52, %p26;
	selp.f64 	%fd207, %fd54, %fd52, %p91;
	bra.uni 	$L__BB0_3;
$L__BB0_1:
	setp.eq.s64 	%p27, %rd1, -9223372036854775808;
	abs.f64 	%fd55, %fd4;
	setp.neu.f64 	%p28, %fd55, 0d3FE0000000000000;
	and.pred  	%p93, %p28, %p27;
	selp.b32 	%r68, %r11, 0, %p93;
	setp.lt.s32 	%p29, %r12, 0;
	or.b32  	%r69, %r68, 2146435072;
	selp.b32 	%r70, %r69, %r68, %p29;
	mov.b32 	%r71, 0;
	mov.b64 	%fd207, {%r71, %r70};
$L__BB0_3:
	.loc	1 0 33
	mov.b32 	%f1, %r35;
	mov.b32 	%f2, %r36;
	mov.b32 	%f3, %r37;
	mov.b32 	%f4, %r38;
	mul.f64 	%fd5, %fd48, 0d3F92492492492492;
	.loc	1 43 33
	add.f64 	%fd11, %fd4, %fd3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %fd11;
	}
	and.b32  	%r73, %r72, 2146435072;
	setp.ne.s32 	%p30, %r73, 2146435072;
	setp.nan.f64 	%p92, %fd6, %fd6;
	mov.f64 	%fd208, %fd207;
	@%p30 bra 	$L__BB0_10;
	.loc	1 0 33
	mov.f64 	%fd208, %fd11;
	.loc	1 43 33
	@%p92 bra 	$L__BB0_10;
	abs.f64 	%fd56, %fd4;
	setp.nan.f64 	%p32, %fd56, %fd56;
	mov.f64 	%fd208, %fd11;
	@%p32 bra 	$L__BB0_10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd4;
	}
	and.b32  	%r13, %r12, 2147483647;
	setp.eq.s32 	%p33, %r13, 2146435072;
	setp.eq.s32 	%p34, %r74, 0;
	and.pred  	%p35, %p33, %p34;
	@!%p35 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_7:
	setp.gt.f64 	%p42, %fd6, 0d3FF0000000000000;
	selp.b32 	%r83, 2146435072, 0, %p42;
	setp.lt.s32 	%p43, %r12, 0;
	xor.b32  	%r84, %r83, 2146435072;
	selp.b32 	%r85, %r84, %r83, %p43;
	setp.eq.s32 	%p44, %r32, -1;
	selp.b32 	%r86, 1072693248, %r85, %p44;
	mov.b32 	%r87, 0;
	mov.b64 	%fd208, {%r87, %r86};
	bra.uni 	$L__BB0_10;
$L__BB0_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r75, %temp}, %fd3;
	}
	and.b32  	%r76, %r11, 2147483647;
	setp.eq.s32 	%p36, %r76, 2146435072;
	setp.eq.s32 	%p37, %r75, 0;
	and.pred  	%p38, %p36, %p37;
	mov.f64 	%fd208, %fd207;
	@!%p38 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:
	setp.lt.s32 	%p40, %r12, 0;
	selp.b32 	%r77, 0, 2146435072, %p40;
	setp.ne.s32 	%p41, %r13, 1071644672;
	or.b32  	%r78, %r77, -2147483648;
	selp.b32 	%r79, %r78, %r77, %p41;
	selp.b32 	%r80, %r79, %r77, %p93;
	selp.b32 	%r81, %r80, %r77, %p91;
	mov.b32 	%r82, 0;
	mov.b64 	%fd208, {%r82, %r81};
$L__BB0_10:
	.loc	1 0 33
	selp.f32 	%f5, %f1, %f3, %p19;
	selp.f32 	%f6, %f2, %f4, %p20;
	.loc	1 43 33
	setp.eq.s32 	%p46, %r32, 1;
	setp.eq.f64 	%p47, %fd4, 0d0000000000000000;
	selp.f64 	%fd57, 0d3FF0000000000000, %fd208, %p47;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd5;
	}
	bfe.u32 	%r88, %r14, 20, 11;
	add.s32 	%r89, %r88, -1012;
	mov.b64 	%rd22, %fd5;
	shl.b64 	%rd2, %rd22, %r89;
	{ // callseq 25, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd6;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd5;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd58, [retval0+0];
	} // callseq 25
	@%p23 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_11;
$L__BB0_12:
	setp.eq.s64 	%p94, %rd2, -9223372036854775808;
	setp.eq.s64 	%p48, %rd2, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r90, %temp}, %fd58;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r91}, %fd58;
	}
	xor.b32  	%r92, %r91, -2147483648;
	mov.b64 	%fd59, {%r90, %r92};
	selp.f64 	%fd60, %fd59, %fd58, %p48;
	selp.f64 	%fd61, %fd60, %fd58, %p91;
	cvt.rzi.f64.f64 	%fd62, %fd5;
	setp.neu.f64 	%p50, %fd62, %fd5;
	selp.f64 	%fd63, 0dFFF8000000000000, %fd61, %p50;
	selp.f64 	%fd209, %fd63, %fd61, %p91;
	bra.uni 	$L__BB0_13;
$L__BB0_11:
	setp.eq.s64 	%p51, %rd2, -9223372036854775808;
	abs.f64 	%fd64, %fd5;
	setp.neu.f64 	%p52, %fd64, 0d3FE0000000000000;
	and.pred  	%p94, %p52, %p51;
	selp.b32 	%r93, %r11, 0, %p94;
	setp.lt.s32 	%p53, %r14, 0;
	or.b32  	%r94, %r93, 2146435072;
	selp.b32 	%r95, %r94, %r93, %p53;
	mov.b32 	%r96, 0;
	mov.b64 	%fd209, {%r96, %r95};
$L__BB0_13:
	.loc	1 0 33
	add.u64 	%rd11, %SP, 0;
	cvt.f64.f32 	%fd1, %f5;
	cvt.f64.f32 	%fd2, %f6;
	.loc	1 43 33
	selp.f64 	%fd15, 0d3FF0000000000000, %fd57, %p46;
	add.f64 	%fd20, %fd5, %fd3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r97}, %fd20;
	}
	and.b32  	%r98, %r97, 2146435072;
	setp.ne.s32 	%p54, %r98, 2146435072;
	mov.f64 	%fd210, %fd209;
	@%p54 bra 	$L__BB0_20;
	.loc	1 0 33
	mov.f64 	%fd210, %fd20;
	.loc	1 43 33
	@%p92 bra 	$L__BB0_20;
	abs.f64 	%fd65, %fd5;
	setp.nan.f64 	%p56, %fd65, %fd65;
	mov.f64 	%fd210, %fd20;
	@%p56 bra 	$L__BB0_20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r99, %temp}, %fd5;
	}
	and.b32  	%r15, %r14, 2147483647;
	setp.eq.s32 	%p57, %r15, 2146435072;
	setp.eq.s32 	%p58, %r99, 0;
	and.pred  	%p59, %p57, %p58;
	@!%p59 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;
$L__BB0_17:
	setp.gt.f64 	%p66, %fd6, 0d3FF0000000000000;
	selp.b32 	%r108, 2146435072, 0, %p66;
	setp.lt.s32 	%p67, %r14, 0;
	xor.b32  	%r109, %r108, 2146435072;
	selp.b32 	%r110, %r109, %r108, %p67;
	setp.eq.s32 	%p68, %r32, -1;
	selp.b32 	%r111, 1072693248, %r110, %p68;
	mov.b32 	%r112, 0;
	mov.b64 	%fd210, {%r112, %r111};
	bra.uni 	$L__BB0_20;
$L__BB0_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %fd3;
	}
	and.b32  	%r101, %r11, 2147483647;
	setp.eq.s32 	%p60, %r101, 2146435072;
	setp.eq.s32 	%p61, %r100, 0;
	and.pred  	%p62, %p60, %p61;
	mov.f64 	%fd210, %fd209;
	@!%p62 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;
$L__BB0_19:
	setp.lt.s32 	%p64, %r14, 0;
	selp.b32 	%r102, 0, 2146435072, %p64;
	setp.ne.s32 	%p65, %r15, 1071644672;
	or.b32  	%r103, %r102, -2147483648;
	selp.b32 	%r104, %r103, %r102, %p65;
	selp.b32 	%r105, %r104, %r102, %p94;
	selp.b32 	%r106, %r105, %r102, %p91;
	mov.b32 	%r107, 0;
	mov.b64 	%fd210, {%r107, %r106};
$L__BB0_20:
	.loc	1 0 33
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd11;
	  cvt.u32.u64 	%r1, %tmp; }
	.loc	1 43 33
	setp.eq.f64 	%p70, %fd5, 0d0000000000000000;
	selp.f64 	%fd66, 0d3FF0000000000000, %fd210, %p70;
	selp.f64 	%fd67, 0d3FF0000000000000, %fd66, %p46;
	.loc	1 45 20
	mov.b64 	%rd25, %fd15;
	mov.u64 	%rd24, 4607182418800017408;
	// begin inline asm
	div.rn.f64 %rd23, %rd24, %rd25;
	// end inline asm
	mov.b64 	%fd68, %rd23;
	mov.b64 	%rd28, %fd67;
	// begin inline asm
	div.rn.f64 %rd26, %rd24, %rd28;
	// end inline asm
	mov.b64 	%fd69, %rd26;
	.loc	1 49 20
	mul.f64 	%fd24, %fd68, %fd1;
	mul.f64 	%fd25, %fd69, %fd2;
	.loc	1 50 26
	{
	.reg .b32 %temp; 
	mov.b64 	{%r113, %temp}, %fd24;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r114}, %fd24;
	}
	and.b32  	%r115, %r114, 2147483647;
	setp.eq.s32 	%p71, %r115, 2146435072;
	setp.eq.s32 	%p72, %r113, 0;
	and.pred  	%p7, %p71, %p72;
	mov.f64 	%fd199, 0d3FF921FB54442D18;
	mov.f64 	%fd200, 0d3C91A62633145C00;
	mov.f64 	%fd201, 0d397B839A252049C0;
	abs.f64 	%fd202, %fd24;
	mul.f64 	%fd203, %fd24, 0d3FE45F306DC9C883;
	mov.f64 	%fd206, 0d0000000000000000;
	@%p7 bra 	$L__BB0_35;
	bra.uni 	$L__BB0_21;
$L__BB0_35:
	mul.rn.f64 	%fd212, %fd24, %fd206;
	mov.b32 	%r150, 1;
	bra.uni 	$L__BB0_24;
$L__BB0_21:
	cvt.rni.s32.f64 	%r149, %fd203;
	st.local.u32 	[%r1], %r149;
	cvt.rn.f64.s32 	%fd72, %r149;
	neg.f64 	%fd73, %fd72;
	fma.rn.f64 	%fd75, %fd73, %fd199, %fd24;
	fma.rn.f64 	%fd77, %fd73, %fd200, %fd75;
	fma.rn.f64 	%fd212, %fd73, %fd201, %fd77;
	setp.ltu.f64 	%p73, %fd202, 0d41E0000000000000;
	@%p73 bra 	$L__BB0_23;
	{ // callseq 26, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd24;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd212, [retval0+0];
	} // callseq 26
	ld.local.u32 	%r149, [%r1];
$L__BB0_23:
	add.s32 	%r150, %r149, 1;
$L__BB0_24:
	and.b32  	%r117, %r150, 1;
	shl.b32 	%r118, %r117, 3;
	mul.wide.u32 	%rd30, %r118, 8;
	mov.u64 	%rd31, __cudart_sin_cos_coeffs;
	add.s64 	%rd32, %rd31, %rd30;
	mul.rn.f64 	%fd81, %fd212, %fd212;
	setp.eq.s32 	%p74, %r117, 0;
	selp.f64 	%fd82, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p74;
	ld.global.nc.f64 	%fd83, [%rd32+8];
	fma.rn.f64 	%fd84, %fd82, %fd81, %fd83;
	ld.global.nc.f64 	%fd85, [%rd32+16];
	fma.rn.f64 	%fd86, %fd84, %fd81, %fd85;
	ld.global.nc.f64 	%fd87, [%rd32+24];
	fma.rn.f64 	%fd88, %fd86, %fd81, %fd87;
	ld.global.nc.f64 	%fd89, [%rd32+32];
	fma.rn.f64 	%fd90, %fd88, %fd81, %fd89;
	ld.global.nc.f64 	%fd91, [%rd32+40];
	fma.rn.f64 	%fd92, %fd90, %fd81, %fd91;
	ld.global.nc.f64 	%fd93, [%rd32+48];
	fma.rn.f64 	%fd94, %fd92, %fd81, %fd93;
	fma.rn.f64 	%fd95, %fd94, %fd212, %fd212;
	mov.f64 	%fd96, 0d3FF0000000000000;
	fma.rn.f64 	%fd97, %fd94, %fd81, %fd96;
	selp.f64 	%fd98, %fd95, %fd97, %p74;
	and.b32  	%r119, %r150, 2;
	mov.f64 	%fd100, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %fd25;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %fd25;
	}
	and.b32  	%r122, %r121, 2147483647;
	setp.eq.s32 	%p76, %r122, 2146435072;
	setp.eq.s32 	%p77, %r120, 0;
	and.pred  	%p8, %p76, %p77;
	abs.f64 	%fd204, %fd25;
	mul.f64 	%fd205, %fd25, 0d3FE45F306DC9C883;
	@%p8 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_25;
$L__BB0_36:
	.loc	1 0 26
	mov.b32 	%r152, 1;
	.loc	1 50 26
	mul.rn.f64 	%fd214, %fd25, %fd206;
	bra.uni 	$L__BB0_28;
$L__BB0_25:
	cvt.rni.s32.f64 	%r151, %fd205;
	st.local.u32 	[%r1], %r151;
	cvt.rn.f64.s32 	%fd104, %r151;
	neg.f64 	%fd105, %fd104;
	fma.rn.f64 	%fd107, %fd105, %fd199, %fd25;
	fma.rn.f64 	%fd109, %fd105, %fd200, %fd107;
	fma.rn.f64 	%fd214, %fd105, %fd201, %fd109;
	setp.ltu.f64 	%p78, %fd204, 0d41E0000000000000;
	@%p78 bra 	$L__BB0_27;
	{ // callseq 27, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd25;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd214, [retval0+0];
	} // callseq 27
	ld.local.u32 	%r151, [%r1];
$L__BB0_27:
	add.s32 	%r152, %r151, 1;
$L__BB0_28:
	setp.eq.s32 	%p75, %r119, 0;
	fma.rn.f64 	%fd101, %fd98, %fd100, %fd206;
	and.b32  	%r124, %r152, 1;
	shl.b32 	%r125, %r124, 3;
	mul.wide.u32 	%rd34, %r125, 8;
	add.s64 	%rd36, %rd31, %rd34;
	mul.rn.f64 	%fd113, %fd214, %fd214;
	setp.eq.s32 	%p79, %r124, 0;
	selp.f64 	%fd114, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p79;
	ld.global.nc.f64 	%fd115, [%rd36+8];
	fma.rn.f64 	%fd116, %fd114, %fd113, %fd115;
	ld.global.nc.f64 	%fd117, [%rd36+16];
	fma.rn.f64 	%fd118, %fd116, %fd113, %fd117;
	ld.global.nc.f64 	%fd119, [%rd36+24];
	fma.rn.f64 	%fd120, %fd118, %fd113, %fd119;
	ld.global.nc.f64 	%fd121, [%rd36+32];
	fma.rn.f64 	%fd122, %fd120, %fd113, %fd121;
	ld.global.nc.f64 	%fd123, [%rd36+40];
	fma.rn.f64 	%fd124, %fd122, %fd113, %fd123;
	ld.global.nc.f64 	%fd125, [%rd36+48];
	fma.rn.f64 	%fd126, %fd124, %fd113, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd214, %fd214;
	fma.rn.f64 	%fd129, %fd126, %fd113, %fd96;
	selp.f64 	%fd130, %fd127, %fd129, %p79;
	and.b32  	%r126, %r152, 2;
	setp.eq.s32 	%p80, %r126, 0;
	fma.rn.f64 	%fd133, %fd130, %fd100, %fd206;
	.loc	1 52 26
	@%p7 bra 	$L__BB0_37;
	bra.uni 	$L__BB0_29;
$L__BB0_37:
	mul.rn.f64 	%fd215, %fd24, %fd206;
	mov.b32 	%r153, 0;
	bra.uni 	$L__BB0_31;
$L__BB0_29:
	cvt.rni.s32.f64 	%r153, %fd203;
	st.local.u32 	[%r1], %r153;
	cvt.rn.f64.s32 	%fd136, %r153;
	neg.f64 	%fd137, %fd136;
	fma.rn.f64 	%fd139, %fd137, %fd199, %fd24;
	fma.rn.f64 	%fd141, %fd137, %fd200, %fd139;
	fma.rn.f64 	%fd215, %fd137, %fd201, %fd141;
	setp.ltu.f64 	%p81, %fd202, 0d41E0000000000000;
	@%p81 bra 	$L__BB0_31;
	{ // callseq 28, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd24;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd215, [retval0+0];
	} // callseq 28
	ld.local.u32 	%r153, [%r1];
$L__BB0_31:
	.loc	1 0 26
	ld.param.u64 	%rd4, [triton__param_3];
	ld.param.u64 	%rd3, [triton__param_2];
	selp.f64 	%fd31, %fd98, %fd101, %p75;
	selp.f64 	%fd37, %fd130, %fd133, %p80;
	.loc	1 52 26
	and.b32  	%r128, %r153, 1;
	shl.b32 	%r129, %r128, 3;
	mul.wide.u32 	%rd38, %r129, 8;
	add.s64 	%rd40, %rd31, %rd38;
	mul.rn.f64 	%fd145, %fd215, %fd215;
	setp.eq.s32 	%p82, %r128, 0;
	selp.f64 	%fd146, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p82;
	ld.global.nc.f64 	%fd147, [%rd40+8];
	fma.rn.f64 	%fd148, %fd146, %fd145, %fd147;
	ld.global.nc.f64 	%fd149, [%rd40+16];
	fma.rn.f64 	%fd150, %fd148, %fd145, %fd149;
	ld.global.nc.f64 	%fd151, [%rd40+24];
	fma.rn.f64 	%fd152, %fd150, %fd145, %fd151;
	ld.global.nc.f64 	%fd153, [%rd40+32];
	fma.rn.f64 	%fd154, %fd152, %fd145, %fd153;
	ld.global.nc.f64 	%fd155, [%rd40+40];
	fma.rn.f64 	%fd156, %fd154, %fd145, %fd155;
	ld.global.nc.f64 	%fd157, [%rd40+48];
	fma.rn.f64 	%fd158, %fd156, %fd145, %fd157;
	fma.rn.f64 	%fd159, %fd158, %fd215, %fd215;
	fma.rn.f64 	%fd161, %fd158, %fd145, %fd96;
	selp.f64 	%fd162, %fd159, %fd161, %p82;
	and.b32  	%r130, %r153, 2;
	setp.eq.s32 	%p83, %r130, 0;
	fma.rn.f64 	%fd165, %fd162, %fd100, %fd206;
	selp.f64 	%fd42, %fd162, %fd165, %p83;
	@%p8 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_32;
$L__BB0_38:
	.loc	1 0 26
	mov.b32 	%r154, 0;
	.loc	1 52 26
	mul.rn.f64 	%fd216, %fd25, %fd206;
	bra.uni 	$L__BB0_34;
$L__BB0_32:
	cvt.rni.s32.f64 	%r154, %fd205;
	st.local.u32 	[%r1], %r154;
	cvt.rn.f64.s32 	%fd168, %r154;
	neg.f64 	%fd169, %fd168;
	fma.rn.f64 	%fd171, %fd169, %fd199, %fd25;
	fma.rn.f64 	%fd173, %fd169, %fd200, %fd171;
	fma.rn.f64 	%fd216, %fd169, %fd201, %fd173;
	setp.ltu.f64 	%p84, %fd204, 0d41E0000000000000;
	@%p84 bra 	$L__BB0_34;
	{ // callseq 29, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd25;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd216, [retval0+0];
	} // callseq 29
	ld.local.u32 	%r154, [%r1];
$L__BB0_34:
	and.b32  	%r136, %r154, 1;
	shl.b32 	%r137, %r136, 3;
	mul.wide.u32 	%rd46, %r137, 8;
	add.s64 	%rd48, %rd31, %rd46;
	mul.rn.f64 	%fd177, %fd216, %fd216;
	setp.eq.s32 	%p89, %r136, 0;
	selp.f64 	%fd178, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p89;
	ld.global.nc.f64 	%fd179, [%rd48+8];
	fma.rn.f64 	%fd180, %fd178, %fd177, %fd179;
	ld.global.nc.f64 	%fd181, [%rd48+16];
	fma.rn.f64 	%fd182, %fd180, %fd177, %fd181;
	ld.global.nc.f64 	%fd183, [%rd48+24];
	fma.rn.f64 	%fd184, %fd182, %fd177, %fd183;
	ld.global.nc.f64 	%fd185, [%rd48+32];
	fma.rn.f64 	%fd186, %fd184, %fd177, %fd185;
	ld.global.nc.f64 	%fd187, [%rd48+40];
	fma.rn.f64 	%fd188, %fd186, %fd177, %fd187;
	ld.global.nc.f64 	%fd189, [%rd48+48];
	fma.rn.f64 	%fd190, %fd188, %fd177, %fd189;
	fma.rn.f64 	%fd191, %fd190, %fd216, %fd216;
	fma.rn.f64 	%fd193, %fd190, %fd177, %fd96;
	selp.f64 	%fd194, %fd191, %fd193, %p89;
	and.b32  	%r138, %r154, 2;
	setp.eq.s32 	%p90, %r138, 0;
	fma.rn.f64 	%fd197, %fd194, %fd100, %fd206;
	selp.f64 	%fd198, %fd194, %fd197, %p90;
	.loc	1 51 21
	cvt.rn.f32.f64 	%f7, %fd37;
	cvt.rn.f32.f64 	%f8, %fd31;
	.loc	1 53 21
	cvt.rn.f32.f64 	%f9, %fd42;
	cvt.rn.f32.f64 	%f10, %fd198;
	.loc	1 54 35
	shl.b32 	%r139, %r7, 7;
	shl.b32 	%r140, %r8, 7;
	.loc	1 54 31
	add.s32 	%r141, %r139, %r9;
	add.s32 	%r142, %r140, %r10;
	.loc	1 54 25
	mul.wide.s32 	%rd49, %r141, 4;
	add.s64 	%rd42, %rd3, %rd49;
	mul.wide.s32 	%rd50, %r142, 4;
	add.s64 	%rd43, %rd3, %rd50;
	.loc	1 54 48
	mov.b32 	%r132, %f8;
	// begin inline asm
	@%p85 st.global.b32 [ %rd42 + 0 ], { %r132 };
	// end inline asm
	mov.b32 	%r133, %f7;
	// begin inline asm
	@%p86 st.global.b32 [ %rd43 + 0 ], { %r133 };
	// end inline asm
	.loc	1 55 25
	add.s64 	%rd44, %rd4, %rd49;
	add.s64 	%rd45, %rd4, %rd50;
	.loc	1 55 48
	mov.b32 	%r134, %f9;
	// begin inline asm
	@%p85 st.global.b32 [ %rd44 + 0 ], { %r134 };
	// end inline asm
	mov.b32 	%r135, %f10;
	// begin inline asm
	@%p86 st.global.b32 [ %rd45 + 0 ], { %r135 };
	// end inline asm
	.loc	1 55 4
	ret;
$L__tmp1:
$L__func_end0:

}
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<86>;
	.reg .f64 	%fd<5>;
$L__func_begin1:

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd4;
	}
	bfe.u32 	%r4, %r22, 20, 11;
	setp.eq.s32 	%p1, %r4, 2047;
	@%p1 bra 	$L__BB1_13;
	add.u64 	%rd27, %SP, 0;
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd27;
	  cvt.u32.u64 	%r1, %tmp; }
	shr.u32 	%r3, %r22, 20;
	add.s32 	%r23, %r4, -1024;
	shr.u32 	%r5, %r23, 6;
	mov.b32 	%r24, 15;
	sub.s32 	%r43, %r24, %r5;
	mov.b32 	%r25, 19;
	sub.s32 	%r26, %r25, %r5;
	setp.lt.u32 	%p2, %r23, 128;
	selp.b32 	%r45, 18, %r26, %p2;
	setp.ge.s32 	%p3, %r43, %r45;
	@%p3 bra 	$L__BB1_14;
	mov.b64 	%rd28, %fd4;
	shl.b64 	%rd29, %rd28, 11;
	or.b64  	%rd38, %rd29, -9223372036854775808;
	neg.s32 	%r44, %r5;
	mul.wide.s32 	%rd32, %r44, 8;
	mov.u64 	%rd33, __cudart_i2opi_d;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd77, %rd34, 120;
	mov.u64 	%rd79, 0;
	mov.u32 	%r42, %r1;
$L__BB1_3:
	.pragma "nounroll";
	ld.global.nc.u64 	%rd37, [%rd77];
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd37;    
	mov.b64         {blo,bhi}, %rd38;    
	mov.b64         {clo,chi}, %rd79;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd35, {r0,r1};      
	mov.b64         %rd79, {r2,r3};      
	}
	// end inline asm
	st.local.u64 	[%r42], %rd35;
	add.s32 	%r43, %r43, 1;
	add.s32 	%r42, %r42, 8;
	add.s64 	%rd77, %rd77, 8;
	setp.lt.s32 	%p4, %r43, %r45;
	@%p4 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_4;
$L__BB1_14:
	neg.s32 	%r44, %r5;
	mov.u64 	%rd79, 0;
	mov.u32 	%r45, %r43;
$L__BB1_4:
	ld.param.u64 	%rd26, [__internal_trig_reduction_slowpathd_param_1];
	and.b32  	%r46, %r22, -2147483648;
	sub.s32 	%r27, %r45, %r44;
	shl.b32 	%r28, %r27, 3;
	add.s32 	%r29, %r1, %r28;
	st.local.u64 	[%r29+-120], %rd79;
	and.b32  	%r16, %r3, 63;
	ld.local.u64 	%rd81, [%r1+16];
	ld.local.u64 	%rd80, [%r1+24];
	setp.eq.s32 	%p5, %r16, 0;
	mov.b32 	%r41, 64;
	@%p5 bra 	$L__BB1_6;
	sub.s32 	%r31, %r41, %r16;
	shl.b64 	%rd40, %rd80, %r16;
	shr.u64 	%rd41, %rd81, %r31;
	or.b64  	%rd80, %rd40, %rd41;
	shl.b64 	%rd42, %rd81, %r16;
	ld.local.u64 	%rd43, [%r1+8];
	shr.u64 	%rd44, %rd43, %r31;
	or.b64  	%rd81, %rd44, %rd42;
$L__BB1_6:
	shr.u64 	%rd45, %rd80, 62;
	cvt.u32.u64 	%r32, %rd45;
	shr.u64 	%rd46, %rd81, 62;
	shl.b64 	%rd47, %rd80, 2;
	or.b64  	%rd84, %rd47, %rd46;
	shl.b64 	%rd83, %rd81, 2;
	bfe.u64 	%rd48, %rd80, 61, 1;
	cvt.u32.u64 	%r33, %rd48;
	add.s32 	%r34, %r33, %r32;
	setp.eq.s32 	%p6, %r46, 0;
	neg.s32 	%r35, %r34;
	selp.b32 	%r36, %r34, %r35, %p6;
	st.u32 	[%rd26], %r36;
	setp.gt.s64 	%p7, %rd84, -1;
	@%p7 bra 	$L__BB1_8;
	xor.b32  	%r46, %r46, -2147483648;
	mov.u64 	%rd51, 0;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd51;
	mov.b64         {a2,a3}, %rd51;
	mov.b64         {b0,b1}, %rd83;
	mov.b64         {b2,b3}, %rd84;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd83, {r0,r1};
	mov.b64         %rd84, {r2,r3};
	}
	// end inline asm
$L__BB1_8:
	clz.b64 	%r47, %rd84;
	setp.eq.s32 	%p8, %r47, 0;
	@%p8 bra 	$L__BB1_10;
	shl.b64 	%rd55, %rd84, %r47;
	sub.s32 	%r38, %r41, %r47;
	shr.u64 	%rd56, %rd83, %r38;
	or.b64  	%rd84, %rd56, %rd55;
$L__BB1_10:
	mov.u64 	%rd60, -3958705157555305931;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd84;   
	mov.b64         {blo,bhi}, %rd60;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd63, {r0,r1};     
	mov.b64         %rd85, {r2,r3};     
	}
	// end inline asm
	setp.lt.s64 	%p9, %rd85, 1;
	@%p9 bra 	$L__BB1_12;
	add.s32 	%r47, %r47, 1;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd63;
	mov.b64         {a2,a3}, %rd85;
	mov.b64         {b0,b1}, %rd63;
	mov.b64         {b2,b3}, %rd85;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd61, {r0,r1};
	mov.b64         %rd85, {r2,r3};
	}
	// end inline asm
$L__BB1_12:
	mov.b32 	%r39, 1022;
	sub.s32 	%r40, %r39, %r47;
	cvt.u64.u32 	%rd67, %r40;
	cvt.u64.u32 	%rd68, %r46;
	shl.b64 	%rd69, %rd68, 32;
	shl.b64 	%rd70, %rd67, 52;
	add.s64 	%rd71, %rd85, 1;
	shr.u64 	%rd72, %rd71, 10;
	add.s64 	%rd73, %rd72, 1;
	shr.u64 	%rd74, %rd73, 1;
	add.s64 	%rd75, %rd70, %rd74;
	or.b64  	%rd76, %rd75, %rd69;
	mov.b64 	%fd4, %rd76;
$L__BB1_13:
	st.param.f64 	[func_retval0+0], %fd4;
	ret;
$L__func_end1:

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<134>;
$L__func_begin2:

	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd12;
	}
	shr.u32 	%r50, %r49, 20;
	setp.gt.u32 	%p1, %r49, 1048575;
	@%p1 bra 	$L__BB2_2;
	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd13;
	}
	shr.u32 	%r16, %r49, 20;
	add.s32 	%r50, %r16, -54;
$L__BB2_2:
	ld.param.f64 	%fd11, [__internal_accurate_pow_param_1];
	add.s32 	%r51, %r50, -1023;
	and.b32  	%r17, %r49, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd132, {%r48, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB2_4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd132;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd132;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd132, {%r19, %r21};
	add.s32 	%r51, %r50, -1022;
$L__BB2_4:
	add.f64 	%fd14, %fd132, 0dBFF0000000000000;
	add.f64 	%fd15, %fd132, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd15;
	neg.f64 	%fd17, %fd15;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd16, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd16, %fd16;
	mul.f64 	%fd22, %fd14, %fd21;
	fma.rn.f64 	%fd23, %fd14, %fd21, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd14, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd14, %fd39;
	mul.f64 	%fd42, %fd21, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd48, %fd43, %fd47;
	sub.f64 	%fd49, %fd43, %fd48;
	add.f64 	%fd50, %fd47, %fd49;
	mul.rn.f64 	%fd51, %fd23, %fd23;
	neg.f64 	%fd52, %fd51;
	fma.rn.f64 	%fd53, %fd23, %fd23, %fd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd54, {%r22, %r24};
	fma.rn.f64 	%fd55, %fd23, %fd54, %fd53;
	mul.rn.f64 	%fd56, %fd51, %fd23;
	neg.f64 	%fd57, %fd56;
	fma.rn.f64 	%fd58, %fd51, %fd23, %fd57;
	fma.rn.f64 	%fd59, %fd51, %fd42, %fd58;
	fma.rn.f64 	%fd60, %fd55, %fd23, %fd59;
	mul.rn.f64 	%fd61, %fd48, %fd56;
	neg.f64 	%fd62, %fd61;
	fma.rn.f64 	%fd63, %fd48, %fd56, %fd62;
	fma.rn.f64 	%fd64, %fd48, %fd60, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd56, %fd64;
	add.f64 	%fd66, %fd61, %fd65;
	sub.f64 	%fd67, %fd61, %fd66;
	add.f64 	%fd68, %fd65, %fd67;
	add.f64 	%fd69, %fd23, %fd66;
	sub.f64 	%fd70, %fd23, %fd69;
	add.f64 	%fd71, %fd66, %fd70;
	add.f64 	%fd72, %fd68, %fd71;
	fma.rn.f64 	%fd73, %fd21, %fd41, %fd72;
	add.f64 	%fd74, %fd69, %fd73;
	sub.f64 	%fd75, %fd69, %fd74;
	add.f64 	%fd76, %fd73, %fd75;
	xor.b32  	%r25, %r51, -2147483648;
	mov.b32 	%r26, 1127219200;
	mov.b64 	%fd77, {%r25, %r26};
	mov.b32 	%r27, -2147483648;
	mov.b64 	%fd78, {%r27, %r26};
	sub.f64 	%fd79, %fd77, %fd78;
	mov.f64 	%fd80, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd81, %fd79, %fd80, %fd74;
	neg.f64 	%fd82, %fd79;
	fma.rn.f64 	%fd83, %fd82, %fd80, %fd81;
	sub.f64 	%fd84, %fd83, %fd74;
	sub.f64 	%fd85, %fd76, %fd84;
	mov.f64 	%fd86, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd87, %fd79, %fd86, %fd85;
	add.f64 	%fd88, %fd81, %fd87;
	sub.f64 	%fd89, %fd81, %fd88;
	add.f64 	%fd90, %fd87, %fd89;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd11;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd11;
	}
	shl.b32 	%r30, %r28, 1;
	setp.gt.u32 	%p3, %r30, -33554433;
	and.b32  	%r31, %r28, -15728641;
	selp.b32 	%r32, %r31, %r28, %p3;
	mov.b64 	%fd91, {%r29, %r32};
	mul.rn.f64 	%fd4, %fd88, %fd91;
	neg.f64 	%fd92, %fd4;
	fma.rn.f64 	%fd93, %fd88, %fd91, %fd92;
	fma.rn.f64 	%fd5, %fd90, %fd91, %fd93;
	add.f64 	%fd6, %fd4, %fd5;
	mov.f64 	%fd94, 0d4338000000000000;
	mov.f64 	%fd95, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd96, %fd6, %fd95, %fd94;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd96;
	}
	mov.f64 	%fd97, 0dC338000000000000;
	add.rn.f64 	%fd98, %fd96, %fd97;
	mov.f64 	%fd99, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd100, %fd98, %fd99, %fd6;
	mov.f64 	%fd101, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd102, %fd98, %fd101, %fd100;
	mov.f64 	%fd103, 0d3E928AF3FCA213EA;
	mov.f64 	%fd104, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd105, %fd104, %fd102, %fd103;
	mov.f64 	%fd106, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd107, %fd105, %fd102, %fd106;
	mov.f64 	%fd108, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd109, %fd107, %fd102, %fd108;
	mov.f64 	%fd110, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd111, %fd109, %fd102, %fd110;
	mov.f64 	%fd112, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd113, %fd111, %fd102, %fd112;
	mov.f64 	%fd114, 0d3F81111111122322;
	fma.rn.f64 	%fd115, %fd113, %fd102, %fd114;
	mov.f64 	%fd116, 0d3FA55555555502A1;
	fma.rn.f64 	%fd117, %fd115, %fd102, %fd116;
	mov.f64 	%fd118, 0d3FC5555555555511;
	fma.rn.f64 	%fd119, %fd117, %fd102, %fd118;
	mov.f64 	%fd120, 0d3FE000000000000B;
	fma.rn.f64 	%fd121, %fd119, %fd102, %fd120;
	fma.rn.f64 	%fd122, %fd121, %fd102, %fd18;
	fma.rn.f64 	%fd123, %fd122, %fd102, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd123;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd123;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd133, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd6;
	}
	mov.b32 	%f2, %r35;
	abs.ftz.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB2_7;
	setp.lt.f64 	%p5, %fd6, 0d0000000000000000;
	add.f64 	%fd124, %fd6, 0d7FF0000000000000;
	selp.f64 	%fd133, 0d0000000000000000, %fd124, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB2_7;
	shr.u32 	%r36, %r13, 31;
	add.s32 	%r37, %r13, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd125, {%r14, %r40};
	sub.s32 	%r41, %r13, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.b32 	%r44, 0;
	mov.b64 	%fd126, {%r44, %r43};
	mul.f64 	%fd133, %fd126, %fd125;
$L__BB2_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd133;
	}
	and.b32  	%r47, %r46, 2147483647;
	setp.eq.s32 	%p7, %r47, 2146435072;
	setp.eq.s32 	%p8, %r45, 0;
	sub.f64 	%fd127, %fd4, %fd6;
	add.f64 	%fd128, %fd5, %fd127;
	fma.rn.f64 	%fd129, %fd133, %fd128, %fd133;
	selp.f64 	%fd130, %fd133, %fd129, %p8;
	selp.f64 	%fd131, %fd130, %fd129, %p7;
	st.param.f64 	[func_retval0+0], %fd131;
	ret;
$L__func_end2:

}
	.file	1 "/opt/inductor_cache/jx/cjxuk5b7kok2iq5c2fei6eewltukmj7b2vjyfeqcetmxebfsacr4.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 116
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 106
.b8 120
.b8 117
.b8 107
.b8 53
.b8 98
.b8 55
.b8 107
.b8 111
.b8 107
.b8 50
.b8 105
.b8 113
.b8 53
.b8 99
.b8 50
.b8 102
.b8 101
.b8 105
.b8 54
.b8 101
.b8 101
.b8 119
.b8 108
.b8 116
.b8 117
.b8 107
.b8 109
.b8 106
.b8 55
.b8 98
.b8 50
.b8 118
.b8 106
.b8 121
.b8 102
.b8 101
.b8 113
.b8 99
.b8 101
.b8 116
.b8 109
.b8 120
.b8 101
.b8 98
.b8 102
.b8 115
.b8 97
.b8 99
.b8 114
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 120
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
