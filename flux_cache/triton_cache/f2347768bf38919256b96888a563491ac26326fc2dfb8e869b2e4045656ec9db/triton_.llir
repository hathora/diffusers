; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"__CUDA_ARCH\00", align 1
@__cudart_i2opi_d = internal unnamed_addr addrspace(1) constant [18 x i64] [i64 7780917995555872008, i64 4397547296490951402, i64 8441921394348257659, i64 5712322887342352941, i64 7869616827067468215, i64 -1211730484530615009, i64 2303758334597371919, i64 -7168499653074671557, i64 4148332274289687028, i64 -1613291254968254911, i64 -1692731182770600828, i64 -135693905287338178, i64 452944820249399836, i64 -5249950069107600672, i64 -121206125134887583, i64 -2638381946312093631, i64 -277156292786332224, i64 -6703182060581546711], align 8
@__cudart_sin_cos_coeffs = internal unnamed_addr addrspace(1) constant [16 x double] [double 0x3DE5DB65F9785EBA, double 0xBE5AE5F12CB0D246, double 0x3EC71DE369ACE392, double 0xBF2A01A019DB62A1, double 0x3F81111111110818, double 0xBFC5555555555554, double 0.000000e+00, double 0.000000e+00, double 0xBDA8FF8320FD8164, double 0x3E21EEA7C1EF8528, double 0xBE927E4F8E06E6D9, double 0x3EFA01A019DDBCE9, double 0xBF56C16C16C15D47, double 0x3FA5555555555551, double -5.000000e-01, double 1.000000e+00], align 8

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %q.i.i47 = alloca i32, align 4
  %q.i.i.i48 = alloca i32, align 4
  %q.i.i25 = alloca i32, align 4
  %q.i.i.i26 = alloca i32, align 4
  %q.i.i1 = alloca i32, align 4
  %q.i.i.i2 = alloca i32, align 4
  %q.i.i = alloca i32, align 4
  %q.i.i.i = alloca i32, align 4
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #7, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = and i32 %12, 14, !dbg !12
  %15 = or disjoint i32 %10, %13, !dbg !13
  %16 = or disjoint i32 %14, %10, !dbg !13
  %17 = or disjoint i32 %16, 1, !dbg !13
  %18 = icmp slt i32 %15, %7, !dbg !14
  %.frozen = freeze i32 %15
  %19 = sdiv i32 %.frozen, 16, !dbg !15
  %20 = mul i32 %19, 16
  %.decomposed = sub i32 %.frozen, %20
  %21 = srem i32 %17, 16, !dbg !16
  %22 = icmp slt i32 %19, %4, !dbg !17
  %23 = mul nsw i32 %19, 3, !dbg !18
  %24 = sext i32 %23 to i64, !dbg !19
  %25 = getelementptr i16, ptr addrspace(1) %0, i64 %24, !dbg !19
  %26 = and i1 %18, %22, !dbg !20
  %27 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %25, i1 %26, i16 0, i1 %26) #7, !dbg !21
  %28 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %25, i1 %26, i16 0, i1 %26) #7, !dbg !21
  %29 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %27) #7, !dbg !22
  %30 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %28) #7, !dbg !22
  %31 = icmp sge i32 %19, %4, !dbg !23
  %32 = sub i32 %19, %4, !dbg !24
  %33 = mul i32 %32, 3, !dbg !25
  %34 = sext i32 %33 to i64, !dbg !26
  %35 = getelementptr i16, ptr addrspace(1) %1, i64 %34, !dbg !26
  %36 = and i1 %18, %31, !dbg !27
  %37 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %35, i1 %36, i16 0, i1 %36) #7, !dbg !28
  %38 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %35, i1 %36, i16 0, i1 %36) #7, !dbg !28
  %39 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %37) #7, !dbg !29
  %40 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %38) #7, !dbg !29
  %41 = select i1 %22, float %29, float %39, !dbg !30
  %42 = select i1 %22, float %30, float %40, !dbg !30
  %43 = fpext float %41 to double, !dbg !31
  %44 = fpext float %42 to double, !dbg !31
  %45 = sitofp i32 %6 to double, !dbg !32
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !33
  %46 = ashr exact i8 %.lhs.trunc, 1, !dbg !33
  %.sext = sext i8 %46 to i32, !dbg !33
  %.lhs.trunc98 = trunc nsw i32 %21 to i8, !dbg !33
  %47 = sdiv i8 %.lhs.trunc98, 2, !dbg !33
  %.sext99 = sext i8 %47 to i32, !dbg !33
  %48 = shl nsw i32 %.sext, 1, !dbg !34
  %49 = shl nsw i32 %.sext99, 1, !dbg !34
  %50 = sitofp i32 %48 to double, !dbg !35
  %51 = sitofp i32 %49 to double, !dbg !35
  %52 = fmul double %50, 6.250000e-02, !dbg !36
  %53 = fmul double %51, 6.250000e-02, !dbg !36
  %54 = tail call i32 @llvm.nvvm.d2i.hi(double %45) #7, !dbg !37
  %55 = tail call i32 @llvm.nvvm.d2i.hi(double %52) #7, !dbg !37
  %56 = lshr i32 %55, 20, !dbg !37
  %57 = and i32 %56, 2047, !dbg !37
  %58 = add nsw i32 %57, -1012, !dbg !37
  %59 = bitcast double %52 to i64, !dbg !37
  %60 = zext nneg i32 %58 to i64, !dbg !37
  %61 = shl i64 %59, %60, !dbg !37
  %62 = icmp eq i64 %61, -9223372036854775808, !dbg !37
  %63 = tail call double @llvm.nvvm.fabs.d(double %45) #7, !dbg !37
  %64 = tail call fastcc double @__internal_accurate_pow(double %63, double %52), !dbg !37
  %65 = icmp slt i32 %54, 0, !dbg !37
  %66 = icmp eq i32 %6, 0, !dbg !37
  br i1 %66, label %67, label %73, !dbg !37

67:                                               ; preds = %8
  %68 = tail call double @llvm.nvvm.fabs.d(double %52) #7, !dbg !37
  %69 = fcmp une double %68, 5.000000e-01, !dbg !37
  %.not.not.i = select i1 %69, i1 %62, i1 false, !dbg !37
  %thi.0.i = select i1 %.not.not.i, i32 %54, i32 0, !dbg !37
  %70 = icmp slt i32 %55, 0, !dbg !37
  %71 = or i32 %thi.0.i, 2146435072, !dbg !37
  %thi.1.i = select i1 %70, i32 %71, i32 %thi.0.i, !dbg !37
  %72 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %thi.1.i) #7, !dbg !37
  br label %80, !dbg !37

73:                                               ; preds = %8
  %or.cond.i = select i1 %65, i1 %62, i1 false, !dbg !37
  %74 = tail call i32 @llvm.nvvm.d2i.lo(double %64) #7, !dbg !37
  %75 = tail call i32 @llvm.nvvm.d2i.hi(double %64) #7, !dbg !37
  %76 = xor i32 %75, -2147483648, !dbg !37
  %77 = tail call double @llvm.nvvm.lohi.i2d(i32 %74, i32 %76) #7, !dbg !37
  %t.0.i = select i1 %or.cond.i, double %77, double %64, !dbg !37
  %78 = tail call double @llvm.nvvm.trunc.d(double %52) #7, !dbg !37
  %79 = fcmp une double %78, %52, !dbg !37
  %or.cond2.i = select i1 %65, i1 %79, i1 false, !dbg !37
  %t.1.i = select i1 %or.cond2.i, double 0xFFF8000000000000, double %t.0.i, !dbg !37
  br label %80, !dbg !37

80:                                               ; preds = %73, %67
  %t.2.i = phi double [ %72, %67 ], [ %t.1.i, %73 ], !dbg !37
  %bIsOddInteger.1.i = phi i1 [ %.not.not.i, %67 ], [ %62, %73 ], !dbg !37
  %81 = fadd double %52, %45, !dbg !37
  %82 = tail call i32 @llvm.nvvm.d2i.hi(double %81) #7, !dbg !37
  %83 = and i32 %82, 2146435072, !dbg !37
  %84 = icmp eq i32 %83, 2146435072, !dbg !37
  br i1 %84, label %85, label %__nv_pow.exit, !dbg !37

85:                                               ; preds = %80
  %86 = fcmp uno double %63, 0.000000e+00, !dbg !37
  br i1 %86, label %__nv_pow.exit, label %87, !dbg !37

87:                                               ; preds = %85
  %88 = tail call double @llvm.nvvm.fabs.d(double %52) #7, !dbg !37
  %89 = fcmp uno double %88, 0.000000e+00, !dbg !37
  br i1 %89, label %__nv_pow.exit, label %90, !dbg !37

90:                                               ; preds = %87
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %92 = icmp eq i32 %91, 200, !dbg !37
  br i1 %92, label %99, label %93, !dbg !37

93:                                               ; preds = %90
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %95 = icmp eq i32 %94, 350, !dbg !37
  br i1 %95, label %99, label %96, !dbg !37

96:                                               ; preds = %93
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %98 = icmp eq i32 %97, 370, !dbg !37
  br i1 %98, label %99, label %__nv_isinfd.exit4.i, !dbg !37

99:                                               ; preds = %96, %93, %90
  %100 = fcmp oeq double %88, 0x7FF0000000000000, !dbg !37
  br i1 %100, label %106, label %112, !dbg !37

__nv_isinfd.exit4.i:                              ; preds = %96
  %101 = tail call i32 @llvm.nvvm.d2i.lo(double %52) #7, !dbg !37
  %102 = and i32 %55, 2147483647, !dbg !37
  %103 = icmp eq i32 %102, 2146435072, !dbg !37
  %104 = icmp eq i32 %101, 0, !dbg !37
  %105 = select i1 %103, i1 %104, i1 false, !dbg !37
  br i1 %105, label %106, label %112, !dbg !37

106:                                              ; preds = %99, %__nv_isinfd.exit4.i
  %107 = fcmp ogt double %63, 1.000000e+00, !dbg !37
  %thi.2.i = select i1 %107, i32 2146435072, i32 0, !dbg !37
  %108 = icmp slt i32 %55, 0, !dbg !37
  %109 = xor i32 %thi.2.i, 2146435072, !dbg !37
  %thi.3.i = select i1 %108, i32 %109, i32 %thi.2.i, !dbg !37
  %110 = icmp eq i32 %6, -1, !dbg !37
  %thi.4.i = select i1 %110, i32 1072693248, i32 %thi.3.i, !dbg !37
  %111 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %thi.4.i) #7, !dbg !37
  br label %__nv_pow.exit, !dbg !37

112:                                              ; preds = %99, %__nv_isinfd.exit4.i
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %114 = icmp eq i32 %113, 200, !dbg !37
  br i1 %114, label %121, label %115, !dbg !37

115:                                              ; preds = %112
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %117 = icmp eq i32 %116, 350, !dbg !37
  br i1 %117, label %121, label %118, !dbg !37

118:                                              ; preds = %115
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %120 = icmp eq i32 %119, 370, !dbg !37
  br i1 %120, label %121, label %__nv_isinfd.exit.i71, !dbg !37

121:                                              ; preds = %118, %115, %112
  %122 = fcmp oeq double %63, 0x7FF0000000000000, !dbg !37
  br i1 %122, label %128, label %__nv_pow.exit, !dbg !37

__nv_isinfd.exit.i71:                             ; preds = %118
  %123 = tail call i32 @llvm.nvvm.d2i.lo(double %45) #7, !dbg !37
  %124 = and i32 %54, 2147483647, !dbg !37
  %125 = icmp eq i32 %124, 2146435072, !dbg !37
  %126 = icmp eq i32 %123, 0, !dbg !37
  %127 = select i1 %125, i1 %126, i1 false, !dbg !37
  br i1 %127, label %128, label %__nv_pow.exit, !dbg !37

128:                                              ; preds = %121, %__nv_isinfd.exit.i71
  %.inv.i = icmp slt i32 %55, 0, !dbg !37
  %spec.select.i72 = select i1 %.inv.i, i32 0, i32 2146435072, !dbg !37
  %or.cond3.i = select i1 %65, i1 %bIsOddInteger.1.i, i1 false, !dbg !37
  %129 = and i32 %55, 2147483647, !dbg !37
  %130 = icmp ne i32 %129, 1071644672, !dbg !37
  %or.cond5.i = select i1 %or.cond3.i, i1 %130, i1 false, !dbg !37
  %131 = or disjoint i32 %spec.select.i72, -2147483648, !dbg !37
  %thi.6.i = select i1 %or.cond5.i, i32 %131, i32 %spec.select.i72, !dbg !37
  %132 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %thi.6.i) #7, !dbg !37
  br label %__nv_pow.exit, !dbg !37

__nv_pow.exit:                                    ; preds = %121, %80, %85, %87, %106, %__nv_isinfd.exit.i71, %128
  %t.6.i = phi double [ %t.2.i, %80 ], [ %111, %106 ], [ %132, %128 ], [ %t.2.i, %__nv_isinfd.exit.i71 ], [ %81, %87 ], [ %81, %85 ], [ %t.2.i, %121 ], !dbg !37
  %133 = icmp eq i32 %6, 1, !dbg !37
  %134 = fcmp oeq double %52, 0.000000e+00, !dbg !37
  %or.cond6.i = select i1 %133, i1 true, i1 %134, !dbg !37
  %t.7.i = select i1 %or.cond6.i, double 1.000000e+00, double %t.6.i, !dbg !37
  %135 = tail call i32 @llvm.nvvm.d2i.hi(double %53) #7, !dbg !37
  %136 = lshr i32 %135, 20, !dbg !37
  %137 = and i32 %136, 2047, !dbg !37
  %138 = add nsw i32 %137, -1012, !dbg !37
  %139 = bitcast double %53 to i64, !dbg !37
  %140 = zext nneg i32 %138 to i64, !dbg !37
  %141 = shl i64 %139, %140, !dbg !37
  %142 = icmp eq i64 %141, -9223372036854775808, !dbg !37
  %143 = tail call fastcc double @__internal_accurate_pow(double %63, double %53), !dbg !37
  br i1 %66, label %144, label %150, !dbg !37

144:                                              ; preds = %__nv_pow.exit
  %145 = tail call double @llvm.nvvm.fabs.d(double %53) #7, !dbg !37
  %146 = fcmp une double %145, 5.000000e-01, !dbg !37
  %.not.not.i94 = select i1 %146, i1 %142, i1 false, !dbg !37
  %thi.0.i95 = select i1 %.not.not.i94, i32 %54, i32 0, !dbg !37
  %147 = icmp slt i32 %135, 0, !dbg !37
  %148 = or i32 %thi.0.i95, 2146435072, !dbg !37
  %thi.1.i96 = select i1 %147, i32 %148, i32 %thi.0.i95, !dbg !37
  %149 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %thi.1.i96) #7, !dbg !37
  br label %157, !dbg !37

150:                                              ; preds = %__nv_pow.exit
  %or.cond.i73 = select i1 %65, i1 %142, i1 false, !dbg !37
  %151 = tail call i32 @llvm.nvvm.d2i.lo(double %143) #7, !dbg !37
  %152 = tail call i32 @llvm.nvvm.d2i.hi(double %143) #7, !dbg !37
  %153 = xor i32 %152, -2147483648, !dbg !37
  %154 = tail call double @llvm.nvvm.lohi.i2d(i32 %151, i32 %153) #7, !dbg !37
  %t.0.i74 = select i1 %or.cond.i73, double %154, double %143, !dbg !37
  %155 = tail call double @llvm.nvvm.trunc.d(double %53) #7, !dbg !37
  %156 = fcmp une double %155, %53, !dbg !37
  %or.cond2.i75 = select i1 %65, i1 %156, i1 false, !dbg !37
  %t.1.i76 = select i1 %or.cond2.i75, double 0xFFF8000000000000, double %t.0.i74, !dbg !37
  br label %157, !dbg !37

157:                                              ; preds = %150, %144
  %t.2.i77 = phi double [ %149, %144 ], [ %t.1.i76, %150 ], !dbg !37
  %bIsOddInteger.1.i78 = phi i1 [ %.not.not.i94, %144 ], [ %142, %150 ], !dbg !37
  %158 = fadd double %53, %45, !dbg !37
  %159 = tail call i32 @llvm.nvvm.d2i.hi(double %158) #7, !dbg !37
  %160 = and i32 %159, 2146435072, !dbg !37
  %161 = icmp eq i32 %160, 2146435072, !dbg !37
  br i1 %161, label %162, label %__nv_pow.exit97, !dbg !37

162:                                              ; preds = %157
  %163 = fcmp uno double %63, 0.000000e+00, !dbg !37
  br i1 %163, label %__nv_pow.exit97, label %164, !dbg !37

164:                                              ; preds = %162
  %165 = tail call double @llvm.nvvm.fabs.d(double %53) #7, !dbg !37
  %166 = fcmp uno double %165, 0.000000e+00, !dbg !37
  br i1 %166, label %__nv_pow.exit97, label %167, !dbg !37

167:                                              ; preds = %164
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %169 = icmp eq i32 %168, 200, !dbg !37
  br i1 %169, label %176, label %170, !dbg !37

170:                                              ; preds = %167
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %172 = icmp eq i32 %171, 350, !dbg !37
  br i1 %172, label %176, label %173, !dbg !37

173:                                              ; preds = %170
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %175 = icmp eq i32 %174, 370, !dbg !37
  br i1 %175, label %176, label %__nv_isinfd.exit4.i82, !dbg !37

176:                                              ; preds = %173, %170, %167
  %177 = fcmp oeq double %165, 0x7FF0000000000000, !dbg !37
  br i1 %177, label %183, label %189, !dbg !37

__nv_isinfd.exit4.i82:                            ; preds = %173
  %178 = tail call i32 @llvm.nvvm.d2i.lo(double %53) #7, !dbg !37
  %179 = and i32 %135, 2147483647, !dbg !37
  %180 = icmp eq i32 %179, 2146435072, !dbg !37
  %181 = icmp eq i32 %178, 0, !dbg !37
  %182 = select i1 %180, i1 %181, i1 false, !dbg !37
  br i1 %182, label %183, label %189, !dbg !37

183:                                              ; preds = %176, %__nv_isinfd.exit4.i82
  %184 = fcmp ogt double %63, 1.000000e+00, !dbg !37
  %thi.2.i91 = select i1 %184, i32 2146435072, i32 0, !dbg !37
  %185 = icmp slt i32 %135, 0, !dbg !37
  %186 = xor i32 %thi.2.i91, 2146435072, !dbg !37
  %thi.3.i92 = select i1 %185, i32 %186, i32 %thi.2.i91, !dbg !37
  %187 = icmp eq i32 %6, -1, !dbg !37
  %thi.4.i93 = select i1 %187, i32 1072693248, i32 %thi.3.i92, !dbg !37
  %188 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %thi.4.i93) #7, !dbg !37
  br label %__nv_pow.exit97, !dbg !37

189:                                              ; preds = %176, %__nv_isinfd.exit4.i82
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %191 = icmp eq i32 %190, 200, !dbg !37
  br i1 %191, label %198, label %192, !dbg !37

192:                                              ; preds = %189
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %194 = icmp eq i32 %193, 350, !dbg !37
  br i1 %194, label %198, label %195, !dbg !37

195:                                              ; preds = %192
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !37
  %197 = icmp eq i32 %196, 370, !dbg !37
  br i1 %197, label %198, label %__nv_isinfd.exit.i84, !dbg !37

198:                                              ; preds = %195, %192, %189
  %199 = fcmp oeq double %63, 0x7FF0000000000000, !dbg !37
  br i1 %199, label %205, label %__nv_pow.exit97, !dbg !37

__nv_isinfd.exit.i84:                             ; preds = %195
  %200 = tail call i32 @llvm.nvvm.d2i.lo(double %45) #7, !dbg !37
  %201 = and i32 %54, 2147483647, !dbg !37
  %202 = icmp eq i32 %201, 2146435072, !dbg !37
  %203 = icmp eq i32 %200, 0, !dbg !37
  %204 = select i1 %202, i1 %203, i1 false, !dbg !37
  br i1 %204, label %205, label %__nv_pow.exit97, !dbg !37

205:                                              ; preds = %198, %__nv_isinfd.exit.i84
  %.inv.i86 = icmp slt i32 %135, 0, !dbg !37
  %spec.select.i87 = select i1 %.inv.i86, i32 0, i32 2146435072, !dbg !37
  %or.cond3.i88 = select i1 %65, i1 %bIsOddInteger.1.i78, i1 false, !dbg !37
  %206 = and i32 %135, 2147483647, !dbg !37
  %207 = icmp ne i32 %206, 1071644672, !dbg !37
  %or.cond5.i89 = select i1 %or.cond3.i88, i1 %207, i1 false, !dbg !37
  %208 = or disjoint i32 %spec.select.i87, -2147483648, !dbg !37
  %thi.6.i90 = select i1 %or.cond5.i89, i32 %208, i32 %spec.select.i87, !dbg !37
  %209 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %thi.6.i90) #7, !dbg !37
  br label %__nv_pow.exit97, !dbg !37

__nv_pow.exit97:                                  ; preds = %198, %157, %162, %164, %183, %__nv_isinfd.exit.i84, %205
  %t.6.i79 = phi double [ %t.2.i77, %157 ], [ %188, %183 ], [ %209, %205 ], [ %t.2.i77, %__nv_isinfd.exit.i84 ], [ %158, %164 ], [ %158, %162 ], [ %t.2.i77, %198 ], !dbg !37
  %210 = fcmp oeq double %53, 0.000000e+00, !dbg !37
  %or.cond6.i80 = select i1 %133, i1 true, i1 %210, !dbg !37
  %t.7.i81 = select i1 %or.cond6.i80, double 1.000000e+00, double %t.6.i79, !dbg !37
  %211 = tail call double asm "div.rn.f64 $0, $1, $2;", "=l,l,l"(double 1.000000e+00, double %t.7.i) #7, !dbg !38
  %212 = tail call double asm "div.rn.f64 $0, $1, $2;", "=l,l,l"(double 1.000000e+00, double %t.7.i81) #7, !dbg !38
  %213 = fmul double %211, %43, !dbg !39
  %214 = fmul double %212, %44, !dbg !39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i25), !dbg !40
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i.i26), !dbg !40
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %216 = icmp eq i32 %215, 350, !dbg !40
  br i1 %216, label %220, label %217, !dbg !40

217:                                              ; preds = %__nv_pow.exit97
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %219 = icmp eq i32 %218, 370, !dbg !40
  br i1 %219, label %220, label %277, !dbg !40

220:                                              ; preds = %217, %__nv_pow.exit97
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %222 = icmp eq i32 %221, 200, !dbg !40
  br i1 %222, label %229, label %223, !dbg !40

223:                                              ; preds = %220
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %225 = icmp eq i32 %224, 350, !dbg !40
  br i1 %225, label %229, label %226, !dbg !40

226:                                              ; preds = %223
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %228 = icmp eq i32 %227, 370, !dbg !40
  br i1 %228, label %229, label %__nv_isinfd.exit.i.i39, !dbg !40

229:                                              ; preds = %226, %223, %220
  %230 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !40
  %231 = fcmp oeq double %230, 0x7FF0000000000000, !dbg !40
  br i1 %231, label %238, label %240, !dbg !40

__nv_isinfd.exit.i.i39:                           ; preds = %226
  %232 = tail call i32 @llvm.nvvm.d2i.lo(double %213) #7, !dbg !40
  %233 = tail call i32 @llvm.nvvm.d2i.hi(double %213) #7, !dbg !40
  %234 = and i32 %233, 2147483647, !dbg !40
  %235 = icmp eq i32 %234, 2146435072, !dbg !40
  %236 = icmp eq i32 %232, 0, !dbg !40
  %237 = select i1 %235, i1 %236, i1 false, !dbg !40
  br i1 %237, label %238, label %__nv_isinfd.exit.i.i39._crit_edge, !dbg !40

__nv_isinfd.exit.i.i39._crit_edge:                ; preds = %__nv_isinfd.exit.i.i39
  %.pre118 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !40
  br label %240, !dbg !40

238:                                              ; preds = %229, %__nv_isinfd.exit.i.i39
  %239 = tail call double @llvm.nvvm.mul.rn.d(double %213, double 0.000000e+00) #7, !dbg !40
  br label %__internal_trig_reduction_kerneld.exit.i.i41, !dbg !40

240:                                              ; preds = %__nv_isinfd.exit.i.i39._crit_edge, %229
  %.pre-phi119 = phi double [ %.pre118, %__nv_isinfd.exit.i.i39._crit_edge ], [ %230, %229 ], !dbg !40
  %241 = fmul double %213, 0x3FE45F306DC9C883, !dbg !40
  %242 = tail call i32 @llvm.nvvm.d2i.rn(double %241) #7, !dbg !40
  store i32 %242, ptr %q.i.i.i26, align 4, !dbg !40
  %243 = sitofp i32 %242 to double, !dbg !40
  %244 = fneg double %243, !dbg !40
  %245 = tail call double @llvm.nvvm.fma.rn.d(double %244, double 0x3FF921FB54442D18, double %213) #7, !dbg !40
  %246 = tail call double @llvm.nvvm.fma.rn.d(double %244, double 0x3C91A62633145C00, double %245) #7, !dbg !40
  %247 = tail call double @llvm.nvvm.fma.rn.d(double %244, double 0x397B839A252049C0, double %246) #7, !dbg !40
  %248 = fcmp ult double %.pre-phi119, 0x41E0000000000000, !dbg !40
  br i1 %248, label %__internal_trig_reduction_kerneld.exit.i.i41, label %249, !dbg !40

249:                                              ; preds = %240
  %250 = call fastcc double @__internal_trig_reduction_slowpathd(double %213, ptr nonnull %q.i.i.i26) #7, !dbg !40
  %.pre100 = load i32, ptr %q.i.i.i26, align 4, !dbg !40
  br label %__internal_trig_reduction_kerneld.exit.i.i41, !dbg !40

__internal_trig_reduction_kerneld.exit.i.i41:     ; preds = %240, %249, %238
  %i.i.0.i43 = phi i32 [ 0, %238 ], [ %.pre100, %249 ], [ %242, %240 ], !dbg !40
  %.01.i44 = phi double [ %239, %238 ], [ %250, %249 ], [ %247, %240 ], !dbg !40
  %251 = tail call double @llvm.nvvm.mul.rn.d(double %.01.i44, double %.01.i44) #7, !dbg !40
  %252 = tail call double @llvm.nvvm.fma.rn.d(double 0xBDA8FF8320FD8164, double %251, double 0x3E21EEA7C1EF8528) #7, !dbg !40
  %253 = tail call double @llvm.nvvm.fma.rn.d(double %252, double %251, double 0xBE927E4F8E06E6D9) #7, !dbg !40
  %254 = tail call double @llvm.nvvm.fma.rn.d(double %253, double %251, double 0x3EFA01A019DDBCE9) #7, !dbg !40
  %255 = tail call double @llvm.nvvm.fma.rn.d(double %254, double %251, double 0xBF56C16C16C15D47) #7, !dbg !40
  %256 = tail call double @llvm.nvvm.fma.rn.d(double %255, double %251, double 0x3FA5555555555551) #7, !dbg !40
  %257 = tail call double @llvm.nvvm.fma.rn.d(double %256, double %251, double -5.000000e-01) #7, !dbg !40
  %258 = tail call double @llvm.nvvm.fma.rn.d(double %257, double %251, double 1.000000e+00) #7, !dbg !40
  %259 = tail call double @llvm.nvvm.fma.rn.d(double 0x3DE5DB65F9785EBA, double %251, double 0xBE5AE5F12CB0D246) #7, !dbg !40
  %260 = tail call double @llvm.nvvm.fma.rn.d(double %259, double %251, double 0x3EC71DE369ACE392) #7, !dbg !40
  %261 = tail call double @llvm.nvvm.fma.rn.d(double %260, double %251, double 0xBF2A01A019DB62A1) #7, !dbg !40
  %262 = tail call double @llvm.nvvm.fma.rn.d(double %261, double %251, double 0x3F81111111110818) #7, !dbg !40
  %263 = tail call double @llvm.nvvm.fma.rn.d(double %262, double %251, double 0xBFC5555555555554) #7, !dbg !40
  %264 = tail call double @llvm.nvvm.fma.rn.d(double %263, double %251, double 0.000000e+00) #7, !dbg !40
  %265 = tail call double @llvm.nvvm.fma.rn.d(double %264, double %.01.i44, double %.01.i44) #7, !dbg !40
  %266 = tail call i32 @llvm.nvvm.d2i.hi(double %265) #7, !dbg !40
  %267 = tail call i32 @llvm.nvvm.d2i.lo(double %265) #7, !dbg !40
  %268 = xor i32 %266, -2147483648, !dbg !40
  %269 = tail call double @llvm.nvvm.lohi.i2d(i32 %267, i32 %268) #7, !dbg !40
  %270 = and i32 %i.i.0.i43, 1, !dbg !40
  %.not4.i45 = icmp eq i32 %270, 0, !dbg !40
  %spec.select1.i = select i1 %.not4.i45, double %258, double %269, !dbg !40
  %271 = and i32 %i.i.0.i43, 2, !dbg !40
  %.not5.i46 = icmp eq i32 %271, 0, !dbg !40
  br i1 %.not5.i46, label %__nv_cos.exit, label %272, !dbg !40

272:                                              ; preds = %__internal_trig_reduction_kerneld.exit.i.i41
  %273 = tail call i32 @llvm.nvvm.d2i.hi(double %spec.select1.i) #7, !dbg !40
  %274 = tail call i32 @llvm.nvvm.d2i.lo(double %spec.select1.i) #7, !dbg !40
  %275 = xor i32 %273, -2147483648, !dbg !40
  %276 = tail call double @llvm.nvvm.lohi.i2d(i32 %274, i32 %275) #7, !dbg !40
  br label %__nv_cos.exit, !dbg !40

277:                                              ; preds = %217
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %279 = icmp eq i32 %278, 200, !dbg !40
  br i1 %279, label %286, label %280, !dbg !40

280:                                              ; preds = %277
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %282 = icmp eq i32 %281, 350, !dbg !40
  br i1 %282, label %286, label %283, !dbg !40

283:                                              ; preds = %280
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %285 = icmp eq i32 %284, 370, !dbg !40
  br i1 %285, label %286, label %__nv_isinfd.exit.i27, !dbg !40

286:                                              ; preds = %283, %280, %277
  %287 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !40
  %288 = fcmp oeq double %287, 0x7FF0000000000000, !dbg !40
  br i1 %288, label %295, label %297, !dbg !40

__nv_isinfd.exit.i27:                             ; preds = %283
  %289 = tail call i32 @llvm.nvvm.d2i.lo(double %213) #7, !dbg !40
  %290 = tail call i32 @llvm.nvvm.d2i.hi(double %213) #7, !dbg !40
  %291 = and i32 %290, 2147483647, !dbg !40
  %292 = icmp eq i32 %291, 2146435072, !dbg !40
  %293 = icmp eq i32 %289, 0, !dbg !40
  %294 = select i1 %292, i1 %293, i1 false, !dbg !40
  br i1 %294, label %295, label %__nv_isinfd.exit.i27._crit_edge, !dbg !40

__nv_isinfd.exit.i27._crit_edge:                  ; preds = %__nv_isinfd.exit.i27
  %.pre120 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !40
  br label %297, !dbg !40

295:                                              ; preds = %286, %__nv_isinfd.exit.i27
  %296 = tail call double @llvm.nvvm.mul.rn.d(double %213, double 0.000000e+00) #7, !dbg !40
  br label %__internal_sin_cos_kerneld.exit.i31, !dbg !40

297:                                              ; preds = %__nv_isinfd.exit.i27._crit_edge, %286
  %.pre-phi121 = phi double [ %.pre120, %__nv_isinfd.exit.i27._crit_edge ], [ %287, %286 ], !dbg !40
  %298 = fmul double %213, 0x3FE45F306DC9C883, !dbg !40
  %299 = tail call i32 @llvm.nvvm.d2i.rn(double %298) #7, !dbg !40
  store i32 %299, ptr %q.i.i25, align 4, !dbg !40
  %300 = sitofp i32 %299 to double, !dbg !40
  %301 = fneg double %300, !dbg !40
  %302 = tail call double @llvm.nvvm.fma.rn.d(double %301, double 0x3FF921FB54442D18, double %213) #7, !dbg !40
  %303 = tail call double @llvm.nvvm.fma.rn.d(double %301, double 0x3C91A62633145C00, double %302) #7, !dbg !40
  %304 = tail call double @llvm.nvvm.fma.rn.d(double %301, double 0x397B839A252049C0, double %303) #7, !dbg !40
  %305 = fcmp ult double %.pre-phi121, 0x41E0000000000000, !dbg !40
  br i1 %305, label %__internal_trig_reduction_kerneld.exit.i29, label %306, !dbg !40

306:                                              ; preds = %297
  %307 = call fastcc double @__internal_trig_reduction_slowpathd(double %213, ptr nonnull %q.i.i25) #7, !dbg !40
  %.pre = load i32, ptr %q.i.i25, align 4, !dbg !40
  br label %__internal_trig_reduction_kerneld.exit.i29, !dbg !40

__internal_trig_reduction_kerneld.exit.i29:       ; preds = %306, %297
  %308 = phi i32 [ %.pre, %306 ], [ %299, %297 ], !dbg !40
  %t.i1.0.i30 = phi double [ %307, %306 ], [ %304, %297 ], !dbg !40
  %309 = add nsw i32 %308, 1, !dbg !40
  br label %__internal_sin_cos_kerneld.exit.i31, !dbg !40

__internal_sin_cos_kerneld.exit.i31:              ; preds = %__internal_trig_reduction_kerneld.exit.i29, %295
  %i.0.i32 = phi i32 [ 1, %295 ], [ %309, %__internal_trig_reduction_kerneld.exit.i29 ], !dbg !40
  %z.0.i33 = phi double [ %296, %295 ], [ %t.i1.0.i30, %__internal_trig_reduction_kerneld.exit.i29 ], !dbg !40
  %310 = and i32 %i.0.i32, 1, !dbg !40
  %311 = shl nuw nsw i32 %310, 3, !dbg !40
  %312 = zext nneg i32 %311 to i64, !dbg !40
  %313 = getelementptr inbounds double, ptr addrspace(1) @__cudart_sin_cos_coeffs, i64 %312, !dbg !40
  %314 = tail call double @llvm.nvvm.mul.rn.d(double %z.0.i33, double %z.0.i33) #7, !dbg !40
  %.not.i34 = icmp eq i32 %310, 0, !dbg !40
  %315 = select i1 %.not.i34, double 0x3DE5DB65F9785EBA, double 0xBDA8FF8320FD8164, !dbg !40
  %316 = getelementptr inbounds i8, ptr addrspace(1) %313, i64 8, !dbg !40
  %317 = load double, ptr addrspace(1) %316, align 8, !dbg !40
  %318 = tail call double @llvm.nvvm.fma.rn.d(double %315, double %314, double %317) #7, !dbg !40
  %319 = getelementptr inbounds i8, ptr addrspace(1) %313, i64 16, !dbg !40
  %320 = load double, ptr addrspace(1) %319, align 8, !dbg !40
  %321 = tail call double @llvm.nvvm.fma.rn.d(double %318, double %314, double %320) #7, !dbg !40
  %322 = getelementptr inbounds i8, ptr addrspace(1) %313, i64 24, !dbg !40
  %323 = load double, ptr addrspace(1) %322, align 8, !dbg !40
  %324 = tail call double @llvm.nvvm.fma.rn.d(double %321, double %314, double %323) #7, !dbg !40
  %325 = getelementptr inbounds i8, ptr addrspace(1) %313, i64 32, !dbg !40
  %326 = load double, ptr addrspace(1) %325, align 8, !dbg !40
  %327 = tail call double @llvm.nvvm.fma.rn.d(double %324, double %314, double %326) #7, !dbg !40
  %328 = getelementptr inbounds i8, ptr addrspace(1) %313, i64 40, !dbg !40
  %329 = load double, ptr addrspace(1) %328, align 8, !dbg !40
  %330 = tail call double @llvm.nvvm.fma.rn.d(double %327, double %314, double %329) #7, !dbg !40
  %331 = getelementptr inbounds i8, ptr addrspace(1) %313, i64 48, !dbg !40
  %332 = load double, ptr addrspace(1) %331, align 8, !dbg !40
  %333 = tail call double @llvm.nvvm.fma.rn.d(double %330, double %314, double %332) #7, !dbg !40
  %334 = tail call double @llvm.nvvm.fma.rn.d(double %333, double %z.0.i33, double %z.0.i33) #7, !dbg !40
  %335 = tail call double @llvm.nvvm.fma.rn.d(double %333, double %314, double 1.000000e+00) #7, !dbg !40
  %spec.select2.i35 = select i1 %.not.i34, double %334, double %335, !dbg !40
  %336 = and i32 %i.0.i32, 2, !dbg !40
  %.not3.i36 = icmp eq i32 %336, 0, !dbg !40
  %337 = tail call double @llvm.nvvm.fma.rn.d(double %spec.select2.i35, double -1.000000e+00, double 0.000000e+00) #7, !dbg !40
  %.1.i37 = select i1 %.not3.i36, double %spec.select2.i35, double %337, !dbg !40
  br label %__nv_cos.exit, !dbg !40

__nv_cos.exit:                                    ; preds = %__internal_trig_reduction_kerneld.exit.i.i41, %272, %__internal_sin_cos_kerneld.exit.i31
  %.0.i38 = phi double [ %.1.i37, %__internal_sin_cos_kerneld.exit.i31 ], [ %276, %272 ], [ %spec.select1.i, %__internal_trig_reduction_kerneld.exit.i.i41 ], !dbg !40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i25), !dbg !40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i.i26), !dbg !40
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i47), !dbg !40
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i.i48), !dbg !40
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %339 = icmp eq i32 %338, 350, !dbg !40
  br i1 %339, label %343, label %340, !dbg !40

340:                                              ; preds = %__nv_cos.exit
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %342 = icmp eq i32 %341, 370, !dbg !40
  br i1 %342, label %343, label %400, !dbg !40

343:                                              ; preds = %340, %__nv_cos.exit
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %345 = icmp eq i32 %344, 200, !dbg !40
  br i1 %345, label %352, label %346, !dbg !40

346:                                              ; preds = %343
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %348 = icmp eq i32 %347, 350, !dbg !40
  br i1 %348, label %352, label %349, !dbg !40

349:                                              ; preds = %346
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %351 = icmp eq i32 %350, 370, !dbg !40
  br i1 %351, label %352, label %__nv_isinfd.exit.i.i61, !dbg !40

352:                                              ; preds = %349, %346, %343
  %353 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !40
  %354 = fcmp oeq double %353, 0x7FF0000000000000, !dbg !40
  br i1 %354, label %361, label %363, !dbg !40

__nv_isinfd.exit.i.i61:                           ; preds = %349
  %355 = tail call i32 @llvm.nvvm.d2i.lo(double %214) #7, !dbg !40
  %356 = tail call i32 @llvm.nvvm.d2i.hi(double %214) #7, !dbg !40
  %357 = and i32 %356, 2147483647, !dbg !40
  %358 = icmp eq i32 %357, 2146435072, !dbg !40
  %359 = icmp eq i32 %355, 0, !dbg !40
  %360 = select i1 %358, i1 %359, i1 false, !dbg !40
  br i1 %360, label %361, label %__nv_isinfd.exit.i.i61._crit_edge, !dbg !40

__nv_isinfd.exit.i.i61._crit_edge:                ; preds = %__nv_isinfd.exit.i.i61
  %.pre114 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !40
  br label %363, !dbg !40

361:                                              ; preds = %352, %__nv_isinfd.exit.i.i61
  %362 = tail call double @llvm.nvvm.mul.rn.d(double %214, double 0.000000e+00) #7, !dbg !40
  br label %__internal_trig_reduction_kerneld.exit.i.i63, !dbg !40

363:                                              ; preds = %__nv_isinfd.exit.i.i61._crit_edge, %352
  %.pre-phi115 = phi double [ %.pre114, %__nv_isinfd.exit.i.i61._crit_edge ], [ %353, %352 ], !dbg !40
  %364 = fmul double %214, 0x3FE45F306DC9C883, !dbg !40
  %365 = tail call i32 @llvm.nvvm.d2i.rn(double %364) #7, !dbg !40
  store i32 %365, ptr %q.i.i.i48, align 4, !dbg !40
  %366 = sitofp i32 %365 to double, !dbg !40
  %367 = fneg double %366, !dbg !40
  %368 = tail call double @llvm.nvvm.fma.rn.d(double %367, double 0x3FF921FB54442D18, double %214) #7, !dbg !40
  %369 = tail call double @llvm.nvvm.fma.rn.d(double %367, double 0x3C91A62633145C00, double %368) #7, !dbg !40
  %370 = tail call double @llvm.nvvm.fma.rn.d(double %367, double 0x397B839A252049C0, double %369) #7, !dbg !40
  %371 = fcmp ult double %.pre-phi115, 0x41E0000000000000, !dbg !40
  br i1 %371, label %__internal_trig_reduction_kerneld.exit.i.i63, label %372, !dbg !40

372:                                              ; preds = %363
  %373 = call fastcc double @__internal_trig_reduction_slowpathd(double %214, ptr nonnull %q.i.i.i48) #7, !dbg !40
  %.pre102 = load i32, ptr %q.i.i.i48, align 4, !dbg !40
  br label %__internal_trig_reduction_kerneld.exit.i.i63, !dbg !40

__internal_trig_reduction_kerneld.exit.i.i63:     ; preds = %363, %372, %361
  %i.i.0.i65 = phi i32 [ 0, %361 ], [ %.pre102, %372 ], [ %365, %363 ], !dbg !40
  %.01.i66 = phi double [ %362, %361 ], [ %373, %372 ], [ %370, %363 ], !dbg !40
  %374 = tail call double @llvm.nvvm.mul.rn.d(double %.01.i66, double %.01.i66) #7, !dbg !40
  %375 = tail call double @llvm.nvvm.fma.rn.d(double 0xBDA8FF8320FD8164, double %374, double 0x3E21EEA7C1EF8528) #7, !dbg !40
  %376 = tail call double @llvm.nvvm.fma.rn.d(double %375, double %374, double 0xBE927E4F8E06E6D9) #7, !dbg !40
  %377 = tail call double @llvm.nvvm.fma.rn.d(double %376, double %374, double 0x3EFA01A019DDBCE9) #7, !dbg !40
  %378 = tail call double @llvm.nvvm.fma.rn.d(double %377, double %374, double 0xBF56C16C16C15D47) #7, !dbg !40
  %379 = tail call double @llvm.nvvm.fma.rn.d(double %378, double %374, double 0x3FA5555555555551) #7, !dbg !40
  %380 = tail call double @llvm.nvvm.fma.rn.d(double %379, double %374, double -5.000000e-01) #7, !dbg !40
  %381 = tail call double @llvm.nvvm.fma.rn.d(double %380, double %374, double 1.000000e+00) #7, !dbg !40
  %382 = tail call double @llvm.nvvm.fma.rn.d(double 0x3DE5DB65F9785EBA, double %374, double 0xBE5AE5F12CB0D246) #7, !dbg !40
  %383 = tail call double @llvm.nvvm.fma.rn.d(double %382, double %374, double 0x3EC71DE369ACE392) #7, !dbg !40
  %384 = tail call double @llvm.nvvm.fma.rn.d(double %383, double %374, double 0xBF2A01A019DB62A1) #7, !dbg !40
  %385 = tail call double @llvm.nvvm.fma.rn.d(double %384, double %374, double 0x3F81111111110818) #7, !dbg !40
  %386 = tail call double @llvm.nvvm.fma.rn.d(double %385, double %374, double 0xBFC5555555555554) #7, !dbg !40
  %387 = tail call double @llvm.nvvm.fma.rn.d(double %386, double %374, double 0.000000e+00) #7, !dbg !40
  %388 = tail call double @llvm.nvvm.fma.rn.d(double %387, double %.01.i66, double %.01.i66) #7, !dbg !40
  %389 = tail call i32 @llvm.nvvm.d2i.hi(double %388) #7, !dbg !40
  %390 = tail call i32 @llvm.nvvm.d2i.lo(double %388) #7, !dbg !40
  %391 = xor i32 %389, -2147483648, !dbg !40
  %392 = tail call double @llvm.nvvm.lohi.i2d(i32 %390, i32 %391) #7, !dbg !40
  %393 = and i32 %i.i.0.i65, 1, !dbg !40
  %.not4.i67 = icmp eq i32 %393, 0, !dbg !40
  %spec.select1.i68 = select i1 %.not4.i67, double %381, double %392, !dbg !40
  %394 = and i32 %i.i.0.i65, 2, !dbg !40
  %.not5.i69 = icmp eq i32 %394, 0, !dbg !40
  br i1 %.not5.i69, label %__nv_cos.exit70, label %395, !dbg !40

395:                                              ; preds = %__internal_trig_reduction_kerneld.exit.i.i63
  %396 = tail call i32 @llvm.nvvm.d2i.hi(double %spec.select1.i68) #7, !dbg !40
  %397 = tail call i32 @llvm.nvvm.d2i.lo(double %spec.select1.i68) #7, !dbg !40
  %398 = xor i32 %396, -2147483648, !dbg !40
  %399 = tail call double @llvm.nvvm.lohi.i2d(i32 %397, i32 %398) #7, !dbg !40
  br label %__nv_cos.exit70, !dbg !40

400:                                              ; preds = %340
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %402 = icmp eq i32 %401, 200, !dbg !40
  br i1 %402, label %409, label %403, !dbg !40

403:                                              ; preds = %400
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %405 = icmp eq i32 %404, 350, !dbg !40
  br i1 %405, label %409, label %406, !dbg !40

406:                                              ; preds = %403
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !40
  %408 = icmp eq i32 %407, 370, !dbg !40
  br i1 %408, label %409, label %__nv_isinfd.exit.i49, !dbg !40

409:                                              ; preds = %406, %403, %400
  %410 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !40
  %411 = fcmp oeq double %410, 0x7FF0000000000000, !dbg !40
  br i1 %411, label %418, label %420, !dbg !40

__nv_isinfd.exit.i49:                             ; preds = %406
  %412 = tail call i32 @llvm.nvvm.d2i.lo(double %214) #7, !dbg !40
  %413 = tail call i32 @llvm.nvvm.d2i.hi(double %214) #7, !dbg !40
  %414 = and i32 %413, 2147483647, !dbg !40
  %415 = icmp eq i32 %414, 2146435072, !dbg !40
  %416 = icmp eq i32 %412, 0, !dbg !40
  %417 = select i1 %415, i1 %416, i1 false, !dbg !40
  br i1 %417, label %418, label %__nv_isinfd.exit.i49._crit_edge, !dbg !40

__nv_isinfd.exit.i49._crit_edge:                  ; preds = %__nv_isinfd.exit.i49
  %.pre116 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !40
  br label %420, !dbg !40

418:                                              ; preds = %409, %__nv_isinfd.exit.i49
  %419 = tail call double @llvm.nvvm.mul.rn.d(double %214, double 0.000000e+00) #7, !dbg !40
  br label %__internal_sin_cos_kerneld.exit.i53, !dbg !40

420:                                              ; preds = %__nv_isinfd.exit.i49._crit_edge, %409
  %.pre-phi117 = phi double [ %.pre116, %__nv_isinfd.exit.i49._crit_edge ], [ %410, %409 ], !dbg !40
  %421 = fmul double %214, 0x3FE45F306DC9C883, !dbg !40
  %422 = tail call i32 @llvm.nvvm.d2i.rn(double %421) #7, !dbg !40
  store i32 %422, ptr %q.i.i47, align 4, !dbg !40
  %423 = sitofp i32 %422 to double, !dbg !40
  %424 = fneg double %423, !dbg !40
  %425 = tail call double @llvm.nvvm.fma.rn.d(double %424, double 0x3FF921FB54442D18, double %214) #7, !dbg !40
  %426 = tail call double @llvm.nvvm.fma.rn.d(double %424, double 0x3C91A62633145C00, double %425) #7, !dbg !40
  %427 = tail call double @llvm.nvvm.fma.rn.d(double %424, double 0x397B839A252049C0, double %426) #7, !dbg !40
  %428 = fcmp ult double %.pre-phi117, 0x41E0000000000000, !dbg !40
  br i1 %428, label %__internal_trig_reduction_kerneld.exit.i51, label %429, !dbg !40

429:                                              ; preds = %420
  %430 = call fastcc double @__internal_trig_reduction_slowpathd(double %214, ptr nonnull %q.i.i47) #7, !dbg !40
  %.pre101 = load i32, ptr %q.i.i47, align 4, !dbg !40
  br label %__internal_trig_reduction_kerneld.exit.i51, !dbg !40

__internal_trig_reduction_kerneld.exit.i51:       ; preds = %429, %420
  %431 = phi i32 [ %.pre101, %429 ], [ %422, %420 ], !dbg !40
  %t.i1.0.i52 = phi double [ %430, %429 ], [ %427, %420 ], !dbg !40
  %432 = add nsw i32 %431, 1, !dbg !40
  br label %__internal_sin_cos_kerneld.exit.i53, !dbg !40

__internal_sin_cos_kerneld.exit.i53:              ; preds = %__internal_trig_reduction_kerneld.exit.i51, %418
  %i.0.i54 = phi i32 [ 1, %418 ], [ %432, %__internal_trig_reduction_kerneld.exit.i51 ], !dbg !40
  %z.0.i55 = phi double [ %419, %418 ], [ %t.i1.0.i52, %__internal_trig_reduction_kerneld.exit.i51 ], !dbg !40
  %433 = and i32 %i.0.i54, 1, !dbg !40
  %434 = shl nuw nsw i32 %433, 3, !dbg !40
  %435 = zext nneg i32 %434 to i64, !dbg !40
  %436 = getelementptr inbounds double, ptr addrspace(1) @__cudart_sin_cos_coeffs, i64 %435, !dbg !40
  %437 = tail call double @llvm.nvvm.mul.rn.d(double %z.0.i55, double %z.0.i55) #7, !dbg !40
  %.not.i56 = icmp eq i32 %433, 0, !dbg !40
  %438 = select i1 %.not.i56, double 0x3DE5DB65F9785EBA, double 0xBDA8FF8320FD8164, !dbg !40
  %439 = getelementptr inbounds i8, ptr addrspace(1) %436, i64 8, !dbg !40
  %440 = load double, ptr addrspace(1) %439, align 8, !dbg !40
  %441 = tail call double @llvm.nvvm.fma.rn.d(double %438, double %437, double %440) #7, !dbg !40
  %442 = getelementptr inbounds i8, ptr addrspace(1) %436, i64 16, !dbg !40
  %443 = load double, ptr addrspace(1) %442, align 8, !dbg !40
  %444 = tail call double @llvm.nvvm.fma.rn.d(double %441, double %437, double %443) #7, !dbg !40
  %445 = getelementptr inbounds i8, ptr addrspace(1) %436, i64 24, !dbg !40
  %446 = load double, ptr addrspace(1) %445, align 8, !dbg !40
  %447 = tail call double @llvm.nvvm.fma.rn.d(double %444, double %437, double %446) #7, !dbg !40
  %448 = getelementptr inbounds i8, ptr addrspace(1) %436, i64 32, !dbg !40
  %449 = load double, ptr addrspace(1) %448, align 8, !dbg !40
  %450 = tail call double @llvm.nvvm.fma.rn.d(double %447, double %437, double %449) #7, !dbg !40
  %451 = getelementptr inbounds i8, ptr addrspace(1) %436, i64 40, !dbg !40
  %452 = load double, ptr addrspace(1) %451, align 8, !dbg !40
  %453 = tail call double @llvm.nvvm.fma.rn.d(double %450, double %437, double %452) #7, !dbg !40
  %454 = getelementptr inbounds i8, ptr addrspace(1) %436, i64 48, !dbg !40
  %455 = load double, ptr addrspace(1) %454, align 8, !dbg !40
  %456 = tail call double @llvm.nvvm.fma.rn.d(double %453, double %437, double %455) #7, !dbg !40
  %457 = tail call double @llvm.nvvm.fma.rn.d(double %456, double %z.0.i55, double %z.0.i55) #7, !dbg !40
  %458 = tail call double @llvm.nvvm.fma.rn.d(double %456, double %437, double 1.000000e+00) #7, !dbg !40
  %spec.select2.i57 = select i1 %.not.i56, double %457, double %458, !dbg !40
  %459 = and i32 %i.0.i54, 2, !dbg !40
  %.not3.i58 = icmp eq i32 %459, 0, !dbg !40
  %460 = tail call double @llvm.nvvm.fma.rn.d(double %spec.select2.i57, double -1.000000e+00, double 0.000000e+00) #7, !dbg !40
  %.1.i59 = select i1 %.not3.i58, double %spec.select2.i57, double %460, !dbg !40
  br label %__nv_cos.exit70, !dbg !40

__nv_cos.exit70:                                  ; preds = %__internal_trig_reduction_kerneld.exit.i.i63, %395, %__internal_sin_cos_kerneld.exit.i53
  %.0.i60 = phi double [ %.1.i59, %__internal_sin_cos_kerneld.exit.i53 ], [ %399, %395 ], [ %spec.select1.i68, %__internal_trig_reduction_kerneld.exit.i.i63 ], !dbg !40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i47), !dbg !40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i.i48), !dbg !40
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i), !dbg !41
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i.i), !dbg !41
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %462 = icmp eq i32 %461, 350, !dbg !41
  br i1 %462, label %466, label %463, !dbg !41

463:                                              ; preds = %__nv_cos.exit70
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %465 = icmp eq i32 %464, 370, !dbg !41
  br i1 %465, label %466, label %519, !dbg !41

466:                                              ; preds = %463, %__nv_cos.exit70
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %468 = icmp eq i32 %467, 200, !dbg !41
  br i1 %468, label %475, label %469, !dbg !41

469:                                              ; preds = %466
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %471 = icmp eq i32 %470, 350, !dbg !41
  br i1 %471, label %475, label %472, !dbg !41

472:                                              ; preds = %469
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %474 = icmp eq i32 %473, 370, !dbg !41
  br i1 %474, label %475, label %__nv_isinfd.exit.i.i, !dbg !41

475:                                              ; preds = %472, %469, %466
  %476 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !41
  %477 = fcmp oeq double %476, 0x7FF0000000000000, !dbg !41
  br i1 %477, label %484, label %486, !dbg !41

__nv_isinfd.exit.i.i:                             ; preds = %472
  %478 = tail call i32 @llvm.nvvm.d2i.lo(double %213) #7, !dbg !41
  %479 = tail call i32 @llvm.nvvm.d2i.hi(double %213) #7, !dbg !41
  %480 = and i32 %479, 2147483647, !dbg !41
  %481 = icmp eq i32 %480, 2146435072, !dbg !41
  %482 = icmp eq i32 %478, 0, !dbg !41
  %483 = select i1 %481, i1 %482, i1 false, !dbg !41
  br i1 %483, label %484, label %__nv_isinfd.exit.i.i._crit_edge, !dbg !41

__nv_isinfd.exit.i.i._crit_edge:                  ; preds = %__nv_isinfd.exit.i.i
  %.pre110 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !41
  br label %486, !dbg !41

484:                                              ; preds = %475, %__nv_isinfd.exit.i.i
  %485 = tail call double @llvm.nvvm.mul.rn.d(double %213, double 0.000000e+00) #7, !dbg !41
  br label %__internal_trig_reduction_kerneld.exit.i.i, !dbg !41

486:                                              ; preds = %__nv_isinfd.exit.i.i._crit_edge, %475
  %.pre-phi111 = phi double [ %.pre110, %__nv_isinfd.exit.i.i._crit_edge ], [ %476, %475 ], !dbg !41
  %487 = fmul double %213, 0x3FE45F306DC9C883, !dbg !41
  %488 = tail call i32 @llvm.nvvm.d2i.rn(double %487) #7, !dbg !41
  store i32 %488, ptr %q.i.i.i, align 4, !dbg !41
  %489 = sitofp i32 %488 to double, !dbg !41
  %490 = fneg double %489, !dbg !41
  %491 = tail call double @llvm.nvvm.fma.rn.d(double %490, double 0x3FF921FB54442D18, double %213) #7, !dbg !41
  %492 = tail call double @llvm.nvvm.fma.rn.d(double %490, double 0x3C91A62633145C00, double %491) #7, !dbg !41
  %493 = tail call double @llvm.nvvm.fma.rn.d(double %490, double 0x397B839A252049C0, double %492) #7, !dbg !41
  %494 = fcmp ult double %.pre-phi111, 0x41E0000000000000, !dbg !41
  br i1 %494, label %__internal_trig_reduction_kerneld.exit.i.i, label %495, !dbg !41

495:                                              ; preds = %486
  %496 = call fastcc double @__internal_trig_reduction_slowpathd(double %213, ptr nonnull %q.i.i.i) #7, !dbg !41
  %.pre104 = load i32, ptr %q.i.i.i, align 4, !dbg !41
  br label %__internal_trig_reduction_kerneld.exit.i.i, !dbg !41

__internal_trig_reduction_kerneld.exit.i.i:       ; preds = %486, %495, %484
  %i.i.0.i = phi i32 [ 0, %484 ], [ %.pre104, %495 ], [ %488, %486 ], !dbg !41
  %.01.i = phi double [ %485, %484 ], [ %496, %495 ], [ %493, %486 ], !dbg !41
  %497 = tail call double @llvm.nvvm.mul.rn.d(double %.01.i, double %.01.i) #7, !dbg !41
  %498 = tail call double @llvm.nvvm.fma.rn.d(double 0xBDA8FF8320FD8164, double %497, double 0x3E21EEA7C1EF8528) #7, !dbg !41
  %499 = tail call double @llvm.nvvm.fma.rn.d(double %498, double %497, double 0xBE927E4F8E06E6D9) #7, !dbg !41
  %500 = tail call double @llvm.nvvm.fma.rn.d(double %499, double %497, double 0x3EFA01A019DDBCE9) #7, !dbg !41
  %501 = tail call double @llvm.nvvm.fma.rn.d(double %500, double %497, double 0xBF56C16C16C15D47) #7, !dbg !41
  %502 = tail call double @llvm.nvvm.fma.rn.d(double %501, double %497, double 0x3FA5555555555551) #7, !dbg !41
  %503 = tail call double @llvm.nvvm.fma.rn.d(double %502, double %497, double -5.000000e-01) #7, !dbg !41
  %504 = tail call double @llvm.nvvm.fma.rn.d(double %503, double %497, double 1.000000e+00) #7, !dbg !41
  %505 = tail call double @llvm.nvvm.fma.rn.d(double 0x3DE5DB65F9785EBA, double %497, double 0xBE5AE5F12CB0D246) #7, !dbg !41
  %506 = tail call double @llvm.nvvm.fma.rn.d(double %505, double %497, double 0x3EC71DE369ACE392) #7, !dbg !41
  %507 = tail call double @llvm.nvvm.fma.rn.d(double %506, double %497, double 0xBF2A01A019DB62A1) #7, !dbg !41
  %508 = tail call double @llvm.nvvm.fma.rn.d(double %507, double %497, double 0x3F81111111110818) #7, !dbg !41
  %509 = tail call double @llvm.nvvm.fma.rn.d(double %508, double %497, double 0xBFC5555555555554) #7, !dbg !41
  %510 = tail call double @llvm.nvvm.fma.rn.d(double %509, double %497, double 0.000000e+00) #7, !dbg !41
  %511 = tail call double @llvm.nvvm.fma.rn.d(double %510, double %.01.i, double %.01.i) #7, !dbg !41
  %512 = and i32 %i.i.0.i, 1, !dbg !41
  %.not4.i = icmp eq i32 %512, 0, !dbg !41
  %spec.select.i = select i1 %.not4.i, double %511, double %504, !dbg !41
  %513 = and i32 %i.i.0.i, 2, !dbg !41
  %.not5.i = icmp eq i32 %513, 0, !dbg !41
  br i1 %.not5.i, label %__nv_sin.exit, label %514, !dbg !41

514:                                              ; preds = %__internal_trig_reduction_kerneld.exit.i.i
  %515 = tail call i32 @llvm.nvvm.d2i.hi(double %spec.select.i) #7, !dbg !41
  %516 = tail call i32 @llvm.nvvm.d2i.lo(double %spec.select.i) #7, !dbg !41
  %517 = xor i32 %515, -2147483648, !dbg !41
  %518 = tail call double @llvm.nvvm.lohi.i2d(i32 %516, i32 %517) #7, !dbg !41
  br label %__nv_sin.exit, !dbg !41

519:                                              ; preds = %463
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %521 = icmp eq i32 %520, 200, !dbg !41
  br i1 %521, label %528, label %522, !dbg !41

522:                                              ; preds = %519
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %524 = icmp eq i32 %523, 350, !dbg !41
  br i1 %524, label %528, label %525, !dbg !41

525:                                              ; preds = %522
  %526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %527 = icmp eq i32 %526, 370, !dbg !41
  br i1 %527, label %528, label %__nv_isinfd.exit.i, !dbg !41

528:                                              ; preds = %525, %522, %519
  %529 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !41
  %530 = fcmp oeq double %529, 0x7FF0000000000000, !dbg !41
  br i1 %530, label %537, label %539, !dbg !41

__nv_isinfd.exit.i:                               ; preds = %525
  %531 = tail call i32 @llvm.nvvm.d2i.lo(double %213) #7, !dbg !41
  %532 = tail call i32 @llvm.nvvm.d2i.hi(double %213) #7, !dbg !41
  %533 = and i32 %532, 2147483647, !dbg !41
  %534 = icmp eq i32 %533, 2146435072, !dbg !41
  %535 = icmp eq i32 %531, 0, !dbg !41
  %536 = select i1 %534, i1 %535, i1 false, !dbg !41
  br i1 %536, label %537, label %__nv_isinfd.exit.i._crit_edge, !dbg !41

__nv_isinfd.exit.i._crit_edge:                    ; preds = %__nv_isinfd.exit.i
  %.pre112 = tail call double @llvm.nvvm.fabs.d(double %213) #7, !dbg !41
  br label %539, !dbg !41

537:                                              ; preds = %528, %__nv_isinfd.exit.i
  %538 = tail call double @llvm.nvvm.mul.rn.d(double %213, double 0.000000e+00) #7, !dbg !41
  br label %__internal_sin_cos_kerneld.exit.i, !dbg !41

539:                                              ; preds = %__nv_isinfd.exit.i._crit_edge, %528
  %.pre-phi113 = phi double [ %.pre112, %__nv_isinfd.exit.i._crit_edge ], [ %529, %528 ], !dbg !41
  %540 = fmul double %213, 0x3FE45F306DC9C883, !dbg !41
  %541 = tail call i32 @llvm.nvvm.d2i.rn(double %540) #7, !dbg !41
  store i32 %541, ptr %q.i.i, align 4, !dbg !41
  %542 = sitofp i32 %541 to double, !dbg !41
  %543 = fneg double %542, !dbg !41
  %544 = tail call double @llvm.nvvm.fma.rn.d(double %543, double 0x3FF921FB54442D18, double %213) #7, !dbg !41
  %545 = tail call double @llvm.nvvm.fma.rn.d(double %543, double 0x3C91A62633145C00, double %544) #7, !dbg !41
  %546 = tail call double @llvm.nvvm.fma.rn.d(double %543, double 0x397B839A252049C0, double %545) #7, !dbg !41
  %547 = fcmp ult double %.pre-phi113, 0x41E0000000000000, !dbg !41
  br i1 %547, label %__internal_sin_cos_kerneld.exit.i, label %548, !dbg !41

548:                                              ; preds = %539
  %549 = call fastcc double @__internal_trig_reduction_slowpathd(double %213, ptr nonnull %q.i.i) #7, !dbg !41
  %.pre103 = load i32, ptr %q.i.i, align 4, !dbg !41
  br label %__internal_sin_cos_kerneld.exit.i, !dbg !41

__internal_sin_cos_kerneld.exit.i:                ; preds = %539, %548, %537
  %i.0.i = phi i32 [ 0, %537 ], [ %.pre103, %548 ], [ %541, %539 ], !dbg !41
  %z.0.i = phi double [ %538, %537 ], [ %549, %548 ], [ %546, %539 ], !dbg !41
  %550 = and i32 %i.0.i, 1, !dbg !41
  %551 = shl nuw nsw i32 %550, 3, !dbg !41
  %552 = zext nneg i32 %551 to i64, !dbg !41
  %553 = getelementptr inbounds double, ptr addrspace(1) @__cudart_sin_cos_coeffs, i64 %552, !dbg !41
  %554 = tail call double @llvm.nvvm.mul.rn.d(double %z.0.i, double %z.0.i) #7, !dbg !41
  %.not.i = icmp eq i32 %550, 0, !dbg !41
  %555 = select i1 %.not.i, double 0x3DE5DB65F9785EBA, double 0xBDA8FF8320FD8164, !dbg !41
  %556 = getelementptr inbounds i8, ptr addrspace(1) %553, i64 8, !dbg !41
  %557 = load double, ptr addrspace(1) %556, align 8, !dbg !41
  %558 = tail call double @llvm.nvvm.fma.rn.d(double %555, double %554, double %557) #7, !dbg !41
  %559 = getelementptr inbounds i8, ptr addrspace(1) %553, i64 16, !dbg !41
  %560 = load double, ptr addrspace(1) %559, align 8, !dbg !41
  %561 = tail call double @llvm.nvvm.fma.rn.d(double %558, double %554, double %560) #7, !dbg !41
  %562 = getelementptr inbounds i8, ptr addrspace(1) %553, i64 24, !dbg !41
  %563 = load double, ptr addrspace(1) %562, align 8, !dbg !41
  %564 = tail call double @llvm.nvvm.fma.rn.d(double %561, double %554, double %563) #7, !dbg !41
  %565 = getelementptr inbounds i8, ptr addrspace(1) %553, i64 32, !dbg !41
  %566 = load double, ptr addrspace(1) %565, align 8, !dbg !41
  %567 = tail call double @llvm.nvvm.fma.rn.d(double %564, double %554, double %566) #7, !dbg !41
  %568 = getelementptr inbounds i8, ptr addrspace(1) %553, i64 40, !dbg !41
  %569 = load double, ptr addrspace(1) %568, align 8, !dbg !41
  %570 = tail call double @llvm.nvvm.fma.rn.d(double %567, double %554, double %569) #7, !dbg !41
  %571 = getelementptr inbounds i8, ptr addrspace(1) %553, i64 48, !dbg !41
  %572 = load double, ptr addrspace(1) %571, align 8, !dbg !41
  %573 = tail call double @llvm.nvvm.fma.rn.d(double %570, double %554, double %572) #7, !dbg !41
  %574 = tail call double @llvm.nvvm.fma.rn.d(double %573, double %z.0.i, double %z.0.i) #7, !dbg !41
  %575 = tail call double @llvm.nvvm.fma.rn.d(double %573, double %554, double 1.000000e+00) #7, !dbg !41
  %spec.select2.i = select i1 %.not.i, double %574, double %575, !dbg !41
  %576 = and i32 %i.0.i, 2, !dbg !41
  %.not3.i = icmp eq i32 %576, 0, !dbg !41
  %577 = tail call double @llvm.nvvm.fma.rn.d(double %spec.select2.i, double -1.000000e+00, double 0.000000e+00) #7, !dbg !41
  %.1.i = select i1 %.not3.i, double %spec.select2.i, double %577, !dbg !41
  br label %__nv_sin.exit, !dbg !41

__nv_sin.exit:                                    ; preds = %__internal_trig_reduction_kerneld.exit.i.i, %514, %__internal_sin_cos_kerneld.exit.i
  %.0.i = phi double [ %.1.i, %__internal_sin_cos_kerneld.exit.i ], [ %518, %514 ], [ %spec.select.i, %__internal_trig_reduction_kerneld.exit.i.i ], !dbg !41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i), !dbg !41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i.i), !dbg !41
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i1), !dbg !41
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q.i.i.i2), !dbg !41
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %579 = icmp eq i32 %578, 350, !dbg !41
  br i1 %579, label %583, label %580, !dbg !41

580:                                              ; preds = %__nv_sin.exit
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %582 = icmp eq i32 %581, 370, !dbg !41
  br i1 %582, label %583, label %636, !dbg !41

583:                                              ; preds = %580, %__nv_sin.exit
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %585 = icmp eq i32 %584, 200, !dbg !41
  br i1 %585, label %592, label %586, !dbg !41

586:                                              ; preds = %583
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %588 = icmp eq i32 %587, 350, !dbg !41
  br i1 %588, label %592, label %589, !dbg !41

589:                                              ; preds = %586
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %591 = icmp eq i32 %590, 370, !dbg !41
  br i1 %591, label %592, label %__nv_isinfd.exit.i.i15, !dbg !41

592:                                              ; preds = %589, %586, %583
  %593 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !41
  %594 = fcmp oeq double %593, 0x7FF0000000000000, !dbg !41
  br i1 %594, label %601, label %603, !dbg !41

__nv_isinfd.exit.i.i15:                           ; preds = %589
  %595 = tail call i32 @llvm.nvvm.d2i.lo(double %214) #7, !dbg !41
  %596 = tail call i32 @llvm.nvvm.d2i.hi(double %214) #7, !dbg !41
  %597 = and i32 %596, 2147483647, !dbg !41
  %598 = icmp eq i32 %597, 2146435072, !dbg !41
  %599 = icmp eq i32 %595, 0, !dbg !41
  %600 = select i1 %598, i1 %599, i1 false, !dbg !41
  br i1 %600, label %601, label %__nv_isinfd.exit.i.i15._crit_edge, !dbg !41

__nv_isinfd.exit.i.i15._crit_edge:                ; preds = %__nv_isinfd.exit.i.i15
  %.pre107 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !41
  br label %603, !dbg !41

601:                                              ; preds = %592, %__nv_isinfd.exit.i.i15
  %602 = tail call double @llvm.nvvm.mul.rn.d(double %214, double 0.000000e+00) #7, !dbg !41
  br label %__internal_trig_reduction_kerneld.exit.i.i17, !dbg !41

603:                                              ; preds = %__nv_isinfd.exit.i.i15._crit_edge, %592
  %.pre-phi = phi double [ %.pre107, %__nv_isinfd.exit.i.i15._crit_edge ], [ %593, %592 ], !dbg !41
  %604 = fmul double %214, 0x3FE45F306DC9C883, !dbg !41
  %605 = tail call i32 @llvm.nvvm.d2i.rn(double %604) #7, !dbg !41
  store i32 %605, ptr %q.i.i.i2, align 4, !dbg !41
  %606 = sitofp i32 %605 to double, !dbg !41
  %607 = fneg double %606, !dbg !41
  %608 = tail call double @llvm.nvvm.fma.rn.d(double %607, double 0x3FF921FB54442D18, double %214) #7, !dbg !41
  %609 = tail call double @llvm.nvvm.fma.rn.d(double %607, double 0x3C91A62633145C00, double %608) #7, !dbg !41
  %610 = tail call double @llvm.nvvm.fma.rn.d(double %607, double 0x397B839A252049C0, double %609) #7, !dbg !41
  %611 = fcmp ult double %.pre-phi, 0x41E0000000000000, !dbg !41
  br i1 %611, label %__internal_trig_reduction_kerneld.exit.i.i17, label %612, !dbg !41

612:                                              ; preds = %603
  %613 = call fastcc double @__internal_trig_reduction_slowpathd(double %214, ptr nonnull %q.i.i.i2) #7, !dbg !41
  %.pre106 = load i32, ptr %q.i.i.i2, align 4, !dbg !41
  br label %__internal_trig_reduction_kerneld.exit.i.i17, !dbg !41

__internal_trig_reduction_kerneld.exit.i.i17:     ; preds = %603, %612, %601
  %i.i.0.i19 = phi i32 [ 0, %601 ], [ %.pre106, %612 ], [ %605, %603 ], !dbg !41
  %.01.i20 = phi double [ %602, %601 ], [ %613, %612 ], [ %610, %603 ], !dbg !41
  %614 = tail call double @llvm.nvvm.mul.rn.d(double %.01.i20, double %.01.i20) #7, !dbg !41
  %615 = tail call double @llvm.nvvm.fma.rn.d(double 0xBDA8FF8320FD8164, double %614, double 0x3E21EEA7C1EF8528) #7, !dbg !41
  %616 = tail call double @llvm.nvvm.fma.rn.d(double %615, double %614, double 0xBE927E4F8E06E6D9) #7, !dbg !41
  %617 = tail call double @llvm.nvvm.fma.rn.d(double %616, double %614, double 0x3EFA01A019DDBCE9) #7, !dbg !41
  %618 = tail call double @llvm.nvvm.fma.rn.d(double %617, double %614, double 0xBF56C16C16C15D47) #7, !dbg !41
  %619 = tail call double @llvm.nvvm.fma.rn.d(double %618, double %614, double 0x3FA5555555555551) #7, !dbg !41
  %620 = tail call double @llvm.nvvm.fma.rn.d(double %619, double %614, double -5.000000e-01) #7, !dbg !41
  %621 = tail call double @llvm.nvvm.fma.rn.d(double %620, double %614, double 1.000000e+00) #7, !dbg !41
  %622 = tail call double @llvm.nvvm.fma.rn.d(double 0x3DE5DB65F9785EBA, double %614, double 0xBE5AE5F12CB0D246) #7, !dbg !41
  %623 = tail call double @llvm.nvvm.fma.rn.d(double %622, double %614, double 0x3EC71DE369ACE392) #7, !dbg !41
  %624 = tail call double @llvm.nvvm.fma.rn.d(double %623, double %614, double 0xBF2A01A019DB62A1) #7, !dbg !41
  %625 = tail call double @llvm.nvvm.fma.rn.d(double %624, double %614, double 0x3F81111111110818) #7, !dbg !41
  %626 = tail call double @llvm.nvvm.fma.rn.d(double %625, double %614, double 0xBFC5555555555554) #7, !dbg !41
  %627 = tail call double @llvm.nvvm.fma.rn.d(double %626, double %614, double 0.000000e+00) #7, !dbg !41
  %628 = tail call double @llvm.nvvm.fma.rn.d(double %627, double %.01.i20, double %.01.i20) #7, !dbg !41
  %629 = and i32 %i.i.0.i19, 1, !dbg !41
  %.not4.i21 = icmp eq i32 %629, 0, !dbg !41
  %spec.select.i22 = select i1 %.not4.i21, double %628, double %621, !dbg !41
  %630 = and i32 %i.i.0.i19, 2, !dbg !41
  %.not5.i23 = icmp eq i32 %630, 0, !dbg !41
  br i1 %.not5.i23, label %__nv_sin.exit24, label %631, !dbg !41

631:                                              ; preds = %__internal_trig_reduction_kerneld.exit.i.i17
  %632 = tail call i32 @llvm.nvvm.d2i.hi(double %spec.select.i22) #7, !dbg !41
  %633 = tail call i32 @llvm.nvvm.d2i.lo(double %spec.select.i22) #7, !dbg !41
  %634 = xor i32 %632, -2147483648, !dbg !41
  %635 = tail call double @llvm.nvvm.lohi.i2d(i32 %633, i32 %634) #7, !dbg !41
  br label %__nv_sin.exit24, !dbg !41

636:                                              ; preds = %580
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %638 = icmp eq i32 %637, 200, !dbg !41
  br i1 %638, label %645, label %639, !dbg !41

639:                                              ; preds = %636
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %641 = icmp eq i32 %640, 350, !dbg !41
  br i1 %641, label %645, label %642, !dbg !41

642:                                              ; preds = %639
  %643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7, !dbg !41
  %644 = icmp eq i32 %643, 370, !dbg !41
  br i1 %644, label %645, label %__nv_isinfd.exit.i3, !dbg !41

645:                                              ; preds = %642, %639, %636
  %646 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !41
  %647 = fcmp oeq double %646, 0x7FF0000000000000, !dbg !41
  br i1 %647, label %654, label %656, !dbg !41

__nv_isinfd.exit.i3:                              ; preds = %642
  %648 = tail call i32 @llvm.nvvm.d2i.lo(double %214) #7, !dbg !41
  %649 = tail call i32 @llvm.nvvm.d2i.hi(double %214) #7, !dbg !41
  %650 = and i32 %649, 2147483647, !dbg !41
  %651 = icmp eq i32 %650, 2146435072, !dbg !41
  %652 = icmp eq i32 %648, 0, !dbg !41
  %653 = select i1 %651, i1 %652, i1 false, !dbg !41
  br i1 %653, label %654, label %__nv_isinfd.exit.i3._crit_edge, !dbg !41

__nv_isinfd.exit.i3._crit_edge:                   ; preds = %__nv_isinfd.exit.i3
  %.pre108 = tail call double @llvm.nvvm.fabs.d(double %214) #7, !dbg !41
  br label %656, !dbg !41

654:                                              ; preds = %645, %__nv_isinfd.exit.i3
  %655 = tail call double @llvm.nvvm.mul.rn.d(double %214, double 0.000000e+00) #7, !dbg !41
  br label %__internal_sin_cos_kerneld.exit.i7, !dbg !41

656:                                              ; preds = %__nv_isinfd.exit.i3._crit_edge, %645
  %.pre-phi109 = phi double [ %.pre108, %__nv_isinfd.exit.i3._crit_edge ], [ %646, %645 ], !dbg !41
  %657 = fmul double %214, 0x3FE45F306DC9C883, !dbg !41
  %658 = tail call i32 @llvm.nvvm.d2i.rn(double %657) #7, !dbg !41
  store i32 %658, ptr %q.i.i1, align 4, !dbg !41
  %659 = sitofp i32 %658 to double, !dbg !41
  %660 = fneg double %659, !dbg !41
  %661 = tail call double @llvm.nvvm.fma.rn.d(double %660, double 0x3FF921FB54442D18, double %214) #7, !dbg !41
  %662 = tail call double @llvm.nvvm.fma.rn.d(double %660, double 0x3C91A62633145C00, double %661) #7, !dbg !41
  %663 = tail call double @llvm.nvvm.fma.rn.d(double %660, double 0x397B839A252049C0, double %662) #7, !dbg !41
  %664 = fcmp ult double %.pre-phi109, 0x41E0000000000000, !dbg !41
  br i1 %664, label %__internal_sin_cos_kerneld.exit.i7, label %665, !dbg !41

665:                                              ; preds = %656
  %666 = call fastcc double @__internal_trig_reduction_slowpathd(double %214, ptr nonnull %q.i.i1) #7, !dbg !41
  %.pre105 = load i32, ptr %q.i.i1, align 4, !dbg !41
  br label %__internal_sin_cos_kerneld.exit.i7, !dbg !41

__internal_sin_cos_kerneld.exit.i7:               ; preds = %656, %665, %654
  %i.0.i8 = phi i32 [ 0, %654 ], [ %.pre105, %665 ], [ %658, %656 ], !dbg !41
  %z.0.i9 = phi double [ %655, %654 ], [ %666, %665 ], [ %663, %656 ], !dbg !41
  %667 = and i32 %i.0.i8, 1, !dbg !41
  %668 = shl nuw nsw i32 %667, 3, !dbg !41
  %669 = zext nneg i32 %668 to i64, !dbg !41
  %670 = getelementptr inbounds double, ptr addrspace(1) @__cudart_sin_cos_coeffs, i64 %669, !dbg !41
  %671 = tail call double @llvm.nvvm.mul.rn.d(double %z.0.i9, double %z.0.i9) #7, !dbg !41
  %.not.i10 = icmp eq i32 %667, 0, !dbg !41
  %672 = select i1 %.not.i10, double 0x3DE5DB65F9785EBA, double 0xBDA8FF8320FD8164, !dbg !41
  %673 = getelementptr inbounds i8, ptr addrspace(1) %670, i64 8, !dbg !41
  %674 = load double, ptr addrspace(1) %673, align 8, !dbg !41
  %675 = tail call double @llvm.nvvm.fma.rn.d(double %672, double %671, double %674) #7, !dbg !41
  %676 = getelementptr inbounds i8, ptr addrspace(1) %670, i64 16, !dbg !41
  %677 = load double, ptr addrspace(1) %676, align 8, !dbg !41
  %678 = tail call double @llvm.nvvm.fma.rn.d(double %675, double %671, double %677) #7, !dbg !41
  %679 = getelementptr inbounds i8, ptr addrspace(1) %670, i64 24, !dbg !41
  %680 = load double, ptr addrspace(1) %679, align 8, !dbg !41
  %681 = tail call double @llvm.nvvm.fma.rn.d(double %678, double %671, double %680) #7, !dbg !41
  %682 = getelementptr inbounds i8, ptr addrspace(1) %670, i64 32, !dbg !41
  %683 = load double, ptr addrspace(1) %682, align 8, !dbg !41
  %684 = tail call double @llvm.nvvm.fma.rn.d(double %681, double %671, double %683) #7, !dbg !41
  %685 = getelementptr inbounds i8, ptr addrspace(1) %670, i64 40, !dbg !41
  %686 = load double, ptr addrspace(1) %685, align 8, !dbg !41
  %687 = tail call double @llvm.nvvm.fma.rn.d(double %684, double %671, double %686) #7, !dbg !41
  %688 = getelementptr inbounds i8, ptr addrspace(1) %670, i64 48, !dbg !41
  %689 = load double, ptr addrspace(1) %688, align 8, !dbg !41
  %690 = tail call double @llvm.nvvm.fma.rn.d(double %687, double %671, double %689) #7, !dbg !41
  %691 = tail call double @llvm.nvvm.fma.rn.d(double %690, double %z.0.i9, double %z.0.i9) #7, !dbg !41
  %692 = tail call double @llvm.nvvm.fma.rn.d(double %690, double %671, double 1.000000e+00) #7, !dbg !41
  %spec.select2.i11 = select i1 %.not.i10, double %691, double %692, !dbg !41
  %693 = and i32 %i.0.i8, 2, !dbg !41
  %.not3.i12 = icmp eq i32 %693, 0, !dbg !41
  %694 = tail call double @llvm.nvvm.fma.rn.d(double %spec.select2.i11, double -1.000000e+00, double 0.000000e+00) #7, !dbg !41
  %.1.i13 = select i1 %.not3.i12, double %spec.select2.i11, double %694, !dbg !41
  br label %__nv_sin.exit24, !dbg !41

__nv_sin.exit24:                                  ; preds = %__internal_trig_reduction_kerneld.exit.i.i17, %631, %__internal_sin_cos_kerneld.exit.i7
  %.0.i14 = phi double [ %.1.i13, %__internal_sin_cos_kerneld.exit.i7 ], [ %635, %631 ], [ %spec.select.i22, %__internal_trig_reduction_kerneld.exit.i.i17 ], !dbg !41
  %695 = fptrunc double %.0.i60 to float, !dbg !42
  %696 = fptrunc double %.0.i38 to float, !dbg !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i1), !dbg !41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q.i.i.i2), !dbg !41
  %697 = fptrunc double %.0.i to float, !dbg !43
  %698 = fptrunc double %.0.i14 to float, !dbg !43
  %699 = shl i32 %19, 7, !dbg !44
  %700 = add i32 %699, %.decomposed, !dbg !45
  %701 = sext i32 %700 to i64, !dbg !46
  %702 = getelementptr float, ptr addrspace(1) %2, i64 %701, !dbg !46
  %703 = bitcast float %696 to i32, !dbg !47
  %704 = bitcast float %695 to i32, !dbg !47
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %703, i32 %704, ptr addrspace(1) %702, i1 %18) #7, !dbg !47
  %705 = getelementptr float, ptr addrspace(1) %3, i64 %701, !dbg !48
  %706 = bitcast float %697 to i32, !dbg !49
  %707 = bitcast float %698 to i32, !dbg !49
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %706, i32 %707, ptr addrspace(1) %705, i1 %18) #7, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.fabs.d(double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.d2i.lo(double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.d2i.hi(double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.mul.rn.d(double, double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.d2i.rn(double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.fma.rn.d(double, double, double) #0

; Function Attrs: noinline nounwind memory(argmem: write)
define internal fastcc double @__internal_trig_reduction_slowpathd(double %a, ptr nocapture writeonly %quadrant) unnamed_addr #2 {
  %result = alloca [5 x i64], align 8
  %1 = tail call i32 @llvm.nvvm.d2i.hi(double %a) #7
  %2 = and i32 %1, -2147483648
  %3 = lshr i32 %1, 20
  %4 = and i32 %3, 2047
  %5 = icmp eq i32 %4, 2047
  br i1 %5, label %89, label %6

6:                                                ; preds = %0
  %7 = add nsw i32 %4, -1024
  %8 = bitcast double %a to i64
  %9 = shl i64 %8, 11
  %10 = or i64 %9, -9223372036854775808
  %11 = lshr i32 %7, 6
  %12 = sub nsw i32 15, %11
  %13 = sub nsw i32 19, %11
  %min.cond = icmp ult i32 %7, 128
  %min = select i1 %min.cond, i32 18, i32 %13
  %14 = icmp slt i32 %12, %min
  br i1 %14, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %6, %.lr.ph
  %q.08 = phi i32 [ %24, %.lr.ph ], [ %12, %6 ]
  %p.122.07 = phi i64 [ %20, %.lr.ph ], [ 0, %6 ]
  %15 = sext i32 %q.08 to i64
  %16 = getelementptr inbounds [18 x i64], ptr addrspace(1) @__cudart_i2opi_d, i64 0, i64 %15
  %17 = load i64, ptr addrspace(1) %16, align 8
  %18 = tail call { i64, i64 } asm "{\0A\09.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;\0A\09mov.b64         {alo,ahi}, $2;    \0A\09mov.b64         {blo,bhi}, $3;    \0A\09mov.b64         {clo,chi}, $4;    \0A\09mad.lo.cc.u32   r0, alo, blo, clo;\0A\09madc.hi.cc.u32  r1, alo, blo, chi;\0A\09madc.hi.u32     r2, alo, bhi,   0;\0A\09mad.lo.cc.u32   r1, alo, bhi,  r1;\0A\09madc.hi.cc.u32  r2, ahi, blo,  r2;\0A\09madc.hi.u32     r3, ahi, bhi,   0;\0A\09mad.lo.cc.u32   r1, ahi, blo,  r1;\0A\09madc.lo.cc.u32  r2, ahi, bhi,  r2;\0A\09addc.u32        r3,  r3,   0;     \0A\09mov.b64         $0, {r0,r1};      \0A\09mov.b64         $1, {r2,r3};      \0A\09}", "=l,=l,l,l,l"(i64 %17, i64 %10, i64 %p.122.07) #8, !srcloc !51
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = sub nsw i32 %q.08, %12
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [5 x i64], ptr %result, i64 0, i64 %22
  store i64 %19, ptr %23, align 8
  %24 = add nsw i32 %q.08, 1
  %25 = icmp slt i32 %24, %min
  br i1 %25, label %.lr.ph, label %._crit_edge, !llvm.loop !52

._crit_edge:                                      ; preds = %.lr.ph, %6
  %p.122.0.lcssa = phi i64 [ 0, %6 ], [ %20, %.lr.ph ]
  %q.0.lcssa = phi i32 [ %12, %6 ], [ %min, %.lr.ph ]
  %26 = sub nsw i32 %q.0.lcssa, %12
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [5 x i64], ptr %result, i64 0, i64 %27
  store i64 %p.122.0.lcssa, ptr %28, align 8
  %29 = and i32 %3, 63
  %30 = getelementptr inbounds i8, ptr %result, i64 16
  %31 = load i64, ptr %30, align 8
  %32 = getelementptr inbounds i8, ptr %result, i64 24
  %33 = load i64, ptr %32, align 8
  %.not = icmp eq i32 %29, 0
  br i1 %.not, label %46, label %34

34:                                               ; preds = %._crit_edge
  %35 = sub nuw nsw i32 64, %29
  %36 = zext nneg i32 %29 to i64
  %37 = shl i64 %33, %36
  %38 = zext nneg i32 %35 to i64
  %39 = lshr i64 %31, %38
  %40 = or i64 %37, %39
  %41 = shl i64 %31, %36
  %42 = getelementptr inbounds i8, ptr %result, i64 8
  %43 = load i64, ptr %42, align 8
  %44 = lshr i64 %43, %38
  %45 = or i64 %44, %41
  br label %46

46:                                               ; preds = %34, %._crit_edge
  %hi.0 = phi i64 [ %40, %34 ], [ %33, %._crit_edge ]
  %lo.0 = phi i64 [ %45, %34 ], [ %31, %._crit_edge ]
  %47 = lshr i64 %hi.0, 62
  %48 = trunc nuw nsw i64 %47 to i32
  %49 = tail call i64 @llvm.fshl.i64(i64 %hi.0, i64 %lo.0, i64 2)
  %50 = shl i64 %lo.0, 2
  %51 = lshr i64 %49, 63
  %52 = trunc nuw nsw i64 %51 to i32
  %53 = add nuw nsw i32 %52, %48
  %.not4 = icmp eq i32 %2, 0
  %54 = sub nsw i32 0, %53
  %spec.select = select i1 %.not4, i32 %53, i32 %54
  store i32 %spec.select, ptr %quadrant, align 4
  %.not5 = icmp sgt i64 %49, -1
  br i1 %.not5, label %60, label %55

55:                                               ; preds = %46
  %56 = tail call { i64, i64 } asm "{\0A\09.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;\0A\09mov.b64         {a0,a1}, $2;\0A\09mov.b64         {a2,a3}, $3;\0A\09mov.b64         {b0,b1}, $4;\0A\09mov.b64         {b2,b3}, $5;\0A\09sub.cc.u32      r0, a0, b0; \0A\09subc.cc.u32     r1, a1, b1; \0A\09subc.cc.u32     r2, a2, b2; \0A\09subc.u32        r3, a3, b3; \0A\09mov.b64         $0, {r0,r1};\0A\09mov.b64         $1, {r2,r3};\0A\09}", "=l,=l,l,l,l,l"(i64 0, i64 0, i64 %50, i64 %49) #8, !srcloc !54
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = extractvalue { i64, i64 } %56, 1
  %59 = xor i32 %2, -2147483648
  br label %60

60:                                               ; preds = %55, %46
  %hi.1 = phi i64 [ %58, %55 ], [ %49, %46 ]
  %lo.1 = phi i64 [ %57, %55 ], [ %50, %46 ]
  %s.0 = phi i32 [ %59, %55 ], [ %2, %46 ]
  %ctlz = tail call range(i64 0, 65) i64 @llvm.ctlz.i64(i64 %hi.1, i1 false)
  %ctlz.trunc = trunc nuw nsw i64 %ctlz to i32
  %.not6 = icmp eq i32 %ctlz.trunc, 0
  br i1 %.not6, label %67, label %61

61:                                               ; preds = %60
  %62 = shl i64 %hi.1, %ctlz
  %63 = sub nuw nsw i32 64, %ctlz.trunc
  %64 = zext nneg i32 %63 to i64
  %65 = lshr i64 %lo.1, %64
  %66 = or i64 %65, %62
  br label %67

67:                                               ; preds = %61, %60
  %hi.2 = phi i64 [ %66, %61 ], [ %hi.1, %60 ]
  %68 = tail call { i64, i64 } asm "{\0A\09.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;\0A\09mov.b64         {alo,ahi}, $2;   \0A\09mov.b64         {blo,bhi}, $3;   \0A\09mul.lo.u32      r0, alo, blo;    \0A\09mul.hi.u32      r1, alo, blo;    \0A\09mad.lo.cc.u32   r1, alo, bhi, r1;\0A\09madc.hi.u32     r2, alo, bhi,  0;\0A\09mad.lo.cc.u32   r1, ahi, blo, r1;\0A\09madc.hi.cc.u32  r2, ahi, blo, r2;\0A\09madc.hi.u32     r3, ahi, bhi,  0;\0A\09mad.lo.cc.u32   r2, ahi, bhi, r2;\0A\09addc.u32        r3, r3,  0;      \0A\09mov.b64         $0, {r0,r1};     \0A\09mov.b64         $1, {r2,r3};     \0A\09}", "=l,=l,l,l"(i64 %hi.2, i64 -3958705157555305931) #8, !srcloc !55
  %69 = extractvalue { i64, i64 } %68, 1
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = extractvalue { i64, i64 } %68, 0
  %73 = tail call { i64, i64 } asm "{\0A\09.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;\0A\09mov.b64         {a0,a1}, $2;\0A\09mov.b64         {a2,a3}, $3;\0A\09mov.b64         {b0,b1}, $4;\0A\09mov.b64         {b2,b3}, $5;\0A\09add.cc.u32      r0, a0, b0; \0A\09addc.cc.u32     r1, a1, b1; \0A\09addc.cc.u32     r2, a2, b2; \0A\09addc.u32        r3, a3, b3; \0A\09mov.b64         $0, {r0,r1};\0A\09mov.b64         $1, {r2,r3};\0A\09}", "=l,=l,l,l,l,l"(i64 %72, i64 %69, i64 %72, i64 %69) #8, !srcloc !56
  %74 = extractvalue { i64, i64 } %73, 1
  %75 = add nuw nsw i32 %ctlz.trunc, 1
  br label %76

76:                                               ; preds = %71, %67
  %hi.3 = phi i64 [ %74, %71 ], [ %69, %67 ]
  %e.0 = phi i32 [ %75, %71 ], [ %ctlz.trunc, %67 ]
  %77 = sub nuw nsw i32 1022, %e.0
  %78 = zext nneg i32 %77 to i64
  %79 = zext i32 %s.0 to i64
  %80 = shl nuw i64 %79, 32
  %81 = shl nuw nsw i64 %78, 52
  %82 = add i64 %hi.3, 1
  %83 = lshr i64 %82, 10
  %84 = add nuw nsw i64 %83, 1
  %85 = lshr i64 %84, 1
  %86 = add nuw nsw i64 %81, %85
  %87 = or i64 %86, %80
  %88 = bitcast i64 %87 to double
  br label %89

89:                                               ; preds = %0, %76
  %.0 = phi double [ %88, %76 ], [ %a, %0 ]
  ret double %.0
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.lohi.i2d(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #0

; Function Attrs: noinline nounwind
define internal fastcc double @__internal_accurate_pow(double %a, double %b) unnamed_addr #3 {
  %1 = tail call i32 @llvm.nvvm.d2i.hi(double %a) #7
  %2 = tail call i32 @llvm.nvvm.d2i.lo(double %a) #7
  %3 = lshr i32 %1, 20
  %4 = icmp ult i32 %1, 1048576
  br i1 %4, label %5, label %11

5:                                                ; preds = %0
  %6 = fmul double %a, 0x4350000000000000
  %7 = tail call i32 @llvm.nvvm.d2i.hi(double %6) #7
  %8 = tail call i32 @llvm.nvvm.d2i.lo(double %6) #7
  %9 = lshr i32 %7, 20
  %10 = add nsw i32 %9, -54
  br label %11

11:                                               ; preds = %5, %0
  %ilo.i.0 = phi i32 [ %8, %5 ], [ %2, %0 ]
  %ihi.i.0 = phi i32 [ %7, %5 ], [ %1, %0 ]
  %expo.i.0 = phi i32 [ %10, %5 ], [ %3, %0 ]
  %12 = add nsw i32 %expo.i.0, -1023
  %13 = and i32 %ihi.i.0, -2146435073
  %14 = or disjoint i32 %13, 1072693248
  %15 = tail call double @llvm.nvvm.lohi.i2d(i32 %ilo.i.0, i32 %14) #7
  %16 = icmp ugt i32 %14, 1073127582
  br i1 %16, label %17, label %__internal_log_ext_prec.exit

17:                                               ; preds = %11
  %18 = tail call i32 @llvm.nvvm.d2i.lo(double %15) #7
  %19 = tail call i32 @llvm.nvvm.d2i.hi(double %15) #7
  %20 = add i32 %19, -1048576
  %21 = tail call double @llvm.nvvm.lohi.i2d(i32 %18, i32 %20) #7
  %22 = add nsw i32 %expo.i.0, -1022
  br label %__internal_log_ext_prec.exit

__internal_log_ext_prec.exit:                     ; preds = %11, %17
  %m.i.0 = phi double [ %21, %17 ], [ %15, %11 ]
  %expo.i.1 = phi i32 [ %22, %17 ], [ %12, %11 ]
  %23 = fadd double %m.i.0, -1.000000e+00
  %24 = fadd double %m.i.0, 1.000000e+00
  %25 = tail call double @llvm.nvvm.rcp.approx.ftz.d(double %24) #7
  %26 = fneg double %24
  %27 = tail call double @llvm.nvvm.fma.rn.d(double %26, double %25, double 1.000000e+00) #7
  %28 = tail call double @llvm.nvvm.fma.rn.d(double %27, double %27, double %27) #7
  %29 = tail call double @llvm.nvvm.fma.rn.d(double %28, double %25, double %25) #7
  %30 = fmul double %23, %29
  %31 = fadd double %30, %30
  %32 = fmul double %31, %31
  %33 = tail call double @llvm.nvvm.fma.rn.d(double 0x3EB0F5FF7D2CAFE2, double %32, double 0x3ED0F5D241AD3B5A) #7
  %34 = tail call double @llvm.nvvm.fma.rn.d(double %33, double %32, double 0x3EF3B20A75488A3F) #7
  %35 = tail call double @llvm.nvvm.fma.rn.d(double %34, double %32, double 0x3F1745CDE4FAECD5) #7
  %36 = tail call double @llvm.nvvm.fma.rn.d(double %35, double %32, double 0x3F3C71C7258A578B) #7
  %37 = tail call double @llvm.nvvm.fma.rn.d(double %36, double %32, double 0x3F6249249242B910) #7
  %38 = tail call double @llvm.nvvm.fma.rn.d(double %37, double %32, double 0x3F89999999999DFB) #7
  %39 = fmul double %32, %38
  %40 = fsub double %23, %31
  %41 = fmul double %40, 2.000000e+00
  %42 = fneg double %31
  %43 = tail call double @llvm.nvvm.fma.rn.d(double %42, double %23, double %41) #7
  %44 = fmul double %29, %43
  %45 = fadd double %39, 0x3FB5555555555555
  %46 = fsub double 0x3FB5555555555555, %45
  %47 = fadd double %39, %46
  %48 = fadd double %47, 0xBC46A4CB00B9E7B0
  %49 = fadd double %45, %48
  %50 = fsub double %45, %49
  %51 = fadd double %48, %50
  %52 = tail call double @llvm.nvvm.mul.rn.d(double %31, double %31) #7
  %53 = fneg double %52
  %54 = tail call double @llvm.nvvm.fma.rn.d(double %31, double %31, double %53) #7
  %55 = tail call i32 @llvm.nvvm.d2i.lo(double %44) #7
  %56 = tail call i32 @llvm.nvvm.d2i.hi(double %44) #7
  %57 = add i32 %56, 1048576
  %58 = tail call double @llvm.nvvm.lohi.i2d(i32 %55, i32 %57) #7
  %59 = tail call double @llvm.nvvm.fma.rn.d(double %31, double %58, double %54) #7
  %60 = tail call double @llvm.nvvm.mul.rn.d(double %52, double %31) #7
  %61 = fneg double %60
  %62 = tail call double @llvm.nvvm.fma.rn.d(double %52, double %31, double %61) #7
  %63 = tail call double @llvm.nvvm.fma.rn.d(double %52, double %44, double %62) #7
  %64 = tail call double @llvm.nvvm.fma.rn.d(double %59, double %31, double %63) #7
  %65 = tail call double @llvm.nvvm.mul.rn.d(double %49, double %60) #7
  %66 = fneg double %65
  %67 = tail call double @llvm.nvvm.fma.rn.d(double %49, double %60, double %66) #7
  %68 = tail call double @llvm.nvvm.fma.rn.d(double %49, double %64, double %67) #7
  %69 = tail call double @llvm.nvvm.fma.rn.d(double %51, double %60, double %68) #7
  %70 = fadd double %65, %69
  %71 = fsub double %65, %70
  %72 = fadd double %69, %71
  %73 = fadd double %31, %70
  %74 = fsub double %31, %73
  %75 = fadd double %70, %74
  %76 = fadd double %72, %75
  %77 = fadd double %44, %76
  %78 = fadd double %73, %77
  %79 = fsub double %73, %78
  %80 = fadd double %77, %79
  %81 = xor i32 %expo.i.1, -2147483648
  %82 = tail call double @llvm.nvvm.lohi.i2d(i32 %81, i32 1127219200) #7
  %83 = tail call double @llvm.nvvm.lohi.i2d(i32 -2147483648, i32 1127219200) #7
  %84 = fsub double %82, %83
  %85 = tail call double @llvm.nvvm.fma.rn.d(double %84, double 0x3FE62E42FEFA39EF, double %78) #7
  %86 = fneg double %84
  %87 = tail call double @llvm.nvvm.fma.rn.d(double %86, double 0x3FE62E42FEFA39EF, double %85) #7
  %88 = fsub double %87, %78
  %89 = fsub double %80, %88
  %90 = tail call double @llvm.nvvm.fma.rn.d(double %84, double 0x3C7ABC9E3B39803F, double %89) #7
  %91 = fadd double %85, %90
  %92 = fsub double %85, %91
  %93 = fadd double %90, %92
  %94 = tail call i32 @llvm.nvvm.d2i.hi(double %b) #7
  %95 = tail call i32 @llvm.nvvm.d2i.lo(double %b) #7
  %96 = shl i32 %94, 1
  %97 = icmp ugt i32 %96, -33554433
  %98 = and i32 %94, -15728641
  %spec.select = select i1 %97, i32 %98, i32 %94
  %99 = tail call double @llvm.nvvm.lohi.i2d(i32 %95, i32 %spec.select) #7
  %100 = tail call double @llvm.nvvm.mul.rn.d(double %91, double %99) #7
  %101 = fneg double %100
  %102 = tail call double @llvm.nvvm.fma.rn.d(double %91, double %99, double %101) #7
  %103 = tail call double @llvm.nvvm.fma.rn.d(double %93, double %99, double %102) #7
  %104 = fadd double %100, %103
  %105 = tail call double @llvm.nvvm.fma.rn.d(double %104, double 0x3FF71547652B82FE, double 0x4338000000000000) #7
  %106 = tail call i32 @llvm.nvvm.d2i.lo(double %105) #7
  %107 = tail call double @llvm.nvvm.add.rn.d(double %105, double 0xC338000000000000) #7
  %108 = tail call double @llvm.nvvm.fma.rn.d(double %107, double 0xBFE62E42FEFA39EF, double %104) #7
  %109 = tail call double @llvm.nvvm.fma.rn.d(double %107, double 0xBC7ABC9E3B39803F, double %108) #7
  %110 = tail call double @llvm.nvvm.fma.rn.d(double 0x3E5ADE1569CE2BDF, double %109, double 0x3E928AF3FCA213EA) #7
  %111 = tail call double @llvm.nvvm.fma.rn.d(double %110, double %109, double 0x3EC71DEE62401315) #7
  %112 = tail call double @llvm.nvvm.fma.rn.d(double %111, double %109, double 0x3EFA01997C89EB71) #7
  %113 = tail call double @llvm.nvvm.fma.rn.d(double %112, double %109, double 0x3F2A01A014761F65) #7
  %114 = tail call double @llvm.nvvm.fma.rn.d(double %113, double %109, double 0x3F56C16C1852B7AF) #7
  %115 = tail call double @llvm.nvvm.fma.rn.d(double %114, double %109, double 0x3F81111111122322) #7
  %116 = tail call double @llvm.nvvm.fma.rn.d(double %115, double %109, double 0x3FA55555555502A1) #7
  %117 = tail call double @llvm.nvvm.fma.rn.d(double %116, double %109, double 0x3FC5555555555511) #7
  %118 = tail call double @llvm.nvvm.fma.rn.d(double %117, double %109, double 0x3FE000000000000B) #7
  %119 = tail call double @llvm.nvvm.fma.rn.d(double %118, double %109, double 1.000000e+00) #7
  %120 = tail call double @llvm.nvvm.fma.rn.d(double %119, double %109, double 1.000000e+00) #7
  %121 = tail call i32 @llvm.nvvm.d2i.lo(double %120) #7
  %122 = tail call i32 @llvm.nvvm.d2i.hi(double %120) #7
  %123 = shl i32 %106, 20
  %124 = add i32 %122, %123
  %125 = tail call double @llvm.nvvm.lohi.i2d(i32 %121, i32 %124) #7
  %126 = tail call i32 @llvm.nvvm.d2i.hi(double %104) #7
  %127 = bitcast i32 %126 to float
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7
  %.not = icmp eq i32 %128, 0
  %129 = tail call float @llvm.nvvm.fabs.ftz.f(float %127) #7
  %130 = tail call float @llvm.nvvm.fabs.f(float %127) #7
  %.02 = select i1 %.not, float %130, float %129
  %131 = fcmp olt float %.02, 0x4010C46560000000
  br i1 %131, label %__nv_exp.exit, label %__internal_fast_icmp_abs_lt.exit.i

__internal_fast_icmp_abs_lt.exit.i:               ; preds = %__internal_log_ext_prec.exit
  %132 = fcmp olt double %104, 0.000000e+00
  %133 = fadd double %104, 0x7FF0000000000000
  %z.i.0 = select i1 %132, double 0.000000e+00, double %133
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7
  %.not4 = icmp eq i32 %134, 0
  %.01 = select i1 %.not4, float %130, float %129
  %135 = fcmp olt float %.01, 0x4010E90000000000
  br i1 %135, label %136, label %__nv_exp.exit

136:                                              ; preds = %__internal_fast_icmp_abs_lt.exit.i
  %137 = sdiv i32 %106, 2
  %138 = shl i32 %137, 20
  %139 = add i32 %122, %138
  %140 = tail call double @llvm.nvvm.lohi.i2d(i32 %121, i32 %139) #7
  %141 = sub nsw i32 %106, %137
  %142 = shl i32 %141, 20
  %143 = add nsw i32 %142, 1072693248
  %144 = tail call double @llvm.nvvm.lohi.i2d(i32 0, i32 %143) #7
  %145 = fmul double %144, %140
  br label %__nv_exp.exit

__nv_exp.exit:                                    ; preds = %__internal_fast_icmp_abs_lt.exit.i, %136, %__internal_log_ext_prec.exit
  %z.i.2 = phi double [ %125, %__internal_log_ext_prec.exit ], [ %145, %136 ], [ %z.i.0, %__internal_fast_icmp_abs_lt.exit.i ]
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7
  %147 = icmp eq i32 %146, 200
  br i1 %147, label %154, label %148

148:                                              ; preds = %__nv_exp.exit
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7
  %150 = icmp eq i32 %149, 350
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.1) #7
  %153 = icmp eq i32 %152, 370
  br i1 %153, label %154, label %157

154:                                              ; preds = %151, %148, %__nv_exp.exit
  %155 = tail call double @llvm.nvvm.fabs.d(double %z.i.2) #7
  %156 = fcmp oeq double %155, 0x7FF0000000000000
  br label %__nv_isinfd.exit

157:                                              ; preds = %151
  %158 = tail call i32 @llvm.nvvm.d2i.lo(double %z.i.2) #7
  %159 = tail call i32 @llvm.nvvm.d2i.hi(double %z.i.2) #7
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 2146435072
  %162 = icmp eq i32 %158, 0
  %163 = select i1 %161, i1 %162, i1 false
  br label %__nv_isinfd.exit

__nv_isinfd.exit:                                 ; preds = %154, %157
  %.0.in = phi i1 [ %156, %154 ], [ %163, %157 ]
  %164 = fsub double %100, %104
  %165 = fadd double %103, %164
  %166 = tail call double @llvm.nvvm.fma.rn.d(double %z.i.2, double %165, double %z.i.2) #7
  %spec.select1 = select i1 %.0.in, double %z.i.2, double %166
  ret double %spec.select1
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.trunc.d(double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare double @llvm.nvvm.rcp.approx.ftz.d(double) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.add.rn.d(double, double) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.fshl.i64(i64, i64, i64) #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind memory(argmem: write) "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nounwind }
attributes #8 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ct33m6ck2e6qsmkfzbxbrztvwsjrjuazj2ex4kr24zxm25en4oxn.py", directory: "/opt/inductor_cache/t3")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 21, column: 21, scope: !7)
!15 = !DILocation(line: 22, column: 20, scope: !7)
!16 = !DILocation(line: 23, column: 18, scope: !7)
!17 = !DILocation(line: 28, column: 18, scope: !7)
!18 = !DILocation(line: 29, column: 32, scope: !7)
!19 = !DILocation(line: 29, column: 30, scope: !7)
!20 = !DILocation(line: 29, column: 44, scope: !7)
!21 = !DILocation(line: 29, column: 37, scope: !7)
!22 = !DILocation(line: 29, column: 95, scope: !7)
!23 = !DILocation(line: 30, column: 19, scope: !7)
!24 = !DILocation(line: 33, column: 39, scope: !7)
!25 = !DILocation(line: 33, column: 33, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 59, scope: !7)
!28 = !DILocation(line: 33, column: 52, scope: !7)
!29 = !DILocation(line: 33, column: 110, scope: !7)
!30 = !DILocation(line: 34, column: 33, scope: !7)
!31 = !DILocation(line: 36, column: 21, scope: !7)
!32 = !DILocation(line: 37, column: 37, scope: !7)
!33 = !DILocation(line: 39, column: 21, scope: !7)
!34 = !DILocation(line: 39, column: 15, scope: !7)
!35 = !DILocation(line: 40, column: 21, scope: !7)
!36 = !DILocation(line: 42, column: 20, scope: !7)
!37 = !DILocation(line: 43, column: 33, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 49, column: 20, scope: !7)
!40 = !DILocation(line: 50, column: 26, scope: !7)
!41 = !DILocation(line: 52, column: 26, scope: !7)
!42 = !DILocation(line: 51, column: 21, scope: !7)
!43 = !DILocation(line: 53, column: 21, scope: !7)
!44 = !DILocation(line: 54, column: 35, scope: !7)
!45 = !DILocation(line: 54, column: 31, scope: !7)
!46 = !DILocation(line: 54, column: 25, scope: !7)
!47 = !DILocation(line: 54, column: 48, scope: !7)
!48 = !DILocation(line: 55, column: 25, scope: !7)
!49 = !DILocation(line: 55, column: 48, scope: !7)
!50 = !DILocation(line: 55, column: 4, scope: !7)
!51 = !{i32 147630, i32 147634, i32 147703, i32 147751, i32 147799, i32 147847, i32 147895, i32 147943, i32 147991, i32 148039, i32 148087, i32 148135, i32 148183, i32 148231, i32 148279, i32 148327, i32 148375}
!52 = distinct !{!52, !53}
!53 = !{!"llvm.loop.unroll.count", i32 1}
!54 = !{i32 145364, i32 145368, i32 145439, i32 145481, i32 145523, i32 145565, i32 145607, i32 145649, i32 145691, i32 145733, i32 145775, i32 145817, i32 145859}
!55 = !{i32 146405, i32 146409, i32 146468, i32 146515, i32 146562, i32 146609, i32 146656, i32 146703, i32 146750, i32 146797, i32 146844, i32 146891, i32 146938, i32 146985, i32 147032, i32 147079}
!56 = !{i32 144166, i32 144170, i32 144241, i32 144283, i32 144325, i32 144367, i32 144409, i32 144451, i32 144493, i32 144535, i32 144577, i32 144619, i32 144661}
