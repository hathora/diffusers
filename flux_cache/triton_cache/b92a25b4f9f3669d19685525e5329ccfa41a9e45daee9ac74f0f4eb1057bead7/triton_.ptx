//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u64 triton__param_7,
	.param .u64 triton__param_8,
	.param .u64 triton__param_9,
	.param .u32 triton__param_10,
	.param .u32 triton__param_11
)
.maxntid 512, 1, 1
{
	.reg .pred 	%p<295>;
	.reg .b16 	%rs<385>;
	.reg .b32 	%r<426>;
	.reg .f32 	%f<595>;
	.reg .b64 	%rd<170>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u32 	%r25, [triton__param_10];
	ld.param.u64 	%rd10, [triton__param_9];
	ld.param.u64 	%rd9, [triton__param_8];
	ld.param.u64 	%rd8, [triton__param_7];
	ld.param.u64 	%rd7, [triton__param_6];
	ld.param.u64 	%rd6, [triton__param_5];
	ld.param.u64 	%rd5, [triton__param_4];
	ld.param.u64 	%rd4, [triton__param_3];
	ld.param.u64 	%rd3, [triton__param_2];
	ld.param.u64 	%rd2, [triton__param_1];
	ld.param.u64 	%rd1, [triton__param_0];
$L__tmp0:
	.loc	1 20 28
	// begin inline asm
	mov.u32 %r26, %ctaid.x;
	// end inline asm
	.loc	1 20 33
	shl.b32 	%r1, %r26, 6;
	.loc	1 21 44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 3, 6;
	.loc	1 21 23
	or.b32  	%r4, %r1, %r3;
	.loc	1 22 21
	setp.lt.s32 	%p47, %r4, %r25;
	.loc	1 23 33
	shl.b32 	%r28, %r2, 3;
	and.b32  	%r5, %r28, 56;
	shr.u32 	%r6, %r2, 6;
	bfe.u32 	%r7, %r2, 6, 1;
	.loc	1 50 20
	mul.hi.s32 	%r30, %r4, 715827883;
	shr.u32 	%r31, %r30, 31;
	shr.s32 	%r32, %r30, 2;
	add.s32 	%r8, %r32, %r31;
	mul.lo.s32 	%r33, %r8, 24;
	sub.s32 	%r34, %r4, %r33;
	.loc	1 32 44
	shl.b32 	%r9, %r4, 7;
	.loc	1 33 44
	shl.b32 	%r10, %r34, 7;
	mov.f32 	%f579, 0f00000000;
	mov.b32 	%r39, 0;
	mov.pred 	%p293, -1;
	mov.u32 	%r424, %r39;
	mov.f32 	%f580, %f579;
	mov.f32 	%f581, %f579;
	mov.f32 	%f582, %f579;
	mov.f32 	%f583, %f579;
	mov.f32 	%f584, %f579;
	mov.f32 	%f585, %f579;
	mov.f32 	%f586, %f579;
	mov.f32 	%f587, %f579;
	mov.f32 	%f588, %f579;
	mov.f32 	%f589, %f579;
	mov.f32 	%f590, %f579;
	mov.f32 	%f591, %f579;
	mov.f32 	%f592, %f579;
	mov.f32 	%f593, %f579;
	mov.f32 	%f594, %f579;
$L__BB0_1:
	.loc	1 0 44
	mov.pred 	%p17, %p293;
	.loc	1 29 27
	or.b32  	%r100, %r424, %r5;
	.loc	1 32 40
	or.b32  	%r101, %r100, %r9;
	.loc	1 32 34
	mul.wide.s32 	%rd15, %r101, 2;
	add.s64 	%rd11, %rd3, %rd15;
	.loc	1 32 50
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd11 + 0 ];
	@!%p47 mov.u32 %r35, %r39;
	@!%p47 mov.u32 %r36, %r39;
	@!%p47 mov.u32 %r37, %r39;
	@!%p47 mov.u32 %r38, %r39;
	// end inline asm
	cvt.u16.u32 	%rs1, %r35;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r35; }
	cvt.u16.u32 	%rs3, %r36;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r36; }
	cvt.u16.u32 	%rs5, %r37;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r37; }
	cvt.u16.u32 	%rs7, %r38;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r38; }
	.loc	1 32 109
	// begin inline asm
	cvt.f32.bf16 %r43, %rs1;
	// end inline asm
	mov.b32 	%f51, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs2;
	// end inline asm
	mov.b32 	%f52, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs3;
	// end inline asm
	mov.b32 	%f53, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs4;
	// end inline asm
	mov.b32 	%f54, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs5;
	// end inline asm
	mov.b32 	%f55, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs6;
	// end inline asm
	mov.b32 	%f56, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs7;
	// end inline asm
	mov.b32 	%f57, %r49;
	// begin inline asm
	cvt.f32.bf16 %r50, %rs8;
	// end inline asm
	mov.b32 	%f58, %r50;
	.loc	1 33 40
	or.b32  	%r102, %r100, %r10;
	.loc	1 33 34
	mul.wide.s32 	%rd16, %r102, 2;
	add.s64 	%rd12, %rd4, %rd16;
	.loc	1 33 50
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd12 + 0 ];
	@!%p47 mov.u32 %r51, %r39;
	@!%p47 mov.u32 %r52, %r39;
	@!%p47 mov.u32 %r53, %r39;
	@!%p47 mov.u32 %r54, %r39;
	// end inline asm
	cvt.u16.u32 	%rs9, %r51;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r51; }
	cvt.u16.u32 	%rs11, %r52;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r52; }
	cvt.u16.u32 	%rs13, %r53;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r53; }
	cvt.u16.u32 	%rs15, %r54;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r54; }
	.loc	1 33 109
	// begin inline asm
	cvt.f32.bf16 %r59, %rs9;
	// end inline asm
	mov.b32 	%f59, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs10;
	// end inline asm
	mov.b32 	%f60, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs11;
	// end inline asm
	mov.b32 	%f61, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs12;
	// end inline asm
	mov.b32 	%f62, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs13;
	// end inline asm
	mov.b32 	%f63, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs14;
	// end inline asm
	mov.b32 	%f64, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs15;
	// end inline asm
	mov.b32 	%f65, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs16;
	// end inline asm
	mov.b32 	%f66, %r66;
	.loc	1 34 34
	add.s64 	%rd13, %rd5, %rd15;
	.loc	1 34 50
	// begin inline asm
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r67, %r68, %r69, %r70 }, [ %rd13 + 0 ];
	@!%p47 mov.u32 %r67, %r39;
	@!%p47 mov.u32 %r68, %r39;
	@!%p47 mov.u32 %r69, %r39;
	@!%p47 mov.u32 %r70, %r39;
	// end inline asm
	cvt.u16.u32 	%rs17, %r67;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs18}, %r67; }
	cvt.u16.u32 	%rs19, %r68;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs20}, %r68; }
	cvt.u16.u32 	%rs21, %r69;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs22}, %r69; }
	cvt.u16.u32 	%rs23, %r70;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs24}, %r70; }
	.loc	1 34 109
	// begin inline asm
	cvt.f32.bf16 %r75, %rs17;
	// end inline asm
	mov.b32 	%f67, %r75;
	// begin inline asm
	cvt.f32.bf16 %r76, %rs18;
	// end inline asm
	mov.b32 	%f68, %r76;
	// begin inline asm
	cvt.f32.bf16 %r77, %rs19;
	// end inline asm
	mov.b32 	%f69, %r77;
	// begin inline asm
	cvt.f32.bf16 %r78, %rs20;
	// end inline asm
	mov.b32 	%f70, %r78;
	// begin inline asm
	cvt.f32.bf16 %r79, %rs21;
	// end inline asm
	mov.b32 	%f71, %r79;
	// begin inline asm
	cvt.f32.bf16 %r80, %rs22;
	// end inline asm
	mov.b32 	%f72, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs23;
	// end inline asm
	mov.b32 	%f73, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs24;
	// end inline asm
	mov.b32 	%f74, %r82;
	.loc	1 35 34
	add.s64 	%rd14, %rd6, %rd16;
	.loc	1 35 50
	// begin inline asm
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r83, %r84, %r85, %r86 }, [ %rd14 + 0 ];
	@!%p47 mov.u32 %r83, %r39;
	@!%p47 mov.u32 %r84, %r39;
	@!%p47 mov.u32 %r85, %r39;
	@!%p47 mov.u32 %r86, %r39;
	// end inline asm
	cvt.u16.u32 	%rs25, %r83;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs26}, %r83; }
	cvt.u16.u32 	%rs27, %r84;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs28}, %r84; }
	cvt.u16.u32 	%rs29, %r85;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs30}, %r85; }
	cvt.u16.u32 	%rs31, %r86;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs32}, %r86; }
	.loc	1 35 109
	// begin inline asm
	cvt.f32.bf16 %r91, %rs25;
	// end inline asm
	mov.b32 	%f75, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs26;
	// end inline asm
	mov.b32 	%f76, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs27;
	// end inline asm
	mov.b32 	%f77, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs28;
	// end inline asm
	mov.b32 	%f78, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs29;
	// end inline asm
	mov.b32 	%f79, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs30;
	// end inline asm
	mov.b32 	%f80, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs31;
	// end inline asm
	mov.b32 	%f81, %r97;
	// begin inline asm
	cvt.f32.bf16 %r98, %rs32;
	// end inline asm
	mov.b32 	%f82, %r98;
	.loc	1 42 23
	add.f32 	%f83, %f53, %f61;
	add.f32 	%f84, %f52, %f60;
	add.f32 	%f85, %f51, %f59;
	add.f32 	%f86, %f54, %f62;
	add.f32 	%f87, %f55, %f63;
	add.f32 	%f88, %f74, %f82;
	add.f32 	%f89, %f73, %f81;
	add.f32 	%f90, %f72, %f80;
	add.f32 	%f91, %f71, %f79;
	add.f32 	%f92, %f70, %f78;
	add.f32 	%f93, %f69, %f77;
	add.f32 	%f94, %f68, %f76;
	add.f32 	%f95, %f67, %f75;
	add.f32 	%f96, %f56, %f64;
	add.f32 	%f97, %f57, %f65;
	add.f32 	%f98, %f58, %f66;
	.loc	1 46 25
	fma.rn.f32 	%f99, %f98, %f98, %f594;
	fma.rn.f32 	%f100, %f97, %f97, %f593;
	fma.rn.f32 	%f101, %f96, %f96, %f592;
	fma.rn.f32 	%f102, %f95, %f95, %f579;
	fma.rn.f32 	%f103, %f94, %f94, %f580;
	fma.rn.f32 	%f104, %f93, %f93, %f581;
	fma.rn.f32 	%f105, %f92, %f92, %f582;
	fma.rn.f32 	%f106, %f91, %f91, %f583;
	fma.rn.f32 	%f107, %f90, %f90, %f584;
	fma.rn.f32 	%f108, %f89, %f89, %f585;
	fma.rn.f32 	%f109, %f88, %f88, %f586;
	fma.rn.f32 	%f110, %f87, %f87, %f591;
	fma.rn.f32 	%f111, %f86, %f86, %f590;
	fma.rn.f32 	%f112, %f85, %f85, %f587;
	fma.rn.f32 	%f113, %f84, %f84, %f588;
	fma.rn.f32 	%f114, %f83, %f83, %f589;
	.loc	1 47 48
	selp.f32 	%f589, %f114, %f589, %p47;
	selp.f32 	%f588, %f113, %f588, %p47;
	selp.f32 	%f587, %f112, %f587, %p47;
	selp.f32 	%f590, %f111, %f590, %p47;
	selp.f32 	%f591, %f110, %f591, %p47;
	selp.f32 	%f586, %f109, %f586, %p47;
	selp.f32 	%f585, %f108, %f585, %p47;
	selp.f32 	%f584, %f107, %f584, %p47;
	selp.f32 	%f583, %f106, %f583, %p47;
	selp.f32 	%f582, %f105, %f582, %p47;
	selp.f32 	%f581, %f104, %f581, %p47;
	selp.f32 	%f580, %f103, %f580, %p47;
	selp.f32 	%f579, %f102, %f579, %p47;
	selp.f32 	%f592, %f101, %f592, %p47;
	selp.f32 	%f593, %f100, %f593, %p47;
	selp.f32 	%f594, %f99, %f594, %p47;
	mov.b32 	%r424, 64;
	mov.pred 	%p293, 0;
	.loc	1 28 36
	@%p17 bra 	$L__BB0_1;
	.loc	1 21 44
	and.b32  	%r110, %r2, 63;
	.loc	1 21 23
	or.b32  	%r111, %r1, %r110;
	.loc	1 22 21
	setp.lt.s32 	%p44, %r111, %r25;
	.loc	1 23 33
	and.b32  	%r12, %r6, 7;
	.loc	1 25 18
	mul.hi.s32 	%r112, %r111, 715827883;
	shr.u32 	%r113, %r112, 31;
	shr.u32 	%r114, %r112, 2;
	add.s32 	%r115, %r114, %r113;
	mul.lo.s32 	%r116, %r115, 24;
	sub.s32 	%r117, %r111, %r116;
$L__tmp1:
	.loc	2 256 15
	add.f32 	%f115, %f587, %f588;
	add.f32 	%f116, %f589, %f115;
	add.f32 	%f117, %f590, %f116;
	add.f32 	%f118, %f591, %f117;
	add.f32 	%f119, %f592, %f118;
	add.f32 	%f120, %f593, %f119;
	add.f32 	%f121, %f594, %f120;
	.loc	2 267 36
	mov.b32 	%r118, %f121;
	shfl.sync.bfly.b32	%r119, %r118, 4, 31, -1;
	mov.b32 	%f122, %r119;
	.loc	2 256 15
	add.f32 	%f123, %f121, %f122;
	.loc	2 267 36
	mov.b32 	%r120, %f123;
	shfl.sync.bfly.b32	%r121, %r120, 2, 31, -1;
	mov.b32 	%f124, %r121;
	.loc	2 256 15
	add.f32 	%f125, %f123, %f124;
	.loc	2 267 36
	mov.b32 	%r122, %f125;
	shfl.sync.bfly.b32	%r123, %r122, 1, 31, -1;
	mov.b32 	%f126, %r123;
	.loc	2 256 15
	add.f32 	%f127, %f125, %f126;
$L__tmp2:
	.loc	2 256 15
	add.f32 	%f128, %f579, %f580;
	add.f32 	%f129, %f581, %f128;
	add.f32 	%f130, %f582, %f129;
	add.f32 	%f131, %f583, %f130;
	add.f32 	%f132, %f584, %f131;
	add.f32 	%f133, %f585, %f132;
	add.f32 	%f134, %f586, %f133;
	.loc	2 267 36
	mov.b32 	%r124, %f134;
	shfl.sync.bfly.b32	%r125, %r124, 4, 31, -1;
	mov.b32 	%f135, %r125;
	.loc	2 256 15
	add.f32 	%f136, %f134, %f135;
	.loc	2 267 36
	mov.b32 	%r126, %f136;
	shfl.sync.bfly.b32	%r127, %r126, 2, 31, -1;
	mov.b32 	%f137, %r127;
	.loc	2 256 15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36
	mov.b32 	%r128, %f138;
	shfl.sync.bfly.b32	%r129, %r128, 1, 31, -1;
	mov.b32 	%f139, %r129;
	.loc	2 256 15
	add.f32 	%f140, %f138, %f139;
$L__tmp3:
	.loc	1 57 45
	shl.b32 	%r13, %r111, 7;
	.loc	1 58 45
	shl.b32 	%r14, %r117, 7;
	.loc	1 60 45
	shl.b32 	%r15, %r8, 7;
	.loc	1 74 23
	mov.b32 	%r104, %f127;
	mov.b32 	%r105, 1124073472;
	// begin inline asm
	div.full.f32 %r103, %r104, %r105;
	// end inline asm
	mov.b32 	%f141, %r103;
	.loc	1 77 24
	add.f32 	%f33, %f141, 0f358637BD;
	.loc	1 113 24
	mov.b32 	%r107, %f140;
	// begin inline asm
	div.full.f32 %r106, %r107, %r105;
	// end inline asm
	mov.b32 	%f142, %r106;
	.loc	1 115 24
	add.f32 	%f34, %f142, 0f358637BD;
	or.b32  	%r16, %r5, %r15;
	mad.lo.s32 	%r130, %r5, 65, %r3;
	shl.b32 	%r131, %r130, 2;
	mov.u32 	%r132, global_smem;
	add.s32 	%r17, %r132, %r131;
	mad.lo.s32 	%r133, %r12, 65, %r110;
	shl.b32 	%r134, %r133, 2;
	add.s32 	%r18, %r132, %r134;
	setp.eq.s32 	%p45, %r7, 0;
	shl.b32 	%r135, %r3, 2;
	add.s32 	%r19, %r132, %r135;
	shl.b32 	%r136, %r110, 2;
	add.s32 	%r20, %r132, %r136;
	setp.ne.s32 	%p46, %r7, 0;
	mul.lo.s32 	%r137, %r110, 72;
	or.b32  	%r138, %r137, %r12;
	shl.b32 	%r139, %r138, 1;
	add.s32 	%r21, %r132, %r139;
	mad.lo.s32 	%r140, %r3, 72, %r5;
	shl.b32 	%r141, %r140, 1;
	add.s32 	%r23, %r132, %r141;
	and.pred  	%p97, %p44, %p45;
	and.pred  	%p145, %p44, %p46;
	mov.b32 	%r146, 0;
	mov.pred 	%p57, -1;
	rsqrt.approx.ftz.f32 	%f231, %f33;
	rsqrt.approx.ftz.f32 	%f417, %f34;
	mov.pred 	%p294, %p57;
	mov.u32 	%r425, %r146;
$L__BB0_3:
	.loc	1 0 24
	mov.pred 	%p20, %p294;
	.loc	1 52 27
	or.b32  	%r391, %r425, %r5;
	or.b32  	%r392, %r425, %r12;
	.loc	1 70 42
	and.b32  	%r393, %r392, 70;
	.loc	1 57 41
	or.b32  	%r394, %r391, %r9;
	.loc	1 57 35
	mul.wide.s32 	%rd125, %r394, 2;
	add.s64 	%rd17, %rd3, %rd125;
	.loc	1 57 51
	// begin inline asm
	mov.u32 %r142, 0x0;
	mov.u32 %r143, 0x0;
	mov.u32 %r144, 0x0;
	mov.u32 %r145, 0x0;
	@%p47 ld.global.L1::evict_first.v4.b32 { %r142, %r143, %r144, %r145 }, [ %rd17 + 0 ];
	@!%p47 mov.u32 %r142, %r146;
	@!%p47 mov.u32 %r143, %r146;
	@!%p47 mov.u32 %r144, %r146;
	@!%p47 mov.u32 %r145, %r146;
	// end inline asm
	cvt.u16.u32 	%rs33, %r142;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs34}, %r142; }
	cvt.u16.u32 	%rs35, %r143;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs36}, %r143; }
	cvt.u16.u32 	%rs37, %r144;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs38}, %r144; }
	cvt.u16.u32 	%rs39, %r145;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs40}, %r145; }
	.loc	1 57 111
	// begin inline asm
	cvt.f32.bf16 %r150, %rs33;
	// end inline asm
	mov.b32 	%f143, %r150;
	// begin inline asm
	cvt.f32.bf16 %r151, %rs34;
	// end inline asm
	mov.b32 	%f144, %r151;
	// begin inline asm
	cvt.f32.bf16 %r152, %rs35;
	// end inline asm
	mov.b32 	%f145, %r152;
	// begin inline asm
	cvt.f32.bf16 %r153, %rs36;
	// end inline asm
	mov.b32 	%f146, %r153;
	// begin inline asm
	cvt.f32.bf16 %r154, %rs37;
	// end inline asm
	mov.b32 	%f147, %r154;
	// begin inline asm
	cvt.f32.bf16 %r155, %rs38;
	// end inline asm
	mov.b32 	%f148, %r155;
	// begin inline asm
	cvt.f32.bf16 %r156, %rs39;
	// end inline asm
	mov.b32 	%f149, %r156;
	// begin inline asm
	cvt.f32.bf16 %r157, %rs40;
	// end inline asm
	mov.b32 	%f150, %r157;
	.loc	1 58 41
	or.b32  	%r395, %r391, %r10;
	.loc	1 58 35
	mul.wide.s32 	%rd126, %r395, 2;
	add.s64 	%rd18, %rd4, %rd126;
	.loc	1 58 51
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd18 + 0 ];
	@!%p47 mov.u32 %r158, %r146;
	@!%p47 mov.u32 %r159, %r146;
	@!%p47 mov.u32 %r160, %r146;
	@!%p47 mov.u32 %r161, %r146;
	// end inline asm
	cvt.u16.u32 	%rs41, %r158;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs42}, %r158; }
	cvt.u16.u32 	%rs43, %r159;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs44}, %r159; }
	cvt.u16.u32 	%rs45, %r160;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs46}, %r160; }
	cvt.u16.u32 	%rs47, %r161;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs48}, %r161; }
	.loc	1 58 110
	// begin inline asm
	cvt.f32.bf16 %r166, %rs41;
	// end inline asm
	mov.b32 	%f151, %r166;
	// begin inline asm
	cvt.f32.bf16 %r167, %rs42;
	// end inline asm
	mov.b32 	%f152, %r167;
	// begin inline asm
	cvt.f32.bf16 %r168, %rs43;
	// end inline asm
	mov.b32 	%f153, %r168;
	// begin inline asm
	cvt.f32.bf16 %r169, %rs44;
	// end inline asm
	mov.b32 	%f154, %r169;
	// begin inline asm
	cvt.f32.bf16 %r170, %rs45;
	// end inline asm
	mov.b32 	%f155, %r170;
	// begin inline asm
	cvt.f32.bf16 %r171, %rs46;
	// end inline asm
	mov.b32 	%f156, %r171;
	// begin inline asm
	cvt.f32.bf16 %r172, %rs47;
	// end inline asm
	mov.b32 	%f157, %r172;
	// begin inline asm
	cvt.f32.bf16 %r173, %rs48;
	// end inline asm
	mov.b32 	%f158, %r173;
	.loc	1 59 35
	mul.wide.u32 	%rd127, %r391, 2;
	add.s64 	%rd19, %rd7, %rd127;
	.loc	1 59 40
	// begin inline asm
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	mov.u32 %r177, 0x0;
	@%p57 ld.global.L1::evict_last.v4.b32 { %r174, %r175, %r176, %r177 }, [ %rd19 + 0 ];
	@!%p57 mov.u32 %r174, %r146;
	@!%p57 mov.u32 %r175, %r146;
	@!%p57 mov.u32 %r176, %r146;
	@!%p57 mov.u32 %r177, %r146;
	// end inline asm
	cvt.u16.u32 	%rs49, %r174;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs50}, %r174; }
	cvt.u16.u32 	%rs51, %r175;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs52}, %r175; }
	cvt.u16.u32 	%rs53, %r176;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs54}, %r176; }
	cvt.u16.u32 	%rs55, %r177;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs56}, %r177; }
	.loc	1 59 91
	// begin inline asm
	cvt.f32.bf16 %r182, %rs49;
	// end inline asm
	mov.b32 	%f159, %r182;
	// begin inline asm
	cvt.f32.bf16 %r183, %rs50;
	// end inline asm
	mov.b32 	%f160, %r183;
	// begin inline asm
	cvt.f32.bf16 %r184, %rs51;
	// end inline asm
	mov.b32 	%f161, %r184;
	// begin inline asm
	cvt.f32.bf16 %r185, %rs52;
	// end inline asm
	mov.b32 	%f162, %r185;
	// begin inline asm
	cvt.f32.bf16 %r186, %rs53;
	// end inline asm
	mov.b32 	%f163, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs54;
	// end inline asm
	mov.b32 	%f164, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs55;
	// end inline asm
	mov.b32 	%f165, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs56;
	// end inline asm
	mov.b32 	%f166, %r189;
	.loc	1 60 41
	or.b32  	%r396, %r391, %r15;
	or.b32  	%r397, %r16, %r425;
	.loc	1 60 35
	mul.wide.s32 	%rd128, %r396, 4;
	add.s64 	%rd20, %rd8, %rd128;
	mul.wide.s32 	%rd129, %r397, 4;
	add.s64 	%rd130, %rd8, %rd129;
	add.s64 	%rd21, %rd130, 16;
	.loc	1 60 51
	// begin inline asm
	mov.u32 %r190, 0x0;
	mov.u32 %r191, 0x0;
	mov.u32 %r192, 0x0;
	mov.u32 %r193, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r190, %r191, %r192, %r193 }, [ %rd20 + 0 ];
	@!%p47 mov.u32 %r190, %r146;
	@!%p47 mov.u32 %r191, %r146;
	@!%p47 mov.u32 %r192, %r146;
	@!%p47 mov.u32 %r193, %r146;
	// end inline asm
	mov.b32 	%f167, %r190;
	mov.b32 	%f168, %r191;
	mov.b32 	%f169, %r192;
	mov.b32 	%f170, %r193;
	// begin inline asm
	mov.u32 %r198, 0x0;
	mov.u32 %r199, 0x0;
	mov.u32 %r200, 0x0;
	mov.u32 %r201, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r198, %r199, %r200, %r201 }, [ %rd21 + 0 ];
	@!%p47 mov.u32 %r198, %r146;
	@!%p47 mov.u32 %r199, %r146;
	@!%p47 mov.u32 %r200, %r146;
	@!%p47 mov.u32 %r201, %r146;
	// end inline asm
	mov.b32 	%f171, %r198;
	mov.b32 	%f172, %r199;
	mov.b32 	%f173, %r200;
	mov.b32 	%f174, %r201;
	.loc	1 61 35
	add.s64 	%rd22, %rd9, %rd128;
	add.s64 	%rd131, %rd9, %rd129;
	add.s64 	%rd23, %rd131, 16;
	.loc	1 61 51
	// begin inline asm
	mov.u32 %r206, 0x0;
	mov.u32 %r207, 0x0;
	mov.u32 %r208, 0x0;
	mov.u32 %r209, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r206, %r207, %r208, %r209 }, [ %rd22 + 0 ];
	@!%p47 mov.u32 %r206, %r146;
	@!%p47 mov.u32 %r207, %r146;
	@!%p47 mov.u32 %r208, %r146;
	@!%p47 mov.u32 %r209, %r146;
	// end inline asm
	// begin inline asm
	mov.u32 %r214, 0x0;
	mov.u32 %r215, 0x0;
	mov.u32 %r216, 0x0;
	mov.u32 %r217, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r214, %r215, %r216, %r217 }, [ %rd23 + 0 ];
	@!%p47 mov.u32 %r214, %r146;
	@!%p47 mov.u32 %r215, %r146;
	@!%p47 mov.u32 %r216, %r146;
	@!%p47 mov.u32 %r217, %r146;
	// end inline asm
	bar.sync 	0;
	st.shared.u32 	[%r17], %r206;
	st.shared.u32 	[%r17+260], %r207;
	st.shared.u32 	[%r17+520], %r208;
	st.shared.u32 	[%r17+780], %r209;
	st.shared.u32 	[%r17+1040], %r214;
	st.shared.u32 	[%r17+1300], %r215;
	st.shared.u32 	[%r17+1560], %r216;
	st.shared.u32 	[%r17+1820], %r217;
	bar.sync 	0;
	ld.shared.f32 	%f175, [%r18];
	ld.shared.f32 	%f176, [%r18+2080];
	ld.shared.f32 	%f177, [%r18+4160];
	ld.shared.f32 	%f178, [%r18+6240];
	ld.shared.f32 	%f179, [%r18+8320];
	ld.shared.f32 	%f180, [%r18+10400];
	ld.shared.f32 	%f181, [%r18+12480];
	ld.shared.f32 	%f182, [%r18+14560];
	.loc	1 62 35
	add.s64 	%rd24, %rd5, %rd125;
	.loc	1 62 51
	// begin inline asm
	mov.u32 %r222, 0x0;
	mov.u32 %r223, 0x0;
	mov.u32 %r224, 0x0;
	mov.u32 %r225, 0x0;
	@%p47 ld.global.L1::evict_first.v4.b32 { %r222, %r223, %r224, %r225 }, [ %rd24 + 0 ];
	@!%p47 mov.u32 %r222, %r146;
	@!%p47 mov.u32 %r223, %r146;
	@!%p47 mov.u32 %r224, %r146;
	@!%p47 mov.u32 %r225, %r146;
	// end inline asm
	cvt.u16.u32 	%rs57, %r222;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs58}, %r222; }
	cvt.u16.u32 	%rs59, %r223;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs60}, %r223; }
	cvt.u16.u32 	%rs61, %r224;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs62}, %r224; }
	cvt.u16.u32 	%rs63, %r225;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs64}, %r225; }
	.loc	1 62 111
	// begin inline asm
	cvt.f32.bf16 %r230, %rs57;
	// end inline asm
	mov.b32 	%f183, %r230;
	// begin inline asm
	cvt.f32.bf16 %r231, %rs58;
	// end inline asm
	mov.b32 	%f184, %r231;
	// begin inline asm
	cvt.f32.bf16 %r232, %rs59;
	// end inline asm
	mov.b32 	%f185, %r232;
	// begin inline asm
	cvt.f32.bf16 %r233, %rs60;
	// end inline asm
	mov.b32 	%f186, %r233;
	// begin inline asm
	cvt.f32.bf16 %r234, %rs61;
	// end inline asm
	mov.b32 	%f187, %r234;
	// begin inline asm
	cvt.f32.bf16 %r235, %rs62;
	// end inline asm
	mov.b32 	%f188, %r235;
	// begin inline asm
	cvt.f32.bf16 %r236, %rs63;
	// end inline asm
	mov.b32 	%f189, %r236;
	// begin inline asm
	cvt.f32.bf16 %r237, %rs64;
	// end inline asm
	mov.b32 	%f190, %r237;
	.loc	1 63 35
	add.s64 	%rd25, %rd6, %rd126;
	.loc	1 63 51
	// begin inline asm
	mov.u32 %r238, 0x0;
	mov.u32 %r239, 0x0;
	mov.u32 %r240, 0x0;
	mov.u32 %r241, 0x0;
	@%p47 ld.global.L1::evict_last.v4.b32 { %r238, %r239, %r240, %r241 }, [ %rd25 + 0 ];
	@!%p47 mov.u32 %r238, %r146;
	@!%p47 mov.u32 %r239, %r146;
	@!%p47 mov.u32 %r240, %r146;
	@!%p47 mov.u32 %r241, %r146;
	// end inline asm
	cvt.u16.u32 	%rs65, %r238;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs66}, %r238; }
	cvt.u16.u32 	%rs67, %r239;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs68}, %r239; }
	cvt.u16.u32 	%rs69, %r240;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs70}, %r240; }
	cvt.u16.u32 	%rs71, %r241;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs72}, %r241; }
	.loc	1 63 110
	// begin inline asm
	cvt.f32.bf16 %r246, %rs65;
	// end inline asm
	mov.b32 	%f191, %r246;
	// begin inline asm
	cvt.f32.bf16 %r247, %rs66;
	// end inline asm
	mov.b32 	%f192, %r247;
	// begin inline asm
	cvt.f32.bf16 %r248, %rs67;
	// end inline asm
	mov.b32 	%f193, %r248;
	// begin inline asm
	cvt.f32.bf16 %r249, %rs68;
	// end inline asm
	mov.b32 	%f194, %r249;
	// begin inline asm
	cvt.f32.bf16 %r250, %rs69;
	// end inline asm
	mov.b32 	%f195, %r250;
	// begin inline asm
	cvt.f32.bf16 %r251, %rs70;
	// end inline asm
	mov.b32 	%f196, %r251;
	// begin inline asm
	cvt.f32.bf16 %r252, %rs71;
	// end inline asm
	mov.b32 	%f197, %r252;
	// begin inline asm
	cvt.f32.bf16 %r253, %rs72;
	// end inline asm
	mov.b32 	%f198, %r253;
	.loc	1 64 35
	add.s64 	%rd26, %rd10, %rd127;
	.loc	1 64 40
	// begin inline asm
	mov.u32 %r254, 0x0;
	mov.u32 %r255, 0x0;
	mov.u32 %r256, 0x0;
	mov.u32 %r257, 0x0;
	@%p57 ld.global.L1::evict_last.v4.b32 { %r254, %r255, %r256, %r257 }, [ %rd26 + 0 ];
	@!%p57 mov.u32 %r254, %r146;
	@!%p57 mov.u32 %r255, %r146;
	@!%p57 mov.u32 %r256, %r146;
	@!%p57 mov.u32 %r257, %r146;
	// end inline asm
	cvt.u16.u32 	%rs73, %r254;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs74}, %r254; }
	cvt.u16.u32 	%rs75, %r255;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs76}, %r255; }
	cvt.u16.u32 	%rs77, %r256;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs78}, %r256; }
	cvt.u16.u32 	%rs79, %r257;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs80}, %r257; }
	.loc	1 64 91
	// begin inline asm
	cvt.f32.bf16 %r262, %rs73;
	// end inline asm
	mov.b32 	%f199, %r262;
	// begin inline asm
	cvt.f32.bf16 %r263, %rs74;
	// end inline asm
	mov.b32 	%f200, %r263;
	// begin inline asm
	cvt.f32.bf16 %r264, %rs75;
	// end inline asm
	mov.b32 	%f201, %r264;
	// begin inline asm
	cvt.f32.bf16 %r265, %rs76;
	// end inline asm
	mov.b32 	%f202, %r265;
	// begin inline asm
	cvt.f32.bf16 %r266, %rs77;
	// end inline asm
	mov.b32 	%f203, %r266;
	// begin inline asm
	cvt.f32.bf16 %r267, %rs78;
	// end inline asm
	mov.b32 	%f204, %r267;
	// begin inline asm
	cvt.f32.bf16 %r268, %rs79;
	// end inline asm
	mov.b32 	%f205, %r268;
	// begin inline asm
	cvt.f32.bf16 %r269, %rs80;
	// end inline asm
	mov.b32 	%f206, %r269;
	.loc	1 70 40
	or.b32  	%r398, %r392, 1;
	or.b32  	%r399, %r392, 9;
	or.b32  	%r400, %r392, 17;
	or.b32  	%r401, %r392, 25;
	or.b32  	%r402, %r392, 33;
	or.b32  	%r403, %r392, 41;
	or.b32  	%r404, %r392, 49;
	or.b32  	%r405, %r392, 57;
	.loc	1 70 49
	or.b32  	%r406, %r398, %r13;
	or.b32  	%r407, %r399, %r13;
	or.b32  	%r408, %r400, %r13;
	or.b32  	%r409, %r401, %r13;
	or.b32  	%r410, %r402, %r13;
	or.b32  	%r411, %r403, %r13;
	or.b32  	%r412, %r404, %r13;
	or.b32  	%r413, %r405, %r13;
	.loc	1 70 35
	mul.wide.s32 	%rd132, %r406, 2;
	add.s64 	%rd27, %rd3, %rd132;
	mul.wide.s32 	%rd133, %r407, 2;
	add.s64 	%rd28, %rd3, %rd133;
	mul.wide.s32 	%rd134, %r408, 2;
	add.s64 	%rd29, %rd3, %rd134;
	mul.wide.s32 	%rd135, %r409, 2;
	add.s64 	%rd30, %rd3, %rd135;
	mul.wide.s32 	%rd136, %r410, 2;
	add.s64 	%rd31, %rd3, %rd136;
	mul.wide.s32 	%rd137, %r411, 2;
	add.s64 	%rd32, %rd3, %rd137;
	mul.wide.s32 	%rd138, %r412, 2;
	add.s64 	%rd33, %rd3, %rd138;
	mul.wide.s32 	%rd139, %r413, 2;
	add.s64 	%rd34, %rd3, %rd139;
	mov.u16 	%rs82, 0;
	.loc	1 70 59
	// begin inline asm
	mov.u16 %rs81, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs81 }, [ %rd27 + 0 ];
	@!%p97 mov.u16 %rs81, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs83, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs83 }, [ %rd28 + 0 ];
	@!%p97 mov.u16 %rs83, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs85, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs85 }, [ %rd29 + 0 ];
	@!%p97 mov.u16 %rs85, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs87, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs87 }, [ %rd30 + 0 ];
	@!%p97 mov.u16 %rs87, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs89, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs89 }, [ %rd31 + 0 ];
	@!%p97 mov.u16 %rs89, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs91, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs91 }, [ %rd32 + 0 ];
	@!%p97 mov.u16 %rs91, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs93, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs93 }, [ %rd33 + 0 ];
	@!%p97 mov.u16 %rs93, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs95, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs95 }, [ %rd34 + 0 ];
	@!%p97 mov.u16 %rs95, %rs82;
	// end inline asm
	.loc	1 70 126
	// begin inline asm
	cvt.f32.bf16 %r270, %rs81;
	// end inline asm
	mov.b32 	%f207, %r270;
	// begin inline asm
	cvt.f32.bf16 %r271, %rs83;
	// end inline asm
	mov.b32 	%f208, %r271;
	// begin inline asm
	cvt.f32.bf16 %r272, %rs85;
	// end inline asm
	mov.b32 	%f209, %r272;
	// begin inline asm
	cvt.f32.bf16 %r273, %rs87;
	// end inline asm
	mov.b32 	%f210, %r273;
	// begin inline asm
	cvt.f32.bf16 %r274, %rs89;
	// end inline asm
	mov.b32 	%f211, %r274;
	// begin inline asm
	cvt.f32.bf16 %r275, %rs91;
	// end inline asm
	mov.b32 	%f212, %r275;
	// begin inline asm
	cvt.f32.bf16 %r276, %rs93;
	// end inline asm
	mov.b32 	%f213, %r276;
	// begin inline asm
	cvt.f32.bf16 %r277, %rs95;
	// end inline asm
	mov.b32 	%f214, %r277;
	.loc	1 71 49
	or.b32  	%r414, %r398, %r14;
	or.b32  	%r415, %r399, %r14;
	or.b32  	%r416, %r400, %r14;
	or.b32  	%r417, %r401, %r14;
	or.b32  	%r418, %r402, %r14;
	or.b32  	%r419, %r403, %r14;
	or.b32  	%r420, %r404, %r14;
	or.b32  	%r421, %r405, %r14;
	.loc	1 71 35
	mul.wide.s32 	%rd140, %r414, 2;
	add.s64 	%rd35, %rd4, %rd140;
	mul.wide.s32 	%rd141, %r415, 2;
	add.s64 	%rd36, %rd4, %rd141;
	mul.wide.s32 	%rd142, %r416, 2;
	add.s64 	%rd37, %rd4, %rd142;
	mul.wide.s32 	%rd143, %r417, 2;
	add.s64 	%rd38, %rd4, %rd143;
	mul.wide.s32 	%rd144, %r418, 2;
	add.s64 	%rd39, %rd4, %rd144;
	mul.wide.s32 	%rd145, %r419, 2;
	add.s64 	%rd40, %rd4, %rd145;
	mul.wide.s32 	%rd146, %r420, 2;
	add.s64 	%rd41, %rd4, %rd146;
	mul.wide.s32 	%rd147, %r421, 2;
	add.s64 	%rd42, %rd4, %rd147;
	.loc	1 71 59
	// begin inline asm
	mov.u16 %rs105, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs105 }, [ %rd35 + 0 ];
	@!%p97 mov.u16 %rs105, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs107, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs107 }, [ %rd36 + 0 ];
	@!%p97 mov.u16 %rs107, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs109, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs109 }, [ %rd37 + 0 ];
	@!%p97 mov.u16 %rs109, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs111, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs111 }, [ %rd38 + 0 ];
	@!%p97 mov.u16 %rs111, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs113, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs113 }, [ %rd39 + 0 ];
	@!%p97 mov.u16 %rs113, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs115, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs115 }, [ %rd40 + 0 ];
	@!%p97 mov.u16 %rs115, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs117, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs117 }, [ %rd41 + 0 ];
	@!%p97 mov.u16 %rs117, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs119, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs119 }, [ %rd42 + 0 ];
	@!%p97 mov.u16 %rs119, %rs82;
	// end inline asm
	.loc	1 71 126
	// begin inline asm
	cvt.f32.bf16 %r278, %rs105;
	// end inline asm
	mov.b32 	%f215, %r278;
	// begin inline asm
	cvt.f32.bf16 %r279, %rs107;
	// end inline asm
	mov.b32 	%f216, %r279;
	// begin inline asm
	cvt.f32.bf16 %r280, %rs109;
	// end inline asm
	mov.b32 	%f217, %r280;
	// begin inline asm
	cvt.f32.bf16 %r281, %rs111;
	// end inline asm
	mov.b32 	%f218, %r281;
	// begin inline asm
	cvt.f32.bf16 %r282, %rs113;
	// end inline asm
	mov.b32 	%f219, %r282;
	// begin inline asm
	cvt.f32.bf16 %r283, %rs115;
	// end inline asm
	mov.b32 	%f220, %r283;
	// begin inline asm
	cvt.f32.bf16 %r284, %rs117;
	// end inline asm
	mov.b32 	%f221, %r284;
	// begin inline asm
	cvt.f32.bf16 %r285, %rs119;
	// end inline asm
	mov.b32 	%f222, %r285;
	.loc	1 72 24
	add.f32 	%f223, %f207, %f215;
	add.f32 	%f224, %f208, %f216;
	add.f32 	%f225, %f209, %f217;
	add.f32 	%f226, %f210, %f218;
	add.f32 	%f227, %f211, %f219;
	add.f32 	%f228, %f212, %f220;
	add.f32 	%f229, %f213, %f221;
	add.f32 	%f230, %f214, %f222;
	.loc	1 79 24
	bar.sync 	0;
	st.shared.f32 	[%r19], %f231;
	bar.sync 	0;
	ld.shared.f32 	%f232, [%r20];
	mul.f32 	%f233, %f223, %f232;
	mul.f32 	%f234, %f224, %f232;
	mul.f32 	%f235, %f225, %f232;
	mul.f32 	%f236, %f226, %f232;
	mul.f32 	%f237, %f227, %f232;
	mul.f32 	%f238, %f228, %f232;
	mul.f32 	%f239, %f229, %f232;
	mul.f32 	%f240, %f230, %f232;
	.loc	1 80 35
	mul.wide.u32 	%rd148, %r398, 2;
	add.s64 	%rd43, %rd7, %rd148;
	mul.wide.u32 	%rd149, %r399, 2;
	add.s64 	%rd44, %rd7, %rd149;
	mul.wide.u32 	%rd150, %r400, 2;
	add.s64 	%rd45, %rd7, %rd150;
	mul.wide.u32 	%rd151, %r401, 2;
	add.s64 	%rd46, %rd7, %rd151;
	mul.wide.u32 	%rd152, %r402, 2;
	add.s64 	%rd47, %rd7, %rd152;
	mul.wide.u32 	%rd153, %r403, 2;
	add.s64 	%rd48, %rd7, %rd153;
	mul.wide.u32 	%rd154, %r404, 2;
	add.s64 	%rd49, %rd7, %rd154;
	mul.wide.u32 	%rd155, %r405, 2;
	add.s64 	%rd50, %rd7, %rd155;
	.loc	1 80 83
	// begin inline asm
	mov.u16 %rs129, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs129 }, [ %rd43 + 0 ];
	@!%p97 mov.u16 %rs129, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs131, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs131 }, [ %rd44 + 0 ];
	@!%p97 mov.u16 %rs131, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs133, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs133 }, [ %rd45 + 0 ];
	@!%p97 mov.u16 %rs133, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs135, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs135 }, [ %rd46 + 0 ];
	@!%p97 mov.u16 %rs135, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs137, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs137 }, [ %rd47 + 0 ];
	@!%p97 mov.u16 %rs137, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs139, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs139 }, [ %rd48 + 0 ];
	@!%p97 mov.u16 %rs139, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs141, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs141 }, [ %rd49 + 0 ];
	@!%p97 mov.u16 %rs141, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs143, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs143 }, [ %rd50 + 0 ];
	@!%p97 mov.u16 %rs143, %rs82;
	// end inline asm
	.loc	1 80 150
	// begin inline asm
	cvt.f32.bf16 %r286, %rs129;
	// end inline asm
	mov.b32 	%f241, %r286;
	// begin inline asm
	cvt.f32.bf16 %r287, %rs131;
	// end inline asm
	mov.b32 	%f242, %r287;
	// begin inline asm
	cvt.f32.bf16 %r288, %rs133;
	// end inline asm
	mov.b32 	%f243, %r288;
	// begin inline asm
	cvt.f32.bf16 %r289, %rs135;
	// end inline asm
	mov.b32 	%f244, %r289;
	// begin inline asm
	cvt.f32.bf16 %r290, %rs137;
	// end inline asm
	mov.b32 	%f245, %r290;
	// begin inline asm
	cvt.f32.bf16 %r291, %rs139;
	// end inline asm
	mov.b32 	%f246, %r291;
	// begin inline asm
	cvt.f32.bf16 %r292, %rs141;
	// end inline asm
	mov.b32 	%f247, %r292;
	// begin inline asm
	cvt.f32.bf16 %r293, %rs143;
	// end inline asm
	mov.b32 	%f248, %r293;
	.loc	1 82 24
	add.f32 	%f249, %f241, 0f00000000;
	add.f32 	%f250, %f242, 0f00000000;
	add.f32 	%f251, %f243, 0f00000000;
	add.f32 	%f252, %f244, 0f00000000;
	add.f32 	%f253, %f245, 0f00000000;
	add.f32 	%f254, %f246, 0f00000000;
	add.f32 	%f255, %f247, 0f00000000;
	add.f32 	%f256, %f248, 0f00000000;
	.loc	1 84 17
	neg.f32 	%f257, %f233;
	fma.rn.f32 	%f258, %f257, %f249, 0f00000000;
	neg.f32 	%f259, %f234;
	fma.rn.f32 	%f260, %f259, %f250, 0f00000000;
	neg.f32 	%f261, %f235;
	fma.rn.f32 	%f262, %f261, %f251, 0f00000000;
	neg.f32 	%f263, %f236;
	fma.rn.f32 	%f264, %f263, %f252, 0f00000000;
	neg.f32 	%f265, %f237;
	fma.rn.f32 	%f266, %f265, %f253, 0f00000000;
	neg.f32 	%f267, %f238;
	fma.rn.f32 	%f268, %f267, %f254, 0f00000000;
	neg.f32 	%f269, %f239;
	fma.rn.f32 	%f270, %f269, %f255, 0f00000000;
	neg.f32 	%f271, %f240;
	fma.rn.f32 	%f272, %f271, %f256, 0f00000000;
	.loc	1 90 45
	or.b32  	%r422, %r393, %r13;
	.loc	1 90 35
	mul.wide.s32 	%rd156, %r422, 2;
	add.s64 	%rd51, %rd3, %rd156;
	cvt.s64.s32 	%rd157, %r13;
	cvt.u64.u32 	%rd158, %r393;
	add.s64 	%rd159, %rd158, %rd157;
	shl.b64 	%rd160, %rd159, 1;
	add.s64 	%rd161, %rd3, %rd160;
	add.s64 	%rd52, %rd161, 16;
	add.s64 	%rd53, %rd161, 32;
	add.s64 	%rd54, %rd161, 48;
	add.s64 	%rd55, %rd161, 64;
	add.s64 	%rd56, %rd161, 80;
	add.s64 	%rd57, %rd161, 96;
	add.s64 	%rd58, %rd161, 112;
	.loc	1 90 55
	// begin inline asm
	mov.u16 %rs153, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs153 }, [ %rd51 + 0 ];
	@!%p145 mov.u16 %rs153, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs155, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs155 }, [ %rd52 + 0 ];
	@!%p145 mov.u16 %rs155, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs157, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs157 }, [ %rd53 + 0 ];
	@!%p145 mov.u16 %rs157, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs159, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs159 }, [ %rd54 + 0 ];
	@!%p145 mov.u16 %rs159, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs161, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs161 }, [ %rd55 + 0 ];
	@!%p145 mov.u16 %rs161, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs163, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs163 }, [ %rd56 + 0 ];
	@!%p145 mov.u16 %rs163, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs165, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs165 }, [ %rd57 + 0 ];
	@!%p145 mov.u16 %rs165, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs167, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs167 }, [ %rd58 + 0 ];
	@!%p145 mov.u16 %rs167, %rs82;
	// end inline asm
	.loc	1 90 122
	// begin inline asm
	cvt.f32.bf16 %r294, %rs153;
	// end inline asm
	mov.b32 	%f273, %r294;
	// begin inline asm
	cvt.f32.bf16 %r295, %rs155;
	// end inline asm
	mov.b32 	%f274, %r295;
	// begin inline asm
	cvt.f32.bf16 %r296, %rs157;
	// end inline asm
	mov.b32 	%f275, %r296;
	// begin inline asm
	cvt.f32.bf16 %r297, %rs159;
	// end inline asm
	mov.b32 	%f276, %r297;
	// begin inline asm
	cvt.f32.bf16 %r298, %rs161;
	// end inline asm
	mov.b32 	%f277, %r298;
	// begin inline asm
	cvt.f32.bf16 %r299, %rs163;
	// end inline asm
	mov.b32 	%f278, %r299;
	// begin inline asm
	cvt.f32.bf16 %r300, %rs165;
	// end inline asm
	mov.b32 	%f279, %r300;
	// begin inline asm
	cvt.f32.bf16 %r301, %rs167;
	// end inline asm
	mov.b32 	%f280, %r301;
	.loc	1 91 45
	or.b32  	%r423, %r393, %r14;
	.loc	1 91 35
	mul.wide.s32 	%rd162, %r423, 2;
	add.s64 	%rd59, %rd4, %rd162;
	cvt.s64.s32 	%rd163, %r14;
	add.s64 	%rd164, %rd158, %rd163;
	shl.b64 	%rd165, %rd164, 1;
	add.s64 	%rd166, %rd4, %rd165;
	add.s64 	%rd60, %rd166, 16;
	add.s64 	%rd61, %rd166, 32;
	add.s64 	%rd62, %rd166, 48;
	add.s64 	%rd63, %rd166, 64;
	add.s64 	%rd64, %rd166, 80;
	add.s64 	%rd65, %rd166, 96;
	add.s64 	%rd66, %rd166, 112;
	.loc	1 91 55
	// begin inline asm
	mov.u16 %rs177, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs177 }, [ %rd59 + 0 ];
	@!%p145 mov.u16 %rs177, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs179, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs179 }, [ %rd60 + 0 ];
	@!%p145 mov.u16 %rs179, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs181, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs181 }, [ %rd61 + 0 ];
	@!%p145 mov.u16 %rs181, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs183, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs183 }, [ %rd62 + 0 ];
	@!%p145 mov.u16 %rs183, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs185, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs185 }, [ %rd63 + 0 ];
	@!%p145 mov.u16 %rs185, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs187, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs187 }, [ %rd64 + 0 ];
	@!%p145 mov.u16 %rs187, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs189, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs189 }, [ %rd65 + 0 ];
	@!%p145 mov.u16 %rs189, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs191, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs191 }, [ %rd66 + 0 ];
	@!%p145 mov.u16 %rs191, %rs82;
	// end inline asm
	.loc	1 91 122
	// begin inline asm
	cvt.f32.bf16 %r302, %rs177;
	// end inline asm
	mov.b32 	%f281, %r302;
	// begin inline asm
	cvt.f32.bf16 %r303, %rs179;
	// end inline asm
	mov.b32 	%f282, %r303;
	// begin inline asm
	cvt.f32.bf16 %r304, %rs181;
	// end inline asm
	mov.b32 	%f283, %r304;
	// begin inline asm
	cvt.f32.bf16 %r305, %rs183;
	// end inline asm
	mov.b32 	%f284, %r305;
	// begin inline asm
	cvt.f32.bf16 %r306, %rs185;
	// end inline asm
	mov.b32 	%f285, %r306;
	// begin inline asm
	cvt.f32.bf16 %r307, %rs187;
	// end inline asm
	mov.b32 	%f286, %r307;
	// begin inline asm
	cvt.f32.bf16 %r308, %rs189;
	// end inline asm
	mov.b32 	%f287, %r308;
	// begin inline asm
	cvt.f32.bf16 %r309, %rs191;
	// end inline asm
	mov.b32 	%f288, %r309;
	.loc	1 92 24
	add.f32 	%f289, %f273, %f281;
	add.f32 	%f290, %f274, %f282;
	add.f32 	%f291, %f275, %f283;
	add.f32 	%f292, %f276, %f284;
	add.f32 	%f293, %f277, %f285;
	add.f32 	%f294, %f278, %f286;
	add.f32 	%f295, %f279, %f287;
	add.f32 	%f296, %f280, %f288;
	.loc	1 93 24
	mul.f32 	%f297, %f232, %f289;
	mul.f32 	%f298, %f232, %f290;
	mul.f32 	%f299, %f232, %f291;
	mul.f32 	%f300, %f232, %f292;
	mul.f32 	%f301, %f232, %f293;
	mul.f32 	%f302, %f232, %f294;
	mul.f32 	%f303, %f232, %f295;
	mul.f32 	%f304, %f232, %f296;
	.loc	1 94 35
	mul.wide.u32 	%rd167, %r393, 2;
	add.s64 	%rd67, %rd7, %rd167;
	add.s64 	%rd68, %rd67, 16;
	add.s64 	%rd69, %rd67, 32;
	add.s64 	%rd70, %rd67, 48;
	add.s64 	%rd71, %rd67, 64;
	add.s64 	%rd72, %rd67, 80;
	add.s64 	%rd73, %rd67, 96;
	add.s64 	%rd74, %rd67, 112;
	.loc	1 94 77
	// begin inline asm
	mov.u16 %rs201, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs201 }, [ %rd67 + 0 ];
	@!%p145 mov.u16 %rs201, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs203, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs203 }, [ %rd68 + 0 ];
	@!%p145 mov.u16 %rs203, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs205, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs205 }, [ %rd69 + 0 ];
	@!%p145 mov.u16 %rs205, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs207, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs207 }, [ %rd70 + 0 ];
	@!%p145 mov.u16 %rs207, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs209, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs209 }, [ %rd71 + 0 ];
	@!%p145 mov.u16 %rs209, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs211, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs211 }, [ %rd72 + 0 ];
	@!%p145 mov.u16 %rs211, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs213, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs213 }, [ %rd73 + 0 ];
	@!%p145 mov.u16 %rs213, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs215, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs215 }, [ %rd74 + 0 ];
	@!%p145 mov.u16 %rs215, %rs82;
	// end inline asm
	.loc	1 94 144
	// begin inline asm
	cvt.f32.bf16 %r310, %rs201;
	// end inline asm
	mov.b32 	%f305, %r310;
	// begin inline asm
	cvt.f32.bf16 %r311, %rs203;
	// end inline asm
	mov.b32 	%f306, %r311;
	// begin inline asm
	cvt.f32.bf16 %r312, %rs205;
	// end inline asm
	mov.b32 	%f307, %r312;
	// begin inline asm
	cvt.f32.bf16 %r313, %rs207;
	// end inline asm
	mov.b32 	%f308, %r313;
	// begin inline asm
	cvt.f32.bf16 %r314, %rs209;
	// end inline asm
	mov.b32 	%f309, %r314;
	// begin inline asm
	cvt.f32.bf16 %r315, %rs211;
	// end inline asm
	mov.b32 	%f310, %r315;
	// begin inline asm
	cvt.f32.bf16 %r316, %rs213;
	// end inline asm
	mov.b32 	%f311, %r316;
	// begin inline asm
	cvt.f32.bf16 %r317, %rs215;
	// end inline asm
	mov.b32 	%f312, %r317;
	.loc	1 95 24
	add.f32 	%f313, %f305, 0f00000000;
	add.f32 	%f314, %f306, 0f00000000;
	add.f32 	%f315, %f307, 0f00000000;
	add.f32 	%f316, %f308, 0f00000000;
	add.f32 	%f317, %f309, 0f00000000;
	add.f32 	%f318, %f310, 0f00000000;
	add.f32 	%f319, %f311, 0f00000000;
	add.f32 	%f320, %f312, 0f00000000;
	.loc	1 96 24
	mul.f32 	%f321, %f297, %f313;
	mul.f32 	%f322, %f298, %f314;
	mul.f32 	%f323, %f299, %f315;
	mul.f32 	%f324, %f300, %f316;
	mul.f32 	%f325, %f301, %f317;
	mul.f32 	%f326, %f302, %f318;
	mul.f32 	%f327, %f303, %f319;
	mul.f32 	%f328, %f304, %f320;
	.loc	1 0 0
	selp.f32 	%f329, %f258, %f321, %p45;
	selp.f32 	%f330, %f260, %f322, %p45;
	selp.f32 	%f331, %f262, %f323, %p45;
	selp.f32 	%f332, %f264, %f324, %p45;
	selp.f32 	%f333, %f266, %f325, %p45;
	selp.f32 	%f334, %f268, %f326, %p45;
	selp.f32 	%f335, %f270, %f327, %p45;
	selp.f32 	%f336, %f272, %f328, %p45;
	.loc	1 100 24
	add.f32 	%f337, %f143, %f151;
	add.f32 	%f338, %f144, %f152;
	add.f32 	%f339, %f145, %f153;
	add.f32 	%f340, %f146, %f154;
	add.f32 	%f341, %f147, %f155;
	add.f32 	%f342, %f148, %f156;
	add.f32 	%f343, %f149, %f157;
	add.f32 	%f344, %f150, %f158;
	.loc	1 101 24
	mul.f32 	%f345, %f337, %f231;
	mul.f32 	%f346, %f338, %f231;
	mul.f32 	%f347, %f339, %f231;
	mul.f32 	%f348, %f340, %f231;
	mul.f32 	%f349, %f341, %f231;
	mul.f32 	%f350, %f342, %f231;
	mul.f32 	%f351, %f343, %f231;
	mul.f32 	%f352, %f344, %f231;
	.loc	1 102 24
	add.f32 	%f353, %f159, 0f00000000;
	add.f32 	%f354, %f160, 0f00000000;
	add.f32 	%f355, %f161, 0f00000000;
	add.f32 	%f356, %f162, 0f00000000;
	add.f32 	%f357, %f163, 0f00000000;
	add.f32 	%f358, %f164, 0f00000000;
	add.f32 	%f359, %f165, 0f00000000;
	add.f32 	%f360, %f166, 0f00000000;
	.loc	1 103 24
	mul.f32 	%f361, %f353, %f345;
	mul.f32 	%f362, %f354, %f346;
	mul.f32 	%f363, %f355, %f347;
	mul.f32 	%f364, %f356, %f348;
	mul.f32 	%f365, %f357, %f349;
	mul.f32 	%f366, %f358, %f350;
	mul.f32 	%f367, %f359, %f351;
	mul.f32 	%f368, %f360, %f352;
	.loc	1 105 24
	mul.f32 	%f369, %f361, %f167;
	mul.f32 	%f370, %f362, %f168;
	mul.f32 	%f371, %f363, %f169;
	mul.f32 	%f372, %f364, %f170;
	mul.f32 	%f373, %f365, %f171;
	mul.f32 	%f374, %f366, %f172;
	mul.f32 	%f375, %f367, %f173;
	mul.f32 	%f376, %f368, %f174;
	bar.sync 	0;
	st.shared.f32 	[%r17], %f369;
	st.shared.f32 	[%r17+260], %f370;
	st.shared.f32 	[%r17+520], %f371;
	st.shared.f32 	[%r17+780], %f372;
	st.shared.f32 	[%r17+1040], %f373;
	st.shared.f32 	[%r17+1300], %f374;
	st.shared.f32 	[%r17+1560], %f375;
	st.shared.f32 	[%r17+1820], %f376;
	bar.sync 	0;
	ld.shared.f32 	%f377, [%r18];
	ld.shared.f32 	%f378, [%r18+2080];
	ld.shared.f32 	%f379, [%r18+4160];
	ld.shared.f32 	%f380, [%r18+6240];
	ld.shared.f32 	%f381, [%r18+8320];
	ld.shared.f32 	%f382, [%r18+10400];
	ld.shared.f32 	%f383, [%r18+12480];
	ld.shared.f32 	%f384, [%r18+14560];
	.loc	1 108 24
	fma.rn.f32 	%f385, %f175, %f329, %f377;
	fma.rn.f32 	%f386, %f176, %f330, %f378;
	fma.rn.f32 	%f387, %f177, %f331, %f379;
	fma.rn.f32 	%f388, %f178, %f332, %f380;
	fma.rn.f32 	%f389, %f179, %f333, %f381;
	fma.rn.f32 	%f390, %f180, %f334, %f382;
	fma.rn.f32 	%f391, %f181, %f335, %f383;
	fma.rn.f32 	%f392, %f182, %f336, %f384;
	.loc	1 110 35
	add.s64 	%rd75, %rd5, %rd132;
	add.s64 	%rd76, %rd5, %rd133;
	add.s64 	%rd77, %rd5, %rd134;
	add.s64 	%rd78, %rd5, %rd135;
	add.s64 	%rd79, %rd5, %rd136;
	add.s64 	%rd80, %rd5, %rd137;
	add.s64 	%rd81, %rd5, %rd138;
	add.s64 	%rd82, %rd5, %rd139;
	.loc	1 110 59
	// begin inline asm
	mov.u16 %rs225, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs225 }, [ %rd75 + 0 ];
	@!%p97 mov.u16 %rs225, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs227, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs227 }, [ %rd76 + 0 ];
	@!%p97 mov.u16 %rs227, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs229, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs229 }, [ %rd77 + 0 ];
	@!%p97 mov.u16 %rs229, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs231, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs231 }, [ %rd78 + 0 ];
	@!%p97 mov.u16 %rs231, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs233, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs233 }, [ %rd79 + 0 ];
	@!%p97 mov.u16 %rs233, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs235, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs235 }, [ %rd80 + 0 ];
	@!%p97 mov.u16 %rs235, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs237, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs237 }, [ %rd81 + 0 ];
	@!%p97 mov.u16 %rs237, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs239, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs239 }, [ %rd82 + 0 ];
	@!%p97 mov.u16 %rs239, %rs82;
	// end inline asm
	.loc	1 110 126
	// begin inline asm
	cvt.f32.bf16 %r318, %rs225;
	// end inline asm
	mov.b32 	%f393, %r318;
	// begin inline asm
	cvt.f32.bf16 %r319, %rs227;
	// end inline asm
	mov.b32 	%f394, %r319;
	// begin inline asm
	cvt.f32.bf16 %r320, %rs229;
	// end inline asm
	mov.b32 	%f395, %r320;
	// begin inline asm
	cvt.f32.bf16 %r321, %rs231;
	// end inline asm
	mov.b32 	%f396, %r321;
	// begin inline asm
	cvt.f32.bf16 %r322, %rs233;
	// end inline asm
	mov.b32 	%f397, %r322;
	// begin inline asm
	cvt.f32.bf16 %r323, %rs235;
	// end inline asm
	mov.b32 	%f398, %r323;
	// begin inline asm
	cvt.f32.bf16 %r324, %rs237;
	// end inline asm
	mov.b32 	%f399, %r324;
	// begin inline asm
	cvt.f32.bf16 %r325, %rs239;
	// end inline asm
	mov.b32 	%f400, %r325;
	.loc	1 111 35
	add.s64 	%rd83, %rd6, %rd140;
	add.s64 	%rd84, %rd6, %rd141;
	add.s64 	%rd85, %rd6, %rd142;
	add.s64 	%rd86, %rd6, %rd143;
	add.s64 	%rd87, %rd6, %rd144;
	add.s64 	%rd88, %rd6, %rd145;
	add.s64 	%rd89, %rd6, %rd146;
	add.s64 	%rd90, %rd6, %rd147;
	.loc	1 111 59
	// begin inline asm
	mov.u16 %rs249, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs249 }, [ %rd83 + 0 ];
	@!%p97 mov.u16 %rs249, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs251, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs251 }, [ %rd84 + 0 ];
	@!%p97 mov.u16 %rs251, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs253, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs253 }, [ %rd85 + 0 ];
	@!%p97 mov.u16 %rs253, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs255, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs255 }, [ %rd86 + 0 ];
	@!%p97 mov.u16 %rs255, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs257, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs257 }, [ %rd87 + 0 ];
	@!%p97 mov.u16 %rs257, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs259, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs259 }, [ %rd88 + 0 ];
	@!%p97 mov.u16 %rs259, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs261, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs261 }, [ %rd89 + 0 ];
	@!%p97 mov.u16 %rs261, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs263, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs263 }, [ %rd90 + 0 ];
	@!%p97 mov.u16 %rs263, %rs82;
	// end inline asm
	.loc	1 111 126
	// begin inline asm
	cvt.f32.bf16 %r326, %rs249;
	// end inline asm
	mov.b32 	%f401, %r326;
	// begin inline asm
	cvt.f32.bf16 %r327, %rs251;
	// end inline asm
	mov.b32 	%f402, %r327;
	// begin inline asm
	cvt.f32.bf16 %r328, %rs253;
	// end inline asm
	mov.b32 	%f403, %r328;
	// begin inline asm
	cvt.f32.bf16 %r329, %rs255;
	// end inline asm
	mov.b32 	%f404, %r329;
	// begin inline asm
	cvt.f32.bf16 %r330, %rs257;
	// end inline asm
	mov.b32 	%f405, %r330;
	// begin inline asm
	cvt.f32.bf16 %r331, %rs259;
	// end inline asm
	mov.b32 	%f406, %r331;
	// begin inline asm
	cvt.f32.bf16 %r332, %rs261;
	// end inline asm
	mov.b32 	%f407, %r332;
	// begin inline asm
	cvt.f32.bf16 %r333, %rs263;
	// end inline asm
	mov.b32 	%f408, %r333;
	.loc	1 112 24
	add.f32 	%f409, %f393, %f401;
	add.f32 	%f410, %f394, %f402;
	add.f32 	%f411, %f395, %f403;
	add.f32 	%f412, %f396, %f404;
	add.f32 	%f413, %f397, %f405;
	add.f32 	%f414, %f398, %f406;
	add.f32 	%f415, %f399, %f407;
	add.f32 	%f416, %f400, %f408;
	.loc	1 117 24
	bar.sync 	0;
	st.shared.f32 	[%r19], %f417;
	bar.sync 	0;
	ld.shared.f32 	%f418, [%r20];
	mul.f32 	%f419, %f409, %f418;
	mul.f32 	%f420, %f410, %f418;
	mul.f32 	%f421, %f411, %f418;
	mul.f32 	%f422, %f412, %f418;
	mul.f32 	%f423, %f413, %f418;
	mul.f32 	%f424, %f414, %f418;
	mul.f32 	%f425, %f415, %f418;
	mul.f32 	%f426, %f416, %f418;
	.loc	1 118 35
	add.s64 	%rd91, %rd10, %rd148;
	add.s64 	%rd92, %rd10, %rd149;
	add.s64 	%rd93, %rd10, %rd150;
	add.s64 	%rd94, %rd10, %rd151;
	add.s64 	%rd95, %rd10, %rd152;
	add.s64 	%rd96, %rd10, %rd153;
	add.s64 	%rd97, %rd10, %rd154;
	add.s64 	%rd98, %rd10, %rd155;
	.loc	1 118 83
	// begin inline asm
	mov.u16 %rs273, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs273 }, [ %rd91 + 0 ];
	@!%p97 mov.u16 %rs273, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs275, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs275 }, [ %rd92 + 0 ];
	@!%p97 mov.u16 %rs275, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs277, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs277 }, [ %rd93 + 0 ];
	@!%p97 mov.u16 %rs277, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs279, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs279 }, [ %rd94 + 0 ];
	@!%p97 mov.u16 %rs279, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs281, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs281 }, [ %rd95 + 0 ];
	@!%p97 mov.u16 %rs281, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs283, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs283 }, [ %rd96 + 0 ];
	@!%p97 mov.u16 %rs283, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs285, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs285 }, [ %rd97 + 0 ];
	@!%p97 mov.u16 %rs285, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs287, 0x0;
	@%p97 ld.global.L1::evict_last.b16 { %rs287 }, [ %rd98 + 0 ];
	@!%p97 mov.u16 %rs287, %rs82;
	// end inline asm
	.loc	1 118 150
	// begin inline asm
	cvt.f32.bf16 %r334, %rs273;
	// end inline asm
	mov.b32 	%f427, %r334;
	// begin inline asm
	cvt.f32.bf16 %r335, %rs275;
	// end inline asm
	mov.b32 	%f428, %r335;
	// begin inline asm
	cvt.f32.bf16 %r336, %rs277;
	// end inline asm
	mov.b32 	%f429, %r336;
	// begin inline asm
	cvt.f32.bf16 %r337, %rs279;
	// end inline asm
	mov.b32 	%f430, %r337;
	// begin inline asm
	cvt.f32.bf16 %r338, %rs281;
	// end inline asm
	mov.b32 	%f431, %r338;
	// begin inline asm
	cvt.f32.bf16 %r339, %rs283;
	// end inline asm
	mov.b32 	%f432, %r339;
	// begin inline asm
	cvt.f32.bf16 %r340, %rs285;
	// end inline asm
	mov.b32 	%f433, %r340;
	// begin inline asm
	cvt.f32.bf16 %r341, %rs287;
	// end inline asm
	mov.b32 	%f434, %r341;
	.loc	1 119 24
	add.f32 	%f435, %f427, 0f00000000;
	add.f32 	%f436, %f428, 0f00000000;
	add.f32 	%f437, %f429, 0f00000000;
	add.f32 	%f438, %f430, 0f00000000;
	add.f32 	%f439, %f431, 0f00000000;
	add.f32 	%f440, %f432, 0f00000000;
	add.f32 	%f441, %f433, 0f00000000;
	add.f32 	%f442, %f434, 0f00000000;
	.loc	1 121 17
	neg.f32 	%f443, %f419;
	fma.rn.f32 	%f444, %f443, %f435, 0f00000000;
	neg.f32 	%f445, %f420;
	fma.rn.f32 	%f446, %f445, %f436, 0f00000000;
	neg.f32 	%f447, %f421;
	fma.rn.f32 	%f448, %f447, %f437, 0f00000000;
	neg.f32 	%f449, %f422;
	fma.rn.f32 	%f450, %f449, %f438, 0f00000000;
	neg.f32 	%f451, %f423;
	fma.rn.f32 	%f452, %f451, %f439, 0f00000000;
	neg.f32 	%f453, %f424;
	fma.rn.f32 	%f454, %f453, %f440, 0f00000000;
	neg.f32 	%f455, %f425;
	fma.rn.f32 	%f456, %f455, %f441, 0f00000000;
	neg.f32 	%f457, %f426;
	fma.rn.f32 	%f458, %f457, %f442, 0f00000000;
	.loc	1 124 35
	add.s64 	%rd99, %rd5, %rd156;
	add.s64 	%rd168, %rd5, %rd160;
	add.s64 	%rd100, %rd168, 16;
	add.s64 	%rd101, %rd168, 32;
	add.s64 	%rd102, %rd168, 48;
	add.s64 	%rd103, %rd168, 64;
	add.s64 	%rd104, %rd168, 80;
	add.s64 	%rd105, %rd168, 96;
	add.s64 	%rd106, %rd168, 112;
	.loc	1 124 55
	// begin inline asm
	mov.u16 %rs297, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs297 }, [ %rd99 + 0 ];
	@!%p145 mov.u16 %rs297, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs299, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs299 }, [ %rd100 + 0 ];
	@!%p145 mov.u16 %rs299, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs301, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs301 }, [ %rd101 + 0 ];
	@!%p145 mov.u16 %rs301, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs303, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs303 }, [ %rd102 + 0 ];
	@!%p145 mov.u16 %rs303, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs305, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs305 }, [ %rd103 + 0 ];
	@!%p145 mov.u16 %rs305, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs307, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs307 }, [ %rd104 + 0 ];
	@!%p145 mov.u16 %rs307, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs309, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs309 }, [ %rd105 + 0 ];
	@!%p145 mov.u16 %rs309, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs311, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs311 }, [ %rd106 + 0 ];
	@!%p145 mov.u16 %rs311, %rs82;
	// end inline asm
	.loc	1 124 122
	// begin inline asm
	cvt.f32.bf16 %r342, %rs297;
	// end inline asm
	mov.b32 	%f459, %r342;
	// begin inline asm
	cvt.f32.bf16 %r343, %rs299;
	// end inline asm
	mov.b32 	%f460, %r343;
	// begin inline asm
	cvt.f32.bf16 %r344, %rs301;
	// end inline asm
	mov.b32 	%f461, %r344;
	// begin inline asm
	cvt.f32.bf16 %r345, %rs303;
	// end inline asm
	mov.b32 	%f462, %r345;
	// begin inline asm
	cvt.f32.bf16 %r346, %rs305;
	// end inline asm
	mov.b32 	%f463, %r346;
	// begin inline asm
	cvt.f32.bf16 %r347, %rs307;
	// end inline asm
	mov.b32 	%f464, %r347;
	// begin inline asm
	cvt.f32.bf16 %r348, %rs309;
	// end inline asm
	mov.b32 	%f465, %r348;
	// begin inline asm
	cvt.f32.bf16 %r349, %rs311;
	// end inline asm
	mov.b32 	%f466, %r349;
	.loc	1 125 35
	add.s64 	%rd107, %rd6, %rd162;
	add.s64 	%rd169, %rd6, %rd165;
	add.s64 	%rd108, %rd169, 16;
	add.s64 	%rd109, %rd169, 32;
	add.s64 	%rd110, %rd169, 48;
	add.s64 	%rd111, %rd169, 64;
	add.s64 	%rd112, %rd169, 80;
	add.s64 	%rd113, %rd169, 96;
	add.s64 	%rd114, %rd169, 112;
	.loc	1 125 55
	// begin inline asm
	mov.u16 %rs321, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs321 }, [ %rd107 + 0 ];
	@!%p145 mov.u16 %rs321, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs323, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs323 }, [ %rd108 + 0 ];
	@!%p145 mov.u16 %rs323, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs325, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs325 }, [ %rd109 + 0 ];
	@!%p145 mov.u16 %rs325, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs327, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs327 }, [ %rd110 + 0 ];
	@!%p145 mov.u16 %rs327, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs329, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs329 }, [ %rd111 + 0 ];
	@!%p145 mov.u16 %rs329, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs331, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs331 }, [ %rd112 + 0 ];
	@!%p145 mov.u16 %rs331, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs333, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs333 }, [ %rd113 + 0 ];
	@!%p145 mov.u16 %rs333, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs335, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs335 }, [ %rd114 + 0 ];
	@!%p145 mov.u16 %rs335, %rs82;
	// end inline asm
	.loc	1 125 122
	// begin inline asm
	cvt.f32.bf16 %r350, %rs321;
	// end inline asm
	mov.b32 	%f467, %r350;
	// begin inline asm
	cvt.f32.bf16 %r351, %rs323;
	// end inline asm
	mov.b32 	%f468, %r351;
	// begin inline asm
	cvt.f32.bf16 %r352, %rs325;
	// end inline asm
	mov.b32 	%f469, %r352;
	// begin inline asm
	cvt.f32.bf16 %r353, %rs327;
	// end inline asm
	mov.b32 	%f470, %r353;
	// begin inline asm
	cvt.f32.bf16 %r354, %rs329;
	// end inline asm
	mov.b32 	%f471, %r354;
	// begin inline asm
	cvt.f32.bf16 %r355, %rs331;
	// end inline asm
	mov.b32 	%f472, %r355;
	// begin inline asm
	cvt.f32.bf16 %r356, %rs333;
	// end inline asm
	mov.b32 	%f473, %r356;
	// begin inline asm
	cvt.f32.bf16 %r357, %rs335;
	// end inline asm
	mov.b32 	%f474, %r357;
	.loc	1 126 24
	add.f32 	%f475, %f459, %f467;
	add.f32 	%f476, %f460, %f468;
	add.f32 	%f477, %f461, %f469;
	add.f32 	%f478, %f462, %f470;
	add.f32 	%f479, %f463, %f471;
	add.f32 	%f480, %f464, %f472;
	add.f32 	%f481, %f465, %f473;
	add.f32 	%f482, %f466, %f474;
	.loc	1 127 24
	mul.f32 	%f483, %f418, %f475;
	mul.f32 	%f484, %f418, %f476;
	mul.f32 	%f485, %f418, %f477;
	mul.f32 	%f486, %f418, %f478;
	mul.f32 	%f487, %f418, %f479;
	mul.f32 	%f488, %f418, %f480;
	mul.f32 	%f489, %f418, %f481;
	mul.f32 	%f490, %f418, %f482;
	.loc	1 128 35
	add.s64 	%rd115, %rd10, %rd167;
	add.s64 	%rd116, %rd115, 16;
	add.s64 	%rd117, %rd115, 32;
	add.s64 	%rd118, %rd115, 48;
	add.s64 	%rd119, %rd115, 64;
	add.s64 	%rd120, %rd115, 80;
	add.s64 	%rd121, %rd115, 96;
	add.s64 	%rd122, %rd115, 112;
	.loc	1 128 77
	// begin inline asm
	mov.u16 %rs345, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs345 }, [ %rd115 + 0 ];
	@!%p145 mov.u16 %rs345, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs347, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs347 }, [ %rd116 + 0 ];
	@!%p145 mov.u16 %rs347, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs349, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs349 }, [ %rd117 + 0 ];
	@!%p145 mov.u16 %rs349, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs351, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs351 }, [ %rd118 + 0 ];
	@!%p145 mov.u16 %rs351, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs353, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs353 }, [ %rd119 + 0 ];
	@!%p145 mov.u16 %rs353, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs355, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs355 }, [ %rd120 + 0 ];
	@!%p145 mov.u16 %rs355, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs357, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs357 }, [ %rd121 + 0 ];
	@!%p145 mov.u16 %rs357, %rs82;
	// end inline asm
	// begin inline asm
	mov.u16 %rs359, 0x0;
	@%p145 ld.global.L1::evict_last.b16 { %rs359 }, [ %rd122 + 0 ];
	@!%p145 mov.u16 %rs359, %rs82;
	// end inline asm
	.loc	1 128 144
	// begin inline asm
	cvt.f32.bf16 %r358, %rs345;
	// end inline asm
	mov.b32 	%f491, %r358;
	// begin inline asm
	cvt.f32.bf16 %r359, %rs347;
	// end inline asm
	mov.b32 	%f492, %r359;
	// begin inline asm
	cvt.f32.bf16 %r360, %rs349;
	// end inline asm
	mov.b32 	%f493, %r360;
	// begin inline asm
	cvt.f32.bf16 %r361, %rs351;
	// end inline asm
	mov.b32 	%f494, %r361;
	// begin inline asm
	cvt.f32.bf16 %r362, %rs353;
	// end inline asm
	mov.b32 	%f495, %r362;
	// begin inline asm
	cvt.f32.bf16 %r363, %rs355;
	// end inline asm
	mov.b32 	%f496, %r363;
	// begin inline asm
	cvt.f32.bf16 %r364, %rs357;
	// end inline asm
	mov.b32 	%f497, %r364;
	// begin inline asm
	cvt.f32.bf16 %r365, %rs359;
	// end inline asm
	mov.b32 	%f498, %r365;
	.loc	1 129 24
	add.f32 	%f499, %f491, 0f00000000;
	add.f32 	%f500, %f492, 0f00000000;
	add.f32 	%f501, %f493, 0f00000000;
	add.f32 	%f502, %f494, 0f00000000;
	add.f32 	%f503, %f495, 0f00000000;
	add.f32 	%f504, %f496, 0f00000000;
	add.f32 	%f505, %f497, 0f00000000;
	add.f32 	%f506, %f498, 0f00000000;
	.loc	1 130 24
	mul.f32 	%f507, %f483, %f499;
	mul.f32 	%f508, %f484, %f500;
	mul.f32 	%f509, %f485, %f501;
	mul.f32 	%f510, %f486, %f502;
	mul.f32 	%f511, %f487, %f503;
	mul.f32 	%f512, %f488, %f504;
	mul.f32 	%f513, %f489, %f505;
	mul.f32 	%f514, %f490, %f506;
	.loc	1 0 0
	selp.f32 	%f515, %f444, %f507, %p45;
	selp.f32 	%f516, %f446, %f508, %p45;
	selp.f32 	%f517, %f448, %f509, %p45;
	selp.f32 	%f518, %f450, %f510, %p45;
	selp.f32 	%f519, %f452, %f511, %p45;
	selp.f32 	%f520, %f454, %f512, %p45;
	selp.f32 	%f521, %f456, %f513, %p45;
	selp.f32 	%f522, %f458, %f514, %p45;
	.loc	1 134 24
	add.f32 	%f523, %f183, %f191;
	add.f32 	%f524, %f184, %f192;
	add.f32 	%f525, %f185, %f193;
	add.f32 	%f526, %f186, %f194;
	add.f32 	%f527, %f187, %f195;
	add.f32 	%f528, %f188, %f196;
	add.f32 	%f529, %f189, %f197;
	add.f32 	%f530, %f190, %f198;
	.loc	1 135 24
	mul.f32 	%f531, %f523, %f417;
	mul.f32 	%f532, %f524, %f417;
	mul.f32 	%f533, %f525, %f417;
	mul.f32 	%f534, %f526, %f417;
	mul.f32 	%f535, %f527, %f417;
	mul.f32 	%f536, %f528, %f417;
	mul.f32 	%f537, %f529, %f417;
	mul.f32 	%f538, %f530, %f417;
	.loc	1 136 24
	add.f32 	%f539, %f199, 0f00000000;
	add.f32 	%f540, %f200, 0f00000000;
	add.f32 	%f541, %f201, 0f00000000;
	add.f32 	%f542, %f202, 0f00000000;
	add.f32 	%f543, %f203, 0f00000000;
	add.f32 	%f544, %f204, 0f00000000;
	add.f32 	%f545, %f205, 0f00000000;
	add.f32 	%f546, %f206, 0f00000000;
	.loc	1 137 24
	mul.f32 	%f547, %f539, %f531;
	mul.f32 	%f548, %f540, %f532;
	mul.f32 	%f549, %f541, %f533;
	mul.f32 	%f550, %f542, %f534;
	mul.f32 	%f551, %f543, %f535;
	mul.f32 	%f552, %f544, %f536;
	mul.f32 	%f553, %f545, %f537;
	mul.f32 	%f554, %f546, %f538;
	.loc	1 139 24
	mul.f32 	%f555, %f547, %f167;
	mul.f32 	%f556, %f548, %f168;
	mul.f32 	%f557, %f549, %f169;
	mul.f32 	%f558, %f550, %f170;
	mul.f32 	%f559, %f551, %f171;
	mul.f32 	%f560, %f552, %f172;
	mul.f32 	%f561, %f553, %f173;
	mul.f32 	%f562, %f554, %f174;
	bar.sync 	0;
	st.shared.f32 	[%r17], %f555;
	st.shared.f32 	[%r17+260], %f556;
	st.shared.f32 	[%r17+520], %f557;
	st.shared.f32 	[%r17+780], %f558;
	st.shared.f32 	[%r17+1040], %f559;
	st.shared.f32 	[%r17+1300], %f560;
	st.shared.f32 	[%r17+1560], %f561;
	st.shared.f32 	[%r17+1820], %f562;
	bar.sync 	0;
	ld.shared.f32 	%f563, [%r18];
	ld.shared.f32 	%f564, [%r18+2080];
	ld.shared.f32 	%f565, [%r18+4160];
	ld.shared.f32 	%f566, [%r18+6240];
	ld.shared.f32 	%f567, [%r18+8320];
	ld.shared.f32 	%f568, [%r18+10400];
	ld.shared.f32 	%f569, [%r18+12480];
	ld.shared.f32 	%f570, [%r18+14560];
	.loc	1 142 25
	fma.rn.f32 	%f571, %f175, %f515, %f563;
	fma.rn.f32 	%f572, %f176, %f516, %f564;
	fma.rn.f32 	%f573, %f177, %f517, %f565;
	fma.rn.f32 	%f574, %f178, %f518, %f566;
	fma.rn.f32 	%f575, %f179, %f519, %f567;
	fma.rn.f32 	%f576, %f180, %f520, %f568;
	fma.rn.f32 	%f577, %f181, %f521, %f569;
	fma.rn.f32 	%f578, %f182, %f522, %f570;
	.loc	1 144 32
	add.s64 	%rd123, %rd1, %rd125;
	.loc	1 144 55
	mov.b32 	%r366, %f385;
	// begin inline asm
	cvt.rn.bf16.f32 %rs369, %r366;
	// end inline asm
	mov.b32 	%r367, %f386;
	// begin inline asm
	cvt.rn.bf16.f32 %rs370, %r367;
	// end inline asm
	mov.b32 	%r368, %f387;
	// begin inline asm
	cvt.rn.bf16.f32 %rs371, %r368;
	// end inline asm
	mov.b32 	%r369, %f388;
	// begin inline asm
	cvt.rn.bf16.f32 %rs372, %r369;
	// end inline asm
	mov.b32 	%r370, %f389;
	// begin inline asm
	cvt.rn.bf16.f32 %rs373, %r370;
	// end inline asm
	mov.b32 	%r371, %f390;
	// begin inline asm
	cvt.rn.bf16.f32 %rs374, %r371;
	// end inline asm
	mov.b32 	%r372, %f391;
	// begin inline asm
	cvt.rn.bf16.f32 %rs375, %r372;
	// end inline asm
	mov.b32 	%r373, %f392;
	// begin inline asm
	cvt.rn.bf16.f32 %rs376, %r373;
	// end inline asm
	bar.sync 	0;
	st.shared.u16 	[%r21], %rs369;
	st.shared.u16 	[%r21+16], %rs370;
	st.shared.u16 	[%r21+32], %rs371;
	st.shared.u16 	[%r21+48], %rs372;
	st.shared.u16 	[%r21+64], %rs373;
	st.shared.u16 	[%r21+80], %rs374;
	st.shared.u16 	[%r21+96], %rs375;
	st.shared.u16 	[%r21+112], %rs376;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r374, %r375, %r376, %r377}, [%r23];
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd123 + 0 ], { %r374, %r375, %r376, %r377 };
	// end inline asm
	.loc	1 145 32
	add.s64 	%rd124, %rd2, %rd125;
	.loc	1 145 56
	mov.b32 	%r378, %f571;
	// begin inline asm
	cvt.rn.bf16.f32 %rs377, %r378;
	// end inline asm
	mov.b32 	%r379, %f572;
	// begin inline asm
	cvt.rn.bf16.f32 %rs378, %r379;
	// end inline asm
	mov.b32 	%r380, %f573;
	// begin inline asm
	cvt.rn.bf16.f32 %rs379, %r380;
	// end inline asm
	mov.b32 	%r381, %f574;
	// begin inline asm
	cvt.rn.bf16.f32 %rs380, %r381;
	// end inline asm
	mov.b32 	%r382, %f575;
	// begin inline asm
	cvt.rn.bf16.f32 %rs381, %r382;
	// end inline asm
	mov.b32 	%r383, %f576;
	// begin inline asm
	cvt.rn.bf16.f32 %rs382, %r383;
	// end inline asm
	mov.b32 	%r384, %f577;
	// begin inline asm
	cvt.rn.bf16.f32 %rs383, %r384;
	// end inline asm
	mov.b32 	%r385, %f578;
	// begin inline asm
	cvt.rn.bf16.f32 %rs384, %r385;
	// end inline asm
	bar.sync 	0;
	st.shared.u16 	[%r21], %rs377;
	st.shared.u16 	[%r21+16], %rs378;
	st.shared.u16 	[%r21+32], %rs379;
	st.shared.u16 	[%r21+48], %rs380;
	st.shared.u16 	[%r21+64], %rs381;
	st.shared.u16 	[%r21+80], %rs382;
	st.shared.u16 	[%r21+96], %rs383;
	st.shared.u16 	[%r21+112], %rs384;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r386, %r387, %r388, %r389}, [%r23];
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd124 + 0 ], { %r386, %r387, %r388, %r389 };
	// end inline asm
	mov.b32 	%r425, 64;
	mov.pred 	%p294, 0;
	.loc	1 51 36
	@%p20 bra 	$L__BB0_3;
	.loc	1 51 4
	ret;
$L__tmp4:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/j7/cj7ile7uzareqr5ehayxmzrhk2k7dljr62gyn7edkfjuybf342qj.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 197
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 106
.b8 55
.b8 105
.b8 108
.b8 101
.b8 55
.b8 117
.b8 122
.b8 97
.b8 114
.b8 101
.b8 113
.b8 114
.b8 53
.b8 101
.b8 104
.b8 97
.b8 121
.b8 120
.b8 109
.b8 122
.b8 114
.b8 104
.b8 107
.b8 50
.b8 107
.b8 55
.b8 100
.b8 108
.b8 106
.b8 114
.b8 54
.b8 50
.b8 103
.b8 121
.b8 110
.b8 55
.b8 101
.b8 100
.b8 107
.b8 102
.b8 106
.b8 117
.b8 121
.b8 98
.b8 102
.b8 51
.b8 52
.b8 50
.b8 113
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 55
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 48
.b8 25
.b8 4
.b32 120
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 49
.b8 27
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
