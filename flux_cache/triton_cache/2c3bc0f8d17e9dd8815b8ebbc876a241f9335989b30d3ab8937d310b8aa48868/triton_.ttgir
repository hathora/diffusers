#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":18:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":18:0), %arg2: i32 loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":18:0), %arg3: i32 loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %false = arith.constant false loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg3 : i32 -> tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<256xi32, #blocked> loc(#loc6)
    %7 = arith.divsi %arg2, %c2_i32 : i32 loc(#loc31)
    %8 = arith.remsi %arg2, %c2_i32 : i32 loc(#loc32)
    %9 = arith.cmpi ne, %8, %c0_i32 : i32 loc(#loc33)
    %10 = arith.subi %7, %c1_i32 : i32 loc(#loc34)
    %11 = arith.select %9, %10, %7 : i32 loc(#loc35)
    %12 = arith.cmpi slt, %arg2, %c0_i32 : i32 loc(#loc36)
    %13 = arith.cmpi ne, %12, %false : i1 loc(#loc37)
    %14 = arith.select %13, %11, %7 : i32 loc(#loc38)
    %15 = tt.splat %14 : i32 -> tensor<256xi32, #blocked> loc(#loc16)
    %16 = arith.cmpi slt, %4, %15 : tensor<256xi32, #blocked> loc(#loc16)
    %17 = arith.addi %15, %4 : tensor<256xi32, #blocked> loc(#loc17)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %19 = tt.addptr %18, %17 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %20 = arith.andi %16, %6 : tensor<256xi1, #blocked> loc(#loc19)
    %21 = tt.load %19, %20, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = arith.cmpi sge, %4, %15 : tensor<256xi32, #blocked> loc(#loc21)
    %23 = arith.muli %14, %c-1_i32 : i32 loc(#loc22)
    %24 = tt.splat %23 : i32 -> tensor<256xi32, #blocked> loc(#loc23)
    %25 = arith.addi %4, %24 : tensor<256xi32, #blocked> loc(#loc23)
    %26 = tt.addptr %18, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc24)
    %27 = arith.andi %22, %6 : tensor<256xi1, #blocked> loc(#loc25)
    %28 = tt.load %26, %27, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc26)
    %29 = arith.select %16, %21, %28 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc27)
    %30 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<256x!tt.ptr<bf16>, #blocked> loc(#loc28)
    %31 = tt.addptr %30, %4 : tensor<256x!tt.ptr<bf16>, #blocked>, tensor<256xi32, #blocked> loc(#loc28)
    %32 = arith.truncf %29 : tensor<256xf32, #blocked> to tensor<256xbf16, #blocked> loc(#loc29)
    tt.store %31, %32, %6 : tensor<256x!tt.ptr<bf16>, #blocked> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":19:28)
#loc3 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":19:33)
#loc4 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":20:36)
#loc5 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":20:23)
#loc6 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":21:21)
#loc7 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":44:16)
#loc8 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":26:50)
#loc9 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":45:20)
#loc10 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":46:34)
#loc11 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":46:44)
#loc12 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":46:47)
#loc13 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":47:25)
#loc14 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":47:32)
#loc15 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":47:47)
#loc16 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":27:18)
#loc17 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":28:76)
#loc18 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":28:30)
#loc19 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":28:88)
#loc20 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":28:81)
#loc21 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":29:19)
#loc22 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":32:42)
#loc23 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":32:36)
#loc24 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":32:30)
#loc25 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":32:95)
#loc26 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":32:88)
#loc27 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":33:33)
#loc28 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":35:25)
#loc29 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":35:37)
#loc30 = loc("/opt/inductor_cache/36/c36q4gtcegfhqdtofnfqzqrzlnfq5d2yf5jcnrdscrfqirs2b3bg.py":35:4)
#loc31 = loc(callsite(#loc7 at #loc8))
#loc32 = loc(callsite(#loc9 at #loc8))
#loc33 = loc(callsite(#loc10 at #loc8))
#loc34 = loc(callsite(#loc11 at #loc8))
#loc35 = loc(callsite(#loc12 at #loc8))
#loc36 = loc(callsite(#loc13 at #loc8))
#loc37 = loc(callsite(#loc14 at #loc8))
#loc38 = loc(callsite(#loc15 at #loc8))
