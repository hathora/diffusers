//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2,
	.param .u32 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5
)
.maxntid 128, 1, 1
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<282>;
	.reg .f32 	%f<206>;
	.reg .b64 	%rd<42>;
	.reg .f64 	%fd<9>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd10, [triton__param_0];
	add.u64 	%rd11, %SP, 0;
	ld.param.u32 	%r103, [triton__param_2];
	ld.param.u32 	%r104, [triton__param_3];
	ld.param.u32 	%r105, [triton__param_4];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r95, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r106, %r95, 8;
	.loc	1 20 36
	mov.u32 	%r107, %tid.x;
	shl.b32 	%r108, %r107, 1;
	and.b32  	%r109, %r108, 254;
	.loc	1 20 23
	or.b32  	%r5, %r106, %r109;
	or.b32  	%r6, %r5, 1;
	mov.pred 	%p1, -1;
	.loc	1 23 19
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p1 ld.global.b16 { %rs1 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 23 37
	// begin inline asm
	cvt.f32.bf16 %r96, %rs1;
	// end inline asm
	mov.b32 	%f72, %r96;
$L__tmp1:
	.loc	2 47 47
	shr.u32 	%r110, %r103, 31;
	.loc	2 44 16
	add.s32 	%r111, %r103, %r110;
	shr.s32 	%r112, %r111, 1;
	.loc	2 46 47
	and.b32  	%r113, %r103, %r110;
	.loc	2 47 47
	sub.s32 	%r7, %r112, %r113;
$L__tmp2:
	.loc	1 31 18
	mul.f32 	%f1, %f72, 0f447A0000;
	.loc	1 33 20
	cvt.rn.f32.s32 	%f73, %r5;
	cvt.rn.f32.s32 	%f74, %r6;
	.loc	1 35 20
	mul.f32 	%f75, %f73, 0fC1135D8E;
	mul.f32 	%f76, %f74, 0fC1135D8E;
	.loc	1 36 42
	sub.s32 	%r114, %r7, %r104;
	.loc	1 37 21
	cvt.rn.f32.s32 	%f2, %r114;
	.loc	1 38 20
	mov.b32 	%r99, %f2;
	mov.b32 	%r98, %f75;
	// begin inline asm
	div.full.f32 %r97, %r98, %r99;
	// end inline asm
	mov.b32 	%f77, %r97;
	mov.b32 	%r101, %f76;
	// begin inline asm
	div.full.f32 %r100, %r101, %r99;
	// end inline asm
	mov.b32 	%f78, %r100;
	.loc	1 39 24
	mul.f32 	%f69, %f77, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f68, %f69;
	// end inline asm
	mul.f32 	%f71, %f78, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f70, %f71;
	// end inline asm
	.loc	1 40 19
	mul.f32 	%f79, %f1, %f68;
	.loc	1 42 21
	cvt.rn.f32.s32 	%f3, %r105;
	.loc	1 43 20
	mul.f32 	%f4, %f79, %f3;
	.loc	1 44 24
	mul.f32 	%f81, %f4, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r263, %f81;
	cvt.rn.f32.s32 	%f82, %r263;
	mov.f32 	%f83, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f84, %f82, %f83, %f4;
	mov.f32 	%f85, 0fB3A22168;
	fma.rn.ftz.f32 	%f86, %f82, %f85, %f84;
	mov.f32 	%f87, 0fA7C234C5;
	fma.rn.ftz.f32 	%f186, %f82, %f87, %f86;
	abs.ftz.f32 	%f7, %f4;
	setp.ltu.f32 	%p2, %f7, 0f47CE4780;
	mov.f32 	%f183, 0f00000000;
	@%p2 bra 	$L__BB0_8;
	setp.neu.f32 	%p3, %f7, 0f7F800000;
	@%p3 bra 	$L__BB0_3;
	mul.rn.ftz.f32 	%f186, %f4, %f183;
	mov.b32 	%r263, 0;
	bra.uni 	$L__BB0_8;
$L__BB0_3:
	.loc	1 0 24
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd11;
	  cvt.u32.u64 	%r4, %tmp; }
	mov.b32 	%r260, 0;
	.loc	1 44 24
	mov.b32 	%r9, %f4;
	shr.u32 	%r10, %r9, 23;
	and.b32  	%r117, %r10, 224;
	add.s32 	%r118, %r117, -128;
	shl.b32 	%r119, %r9, 8;
	or.b32  	%r123, %r119, -2147483648;
	shr.u32 	%r12, %r118, 5;
	mov.b32 	%r258, -1;
	mov.u64 	%rd38, __cudart_i2opi_f;
	mov.u32 	%r259, %r4;
$L__BB0_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r122, [%rd38];
	// begin inline asm
	{
	mad.lo.cc.u32   %r120, %r122, %r123, %r260;
	madc.hi.u32     %r260, %r122, %r123,  0;
	}
	// end inline asm
	st.local.u32 	[%r259], %r120;
	add.s32 	%r259, %r259, 4;
	add.s32 	%r258, %r258, 1;
	add.s64 	%rd38, %rd38, 4;
	setp.lt.u32 	%p4, %r258, 5;
	@%p4 bra 	$L__BB0_4;
	st.local.u32 	[%r4+24], %r260;
	and.b32  	%r19, %r10, 31;
	shl.b32 	%r125, %r12, 2;
	sub.s32 	%r20, %r4, %r125;
	ld.local.u32 	%r261, [%r20+24];
	ld.local.u32 	%r262, [%r20+20];
	setp.eq.s32 	%p5, %r19, 0;
	@%p5 bra 	$L__BB0_7;
	.loc	1 0 24
	mov.b32 	%r126, 32;
	.loc	1 44 24
	sub.s32 	%r127, %r126, %r19;
	shl.b32 	%r128, %r261, %r19;
	shr.u32 	%r129, %r262, %r127;
	add.s32 	%r261, %r129, %r128;
	shl.b32 	%r130, %r262, %r19;
	ld.local.u32 	%r131, [%r20+16];
	shr.u32 	%r132, %r131, %r127;
	add.s32 	%r262, %r132, %r130;
$L__BB0_7:
	shr.u32 	%r133, %r261, 30;
	shr.u32 	%r134, %r262, 30;
	shl.b32 	%r135, %r261, 2;
	or.b32  	%r136, %r135, %r134;
	shl.b32 	%r137, %r262, 2;
	bfe.u32 	%r138, %r261, 29, 1;
	add.s32 	%r139, %r138, %r133;
	neg.s32 	%r140, %r139;
	setp.lt.s32 	%p6, %r9, 0;
	selp.b32 	%r263, %r140, %r139, %p6;
	xor.b32  	%r141, %r136, %r9;
	bfe.s32 	%r142, %r261, 29, 1;
	xor.b32  	%r143, %r142, %r136;
	xor.b32  	%r144, %r142, %r137;
	cvt.u64.u32 	%rd16, %r143;
	shl.b64 	%rd17, %rd16, 32;
	cvt.u64.u32 	%rd18, %r144;
	or.b64  	%rd19, %rd17, %rd18;
	cvt.rn.f64.s64 	%fd1, %rd19;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f88, %fd2;
	neg.f32 	%f89, %f88;
	setp.lt.s32 	%p7, %r141, 0;
	selp.f32 	%f186, %f89, %f88, %p7;
$L__BB0_8:
	.loc	1 0 0
	mul.f32 	%f80, %f1, %f70;
	.loc	1 44 24
	mul.rn.ftz.f32 	%f11, %f186, %f186;
	and.b32  	%r146, %r263, 1;
	setp.eq.b32 	%p8, %r146, 1;
	selp.f32 	%f12, 0f3F800000, %f186, %p8;
	fma.rn.ftz.f32 	%f13, %f11, %f12, %f183;
	mov.f32 	%f95, 0fBAB607ED;
	mov.f32 	%f96, 0f37CBAC00;
	mov.f32 	%f189, 0fB94D4153;
	mov.f32 	%f188, 0f3C0885E4;
	mov.f32 	%f187, 0fBE2AAAA8;
	@!%p8 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:
	.loc	1 0 24
	fma.rn.ftz.f32 	%f189, %f96, %f11, %f95;
	mov.f32 	%f188, 0f3D2AAABB;
	mov.f32 	%f187, 0fBEFFFFFF;
$L__BB0_10:
	mul.f32 	%f5, %f80, %f3;
	.loc	1 44 24
	fma.rn.ftz.f32 	%f99, %f189, %f11, %f188;
	fma.rn.ftz.f32 	%f100, %f99, %f11, %f187;
	fma.rn.ftz.f32 	%f190, %f100, %f13, %f12;
	and.b32  	%r147, %r263, 2;
	setp.eq.s32 	%p9, %r147, 0;
	mov.f32 	%f102, 0fBF800000;
	@%p9 bra 	$L__BB0_12;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f190, %f190, %f102, %f183;
$L__BB0_12:
	.loc	1 44 24
	mul.f32 	%f103, %f5, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r269, %f103;
	cvt.rn.f32.s32 	%f104, %r269;
	fma.rn.ftz.f32 	%f106, %f104, %f83, %f5;
	fma.rn.ftz.f32 	%f108, %f104, %f85, %f106;
	fma.rn.ftz.f32 	%f191, %f104, %f87, %f108;
	abs.ftz.f32 	%f22, %f5;
	setp.ltu.f32 	%p10, %f22, 0f47CE4780;
	@%p10 bra 	$L__BB0_20;
	setp.neu.f32 	%p11, %f22, 0f7F800000;
	@%p11 bra 	$L__BB0_15;
	mul.rn.ftz.f32 	%f191, %f5, %f183;
	mov.b32 	%r269, 0;
	bra.uni 	$L__BB0_20;
$L__BB0_15:
	.loc	1 0 24
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd11;
	  cvt.u32.u64 	%r3, %tmp; }
	.loc	1 44 24
	mov.b32 	%r30, %f5;
	shr.u32 	%r31, %r30, 23;
	and.b32  	%r150, %r31, 224;
	add.s32 	%r151, %r150, -128;
	shl.b32 	%r152, %r30, 8;
	or.b32  	%r156, %r152, -2147483648;
	shr.u32 	%r33, %r151, 5;
	mov.b32 	%r266, 0;
	mov.b32 	%r264, -1;
	mov.u64 	%rd39, __cudart_i2opi_f;
	mov.u32 	%r265, %r3;
$L__BB0_16:
	.pragma "nounroll";
	ld.global.nc.u32 	%r155, [%rd39];
	// begin inline asm
	{
	mad.lo.cc.u32   %r153, %r155, %r156, %r266;
	madc.hi.u32     %r266, %r155, %r156,  0;
	}
	// end inline asm
	st.local.u32 	[%r265], %r153;
	add.s32 	%r265, %r265, 4;
	add.s32 	%r264, %r264, 1;
	add.s64 	%rd39, %rd39, 4;
	setp.lt.u32 	%p12, %r264, 5;
	@%p12 bra 	$L__BB0_16;
	st.local.u32 	[%r3+24], %r266;
	and.b32  	%r40, %r31, 31;
	shl.b32 	%r158, %r33, 2;
	sub.s32 	%r41, %r3, %r158;
	ld.local.u32 	%r267, [%r41+24];
	ld.local.u32 	%r268, [%r41+20];
	setp.eq.s32 	%p13, %r40, 0;
	@%p13 bra 	$L__BB0_19;
	.loc	1 0 24
	mov.b32 	%r159, 32;
	.loc	1 44 24
	sub.s32 	%r160, %r159, %r40;
	shl.b32 	%r161, %r267, %r40;
	shr.u32 	%r162, %r268, %r160;
	add.s32 	%r267, %r162, %r161;
	shl.b32 	%r163, %r268, %r40;
	ld.local.u32 	%r164, [%r41+16];
	shr.u32 	%r165, %r164, %r160;
	add.s32 	%r268, %r165, %r163;
$L__BB0_19:
	shr.u32 	%r166, %r267, 30;
	shr.u32 	%r167, %r268, 30;
	shl.b32 	%r168, %r267, 2;
	or.b32  	%r169, %r168, %r167;
	shl.b32 	%r170, %r268, 2;
	bfe.u32 	%r171, %r267, 29, 1;
	add.s32 	%r172, %r171, %r166;
	neg.s32 	%r173, %r172;
	setp.lt.s32 	%p14, %r30, 0;
	selp.b32 	%r269, %r173, %r172, %p14;
	xor.b32  	%r174, %r169, %r30;
	bfe.s32 	%r175, %r267, 29, 1;
	xor.b32  	%r176, %r175, %r169;
	xor.b32  	%r177, %r175, %r170;
	cvt.u64.u32 	%rd21, %r176;
	shl.b64 	%rd22, %rd21, 32;
	cvt.u64.u32 	%rd23, %r177;
	or.b64  	%rd24, %rd22, %rd23;
	cvt.rn.f64.s64 	%fd3, %rd24;
	mul.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f110, %fd4;
	neg.f32 	%f111, %f110;
	setp.lt.s32 	%p15, %r174, 0;
	selp.f32 	%f191, %f111, %f110, %p15;
$L__BB0_20:
	mul.rn.ftz.f32 	%f26, %f191, %f191;
	and.b32  	%r179, %r269, 1;
	setp.eq.b32 	%p16, %r179, 1;
	selp.f32 	%f27, 0f3F800000, %f191, %p16;
	fma.rn.ftz.f32 	%f28, %f26, %f27, %f183;
	mov.f32 	%f194, 0fB94D4153;
	mov.f32 	%f193, 0f3C0885E4;
	mov.f32 	%f192, 0fBE2AAAA8;
	@!%p16 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;
$L__BB0_21:
	.loc	1 0 24
	fma.rn.ftz.f32 	%f194, %f96, %f26, %f95;
	mov.f32 	%f193, 0f3D2AAABB;
	mov.f32 	%f192, 0fBEFFFFFF;
$L__BB0_22:
	.loc	1 44 24
	fma.rn.ftz.f32 	%f121, %f194, %f26, %f193;
	fma.rn.ftz.f32 	%f122, %f121, %f26, %f192;
	fma.rn.ftz.f32 	%f195, %f122, %f28, %f27;
	and.b32  	%r180, %r269, 2;
	setp.eq.s32 	%p17, %r180, 0;
	@%p17 bra 	$L__BB0_24;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f195, %f195, %f102, %f183;
$L__BB0_24:
	.loc	1 50 18
	sub.s32 	%r187, %r5, %r7;
	sub.s32 	%r188, %r6, %r7;
	.loc	1 51 21
	cvt.rn.f32.s32 	%f129, %r187;
	cvt.rn.f32.s32 	%f130, %r188;
	.loc	1 52 20
	mul.f32 	%f131, %f129, 0fC1135D8E;
	mul.f32 	%f132, %f130, 0fC1135D8E;
	.loc	1 53 20
	mov.b32 	%r182, %f131;
	// begin inline asm
	div.full.f32 %r181, %r182, %r99;
	// end inline asm
	mov.b32 	%f133, %r181;
	mov.b32 	%r185, %f132;
	// begin inline asm
	div.full.f32 %r184, %r185, %r99;
	// end inline asm
	mov.b32 	%f134, %r184;
	.loc	1 54 24
	mul.f32 	%f126, %f133, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f125, %f126;
	// end inline asm
	mul.f32 	%f128, %f134, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f127, %f128;
	// end inline asm
	.loc	1 55 19
	mul.f32 	%f135, %f1, %f125;
	.loc	1 56 20
	mul.f32 	%f36, %f135, %f3;
	.loc	1 57 24
	mul.f32 	%f137, %f36, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r275, %f137;
	cvt.rn.f32.s32 	%f138, %r275;
	fma.rn.ftz.f32 	%f140, %f138, %f83, %f36;
	fma.rn.ftz.f32 	%f142, %f138, %f85, %f140;
	fma.rn.ftz.f32 	%f196, %f138, %f87, %f142;
	abs.ftz.f32 	%f39, %f36;
	setp.ltu.f32 	%p18, %f39, 0f47CE4780;
	@%p18 bra 	$L__BB0_32;
	setp.neu.f32 	%p19, %f39, 0f7F800000;
	@%p19 bra 	$L__BB0_27;
	mul.rn.ftz.f32 	%f196, %f36, %f183;
	mov.b32 	%r275, 0;
	bra.uni 	$L__BB0_32;
$L__BB0_27:
	.loc	1 0 24
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd11;
	  cvt.u32.u64 	%r2, %tmp; }
	.loc	1 57 24
	mov.b32 	%r51, %f36;
	shr.u32 	%r52, %r51, 23;
	and.b32  	%r191, %r52, 224;
	add.s32 	%r192, %r191, -128;
	shl.b32 	%r193, %r51, 8;
	or.b32  	%r197, %r193, -2147483648;
	shr.u32 	%r54, %r192, 5;
	mov.b32 	%r272, 0;
	mov.b32 	%r270, -1;
	mov.u64 	%rd40, __cudart_i2opi_f;
	mov.u32 	%r271, %r2;
$L__BB0_28:
	.pragma "nounroll";
	ld.global.nc.u32 	%r196, [%rd40];
	// begin inline asm
	{
	mad.lo.cc.u32   %r194, %r196, %r197, %r272;
	madc.hi.u32     %r272, %r196, %r197,  0;
	}
	// end inline asm
	st.local.u32 	[%r271], %r194;
	add.s32 	%r271, %r271, 4;
	add.s32 	%r270, %r270, 1;
	add.s64 	%rd40, %rd40, 4;
	setp.lt.u32 	%p20, %r270, 5;
	@%p20 bra 	$L__BB0_28;
	st.local.u32 	[%r2+24], %r272;
	and.b32  	%r61, %r52, 31;
	shl.b32 	%r199, %r54, 2;
	sub.s32 	%r62, %r2, %r199;
	ld.local.u32 	%r273, [%r62+24];
	ld.local.u32 	%r274, [%r62+20];
	setp.eq.s32 	%p21, %r61, 0;
	@%p21 bra 	$L__BB0_31;
	.loc	1 0 24
	mov.b32 	%r200, 32;
	.loc	1 57 24
	sub.s32 	%r201, %r200, %r61;
	shl.b32 	%r202, %r273, %r61;
	shr.u32 	%r203, %r274, %r201;
	add.s32 	%r273, %r203, %r202;
	shl.b32 	%r204, %r274, %r61;
	ld.local.u32 	%r205, [%r62+16];
	shr.u32 	%r206, %r205, %r201;
	add.s32 	%r274, %r206, %r204;
$L__BB0_31:
	shr.u32 	%r207, %r273, 30;
	shr.u32 	%r208, %r274, 30;
	shl.b32 	%r209, %r273, 2;
	or.b32  	%r210, %r209, %r208;
	shl.b32 	%r211, %r274, 2;
	bfe.u32 	%r212, %r273, 29, 1;
	add.s32 	%r213, %r212, %r207;
	neg.s32 	%r214, %r213;
	setp.lt.s32 	%p22, %r51, 0;
	selp.b32 	%r275, %r214, %r213, %p22;
	xor.b32  	%r215, %r210, %r51;
	bfe.s32 	%r216, %r273, 29, 1;
	xor.b32  	%r217, %r216, %r210;
	xor.b32  	%r218, %r216, %r211;
	cvt.u64.u32 	%rd26, %r217;
	shl.b64 	%rd27, %rd26, 32;
	cvt.u64.u32 	%rd28, %r218;
	or.b64  	%rd29, %rd27, %rd28;
	cvt.rn.f64.s64 	%fd5, %rd29;
	mul.f64 	%fd6, %fd5, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f144, %fd6;
	neg.f32 	%f145, %f144;
	setp.lt.s32 	%p23, %r215, 0;
	selp.f32 	%f196, %f145, %f144, %p23;
$L__BB0_32:
	.loc	1 0 0
	mul.f32 	%f136, %f1, %f127;
	.loc	1 57 24
	add.s32 	%r71, %r275, 1;
	mul.rn.ftz.f32 	%f43, %f196, %f196;
	and.b32  	%r220, %r275, 1;
	setp.eq.b32 	%p24, %r220, 1;
	selp.f32 	%f44, %f196, 0f3F800000, %p24;
	fma.rn.ftz.f32 	%f45, %f43, %f44, %f183;
	mov.f32 	%f199, 0fB94D4153;
	mov.f32 	%f198, 0f3C0885E4;
	mov.f32 	%f197, 0fBE2AAAA8;
	@%p24 bra 	$L__BB0_34;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f199, %f96, %f43, %f95;
	mov.f32 	%f198, 0f3D2AAABB;
	mov.f32 	%f197, 0fBEFFFFFF;
$L__BB0_34:
	mul.f32 	%f37, %f136, %f3;
	.loc	1 57 24
	fma.rn.ftz.f32 	%f155, %f199, %f43, %f198;
	fma.rn.ftz.f32 	%f156, %f155, %f43, %f197;
	fma.rn.ftz.f32 	%f200, %f156, %f45, %f44;
	and.b32  	%r221, %r71, 2;
	setp.eq.s32 	%p25, %r221, 0;
	@%p25 bra 	$L__BB0_36;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f200, %f200, %f102, %f183;
$L__BB0_36:
	.loc	1 57 24
	mul.f32 	%f159, %f37, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r281, %f159;
	cvt.rn.f32.s32 	%f160, %r281;
	fma.rn.ftz.f32 	%f162, %f160, %f83, %f37;
	fma.rn.ftz.f32 	%f164, %f160, %f85, %f162;
	fma.rn.ftz.f32 	%f201, %f160, %f87, %f164;
	abs.ftz.f32 	%f54, %f37;
	setp.ltu.f32 	%p26, %f54, 0f47CE4780;
	@%p26 bra 	$L__BB0_44;
	setp.neu.f32 	%p27, %f54, 0f7F800000;
	@%p27 bra 	$L__BB0_39;
	mul.rn.ftz.f32 	%f201, %f37, %f183;
	mov.b32 	%r281, 0;
	bra.uni 	$L__BB0_44;
$L__BB0_39:
	.loc	1 0 24
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd11;
	  cvt.u32.u64 	%r1, %tmp; }
	.loc	1 57 24
	mov.b32 	%r73, %f37;
	shr.u32 	%r74, %r73, 23;
	and.b32  	%r224, %r74, 224;
	add.s32 	%r225, %r224, -128;
	shl.b32 	%r226, %r73, 8;
	or.b32  	%r230, %r226, -2147483648;
	shr.u32 	%r76, %r225, 5;
	mov.b32 	%r278, 0;
	mov.b32 	%r276, -1;
	mov.u64 	%rd41, __cudart_i2opi_f;
	mov.u32 	%r277, %r1;
$L__BB0_40:
	.pragma "nounroll";
	ld.global.nc.u32 	%r229, [%rd41];
	// begin inline asm
	{
	mad.lo.cc.u32   %r227, %r229, %r230, %r278;
	madc.hi.u32     %r278, %r229, %r230,  0;
	}
	// end inline asm
	st.local.u32 	[%r277], %r227;
	add.s32 	%r277, %r277, 4;
	add.s32 	%r276, %r276, 1;
	add.s64 	%rd41, %rd41, 4;
	setp.lt.u32 	%p28, %r276, 5;
	@%p28 bra 	$L__BB0_40;
	st.local.u32 	[%r1+24], %r278;
	and.b32  	%r83, %r74, 31;
	shl.b32 	%r232, %r76, 2;
	sub.s32 	%r84, %r1, %r232;
	ld.local.u32 	%r279, [%r84+24];
	ld.local.u32 	%r280, [%r84+20];
	setp.eq.s32 	%p29, %r83, 0;
	@%p29 bra 	$L__BB0_43;
	.loc	1 0 24
	mov.b32 	%r233, 32;
	.loc	1 57 24
	sub.s32 	%r234, %r233, %r83;
	shl.b32 	%r235, %r279, %r83;
	shr.u32 	%r236, %r280, %r234;
	add.s32 	%r279, %r236, %r235;
	shl.b32 	%r237, %r280, %r83;
	ld.local.u32 	%r238, [%r84+16];
	shr.u32 	%r239, %r238, %r234;
	add.s32 	%r280, %r239, %r237;
$L__BB0_43:
	shr.u32 	%r240, %r279, 30;
	shr.u32 	%r241, %r280, 30;
	shl.b32 	%r242, %r279, 2;
	or.b32  	%r243, %r242, %r241;
	shl.b32 	%r244, %r280, 2;
	bfe.u32 	%r245, %r279, 29, 1;
	add.s32 	%r246, %r245, %r240;
	neg.s32 	%r247, %r246;
	setp.lt.s32 	%p30, %r73, 0;
	selp.b32 	%r281, %r247, %r246, %p30;
	xor.b32  	%r248, %r243, %r73;
	bfe.s32 	%r249, %r279, 29, 1;
	xor.b32  	%r250, %r249, %r243;
	xor.b32  	%r251, %r249, %r244;
	cvt.u64.u32 	%rd31, %r250;
	shl.b64 	%rd32, %rd31, 32;
	cvt.u64.u32 	%rd33, %r251;
	or.b64  	%rd34, %rd32, %rd33;
	cvt.rn.f64.s64 	%fd7, %rd34;
	mul.f64 	%fd8, %fd7, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f166, %fd8;
	neg.f32 	%f167, %f166;
	setp.lt.s32 	%p31, %r248, 0;
	selp.f32 	%f201, %f167, %f166, %p31;
$L__BB0_44:
	add.s32 	%r93, %r281, 1;
	mul.rn.ftz.f32 	%f58, %f201, %f201;
	and.b32  	%r253, %r281, 1;
	setp.eq.b32 	%p32, %r253, 1;
	selp.f32 	%f59, %f201, 0f3F800000, %p32;
	fma.rn.ftz.f32 	%f60, %f58, %f59, %f183;
	mov.f32 	%f204, 0fB94D4153;
	mov.f32 	%f203, 0f3C0885E4;
	mov.f32 	%f202, 0fBE2AAAA8;
	@%p32 bra 	$L__BB0_46;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f204, %f96, %f58, %f95;
	mov.f32 	%f203, 0f3D2AAABB;
	mov.f32 	%f202, 0fBEFFFFFF;
$L__BB0_46:
	ld.param.u32 	%r94, [triton__param_5];
	ld.param.u64 	%rd9, [triton__param_1];
	.loc	1 57 24
	fma.rn.ftz.f32 	%f177, %f204, %f58, %f203;
	fma.rn.ftz.f32 	%f178, %f177, %f58, %f202;
	fma.rn.ftz.f32 	%f205, %f178, %f60, %f59;
	and.b32  	%r254, %r93, 2;
	setp.eq.s32 	%p33, %r254, 0;
	@%p33 bra 	$L__BB0_48;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f205, %f205, %f102, %f183;
$L__BB0_48:
	.loc	1 29 18
	setp.lt.s32 	%p36, %r6, %r7;
	setp.lt.s32 	%p37, %r5, %r7;
	.loc	1 21 21
	setp.lt.s32 	%p35, %r6, %r94;
	setp.lt.s32 	%p34, %r5, %r94;
	.loc	1 0 0
	selp.f32 	%f181, %f190, %f200, %p37;
	selp.f32 	%f182, %f195, %f205, %p36;
	.loc	1 61 25
	mul.wide.s32 	%rd37, %r5, 4;
	add.s64 	%rd35, %rd9, %rd37;
	add.s64 	%rd36, %rd35, 4;
	.loc	1 61 37
	mov.b32 	%r255, %f181;
	// begin inline asm
	@%p34 st.global.b32 [ %rd35 + 0 ], { %r255 };
	// end inline asm
	mov.b32 	%r256, %f182;
	// begin inline asm
	@%p35 st.global.b32 [ %rd36 + 0 ], { %r256 };
	// end inline asm
	.loc	1 61 4
	ret;
$L__tmp3:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/ve/cvezxwbsj6cs7i2u34gb53yyu7uxbc7vv2gzcgbudfok7icca7ef.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 173
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 118
.b8 101
.b8 122
.b8 120
.b8 119
.b8 98
.b8 115
.b8 106
.b8 54
.b8 99
.b8 115
.b8 55
.b8 105
.b8 50
.b8 117
.b8 51
.b8 52
.b8 103
.b8 98
.b8 53
.b8 51
.b8 121
.b8 121
.b8 117
.b8 55
.b8 117
.b8 120
.b8 98
.b8 99
.b8 55
.b8 118
.b8 118
.b8 50
.b8 103
.b8 122
.b8 99
.b8 103
.b8 98
.b8 117
.b8 100
.b8 102
.b8 111
.b8 107
.b8 55
.b8 105
.b8 99
.b8 99
.b8 97
.b8 55
.b8 101
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 101
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 28
.b8 50
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
