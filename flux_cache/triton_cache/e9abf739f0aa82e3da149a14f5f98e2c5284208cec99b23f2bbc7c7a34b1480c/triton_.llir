; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i110 = alloca [7 x i32], align 4
  %result.i.i.i.i57 = alloca [7 x i32], align 4
  %result.i.i.i.i2 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %0, i1 true) #4, !dbg !14
  %15 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %14) #4, !dbg !15
  %16 = sdiv i32 %2, 2, !dbg !16
  %17 = and i32 %2, 1, !dbg !20
  %18 = icmp slt i32 %2, 0, !dbg !21
  %19 = select i1 %18, i32 %17, i32 0, !dbg !22
  %20 = sub nsw i32 %16, %19, !dbg !22
  %21 = fmul float %15, 1.000000e+03, !dbg !23
  %22 = sitofp i32 %12 to float, !dbg !24
  %23 = sitofp i32 %13 to float, !dbg !24
  %24 = fmul float %22, 0xC0226BB1C0000000, !dbg !25
  %25 = fmul float %23, 0xC0226BB1C0000000, !dbg !25
  %26 = sub i32 %20, %3, !dbg !26
  %27 = sitofp i32 %26 to float, !dbg !27
  %28 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %24, float %27) #4, !dbg !28
  %29 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %25, float %27) #4, !dbg !28
  %30 = fmul float %28, 0x3FF7154760000000, !dbg !29
  %31 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %30) #4, !dbg !29
  %32 = fmul float %29, 0x3FF7154760000000, !dbg !29
  %33 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %32) #4, !dbg !29
  %34 = fmul float %21, %31, !dbg !30
  %35 = fmul float %21, %33, !dbg !30
  %36 = sitofp i32 %4 to float, !dbg !31
  %37 = fmul float %34, %36, !dbg !32
  %38 = fmul float %35, %36, !dbg !32
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !33
  %39 = fmul float %37, 0x3FE45F3060000000, !dbg !33
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i = icmp eq i32 %40, 0, !dbg !33
  %41 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %39) #4, !dbg !33
  %42 = tail call i32 @llvm.nvvm.f2i.rn(float %39) #4, !dbg !33
  %.01.i = select i1 %.not.i, i32 %42, i32 %41, !dbg !33
  %43 = sitofp i32 %.01.i to float, !dbg !33
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not15.i = icmp eq i32 %44, 0, !dbg !33
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %43, float 0xBFF921FB40000000, float %37) #4, !dbg !33
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %43, float 0xBFF921FB40000000, float %37) #4, !dbg !33
  %.02.i = select i1 %.not15.i, float %46, float %45, !dbg !33
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not16.i = icmp eq i32 %47, 0, !dbg !33
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %43, float 0xBE74442D00000000, float %.02.i) #4, !dbg !33
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %43, float 0xBE74442D00000000, float %.02.i) #4, !dbg !33
  %.03.i = select i1 %.not16.i, float %49, float %48, !dbg !33
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not17.i = icmp eq i32 %50, 0, !dbg !33
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %43, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !33
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %43, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !33
  %.04.i = select i1 %.not17.i, float %52, float %51, !dbg !33
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not18.i = icmp eq i32 %53, 0, !dbg !33
  %54 = tail call float @llvm.nvvm.fabs.ftz.f(float %37) #4, !dbg !33
  %55 = tail call float @llvm.nvvm.fabs.f(float %37) #4, !dbg !33
  %.06.i = select i1 %.not18.i, float %55, float %54, !dbg !33
  %56 = fcmp ult float %.06.i, 1.056150e+05, !dbg !33
  br i1 %56, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !33

__nv_isinff.exit.i.i.i:                           ; preds = %6
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not19.i = icmp eq i32 %57, 0, !dbg !33
  %.07.i = select i1 %.not19.i, float %55, float %54, !dbg !33
  %58 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !33
  br i1 %58, label %__nv_fmul_rn.exit.i.i.i, label %62, !dbg !33

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not27.i = icmp eq i32 %59, 0, !dbg !33
  %60 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %37, float 0.000000e+00) #4, !dbg !33
  %61 = tail call float @llvm.nvvm.mul.rn.f(float %37, float 0.000000e+00) #4, !dbg !33
  %.08.i = select i1 %.not27.i, float %61, float %60, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !33

62:                                               ; preds = %__nv_isinff.exit.i.i.i
  %63 = bitcast float %37 to i32, !dbg !33
  %64 = lshr i32 %63, 23, !dbg !33
  %65 = and i32 %64, 224, !dbg !33
  %66 = add nsw i32 %65, -128, !dbg !33
  %67 = shl i32 %63, 8, !dbg !33
  %68 = or i32 %67, -2147483648, !dbg !33
  %69 = lshr exact i32 %66, 5, !dbg !33
  br label %70, !dbg !33

70:                                               ; preds = %62, %70
  %iq.i.i.i.0.i166 = phi i32 [ 0, %62 ], [ %78, %70 ]
  %hi.i.i.i.0.i165 = phi i32 [ 0, %62 ], [ %76, %70 ]
  %71 = zext nneg i32 %iq.i.i.i.0.i166 to i64, !dbg !33
  %72 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %71, !dbg !33
  %73 = load i32, ptr addrspace(1) %72, align 4, !dbg !33
  %74 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %73, i32 %68, i32 %hi.i.i.i.0.i165) #5, !dbg !33, !srcloc !34
  %75 = extractvalue { i32, i32 } %74, 0, !dbg !33
  %76 = extractvalue { i32, i32 } %74, 1, !dbg !33
  %77 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %71, !dbg !33
  store i32 %75, ptr %77, align 4, !dbg !33
  %78 = add nuw nsw i32 %iq.i.i.i.0.i166, 1, !dbg !33
  %79 = icmp ult i32 %iq.i.i.i.0.i166, 5, !dbg !33
  br i1 %79, label %70, label %80, !dbg !33, !llvm.loop !35

80:                                               ; preds = %70
  %81 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !33
  store i32 %76, ptr %81, align 4, !dbg !33
  %82 = and i32 %64, 31, !dbg !33
  %83 = sub nsw i32 6, %69, !dbg !33
  %84 = sext i32 %83 to i64, !dbg !33
  %85 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %84, !dbg !33
  %86 = load i32, ptr %85, align 4, !dbg !33
  %87 = sub nsw i32 5, %69, !dbg !33
  %88 = sext i32 %87 to i64, !dbg !33
  %89 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %88, !dbg !33
  %90 = load i32, ptr %89, align 4, !dbg !33
  %.not20.i = icmp eq i32 %82, 0, !dbg !33
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %91, !dbg !33

91:                                               ; preds = %80
  %92 = sub nsw i32 4, %69, !dbg !33
  %93 = sub nuw nsw i32 32, %82, !dbg !33
  %94 = shl i32 %86, %82, !dbg !33
  %95 = lshr i32 %90, %93, !dbg !33
  %96 = add i32 %95, %94, !dbg !33
  %97 = shl i32 %90, %82, !dbg !33
  %98 = sext i32 %92 to i64, !dbg !33
  %99 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %98, !dbg !33
  %100 = load i32, ptr %99, align 4, !dbg !33
  %101 = lshr i32 %100, %93, !dbg !33
  %102 = add i32 %101, %97, !dbg !33
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !33

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %91, %80
  %hi.i.i.i.1.i = phi i32 [ %96, %91 ], [ %86, %80 ], !dbg !33
  %lo.i.i.i.0.i = phi i32 [ %102, %91 ], [ %90, %80 ], !dbg !33
  %103 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !33
  %104 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !33
  %105 = shl i32 %lo.i.i.i.0.i, 2, !dbg !33
  %106 = lshr i32 %104, 31, !dbg !33
  %107 = add nuw nsw i32 %106, %103, !dbg !33
  %108 = sub nsw i32 0, %107, !dbg !33
  %.not2123.i = icmp slt i32 %63, 0, !dbg !33
  %spec.select.i = select i1 %.not2123.i, i32 %108, i32 %107, !dbg !33
  %109 = xor i32 %104, %63, !dbg !33
  %.lobit.i = ashr i32 %104, 31, !dbg !33
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %104, !dbg !33
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %105, !dbg !33
  %110 = zext i32 %hi.i.i.i.2.i to i64, !dbg !33
  %111 = shl nuw i64 %110, 32, !dbg !33
  %112 = zext i32 %lo.i.i.i.1.i to i64, !dbg !33
  %113 = or disjoint i64 %111, %112, !dbg !33
  %114 = sitofp i64 %113 to double, !dbg !33
  %115 = fmul double %114, 0x3BF921FB54442D19, !dbg !33
  %116 = fptrunc double %115 to float, !dbg !33
  %117 = fneg float %116, !dbg !33
  %.not2526.i = icmp slt i32 %109, 0, !dbg !33
  %r.i.i.i.0.i = select i1 %.not2526.i, float %117, float %116, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !33

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %6
  %i.i.1.i = phi i32 [ %.01.i, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !33
  %t.i.i.1.i = phi float [ %.04.i, %6 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !33
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not28.i = icmp eq i32 %118, 0, !dbg !33
  %119 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !33
  %120 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !33
  %.011.i = select i1 %.not28.i, float %120, float %119, !dbg !33
  %121 = and i32 %i.i.1.i, 1, !dbg !33
  %.not29.i = icmp eq i32 %121, 0, !dbg !33
  %122 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !33
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not30.i = icmp eq i32 %123, 0, !dbg !33
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %122, float 0.000000e+00) #4, !dbg !33
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %122, float 0.000000e+00) #4, !dbg !33
  %.012.i = select i1 %.not30.i, float %125, float %124, !dbg !33
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !33

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not31.i = icmp eq i32 %126, 0, !dbg !33
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !33
  %128 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !33
  %.013.i = select i1 %.not31.i, float %128, float %127, !dbg !33
  br label %__internal_fmad.exit2.i.i.i, !dbg !33

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %129 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %130 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %131 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not32.i = icmp eq i32 %132, 0, !dbg !33
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %131, float %.011.i, float %130) #4, !dbg !33
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %131, float %.011.i, float %130) #4, !dbg !33
  %.010.i = select i1 %.not32.i, float %134, float %133, !dbg !33
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not33.i = icmp eq i32 %135, 0, !dbg !33
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %129) #4, !dbg !33
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %129) #4, !dbg !33
  %.09.i = select i1 %.not33.i, float %137, float %136, !dbg !33
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not34.i = icmp eq i32 %138, 0, !dbg !33
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %122) #4, !dbg !33
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %122) #4, !dbg !33
  %.05.i = select i1 %.not34.i, float %140, float %139, !dbg !33
  %141 = and i32 %i.i.1.i, 2, !dbg !33
  %.not35.i = icmp eq i32 %141, 0, !dbg !33
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !33

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not36.i = icmp eq i32 %142, 0, !dbg !33
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !33
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !33
  %.0.i = select i1 %.not36.i, float %144, float %143, !dbg !33
  br label %__nv_sinf.exit, !dbg !33

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !33
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !33
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i2), !dbg !33
  %145 = fmul float %38, 0x3FE45F3060000000, !dbg !33
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i3 = icmp eq i32 %146, 0, !dbg !33
  %147 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %145) #4, !dbg !33
  %148 = tail call i32 @llvm.nvvm.f2i.rn(float %145) #4, !dbg !33
  %.01.i4 = select i1 %.not.i3, i32 %148, i32 %147, !dbg !33
  %149 = sitofp i32 %.01.i4 to float, !dbg !33
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not15.i5 = icmp eq i32 %150, 0, !dbg !33
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %149, float 0xBFF921FB40000000, float %38) #4, !dbg !33
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %149, float 0xBFF921FB40000000, float %38) #4, !dbg !33
  %.02.i6 = select i1 %.not15.i5, float %152, float %151, !dbg !33
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not16.i7 = icmp eq i32 %153, 0, !dbg !33
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %149, float 0xBE74442D00000000, float %.02.i6) #4, !dbg !33
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %149, float 0xBE74442D00000000, float %.02.i6) #4, !dbg !33
  %.03.i8 = select i1 %.not16.i7, float %155, float %154, !dbg !33
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not17.i9 = icmp eq i32 %156, 0, !dbg !33
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %149, float 0xBCF84698A0000000, float %.03.i8) #4, !dbg !33
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %149, float 0xBCF84698A0000000, float %.03.i8) #4, !dbg !33
  %.04.i10 = select i1 %.not17.i9, float %158, float %157, !dbg !33
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not18.i11 = icmp eq i32 %159, 0, !dbg !33
  %160 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #4, !dbg !33
  %161 = tail call float @llvm.nvvm.fabs.f(float %38) #4, !dbg !33
  %.06.i12 = select i1 %.not18.i11, float %161, float %160, !dbg !33
  %162 = fcmp ult float %.06.i12, 1.056150e+05, !dbg !33
  br i1 %162, label %__internal_trig_reduction_kernel.exit.i.i30, label %__nv_isinff.exit.i.i.i13, !dbg !33

__nv_isinff.exit.i.i.i13:                         ; preds = %__nv_sinf.exit
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not19.i14 = icmp eq i32 %163, 0, !dbg !33
  %.07.i15 = select i1 %.not19.i14, float %161, float %160, !dbg !33
  %164 = fcmp oeq float %.07.i15, 0x7FF0000000000000, !dbg !33
  br i1 %164, label %__nv_fmul_rn.exit.i.i.i53, label %168, !dbg !33

__nv_fmul_rn.exit.i.i.i53:                        ; preds = %__nv_isinff.exit.i.i.i13
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not27.i54 = icmp eq i32 %165, 0, !dbg !33
  %166 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %38, float 0.000000e+00) #4, !dbg !33
  %167 = tail call float @llvm.nvvm.mul.rn.f(float %38, float 0.000000e+00) #4, !dbg !33
  %.08.i55 = select i1 %.not27.i54, float %167, float %166, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i30, !dbg !33

168:                                              ; preds = %__nv_isinff.exit.i.i.i13
  %169 = bitcast float %38 to i32, !dbg !33
  %170 = lshr i32 %169, 23, !dbg !33
  %171 = and i32 %170, 224, !dbg !33
  %172 = add nsw i32 %171, -128, !dbg !33
  %173 = shl i32 %169, 8, !dbg !33
  %174 = or i32 %173, -2147483648, !dbg !33
  %175 = lshr exact i32 %172, 5, !dbg !33
  br label %176, !dbg !33

176:                                              ; preds = %168, %176
  %iq.i.i.i.0.i17168 = phi i32 [ 0, %168 ], [ %184, %176 ]
  %hi.i.i.i.0.i16167 = phi i32 [ 0, %168 ], [ %182, %176 ]
  %177 = zext nneg i32 %iq.i.i.i.0.i17168 to i64, !dbg !33
  %178 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %177, !dbg !33
  %179 = load i32, ptr addrspace(1) %178, align 4, !dbg !33
  %180 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %179, i32 %174, i32 %hi.i.i.i.0.i16167) #5, !dbg !33, !srcloc !34
  %181 = extractvalue { i32, i32 } %180, 0, !dbg !33
  %182 = extractvalue { i32, i32 } %180, 1, !dbg !33
  %183 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i2, i64 0, i64 %177, !dbg !33
  store i32 %181, ptr %183, align 4, !dbg !33
  %184 = add nuw nsw i32 %iq.i.i.i.0.i17168, 1, !dbg !33
  %185 = icmp ult i32 %iq.i.i.i.0.i17168, 5, !dbg !33
  br i1 %185, label %176, label %186, !dbg !33, !llvm.loop !37

186:                                              ; preds = %176
  %187 = getelementptr inbounds i8, ptr %result.i.i.i.i2, i64 24, !dbg !33
  store i32 %182, ptr %187, align 4, !dbg !33
  %188 = and i32 %170, 31, !dbg !33
  %189 = sub nsw i32 6, %175, !dbg !33
  %190 = sext i32 %189 to i64, !dbg !33
  %191 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i2, i64 0, i64 %190, !dbg !33
  %192 = load i32, ptr %191, align 4, !dbg !33
  %193 = sub nsw i32 5, %175, !dbg !33
  %194 = sext i32 %193 to i64, !dbg !33
  %195 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i2, i64 0, i64 %194, !dbg !33
  %196 = load i32, ptr %195, align 4, !dbg !33
  %.not20.i18 = icmp eq i32 %188, 0, !dbg !33
  br i1 %.not20.i18, label %__internal_trig_reduction_slowpath.exit.i.i.i19, label %197, !dbg !33

197:                                              ; preds = %186
  %198 = sub nsw i32 4, %175, !dbg !33
  %199 = sub nuw nsw i32 32, %188, !dbg !33
  %200 = shl i32 %192, %188, !dbg !33
  %201 = lshr i32 %196, %199, !dbg !33
  %202 = add i32 %201, %200, !dbg !33
  %203 = shl i32 %196, %188, !dbg !33
  %204 = sext i32 %198 to i64, !dbg !33
  %205 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i2, i64 0, i64 %204, !dbg !33
  %206 = load i32, ptr %205, align 4, !dbg !33
  %207 = lshr i32 %206, %199, !dbg !33
  %208 = add i32 %207, %203, !dbg !33
  br label %__internal_trig_reduction_slowpath.exit.i.i.i19, !dbg !33

__internal_trig_reduction_slowpath.exit.i.i.i19:  ; preds = %197, %186
  %hi.i.i.i.1.i20 = phi i32 [ %202, %197 ], [ %192, %186 ], !dbg !33
  %lo.i.i.i.0.i21 = phi i32 [ %208, %197 ], [ %196, %186 ], !dbg !33
  %209 = lshr i32 %hi.i.i.i.1.i20, 30, !dbg !33
  %210 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i20, i32 %lo.i.i.i.0.i21, i32 2), !dbg !33
  %211 = shl i32 %lo.i.i.i.0.i21, 2, !dbg !33
  %212 = lshr i32 %210, 31, !dbg !33
  %213 = add nuw nsw i32 %212, %209, !dbg !33
  %214 = sub nsw i32 0, %213, !dbg !33
  %.not2123.i22 = icmp slt i32 %169, 0, !dbg !33
  %spec.select.i23 = select i1 %.not2123.i22, i32 %214, i32 %213, !dbg !33
  %215 = xor i32 %210, %169, !dbg !33
  %.lobit.i24 = ashr i32 %210, 31, !dbg !33
  %hi.i.i.i.2.i25 = xor i32 %.lobit.i24, %210, !dbg !33
  %lo.i.i.i.1.i27 = xor i32 %.lobit.i24, %211, !dbg !33
  %216 = zext i32 %hi.i.i.i.2.i25 to i64, !dbg !33
  %217 = shl nuw i64 %216, 32, !dbg !33
  %218 = zext i32 %lo.i.i.i.1.i27 to i64, !dbg !33
  %219 = or disjoint i64 %217, %218, !dbg !33
  %220 = sitofp i64 %219 to double, !dbg !33
  %221 = fmul double %220, 0x3BF921FB54442D19, !dbg !33
  %222 = fptrunc double %221 to float, !dbg !33
  %223 = fneg float %222, !dbg !33
  %.not2526.i28 = icmp slt i32 %215, 0, !dbg !33
  %r.i.i.i.0.i29 = select i1 %.not2526.i28, float %223, float %222, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i30, !dbg !33

__internal_trig_reduction_kernel.exit.i.i30:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i19, %__nv_fmul_rn.exit.i.i.i53, %__nv_sinf.exit
  %i.i.1.i31 = phi i32 [ %.01.i4, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i53 ], [ %spec.select.i23, %__internal_trig_reduction_slowpath.exit.i.i.i19 ], !dbg !33
  %t.i.i.1.i32 = phi float [ %.04.i10, %__nv_sinf.exit ], [ %.08.i55, %__nv_fmul_rn.exit.i.i.i53 ], [ %r.i.i.i.0.i29, %__internal_trig_reduction_slowpath.exit.i.i.i19 ], !dbg !33
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not28.i33 = icmp eq i32 %224, 0, !dbg !33
  %225 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i32, float %t.i.i.1.i32) #4, !dbg !33
  %226 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i32, float %t.i.i.1.i32) #4, !dbg !33
  %.011.i34 = select i1 %.not28.i33, float %226, float %225, !dbg !33
  %227 = and i32 %i.i.1.i31, 1, !dbg !33
  %.not29.i35 = icmp eq i32 %227, 0, !dbg !33
  %228 = select i1 %.not29.i35, float %t.i.i.1.i32, float 1.000000e+00, !dbg !33
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not30.i36 = icmp eq i32 %229, 0, !dbg !33
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i34, float %228, float 0.000000e+00) #4, !dbg !33
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i34, float %228, float 0.000000e+00) #4, !dbg !33
  %.012.i37 = select i1 %.not30.i36, float %231, float %230, !dbg !33
  br i1 %.not29.i35, label %__internal_fmad.exit2.i.i.i41, label %__internal_fmad.exit1.i.i.i38, !dbg !33

__internal_fmad.exit1.i.i.i38:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i30
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not31.i39 = icmp eq i32 %232, 0, !dbg !33
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i34, float 0xBF56C0FDA0000000) #4, !dbg !33
  %234 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i34, float 0xBF56C0FDA0000000) #4, !dbg !33
  %.013.i40 = select i1 %.not31.i39, float %234, float %233, !dbg !33
  br label %__internal_fmad.exit2.i.i.i41, !dbg !33

__internal_fmad.exit2.i.i.i41:                    ; preds = %__internal_fmad.exit1.i.i.i38, %__internal_trig_reduction_kernel.exit.i.i30
  %235 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i38 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i30 ], !dbg !33
  %236 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i38 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i30 ], !dbg !33
  %237 = phi float [ %.013.i40, %__internal_fmad.exit1.i.i.i38 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i30 ], !dbg !33
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not32.i42 = icmp eq i32 %238, 0, !dbg !33
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %.011.i34, float %236) #4, !dbg !33
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %.011.i34, float %236) #4, !dbg !33
  %.010.i43 = select i1 %.not32.i42, float %240, float %239, !dbg !33
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not33.i44 = icmp eq i32 %241, 0, !dbg !33
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i43, float %.011.i34, float %235) #4, !dbg !33
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i43, float %.011.i34, float %235) #4, !dbg !33
  %.09.i45 = select i1 %.not33.i44, float %243, float %242, !dbg !33
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not34.i46 = icmp eq i32 %244, 0, !dbg !33
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i45, float %.012.i37, float %228) #4, !dbg !33
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i45, float %.012.i37, float %228) #4, !dbg !33
  %.05.i47 = select i1 %.not34.i46, float %246, float %245, !dbg !33
  %247 = and i32 %i.i.1.i31, 2, !dbg !33
  %.not35.i48 = icmp eq i32 %247, 0, !dbg !33
  br i1 %.not35.i48, label %__nv_sinf.exit56, label %__internal_fmad.exit5.i.i.i49, !dbg !33

__internal_fmad.exit5.i.i.i49:                    ; preds = %__internal_fmad.exit2.i.i.i41
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not36.i50 = icmp eq i32 %248, 0, !dbg !33
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i47, float -1.000000e+00, float 0.000000e+00) #4, !dbg !33
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i47, float -1.000000e+00, float 0.000000e+00) #4, !dbg !33
  %.0.i51 = select i1 %.not36.i50, float %250, float %249, !dbg !33
  br label %__nv_sinf.exit56, !dbg !33

__nv_sinf.exit56:                                 ; preds = %__internal_fmad.exit2.i.i.i41, %__internal_fmad.exit5.i.i.i49
  %z.i.i.0.i52 = phi float [ %.0.i51, %__internal_fmad.exit5.i.i.i49 ], [ %.05.i47, %__internal_fmad.exit2.i.i.i41 ], !dbg !33
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i2), !dbg !33
  %251 = sub i32 %12, %20, !dbg !38
  %252 = sub i32 %13, %20, !dbg !38
  %253 = sitofp i32 %251 to float, !dbg !39
  %254 = sitofp i32 %252 to float, !dbg !39
  %255 = fmul float %253, 0xC0226BB1C0000000, !dbg !40
  %256 = fmul float %254, 0xC0226BB1C0000000, !dbg !40
  %257 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %255, float %27) #4, !dbg !41
  %258 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %256, float %27) #4, !dbg !41
  %259 = fmul float %257, 0x3FF7154760000000, !dbg !42
  %260 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %259) #4, !dbg !42
  %261 = fmul float %258, 0x3FF7154760000000, !dbg !42
  %262 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %261) #4, !dbg !42
  %263 = fmul float %21, %260, !dbg !43
  %264 = fmul float %21, %262, !dbg !43
  %265 = fmul float %263, %36, !dbg !44
  %266 = fmul float %264, %36, !dbg !44
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i57), !dbg !45
  %267 = fmul float %265, 0x3FE45F3060000000, !dbg !45
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i58 = icmp eq i32 %268, 0, !dbg !45
  %269 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %267) #4, !dbg !45
  %270 = tail call i32 @llvm.nvvm.f2i.rn(float %267) #4, !dbg !45
  %.01.i59 = select i1 %.not.i58, i32 %270, i32 %269, !dbg !45
  %271 = sitofp i32 %.01.i59 to float, !dbg !45
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i60 = icmp eq i32 %272, 0, !dbg !45
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %271, float 0xBFF921FB40000000, float %265) #4, !dbg !45
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %271, float 0xBFF921FB40000000, float %265) #4, !dbg !45
  %.02.i61 = select i1 %.not15.i60, float %274, float %273, !dbg !45
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i62 = icmp eq i32 %275, 0, !dbg !45
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %271, float 0xBE74442D00000000, float %.02.i61) #4, !dbg !45
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %271, float 0xBE74442D00000000, float %.02.i61) #4, !dbg !45
  %.03.i63 = select i1 %.not16.i62, float %277, float %276, !dbg !45
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i64 = icmp eq i32 %278, 0, !dbg !45
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %271, float 0xBCF84698A0000000, float %.03.i63) #4, !dbg !45
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %271, float 0xBCF84698A0000000, float %.03.i63) #4, !dbg !45
  %.04.i65 = select i1 %.not17.i64, float %280, float %279, !dbg !45
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i66 = icmp eq i32 %281, 0, !dbg !45
  %282 = tail call float @llvm.nvvm.fabs.ftz.f(float %265) #4, !dbg !45
  %283 = tail call float @llvm.nvvm.fabs.f(float %265) #4, !dbg !45
  %.06.i67 = select i1 %.not18.i66, float %283, float %282, !dbg !45
  %284 = fcmp ult float %.06.i67, 1.056150e+05, !dbg !45
  br i1 %284, label %__internal_trig_reduction_kernel.exit.i.i85, label %__nv_isinff.exit.i.i.i68, !dbg !45

__nv_isinff.exit.i.i.i68:                         ; preds = %__nv_sinf.exit56
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i69 = icmp eq i32 %285, 0, !dbg !45
  %.07.i70 = select i1 %.not19.i69, float %283, float %282, !dbg !45
  %286 = fcmp oeq float %.07.i70, 0x7FF0000000000000, !dbg !45
  br i1 %286, label %__nv_fmul_rn.exit.i.i.i107, label %290, !dbg !45

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i68
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i108 = icmp eq i32 %287, 0, !dbg !45
  %288 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %265, float 0.000000e+00) #4, !dbg !45
  %289 = tail call float @llvm.nvvm.mul.rn.f(float %265, float 0.000000e+00) #4, !dbg !45
  %.08.i109 = select i1 %.not27.i108, float %289, float %288, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i85, !dbg !45

290:                                              ; preds = %__nv_isinff.exit.i.i.i68
  %291 = bitcast float %265 to i32, !dbg !45
  %292 = lshr i32 %291, 23, !dbg !45
  %293 = and i32 %292, 224, !dbg !45
  %294 = add nsw i32 %293, -128, !dbg !45
  %295 = shl i32 %291, 8, !dbg !45
  %296 = or i32 %295, -2147483648, !dbg !45
  %297 = lshr exact i32 %294, 5, !dbg !45
  br label %298, !dbg !45

298:                                              ; preds = %290, %298
  %iq.i.i.i.0.i72170 = phi i32 [ 0, %290 ], [ %306, %298 ]
  %hi.i.i.i.0.i71169 = phi i32 [ 0, %290 ], [ %304, %298 ]
  %299 = zext nneg i32 %iq.i.i.i.0.i72170 to i64, !dbg !45
  %300 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %299, !dbg !45
  %301 = load i32, ptr addrspace(1) %300, align 4, !dbg !45
  %302 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %301, i32 %296, i32 %hi.i.i.i.0.i71169) #5, !dbg !45, !srcloc !34
  %303 = extractvalue { i32, i32 } %302, 0, !dbg !45
  %304 = extractvalue { i32, i32 } %302, 1, !dbg !45
  %305 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i57, i64 0, i64 %299, !dbg !45
  store i32 %303, ptr %305, align 4, !dbg !45
  %306 = add nuw nsw i32 %iq.i.i.i.0.i72170, 1, !dbg !45
  %307 = icmp ult i32 %iq.i.i.i.0.i72170, 5, !dbg !45
  br i1 %307, label %298, label %308, !dbg !45, !llvm.loop !46

308:                                              ; preds = %298
  %309 = getelementptr inbounds i8, ptr %result.i.i.i.i57, i64 24, !dbg !45
  store i32 %304, ptr %309, align 4, !dbg !45
  %310 = and i32 %292, 31, !dbg !45
  %311 = sub nsw i32 6, %297, !dbg !45
  %312 = sext i32 %311 to i64, !dbg !45
  %313 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i57, i64 0, i64 %312, !dbg !45
  %314 = load i32, ptr %313, align 4, !dbg !45
  %315 = sub nsw i32 5, %297, !dbg !45
  %316 = sext i32 %315 to i64, !dbg !45
  %317 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i57, i64 0, i64 %316, !dbg !45
  %318 = load i32, ptr %317, align 4, !dbg !45
  %.not20.i73 = icmp eq i32 %310, 0, !dbg !45
  br i1 %.not20.i73, label %__internal_trig_reduction_slowpath.exit.i.i.i74, label %319, !dbg !45

319:                                              ; preds = %308
  %320 = sub nsw i32 4, %297, !dbg !45
  %321 = sub nuw nsw i32 32, %310, !dbg !45
  %322 = shl i32 %314, %310, !dbg !45
  %323 = lshr i32 %318, %321, !dbg !45
  %324 = add i32 %323, %322, !dbg !45
  %325 = shl i32 %318, %310, !dbg !45
  %326 = sext i32 %320 to i64, !dbg !45
  %327 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i57, i64 0, i64 %326, !dbg !45
  %328 = load i32, ptr %327, align 4, !dbg !45
  %329 = lshr i32 %328, %321, !dbg !45
  %330 = add i32 %329, %325, !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i74, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i74:  ; preds = %319, %308
  %hi.i.i.i.1.i75 = phi i32 [ %324, %319 ], [ %314, %308 ], !dbg !45
  %lo.i.i.i.0.i76 = phi i32 [ %330, %319 ], [ %318, %308 ], !dbg !45
  %331 = lshr i32 %hi.i.i.i.1.i75, 30, !dbg !45
  %332 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i75, i32 %lo.i.i.i.0.i76, i32 2), !dbg !45
  %333 = shl i32 %lo.i.i.i.0.i76, 2, !dbg !45
  %334 = lshr i32 %332, 31, !dbg !45
  %335 = add nuw nsw i32 %334, %331, !dbg !45
  %336 = sub nsw i32 0, %335, !dbg !45
  %.not2123.i77 = icmp slt i32 %291, 0, !dbg !45
  %spec.select.i78 = select i1 %.not2123.i77, i32 %336, i32 %335, !dbg !45
  %337 = xor i32 %332, %291, !dbg !45
  %.lobit.i79 = ashr i32 %332, 31, !dbg !45
  %hi.i.i.i.2.i80 = xor i32 %.lobit.i79, %332, !dbg !45
  %lo.i.i.i.1.i82 = xor i32 %.lobit.i79, %333, !dbg !45
  %338 = zext i32 %hi.i.i.i.2.i80 to i64, !dbg !45
  %339 = shl nuw i64 %338, 32, !dbg !45
  %340 = zext i32 %lo.i.i.i.1.i82 to i64, !dbg !45
  %341 = or disjoint i64 %339, %340, !dbg !45
  %342 = sitofp i64 %341 to double, !dbg !45
  %343 = fmul double %342, 0x3BF921FB54442D19, !dbg !45
  %344 = fptrunc double %343 to float, !dbg !45
  %345 = fneg float %344, !dbg !45
  %.not2526.i83 = icmp slt i32 %337, 0, !dbg !45
  %r.i.i.i.0.i84 = select i1 %.not2526.i83, float %345, float %344, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i85, !dbg !45

__internal_trig_reduction_kernel.exit.i.i85:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i74, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit56
  %i.i.1.i86 = phi i32 [ %.01.i59, %__nv_sinf.exit56 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i78, %__internal_trig_reduction_slowpath.exit.i.i.i74 ], !dbg !45
  %t.i.i.1.i87 = phi float [ %.04.i65, %__nv_sinf.exit56 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i84, %__internal_trig_reduction_slowpath.exit.i.i.i74 ], !dbg !45
  %346 = add i32 %i.i.1.i86, 1, !dbg !45
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i88 = icmp eq i32 %347, 0, !dbg !45
  %348 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i87, float %t.i.i.1.i87) #4, !dbg !45
  %349 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i87, float %t.i.i.1.i87) #4, !dbg !45
  %.011.i89 = select i1 %.not28.i88, float %349, float %348, !dbg !45
  %350 = and i32 %i.i.1.i86, 1, !dbg !45
  %.not29.not.i = icmp eq i32 %350, 0, !dbg !45
  %351 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i87, !dbg !45
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i90 = icmp eq i32 %352, 0, !dbg !45
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i89, float %351, float 0.000000e+00) #4, !dbg !45
  %354 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i89, float %351, float 0.000000e+00) #4, !dbg !45
  %.012.i91 = select i1 %.not30.i90, float %354, float %353, !dbg !45
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i104, label %__internal_fmad.exit2.i.i.i92, !dbg !45

__internal_fmad.exit1.i.i.i104:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i85
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i105 = icmp eq i32 %355, 0, !dbg !45
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i89, float 0xBF56C0FDA0000000) #4, !dbg !45
  %357 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i89, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i106 = select i1 %.not31.i105, float %357, float %356, !dbg !45
  br label %__internal_fmad.exit2.i.i.i92, !dbg !45

__internal_fmad.exit2.i.i.i92:                    ; preds = %__internal_fmad.exit1.i.i.i104, %__internal_trig_reduction_kernel.exit.i.i85
  %358 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i104 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i85 ], !dbg !45
  %359 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i104 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i85 ], !dbg !45
  %360 = phi float [ %.013.i106, %__internal_fmad.exit1.i.i.i104 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i85 ], !dbg !45
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i93 = icmp eq i32 %361, 0, !dbg !45
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %360, float %.011.i89, float %359) #4, !dbg !45
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %360, float %.011.i89, float %359) #4, !dbg !45
  %.010.i94 = select i1 %.not32.i93, float %363, float %362, !dbg !45
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i95 = icmp eq i32 %364, 0, !dbg !45
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i94, float %.011.i89, float %358) #4, !dbg !45
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i94, float %.011.i89, float %358) #4, !dbg !45
  %.09.i96 = select i1 %.not33.i95, float %366, float %365, !dbg !45
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i97 = icmp eq i32 %367, 0, !dbg !45
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i96, float %.012.i91, float %351) #4, !dbg !45
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i96, float %.012.i91, float %351) #4, !dbg !45
  %.05.i98 = select i1 %.not34.i97, float %369, float %368, !dbg !45
  %370 = and i32 %346, 2, !dbg !45
  %.not35.i99 = icmp eq i32 %370, 0, !dbg !45
  br i1 %.not35.i99, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i100, !dbg !45

__internal_fmad.exit5.i.i.i100:                   ; preds = %__internal_fmad.exit2.i.i.i92
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i101 = icmp eq i32 %371, 0, !dbg !45
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i98, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i98, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i102 = select i1 %.not36.i101, float %373, float %372, !dbg !45
  br label %__nv_cosf.exit, !dbg !45

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i92, %__internal_fmad.exit5.i.i.i100
  %z.i.i.0.i103 = phi float [ %.0.i102, %__internal_fmad.exit5.i.i.i100 ], [ %.05.i98, %__internal_fmad.exit2.i.i.i92 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i57), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i110), !dbg !45
  %374 = fmul float %266, 0x3FE45F3060000000, !dbg !45
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i111 = icmp eq i32 %375, 0, !dbg !45
  %376 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %374) #4, !dbg !45
  %377 = tail call i32 @llvm.nvvm.f2i.rn(float %374) #4, !dbg !45
  %.01.i112 = select i1 %.not.i111, i32 %377, i32 %376, !dbg !45
  %378 = sitofp i32 %.01.i112 to float, !dbg !45
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i113 = icmp eq i32 %379, 0, !dbg !45
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %378, float 0xBFF921FB40000000, float %266) #4, !dbg !45
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %378, float 0xBFF921FB40000000, float %266) #4, !dbg !45
  %.02.i114 = select i1 %.not15.i113, float %381, float %380, !dbg !45
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i115 = icmp eq i32 %382, 0, !dbg !45
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %378, float 0xBE74442D00000000, float %.02.i114) #4, !dbg !45
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %378, float 0xBE74442D00000000, float %.02.i114) #4, !dbg !45
  %.03.i116 = select i1 %.not16.i115, float %384, float %383, !dbg !45
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i117 = icmp eq i32 %385, 0, !dbg !45
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %378, float 0xBCF84698A0000000, float %.03.i116) #4, !dbg !45
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %378, float 0xBCF84698A0000000, float %.03.i116) #4, !dbg !45
  %.04.i118 = select i1 %.not17.i117, float %387, float %386, !dbg !45
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i119 = icmp eq i32 %388, 0, !dbg !45
  %389 = tail call float @llvm.nvvm.fabs.ftz.f(float %266) #4, !dbg !45
  %390 = tail call float @llvm.nvvm.fabs.f(float %266) #4, !dbg !45
  %.06.i120 = select i1 %.not18.i119, float %390, float %389, !dbg !45
  %391 = fcmp ult float %.06.i120, 1.056150e+05, !dbg !45
  br i1 %391, label %__internal_trig_reduction_kernel.exit.i.i138, label %__nv_isinff.exit.i.i.i121, !dbg !45

__nv_isinff.exit.i.i.i121:                        ; preds = %__nv_cosf.exit
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i122 = icmp eq i32 %392, 0, !dbg !45
  %.07.i123 = select i1 %.not19.i122, float %390, float %389, !dbg !45
  %393 = fcmp oeq float %.07.i123, 0x7FF0000000000000, !dbg !45
  br i1 %393, label %__nv_fmul_rn.exit.i.i.i161, label %397, !dbg !45

__nv_fmul_rn.exit.i.i.i161:                       ; preds = %__nv_isinff.exit.i.i.i121
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i162 = icmp eq i32 %394, 0, !dbg !45
  %395 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %266, float 0.000000e+00) #4, !dbg !45
  %396 = tail call float @llvm.nvvm.mul.rn.f(float %266, float 0.000000e+00) #4, !dbg !45
  %.08.i163 = select i1 %.not27.i162, float %396, float %395, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i138, !dbg !45

397:                                              ; preds = %__nv_isinff.exit.i.i.i121
  %398 = bitcast float %266 to i32, !dbg !45
  %399 = lshr i32 %398, 23, !dbg !45
  %400 = and i32 %399, 224, !dbg !45
  %401 = add nsw i32 %400, -128, !dbg !45
  %402 = shl i32 %398, 8, !dbg !45
  %403 = or i32 %402, -2147483648, !dbg !45
  %404 = lshr exact i32 %401, 5, !dbg !45
  br label %405, !dbg !45

405:                                              ; preds = %397, %405
  %iq.i.i.i.0.i125172 = phi i32 [ 0, %397 ], [ %413, %405 ]
  %hi.i.i.i.0.i124171 = phi i32 [ 0, %397 ], [ %411, %405 ]
  %406 = zext nneg i32 %iq.i.i.i.0.i125172 to i64, !dbg !45
  %407 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %406, !dbg !45
  %408 = load i32, ptr addrspace(1) %407, align 4, !dbg !45
  %409 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %408, i32 %403, i32 %hi.i.i.i.0.i124171) #5, !dbg !45, !srcloc !34
  %410 = extractvalue { i32, i32 } %409, 0, !dbg !45
  %411 = extractvalue { i32, i32 } %409, 1, !dbg !45
  %412 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i110, i64 0, i64 %406, !dbg !45
  store i32 %410, ptr %412, align 4, !dbg !45
  %413 = add nuw nsw i32 %iq.i.i.i.0.i125172, 1, !dbg !45
  %414 = icmp ult i32 %iq.i.i.i.0.i125172, 5, !dbg !45
  br i1 %414, label %405, label %415, !dbg !45, !llvm.loop !47

415:                                              ; preds = %405
  %416 = getelementptr inbounds i8, ptr %result.i.i.i.i110, i64 24, !dbg !45
  store i32 %411, ptr %416, align 4, !dbg !45
  %417 = and i32 %399, 31, !dbg !45
  %418 = sub nsw i32 6, %404, !dbg !45
  %419 = sext i32 %418 to i64, !dbg !45
  %420 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i110, i64 0, i64 %419, !dbg !45
  %421 = load i32, ptr %420, align 4, !dbg !45
  %422 = sub nsw i32 5, %404, !dbg !45
  %423 = sext i32 %422 to i64, !dbg !45
  %424 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i110, i64 0, i64 %423, !dbg !45
  %425 = load i32, ptr %424, align 4, !dbg !45
  %.not20.i126 = icmp eq i32 %417, 0, !dbg !45
  br i1 %.not20.i126, label %__internal_trig_reduction_slowpath.exit.i.i.i127, label %426, !dbg !45

426:                                              ; preds = %415
  %427 = sub nsw i32 4, %404, !dbg !45
  %428 = sub nuw nsw i32 32, %417, !dbg !45
  %429 = shl i32 %421, %417, !dbg !45
  %430 = lshr i32 %425, %428, !dbg !45
  %431 = add i32 %430, %429, !dbg !45
  %432 = shl i32 %425, %417, !dbg !45
  %433 = sext i32 %427 to i64, !dbg !45
  %434 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i110, i64 0, i64 %433, !dbg !45
  %435 = load i32, ptr %434, align 4, !dbg !45
  %436 = lshr i32 %435, %428, !dbg !45
  %437 = add i32 %436, %432, !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i127, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i127: ; preds = %426, %415
  %hi.i.i.i.1.i128 = phi i32 [ %431, %426 ], [ %421, %415 ], !dbg !45
  %lo.i.i.i.0.i129 = phi i32 [ %437, %426 ], [ %425, %415 ], !dbg !45
  %438 = lshr i32 %hi.i.i.i.1.i128, 30, !dbg !45
  %439 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i128, i32 %lo.i.i.i.0.i129, i32 2), !dbg !45
  %440 = shl i32 %lo.i.i.i.0.i129, 2, !dbg !45
  %441 = lshr i32 %439, 31, !dbg !45
  %442 = add nuw nsw i32 %441, %438, !dbg !45
  %443 = sub nsw i32 0, %442, !dbg !45
  %.not2123.i130 = icmp slt i32 %398, 0, !dbg !45
  %spec.select.i131 = select i1 %.not2123.i130, i32 %443, i32 %442, !dbg !45
  %444 = xor i32 %439, %398, !dbg !45
  %.lobit.i132 = ashr i32 %439, 31, !dbg !45
  %hi.i.i.i.2.i133 = xor i32 %.lobit.i132, %439, !dbg !45
  %lo.i.i.i.1.i135 = xor i32 %.lobit.i132, %440, !dbg !45
  %445 = zext i32 %hi.i.i.i.2.i133 to i64, !dbg !45
  %446 = shl nuw i64 %445, 32, !dbg !45
  %447 = zext i32 %lo.i.i.i.1.i135 to i64, !dbg !45
  %448 = or disjoint i64 %446, %447, !dbg !45
  %449 = sitofp i64 %448 to double, !dbg !45
  %450 = fmul double %449, 0x3BF921FB54442D19, !dbg !45
  %451 = fptrunc double %450 to float, !dbg !45
  %452 = fneg float %451, !dbg !45
  %.not2526.i136 = icmp slt i32 %444, 0, !dbg !45
  %r.i.i.i.0.i137 = select i1 %.not2526.i136, float %452, float %451, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i138, !dbg !45

__internal_trig_reduction_kernel.exit.i.i138:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i127, %__nv_fmul_rn.exit.i.i.i161, %__nv_cosf.exit
  %i.i.1.i139 = phi i32 [ %.01.i112, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i161 ], [ %spec.select.i131, %__internal_trig_reduction_slowpath.exit.i.i.i127 ], !dbg !45
  %t.i.i.1.i140 = phi float [ %.04.i118, %__nv_cosf.exit ], [ %.08.i163, %__nv_fmul_rn.exit.i.i.i161 ], [ %r.i.i.i.0.i137, %__internal_trig_reduction_slowpath.exit.i.i.i127 ], !dbg !45
  %453 = add i32 %i.i.1.i139, 1, !dbg !45
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i141 = icmp eq i32 %454, 0, !dbg !45
  %455 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i140, float %t.i.i.1.i140) #4, !dbg !45
  %456 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i140, float %t.i.i.1.i140) #4, !dbg !45
  %.011.i142 = select i1 %.not28.i141, float %456, float %455, !dbg !45
  %457 = and i32 %i.i.1.i139, 1, !dbg !45
  %.not29.not.i143 = icmp eq i32 %457, 0, !dbg !45
  %458 = select i1 %.not29.not.i143, float 1.000000e+00, float %t.i.i.1.i140, !dbg !45
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i144 = icmp eq i32 %459, 0, !dbg !45
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i142, float %458, float 0.000000e+00) #4, !dbg !45
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i142, float %458, float 0.000000e+00) #4, !dbg !45
  %.012.i145 = select i1 %.not30.i144, float %461, float %460, !dbg !45
  br i1 %.not29.not.i143, label %__internal_fmad.exit1.i.i.i158, label %__internal_fmad.exit2.i.i.i146, !dbg !45

__internal_fmad.exit1.i.i.i158:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i138
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i159 = icmp eq i32 %462, 0, !dbg !45
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i142, float 0xBF56C0FDA0000000) #4, !dbg !45
  %464 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i142, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i160 = select i1 %.not31.i159, float %464, float %463, !dbg !45
  br label %__internal_fmad.exit2.i.i.i146, !dbg !45

__internal_fmad.exit2.i.i.i146:                   ; preds = %__internal_fmad.exit1.i.i.i158, %__internal_trig_reduction_kernel.exit.i.i138
  %465 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i158 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i138 ], !dbg !45
  %466 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i158 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i138 ], !dbg !45
  %467 = phi float [ %.013.i160, %__internal_fmad.exit1.i.i.i158 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i138 ], !dbg !45
  %468 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i147 = icmp eq i32 %468, 0, !dbg !45
  %469 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %467, float %.011.i142, float %466) #4, !dbg !45
  %470 = tail call float @llvm.nvvm.fma.rn.f(float %467, float %.011.i142, float %466) #4, !dbg !45
  %.010.i148 = select i1 %.not32.i147, float %470, float %469, !dbg !45
  %471 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i149 = icmp eq i32 %471, 0, !dbg !45
  %472 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i148, float %.011.i142, float %465) #4, !dbg !45
  %473 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i148, float %.011.i142, float %465) #4, !dbg !45
  %.09.i150 = select i1 %.not33.i149, float %473, float %472, !dbg !45
  %474 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i151 = icmp eq i32 %474, 0, !dbg !45
  %475 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i150, float %.012.i145, float %458) #4, !dbg !45
  %476 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i150, float %.012.i145, float %458) #4, !dbg !45
  %.05.i152 = select i1 %.not34.i151, float %476, float %475, !dbg !45
  %477 = and i32 %453, 2, !dbg !45
  %.not35.i153 = icmp eq i32 %477, 0, !dbg !45
  br i1 %.not35.i153, label %__nv_cosf.exit164, label %__internal_fmad.exit5.i.i.i154, !dbg !45

__internal_fmad.exit5.i.i.i154:                   ; preds = %__internal_fmad.exit2.i.i.i146
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i155 = icmp eq i32 %478, 0, !dbg !45
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i152, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i152, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i156 = select i1 %.not36.i155, float %480, float %479, !dbg !45
  br label %__nv_cosf.exit164, !dbg !45

__nv_cosf.exit164:                                ; preds = %__internal_fmad.exit2.i.i.i146, %__internal_fmad.exit5.i.i.i154
  %z.i.i.0.i157 = phi float [ %.0.i156, %__internal_fmad.exit5.i.i.i154 ], [ %.05.i152, %__internal_fmad.exit2.i.i.i146 ], !dbg !45
  %481 = icmp slt i32 %13, %20, !dbg !48
  %482 = icmp slt i32 %12, %20, !dbg !48
  %483 = icmp slt i32 %13, %5, !dbg !49
  %484 = icmp slt i32 %12, %5, !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i110), !dbg !45
  %485 = select i1 %482, float %z.i.i.0.i, float %z.i.i.0.i103, !dbg !50
  %486 = select i1 %481, float %z.i.i.0.i52, float %z.i.i.0.i157, !dbg !50
  %487 = sext i32 %12 to i64, !dbg !51
  %488 = getelementptr float, ptr addrspace(1) %1, i64 %487, !dbg !51
  %489 = sext i32 %13 to i64, !dbg !51
  %490 = getelementptr float, ptr addrspace(1) %1, i64 %489, !dbg !51
  %491 = bitcast float %485 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %491, ptr addrspace(1) %488, i1 %484) #4, !dbg !52
  %492 = bitcast float %486 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %492, ptr addrspace(1) %490, i1 %483) #4, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvezxwbsj6cs7i2u34gb53yyu7uxbc7vv2gzcgbudfok7icca7ef.py", directory: "/opt/inductor_cache/ve")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 19, scope: !7)
!15 = !DILocation(line: 23, column: 37, scope: !7)
!16 = !DILocation(line: 44, column: 16, scope: !17, inlinedAt: !19)
!17 = distinct !DILexicalBlockFile(scope: !7, file: !18, discriminator: 0)
!18 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime")
!19 = !DILocation(line: 28, column: 50, scope: !7)
!20 = !DILocation(line: 46, column: 47, scope: !17, inlinedAt: !19)
!21 = !DILocation(line: 47, column: 25, scope: !17, inlinedAt: !19)
!22 = !DILocation(line: 47, column: 47, scope: !17, inlinedAt: !19)
!23 = !DILocation(line: 31, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 20, scope: !7)
!25 = !DILocation(line: 35, column: 20, scope: !7)
!26 = !DILocation(line: 36, column: 42, scope: !7)
!27 = !DILocation(line: 37, column: 21, scope: !7)
!28 = !DILocation(line: 38, column: 20, scope: !7)
!29 = !DILocation(line: 39, column: 24, scope: !7)
!30 = !DILocation(line: 40, column: 19, scope: !7)
!31 = !DILocation(line: 42, column: 21, scope: !7)
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 44, column: 24, scope: !7)
!34 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.unroll.count", i32 1}
!37 = distinct !{!37, !36}
!38 = !DILocation(line: 50, column: 18, scope: !7)
!39 = !DILocation(line: 51, column: 21, scope: !7)
!40 = !DILocation(line: 52, column: 20, scope: !7)
!41 = !DILocation(line: 53, column: 20, scope: !7)
!42 = !DILocation(line: 54, column: 24, scope: !7)
!43 = !DILocation(line: 55, column: 19, scope: !7)
!44 = !DILocation(line: 56, column: 20, scope: !7)
!45 = !DILocation(line: 57, column: 24, scope: !7)
!46 = distinct !{!46, !36}
!47 = distinct !{!47, !36}
!48 = !DILocation(line: 29, column: 18, scope: !7)
!49 = !DILocation(line: 21, column: 21, scope: !7)
!50 = !DILocation(line: 0, scope: !7)
!51 = !DILocation(line: 61, column: 25, scope: !7)
!52 = !DILocation(line: 61, column: 37, scope: !7)
!53 = !DILocation(line: 61, column: 4, scope: !7)
