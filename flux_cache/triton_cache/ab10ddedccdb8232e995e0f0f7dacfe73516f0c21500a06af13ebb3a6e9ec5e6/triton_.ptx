//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u32 triton__param_6
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<81>;
	.reg .b16 	%rs<161>;
	.reg .b32 	%r<195>;
	.reg .f32 	%f<114>;
	.reg .b64 	%rd<66>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd41, [triton__param_0];
	ld.param.u64 	%rd42, [triton__param_1];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r98, %r1, 10;
	ld.param.u64 	%rd43, [triton__param_2];
	ld.param.u64 	%rd44, [triton__param_3];
	.loc	1 20 36
	mov.u32 	%r99, %tid.x;
	shl.b32 	%r100, %r99, 3;
	ld.param.u64 	%rd45, [triton__param_4];
	and.b32  	%r101, %r100, 1016;
	ld.param.u64 	%rd46, [triton__param_5];
	and.b32  	%r102, %r100, 120;
	ld.param.u32 	%r103, [triton__param_6];
	.loc	1 20 23
	or.b32  	%r104, %r98, %r101;
	or.b32  	%r105, %r102, %r98;
	or.b32  	%r106, %r105, 2;
	or.b32  	%r107, %r105, 4;
	or.b32  	%r108, %r105, 6;
	.loc	1 21 21
	setp.lt.s32 	%p1, %r104, %r103;
	.loc	1 25 20
	shr.s32 	%r110, %r104, 31;
	shr.u32 	%r111, %r110, 25;
	add.s32 	%r112, %r104, %r111;
	and.b32  	%r113, %r112, -128;
	sub.s32 	%r114, %r104, %r113;
	.loc	1 23 18
	bfe.s32 	%r115, %r1, 21, 1;
	shr.u32 	%r116, %r115, 25;
	add.s32 	%r117, %r106, %r116;
	and.b32  	%r118, %r117, 128;
	sub.s32 	%r119, %r106, %r118;
	add.s32 	%r120, %r107, %r116;
	and.b32  	%r121, %r120, -896;
	sub.s32 	%r122, %r107, %r121;
	add.s32 	%r123, %r108, %r116;
	and.b32  	%r124, %r123, 128;
	sub.s32 	%r125, %r108, %r124;
	.loc	1 24 20
	mul.hi.s32 	%r126, %r104, 715827883;
	shr.u32 	%r127, %r126, 31;
	shr.s32 	%r128, %r126, 9;
	add.s32 	%r129, %r128, %r127;
	.loc	1 26 30
	mul.wide.s32 	%rd47, %r104, 2;
	add.s64 	%rd1, %rd41, %rd47;
	.loc	1 26 35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	cvt.u16.u32 	%rs1, %r2;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r2; }
	cvt.u16.u32 	%rs3, %r3;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r3; }
	cvt.u16.u32 	%rs5, %r4;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r4; }
	cvt.u16.u32 	%rs7, %r5;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r5; }
	.loc	1 26 45
	// begin inline asm
	cvt.f32.bf16 %r6, %rs1;
	// end inline asm
	mov.b32 	%f1, %r6;
	// begin inline asm
	cvt.f32.bf16 %r7, %rs2;
	// end inline asm
	mov.b32 	%f2, %r7;
	// begin inline asm
	cvt.f32.bf16 %r8, %rs3;
	// end inline asm
	mov.b32 	%f3, %r8;
	// begin inline asm
	cvt.f32.bf16 %r9, %rs4;
	// end inline asm
	mov.b32 	%f4, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs5;
	// end inline asm
	mov.b32 	%f5, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs6;
	// end inline asm
	mov.b32 	%f6, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs7;
	// end inline asm
	mov.b32 	%f7, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs8;
	// end inline asm
	mov.b32 	%f8, %r13;
	.loc	1 27 40
	shl.b32 	%r130, %r129, 7;
	.loc	1 27 36
	add.s32 	%r131, %r130, %r114;
	add.s32 	%r132, %r130, %r122;
	.loc	1 27 30
	mul.wide.s32 	%rd48, %r131, 4;
	add.s64 	%rd2, %rd42, %rd48;
	mul.wide.s32 	%rd49, %r132, 4;
	add.s64 	%rd3, %rd42, %rd49;
	.loc	1 27 46
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r14;
	mov.b32 	%f10, %r15;
	mov.b32 	%f11, %r16;
	mov.b32 	%f12, %r17;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r18;
	mov.b32 	%f14, %r19;
	mov.b32 	%f15, %r20;
	mov.b32 	%f16, %r21;
	.loc	1 28 31
	add.s64 	%rd4, %rd43, %rd48;
	add.s64 	%rd5, %rd43, %rd49;
	.loc	1 28 47
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r22;
	mov.b32 	%f18, %r23;
	mov.b32 	%f19, %r24;
	mov.b32 	%f20, %r25;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r26;
	mov.b32 	%f22, %r27;
	mov.b32 	%f23, %r28;
	mov.b32 	%f24, %r29;
	.loc	1 29 31
	add.s64 	%rd6, %rd44, %rd47;
	.loc	1 29 36
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd6 + 0 ];
	// end inline asm
	cvt.u16.u32 	%rs9, %r30;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r30; }
	cvt.u16.u32 	%rs11, %r31;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r31; }
	cvt.u16.u32 	%rs13, %r32;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r32; }
	cvt.u16.u32 	%rs15, %r33;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r33; }
	.loc	1 29 46
	// begin inline asm
	cvt.f32.bf16 %r34, %rs9;
	// end inline asm
	mov.b32 	%f25, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs10;
	// end inline asm
	mov.b32 	%f26, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs11;
	// end inline asm
	mov.b32 	%f27, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs12;
	// end inline asm
	mov.b32 	%f28, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs13;
	// end inline asm
	mov.b32 	%f29, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs14;
	// end inline asm
	mov.b32 	%f30, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs15;
	// end inline asm
	mov.b32 	%f31, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs16;
	// end inline asm
	mov.b32 	%f32, %r41;
	.loc	1 20 23
	or.b32  	%r133, %r104, 7;
	or.b32  	%r134, %r104, 5;
	or.b32  	%r135, %r104, 3;
	or.b32  	%r136, %r104, 1;
	.loc	1 23 18
	add.s32 	%r137, %r136, %r116;
	and.b32  	%r138, %r137, 65408;
	sub.s32 	%r139, %r136, %r138;
	add.s32 	%r140, %r135, %r116;
	and.b32  	%r141, %r140, 65408;
	sub.s32 	%r142, %r135, %r141;
	add.s32 	%r143, %r134, %r116;
	and.b32  	%r144, %r143, 65408;
	sub.s32 	%r145, %r134, %r144;
	add.s32 	%r146, %r133, %r116;
	and.b32  	%r147, %r146, 65408;
	sub.s32 	%r148, %r133, %r147;
	.loc	1 32 16
	bfe.u32 	%r149, %r1, 21, 1;
	add.s32 	%r150, %r136, %r149;
	and.b32  	%r151, %r150, -6;
	sub.s32 	%r152, %r136, %r151;
	add.s32 	%r153, %r135, %r149;
	and.b32  	%r154, %r153, -2;
	sub.s32 	%r155, %r135, %r154;
	add.s32 	%r156, %r134, %r149;
	and.b32  	%r157, %r156, -2;
	sub.s32 	%r158, %r134, %r157;
	add.s32 	%r159, %r133, %r149;
	and.b32  	%r160, %r159, -2;
	sub.s32 	%r161, %r133, %r160;
	.loc	1 36 18
	setp.lt.s32 	%p73, %r161, 1;
	setp.lt.s32 	%p74, %r158, 1;
	setp.lt.s32 	%p75, %r155, 1;
	setp.lt.s32 	%p76, %r152, 1;
	.loc	1 37 44
	cvt.s8.s32 	%rs129, %r114;
	shr.s16 	%rs130, %rs129, 1;
	cvt.u16.u32 	%rs131, %r139;
	and.b16  	%rs132, %rs131, 128;
	shr.u16 	%rs133, %rs132, 7;
	add.s16 	%rs134, %rs131, %rs133;
	cvt.s16.s8 	%rs135, %rs134;
	shr.s16 	%rs136, %rs135, 1;
	cvt.s8.s32 	%rs137, %r119;
	shr.s16 	%rs138, %rs137, 1;
	cvt.u16.u32 	%rs139, %r142;
	and.b16  	%rs140, %rs139, 128;
	shr.u16 	%rs141, %rs140, 7;
	add.s16 	%rs142, %rs139, %rs141;
	cvt.s16.s8 	%rs143, %rs142;
	shr.s16 	%rs144, %rs143, 1;
	cvt.s8.s32 	%rs145, %r122;
	shr.s16 	%rs146, %rs145, 1;
	cvt.u16.u32 	%rs147, %r145;
	and.b16  	%rs148, %rs147, 128;
	shr.u16 	%rs149, %rs148, 7;
	add.s16 	%rs150, %rs147, %rs149;
	cvt.s16.s8 	%rs151, %rs150;
	shr.s16 	%rs152, %rs151, 1;
	cvt.s8.s32 	%rs153, %r125;
	shr.s16 	%rs154, %rs153, 1;
	cvt.u16.u32 	%rs155, %r148;
	and.b16  	%rs156, %rs155, 128;
	shr.u16 	%rs157, %rs156, 7;
	add.s16 	%rs158, %rs155, %rs157;
	cvt.s16.s8 	%rs159, %rs158;
	shr.s16 	%rs160, %rs159, 1;
	.loc	1 37 38
	mul.wide.s16 	%r162, %rs130, 2;
	mul.wide.s16 	%r163, %rs136, 2;
	mul.wide.s16 	%r164, %rs138, 2;
	mul.wide.s16 	%r165, %rs144, 2;
	mul.wide.s16 	%r166, %rs146, 2;
	mul.wide.s16 	%r167, %rs152, 2;
	mul.wide.s16 	%r168, %rs154, 2;
	mul.wide.s16 	%r169, %rs160, 2;
	.loc	1 37 35
	or.b32  	%r170, %r113, 1;
	.loc	1 37 51
	add.s32 	%r171, %r170, %r162;
	add.s32 	%r172, %r170, %r163;
	add.s32 	%r173, %r170, %r164;
	add.s32 	%r174, %r170, %r165;
	add.s32 	%r175, %r170, %r166;
	add.s32 	%r176, %r170, %r167;
	add.s32 	%r177, %r170, %r168;
	add.s32 	%r178, %r170, %r169;
	.loc	1 37 30
	mul.wide.s32 	%rd50, %r171, 2;
	add.s64 	%rd7, %rd41, %rd50;
	mul.wide.s32 	%rd51, %r172, 2;
	add.s64 	%rd8, %rd41, %rd51;
	mul.wide.s32 	%rd52, %r173, 2;
	add.s64 	%rd9, %rd41, %rd52;
	mul.wide.s32 	%rd53, %r174, 2;
	add.s64 	%rd10, %rd41, %rd53;
	mul.wide.s32 	%rd54, %r175, 2;
	add.s64 	%rd11, %rd41, %rd54;
	mul.wide.s32 	%rd55, %r176, 2;
	add.s64 	%rd12, %rd41, %rd55;
	mul.wide.s32 	%rd56, %r177, 2;
	add.s64 	%rd13, %rd41, %rd56;
	mul.wide.s32 	%rd57, %r178, 2;
	add.s64 	%rd14, %rd41, %rd57;
	.loc	1 37 68
	and.pred  	%p9, %p1, %p76;
	and.pred  	%p13, %p1, %p75;
	and.pred  	%p17, %p1, %p74;
	and.pred  	%p21, %p1, %p73;
	mov.u16 	%rs18, 0;
	.loc	1 37 61
	// begin inline asm
	mov.u16 %rs33, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs33 }, [ %rd7 + 0 ];
	@!%p1 mov.u16 %rs33, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs34, 0x0;
	@%p9 ld.global.L1::evict_last.b16 { %rs34 }, [ %rd8 + 0 ];
	@!%p9 mov.u16 %rs34, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs35, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs35 }, [ %rd9 + 0 ];
	@!%p1 mov.u16 %rs35, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs36, 0x0;
	@%p13 ld.global.L1::evict_last.b16 { %rs36 }, [ %rd10 + 0 ];
	@!%p13 mov.u16 %rs36, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs37, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs37 }, [ %rd11 + 0 ];
	@!%p1 mov.u16 %rs37, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs38, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs38 }, [ %rd12 + 0 ];
	@!%p17 mov.u16 %rs38, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs39, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs39 }, [ %rd13 + 0 ];
	@!%p1 mov.u16 %rs39, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs40, 0x0;
	@%p21 ld.global.L1::evict_last.b16 { %rs40 }, [ %rd14 + 0 ];
	@!%p21 mov.u16 %rs40, %rs18;
	// end inline asm
	.loc	1 37 119
	// begin inline asm
	cvt.f32.bf16 %r42, %rs33;
	// end inline asm
	mov.b32 	%f33, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs34;
	// end inline asm
	mov.b32 	%f34, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs35;
	// end inline asm
	mov.b32 	%f35, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs36;
	// end inline asm
	mov.b32 	%f36, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs37;
	// end inline asm
	mov.b32 	%f37, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs38;
	// end inline asm
	mov.b32 	%f38, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs39;
	// end inline asm
	mov.b32 	%f39, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs40;
	// end inline asm
	mov.b32 	%f40, %r49;
	mov.f32 	%f41, 0f00000000;
	.loc	1 38 13
	sub.f32 	%f42, %f41, %f33;
	sub.f32 	%f43, %f41, %f34;
	sub.f32 	%f44, %f41, %f35;
	sub.f32 	%f45, %f41, %f36;
	sub.f32 	%f46, %f41, %f37;
	sub.f32 	%f47, %f41, %f38;
	sub.f32 	%f48, %f41, %f39;
	sub.f32 	%f49, %f41, %f40;
	.loc	1 41 20
	setp.gt.s32 	%p77, %r161, 0;
	setp.gt.s32 	%p78, %r158, 0;
	setp.gt.s32 	%p79, %r155, 0;
	setp.gt.s32 	%p80, %r152, 0;
	.loc	1 44 48
	add.s32 	%r179, %r162, %r113;
	add.s32 	%r180, %r163, %r113;
	add.s32 	%r181, %r164, %r113;
	add.s32 	%r182, %r165, %r113;
	add.s32 	%r183, %r166, %r113;
	add.s32 	%r184, %r167, %r113;
	add.s32 	%r185, %r168, %r113;
	add.s32 	%r186, %r169, %r113;
	.loc	1 44 31
	mul.wide.s32 	%rd58, %r179, 2;
	add.s64 	%rd15, %rd41, %rd58;
	mul.wide.s32 	%rd59, %r180, 2;
	add.s64 	%rd16, %rd41, %rd59;
	mul.wide.s32 	%rd60, %r181, 2;
	add.s64 	%rd17, %rd41, %rd60;
	mul.wide.s32 	%rd61, %r182, 2;
	add.s64 	%rd18, %rd41, %rd61;
	mul.wide.s32 	%rd62, %r183, 2;
	add.s64 	%rd19, %rd41, %rd62;
	mul.wide.s32 	%rd63, %r184, 2;
	add.s64 	%rd20, %rd41, %rd63;
	mul.wide.s32 	%rd64, %r185, 2;
	add.s64 	%rd21, %rd41, %rd64;
	mul.wide.s32 	%rd65, %r186, 2;
	add.s64 	%rd22, %rd41, %rd65;
	.loc	1 44 66
	and.pred  	%p25, %p1, %p80;
	and.pred  	%p29, %p1, %p79;
	and.pred  	%p33, %p1, %p78;
	and.pred  	%p37, %p1, %p77;
	mov.pred 	%p23, 0;
	.loc	1 44 58
	// begin inline asm
	mov.u16 %rs41, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs41 }, [ %rd15 + 0 ];
	@!%p23 mov.u16 %rs41, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs58, 0x0;
	@%p25 ld.global.L1::evict_last.b16 { %rs58 }, [ %rd16 + 0 ];
	@!%p25 mov.u16 %rs58, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs45, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs45 }, [ %rd17 + 0 ];
	@!%p23 mov.u16 %rs45, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs60, 0x0;
	@%p29 ld.global.L1::evict_last.b16 { %rs60 }, [ %rd18 + 0 ];
	@!%p29 mov.u16 %rs60, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs49, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs49 }, [ %rd19 + 0 ];
	@!%p23 mov.u16 %rs49, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs62, 0x0;
	@%p33 ld.global.L1::evict_last.b16 { %rs62 }, [ %rd20 + 0 ];
	@!%p33 mov.u16 %rs62, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs53, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs53 }, [ %rd21 + 0 ];
	@!%p23 mov.u16 %rs53, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs64, 0x0;
	@%p37 ld.global.L1::evict_last.b16 { %rs64 }, [ %rd22 + 0 ];
	@!%p37 mov.u16 %rs64, %rs18;
	// end inline asm
	.loc	1 44 117
	// begin inline asm
	cvt.f32.bf16 %r51, %rs58;
	// end inline asm
	mov.b32 	%f50, %r51;
	// begin inline asm
	cvt.f32.bf16 %r53, %rs60;
	// end inline asm
	mov.b32 	%f51, %r53;
	// begin inline asm
	cvt.f32.bf16 %r55, %rs62;
	// end inline asm
	mov.b32 	%f52, %r55;
	// begin inline asm
	cvt.f32.bf16 %r57, %rs64;
	// end inline asm
	mov.b32 	%f53, %r57;
	.loc	1 0 0
	selp.f32 	%f54, %f43, %f50, %p76;
	selp.f32 	%f55, %f45, %f51, %p75;
	selp.f32 	%f56, %f47, %f52, %p74;
	selp.f32 	%f57, %f49, %f53, %p73;
	.loc	1 47 20
	mul.f32 	%f58, %f42, %f17;
	mul.f32 	%f59, %f54, %f18;
	mul.f32 	%f60, %f44, %f19;
	mul.f32 	%f61, %f55, %f20;
	mul.f32 	%f62, %f46, %f21;
	mul.f32 	%f63, %f56, %f22;
	mul.f32 	%f64, %f48, %f23;
	mul.f32 	%f65, %f57, %f24;
	.loc	1 48 19
	fma.rn.f32 	%f66, %f1, %f9, %f58;
	fma.rn.f32 	%f67, %f2, %f10, %f59;
	fma.rn.f32 	%f68, %f3, %f11, %f60;
	fma.rn.f32 	%f69, %f4, %f12, %f61;
	fma.rn.f32 	%f70, %f5, %f13, %f62;
	fma.rn.f32 	%f71, %f6, %f14, %f63;
	fma.rn.f32 	%f72, %f7, %f15, %f64;
	fma.rn.f32 	%f73, %f8, %f16, %f65;
	.loc	1 52 31
	add.s64 	%rd23, %rd44, %rd50;
	add.s64 	%rd24, %rd44, %rd51;
	add.s64 	%rd25, %rd44, %rd52;
	add.s64 	%rd26, %rd44, %rd53;
	add.s64 	%rd27, %rd44, %rd54;
	add.s64 	%rd28, %rd44, %rd55;
	add.s64 	%rd29, %rd44, %rd56;
	add.s64 	%rd30, %rd44, %rd57;
	.loc	1 52 62
	// begin inline asm
	mov.u16 %rs81, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs81 }, [ %rd23 + 0 ];
	@!%p1 mov.u16 %rs81, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs82, 0x0;
	@%p9 ld.global.L1::evict_last.b16 { %rs82 }, [ %rd24 + 0 ];
	@!%p9 mov.u16 %rs82, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs83, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs83 }, [ %rd25 + 0 ];
	@!%p1 mov.u16 %rs83, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs84, 0x0;
	@%p13 ld.global.L1::evict_last.b16 { %rs84 }, [ %rd26 + 0 ];
	@!%p13 mov.u16 %rs84, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs85, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs85 }, [ %rd27 + 0 ];
	@!%p1 mov.u16 %rs85, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs86, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs86 }, [ %rd28 + 0 ];
	@!%p17 mov.u16 %rs86, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs87, 0x0;
	@%p1 ld.global.L1::evict_last.b16 { %rs87 }, [ %rd29 + 0 ];
	@!%p1 mov.u16 %rs87, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs88, 0x0;
	@%p21 ld.global.L1::evict_last.b16 { %rs88 }, [ %rd30 + 0 ];
	@!%p21 mov.u16 %rs88, %rs18;
	// end inline asm
	.loc	1 52 120
	// begin inline asm
	cvt.f32.bf16 %r58, %rs81;
	// end inline asm
	mov.b32 	%f74, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs82;
	// end inline asm
	mov.b32 	%f75, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs83;
	// end inline asm
	mov.b32 	%f76, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs84;
	// end inline asm
	mov.b32 	%f77, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs85;
	// end inline asm
	mov.b32 	%f78, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs86;
	// end inline asm
	mov.b32 	%f79, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs87;
	// end inline asm
	mov.b32 	%f80, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs88;
	// end inline asm
	mov.b32 	%f81, %r65;
	.loc	1 53 13
	sub.f32 	%f82, %f41, %f74;
	sub.f32 	%f83, %f41, %f75;
	sub.f32 	%f84, %f41, %f76;
	sub.f32 	%f85, %f41, %f77;
	sub.f32 	%f86, %f41, %f78;
	sub.f32 	%f87, %f41, %f79;
	sub.f32 	%f88, %f41, %f80;
	sub.f32 	%f89, %f41, %f81;
	.loc	1 56 31
	add.s64 	%rd31, %rd44, %rd58;
	add.s64 	%rd32, %rd44, %rd59;
	add.s64 	%rd33, %rd44, %rd60;
	add.s64 	%rd34, %rd44, %rd61;
	add.s64 	%rd35, %rd44, %rd62;
	add.s64 	%rd36, %rd44, %rd63;
	add.s64 	%rd37, %rd44, %rd64;
	add.s64 	%rd38, %rd44, %rd65;
	.loc	1 56 58
	// begin inline asm
	mov.u16 %rs89, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs89 }, [ %rd31 + 0 ];
	@!%p23 mov.u16 %rs89, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs106, 0x0;
	@%p25 ld.global.L1::evict_last.b16 { %rs106 }, [ %rd32 + 0 ];
	@!%p25 mov.u16 %rs106, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs93, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs93 }, [ %rd33 + 0 ];
	@!%p23 mov.u16 %rs93, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs108, 0x0;
	@%p29 ld.global.L1::evict_last.b16 { %rs108 }, [ %rd34 + 0 ];
	@!%p29 mov.u16 %rs108, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs97, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs97 }, [ %rd35 + 0 ];
	@!%p23 mov.u16 %rs97, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs110, 0x0;
	@%p33 ld.global.L1::evict_last.b16 { %rs110 }, [ %rd36 + 0 ];
	@!%p33 mov.u16 %rs110, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs101, 0x0;
	@%p23 ld.global.L1::evict_last.b16 { %rs101 }, [ %rd37 + 0 ];
	@!%p23 mov.u16 %rs101, %rs18;
	// end inline asm
	// begin inline asm
	mov.u16 %rs112, 0x0;
	@%p37 ld.global.L1::evict_last.b16 { %rs112 }, [ %rd38 + 0 ];
	@!%p37 mov.u16 %rs112, %rs18;
	// end inline asm
	.loc	1 56 117
	// begin inline asm
	cvt.f32.bf16 %r67, %rs106;
	// end inline asm
	mov.b32 	%f90, %r67;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs108;
	// end inline asm
	mov.b32 	%f91, %r69;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs110;
	// end inline asm
	mov.b32 	%f92, %r71;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs112;
	// end inline asm
	mov.b32 	%f93, %r73;
	.loc	1 0 0
	selp.f32 	%f94, %f83, %f90, %p76;
	selp.f32 	%f95, %f85, %f91, %p75;
	selp.f32 	%f96, %f87, %f92, %p74;
	selp.f32 	%f97, %f89, %f93, %p73;
	.loc	1 59 20
	mul.f32 	%f98, %f82, %f17;
	mul.f32 	%f99, %f94, %f18;
	mul.f32 	%f100, %f84, %f19;
	mul.f32 	%f101, %f95, %f20;
	mul.f32 	%f102, %f86, %f21;
	mul.f32 	%f103, %f96, %f22;
	mul.f32 	%f104, %f88, %f23;
	mul.f32 	%f105, %f97, %f24;
	.loc	1 60 20
	fma.rn.f32 	%f106, %f25, %f9, %f98;
	fma.rn.f32 	%f107, %f26, %f10, %f99;
	fma.rn.f32 	%f108, %f27, %f11, %f100;
	fma.rn.f32 	%f109, %f28, %f12, %f101;
	fma.rn.f32 	%f110, %f29, %f13, %f102;
	fma.rn.f32 	%f111, %f30, %f14, %f103;
	fma.rn.f32 	%f112, %f31, %f15, %f104;
	fma.rn.f32 	%f113, %f32, %f16, %f105;
	.loc	1 62 25
	add.s64 	%rd39, %rd45, %rd47;
	.loc	1 62 37
	mov.b32 	%r74, %f66;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r74;
	// end inline asm
	mov.b32 	%r75, %f67;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r75;
	// end inline asm
	mov.b32 	%r76, %f68;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r76;
	// end inline asm
	mov.b32 	%r77, %f69;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r77;
	// end inline asm
	mov.b32 	%r78, %f70;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r78;
	// end inline asm
	mov.b32 	%r79, %f71;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r79;
	// end inline asm
	mov.b32 	%r80, %f72;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r80;
	// end inline asm
	mov.b32 	%r81, %f73;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r81;
	// end inline asm
	mov.b32 	%r187, {%rs113, %rs114};
	mov.b32 	%r188, {%rs115, %rs116};
	mov.b32 	%r189, {%rs117, %rs118};
	mov.b32 	%r190, {%rs119, %rs120};
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd39 + 0 ], { %r187, %r188, %r189, %r190 };
	// end inline asm
	.loc	1 63 25
	add.s64 	%rd40, %rd46, %rd47;
	.loc	1 63 37
	mov.b32 	%r86, %f106;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r86;
	// end inline asm
	mov.b32 	%r87, %f107;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r87;
	// end inline asm
	mov.b32 	%r88, %f108;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r88;
	// end inline asm
	mov.b32 	%r89, %f109;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r89;
	// end inline asm
	mov.b32 	%r90, %f110;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r90;
	// end inline asm
	mov.b32 	%r91, %f111;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r91;
	// end inline asm
	mov.b32 	%r92, %f112;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r92;
	// end inline asm
	mov.b32 	%r93, %f113;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r93;
	// end inline asm
	mov.b32 	%r191, {%rs121, %rs122};
	mov.b32 	%r192, {%rs123, %rs124};
	mov.b32 	%r193, {%rs125, %rs126};
	mov.b32 	%r194, {%rs127, %rs128};
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd40 + 0 ], { %r191, %r192, %r193, %r194 };
	// end inline asm
	.loc	1 63 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 116
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 107
.b8 51
.b8 108
.b8 109
.b8 122
.b8 53
.b8 116
.b8 112
.b8 112
.b8 103
.b8 106
.b8 118
.b8 117
.b8 109
.b8 54
.b8 113
.b8 55
.b8 98
.b8 112
.b8 104
.b8 102
.b8 111
.b8 113
.b8 117
.b8 114
.b8 102
.b8 110
.b8 107
.b8 117
.b8 104
.b8 122
.b8 111
.b8 117
.b8 109
.b8 100
.b8 99
.b8 54
.b8 102
.b8 113
.b8 110
.b8 100
.b8 107
.b8 116
.b8 54
.b8 97
.b8 115
.b8 103
.b8 116
.b8 122
.b8 100
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 51
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
