; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #4, !dbg !14
  %13 = bitcast i32 %12 to float, !dbg !14
  %14 = sdiv i32 %2, 2, !dbg !15
  %15 = and i32 %2, 1, !dbg !19
  %16 = icmp slt i32 %2, 0, !dbg !20
  %17 = select i1 %16, i32 %15, i32 0, !dbg !21
  %18 = sub nsw i32 %14, %17, !dbg !21
  %19 = fmul float %13, 1.000000e+03, !dbg !22
  %20 = sitofp i32 %11 to float, !dbg !23
  %21 = fmul float %20, 0xC0226BB1C0000000, !dbg !24
  %22 = sub i32 %18, %3, !dbg !25
  %23 = sitofp i32 %22 to float, !dbg !26
  %24 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %21, float %23) #4, !dbg !27
  %25 = fmul float %24, 0x3FF7154760000000, !dbg !28
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #4, !dbg !28
  %27 = fmul float %19, %26, !dbg !29
  %28 = sitofp i32 %4 to float, !dbg !30
  %29 = fmul float %27, %28, !dbg !31
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %30 = fmul float %29, 0x3FE45F3060000000, !dbg !32
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i = icmp eq i32 %31, 0, !dbg !32
  %32 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %30) #4, !dbg !32
  %33 = tail call i32 @llvm.nvvm.f2i.rn(float %30) #4, !dbg !32
  %.01.i = select i1 %.not.i, i32 %33, i32 %32, !dbg !32
  %34 = sitofp i32 %.01.i to float, !dbg !32
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not15.i = icmp eq i32 %35, 0, !dbg !32
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %34, float 0xBFF921FB40000000, float %29) #4, !dbg !32
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %34, float 0xBFF921FB40000000, float %29) #4, !dbg !32
  %.02.i = select i1 %.not15.i, float %37, float %36, !dbg !32
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not16.i = icmp eq i32 %38, 0, !dbg !32
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %34, float 0xBE74442D00000000, float %.02.i) #4, !dbg !32
  %40 = tail call float @llvm.nvvm.fma.rn.f(float %34, float 0xBE74442D00000000, float %.02.i) #4, !dbg !32
  %.03.i = select i1 %.not16.i, float %40, float %39, !dbg !32
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not17.i = icmp eq i32 %41, 0, !dbg !32
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %34, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !32
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %34, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !32
  %.04.i = select i1 %.not17.i, float %43, float %42, !dbg !32
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not18.i = icmp eq i32 %44, 0, !dbg !32
  %45 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #4, !dbg !32
  %46 = tail call float @llvm.nvvm.fabs.f(float %29) #4, !dbg !32
  %.06.i = select i1 %.not18.i, float %46, float %45, !dbg !32
  %47 = fcmp ult float %.06.i, 1.056150e+05, !dbg !32
  br i1 %47, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !32

__nv_isinff.exit.i.i.i:                           ; preds = %6
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not19.i = icmp eq i32 %48, 0, !dbg !32
  %.07.i = select i1 %.not19.i, float %46, float %45, !dbg !32
  %49 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !32
  br i1 %49, label %__nv_fmul_rn.exit.i.i.i, label %53, !dbg !32

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not27.i = icmp eq i32 %50, 0, !dbg !32
  %51 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %29, float 0.000000e+00) #4, !dbg !32
  %52 = tail call float @llvm.nvvm.mul.rn.f(float %29, float 0.000000e+00) #4, !dbg !32
  %.08.i = select i1 %.not27.i, float %52, float %51, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

53:                                               ; preds = %__nv_isinff.exit.i.i.i
  %54 = bitcast float %29 to i32, !dbg !32
  %55 = lshr i32 %54, 23, !dbg !32
  %56 = and i32 %55, 224, !dbg !32
  %57 = add nsw i32 %56, -128, !dbg !32
  %58 = shl i32 %54, 8, !dbg !32
  %59 = or i32 %58, -2147483648, !dbg !32
  %60 = lshr exact i32 %57, 5, !dbg !32
  br label %61, !dbg !32

61:                                               ; preds = %53, %61
  %iq.i.i.i.0.i55 = phi i32 [ 0, %53 ], [ %69, %61 ]
  %hi.i.i.i.0.i54 = phi i32 [ 0, %53 ], [ %67, %61 ]
  %62 = zext nneg i32 %iq.i.i.i.0.i55 to i64, !dbg !32
  %63 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %62, !dbg !32
  %64 = load i32, ptr addrspace(1) %63, align 4, !dbg !32
  %65 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %64, i32 %59, i32 %hi.i.i.i.0.i54) #5, !dbg !32, !srcloc !33
  %66 = extractvalue { i32, i32 } %65, 0, !dbg !32
  %67 = extractvalue { i32, i32 } %65, 1, !dbg !32
  %68 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %62, !dbg !32
  store i32 %66, ptr %68, align 4, !dbg !32
  %69 = add nuw nsw i32 %iq.i.i.i.0.i55, 1, !dbg !32
  %70 = icmp ult i32 %iq.i.i.i.0.i55, 5, !dbg !32
  br i1 %70, label %61, label %71, !dbg !32, !llvm.loop !34

71:                                               ; preds = %61
  %72 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !32
  store i32 %67, ptr %72, align 4, !dbg !32
  %73 = and i32 %55, 31, !dbg !32
  %74 = sub nsw i32 6, %60, !dbg !32
  %75 = sext i32 %74 to i64, !dbg !32
  %76 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %75, !dbg !32
  %77 = load i32, ptr %76, align 4, !dbg !32
  %78 = sub nsw i32 5, %60, !dbg !32
  %79 = sext i32 %78 to i64, !dbg !32
  %80 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %79, !dbg !32
  %81 = load i32, ptr %80, align 4, !dbg !32
  %.not20.i = icmp eq i32 %73, 0, !dbg !32
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %82, !dbg !32

82:                                               ; preds = %71
  %83 = sub nsw i32 4, %60, !dbg !32
  %84 = sub nuw nsw i32 32, %73, !dbg !32
  %85 = shl i32 %77, %73, !dbg !32
  %86 = lshr i32 %81, %84, !dbg !32
  %87 = add i32 %86, %85, !dbg !32
  %88 = shl i32 %81, %73, !dbg !32
  %89 = sext i32 %83 to i64, !dbg !32
  %90 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %89, !dbg !32
  %91 = load i32, ptr %90, align 4, !dbg !32
  %92 = lshr i32 %91, %84, !dbg !32
  %93 = add i32 %92, %88, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %82, %71
  %hi.i.i.i.1.i = phi i32 [ %87, %82 ], [ %77, %71 ], !dbg !32
  %lo.i.i.i.0.i = phi i32 [ %93, %82 ], [ %81, %71 ], !dbg !32
  %94 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !32
  %95 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !32
  %96 = shl i32 %lo.i.i.i.0.i, 2, !dbg !32
  %97 = lshr i32 %95, 31, !dbg !32
  %98 = add nuw nsw i32 %97, %94, !dbg !32
  %99 = sub nsw i32 0, %98, !dbg !32
  %.not2123.i = icmp slt i32 %54, 0, !dbg !32
  %spec.select.i = select i1 %.not2123.i, i32 %99, i32 %98, !dbg !32
  %100 = xor i32 %95, %54, !dbg !32
  %.lobit.i = ashr i32 %95, 31, !dbg !32
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %95, !dbg !32
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %96, !dbg !32
  %101 = zext i32 %hi.i.i.i.2.i to i64, !dbg !32
  %102 = shl nuw i64 %101, 32, !dbg !32
  %103 = zext i32 %lo.i.i.i.1.i to i64, !dbg !32
  %104 = or disjoint i64 %102, %103, !dbg !32
  %105 = sitofp i64 %104 to double, !dbg !32
  %106 = fmul double %105, 0x3BF921FB54442D19, !dbg !32
  %107 = fptrunc double %106 to float, !dbg !32
  %108 = fneg float %107, !dbg !32
  %.not2526.i = icmp slt i32 %100, 0, !dbg !32
  %r.i.i.i.0.i = select i1 %.not2526.i, float %108, float %107, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %6
  %i.i.1.i = phi i32 [ %.01.i, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %t.i.i.1.i = phi float [ %.04.i, %6 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not28.i = icmp eq i32 %109, 0, !dbg !32
  %110 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !32
  %111 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !32
  %.011.i = select i1 %.not28.i, float %111, float %110, !dbg !32
  %112 = and i32 %i.i.1.i, 1, !dbg !32
  %.not29.i = icmp eq i32 %112, 0, !dbg !32
  %113 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !32
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not30.i = icmp eq i32 %114, 0, !dbg !32
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %113, float 0.000000e+00) #4, !dbg !32
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %113, float 0.000000e+00) #4, !dbg !32
  %.012.i = select i1 %.not30.i, float %116, float %115, !dbg !32
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !32

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not31.i = icmp eq i32 %117, 0, !dbg !32
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !32
  %119 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !32
  %.013.i = select i1 %.not31.i, float %119, float %118, !dbg !32
  br label %__internal_fmad.exit2.i.i.i, !dbg !32

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %120 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %121 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %122 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not32.i = icmp eq i32 %123, 0, !dbg !32
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %122, float %.011.i, float %121) #4, !dbg !32
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %122, float %.011.i, float %121) #4, !dbg !32
  %.010.i = select i1 %.not32.i, float %125, float %124, !dbg !32
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not33.i = icmp eq i32 %126, 0, !dbg !32
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %120) #4, !dbg !32
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %120) #4, !dbg !32
  %.09.i = select i1 %.not33.i, float %128, float %127, !dbg !32
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not34.i = icmp eq i32 %129, 0, !dbg !32
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %113) #4, !dbg !32
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %113) #4, !dbg !32
  %.05.i = select i1 %.not34.i, float %131, float %130, !dbg !32
  %132 = and i32 %i.i.1.i, 2, !dbg !32
  %.not35.i = icmp eq i32 %132, 0, !dbg !32
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !32

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not36.i = icmp eq i32 %133, 0, !dbg !32
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !32
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !32
  %.0.i = select i1 %.not36.i, float %135, float %134, !dbg !32
  br label %__nv_sinf.exit, !dbg !32

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %136 = sub i32 %11, %18, !dbg !36
  %137 = sitofp i32 %136 to float, !dbg !37
  %138 = fmul float %137, 0xC0226BB1C0000000, !dbg !38
  %139 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %138, float %23) #4, !dbg !39
  %140 = fmul float %139, 0x3FF7154760000000, !dbg !40
  %141 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %140) #4, !dbg !40
  %142 = fmul float %19, %141, !dbg !41
  %143 = fmul float %142, %28, !dbg !42
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !43
  %144 = fmul float %143, 0x3FE45F3060000000, !dbg !43
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i2 = icmp eq i32 %145, 0, !dbg !43
  %146 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %144) #4, !dbg !43
  %147 = tail call i32 @llvm.nvvm.f2i.rn(float %144) #4, !dbg !43
  %.01.i3 = select i1 %.not.i2, i32 %147, i32 %146, !dbg !43
  %148 = sitofp i32 %.01.i3 to float, !dbg !43
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not15.i4 = icmp eq i32 %149, 0, !dbg !43
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0xBFF921FB40000000, float %143) #4, !dbg !43
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0xBFF921FB40000000, float %143) #4, !dbg !43
  %.02.i5 = select i1 %.not15.i4, float %151, float %150, !dbg !43
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not16.i6 = icmp eq i32 %152, 0, !dbg !43
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !43
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !43
  %.03.i7 = select i1 %.not16.i6, float %154, float %153, !dbg !43
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not17.i8 = icmp eq i32 %155, 0, !dbg !43
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !43
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !43
  %.04.i9 = select i1 %.not17.i8, float %157, float %156, !dbg !43
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not18.i10 = icmp eq i32 %158, 0, !dbg !43
  %159 = tail call float @llvm.nvvm.fabs.ftz.f(float %143) #4, !dbg !43
  %160 = tail call float @llvm.nvvm.fabs.f(float %143) #4, !dbg !43
  %.06.i11 = select i1 %.not18.i10, float %160, float %159, !dbg !43
  %161 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !43
  br i1 %161, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !43

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not19.i13 = icmp eq i32 %162, 0, !dbg !43
  %.07.i14 = select i1 %.not19.i13, float %160, float %159, !dbg !43
  %163 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !43
  br i1 %163, label %__nv_fmul_rn.exit.i.i.i51, label %167, !dbg !43

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not27.i52 = icmp eq i32 %164, 0, !dbg !43
  %165 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %143, float 0.000000e+00) #4, !dbg !43
  %166 = tail call float @llvm.nvvm.mul.rn.f(float %143, float 0.000000e+00) #4, !dbg !43
  %.08.i53 = select i1 %.not27.i52, float %166, float %165, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !43

167:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %168 = bitcast float %143 to i32, !dbg !43
  %169 = lshr i32 %168, 23, !dbg !43
  %170 = and i32 %169, 224, !dbg !43
  %171 = add nsw i32 %170, -128, !dbg !43
  %172 = shl i32 %168, 8, !dbg !43
  %173 = or i32 %172, -2147483648, !dbg !43
  %174 = lshr exact i32 %171, 5, !dbg !43
  br label %175, !dbg !43

175:                                              ; preds = %167, %175
  %iq.i.i.i.0.i1657 = phi i32 [ 0, %167 ], [ %183, %175 ]
  %hi.i.i.i.0.i1556 = phi i32 [ 0, %167 ], [ %181, %175 ]
  %176 = zext nneg i32 %iq.i.i.i.0.i1657 to i64, !dbg !43
  %177 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %176, !dbg !43
  %178 = load i32, ptr addrspace(1) %177, align 4, !dbg !43
  %179 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %178, i32 %173, i32 %hi.i.i.i.0.i1556) #5, !dbg !43, !srcloc !33
  %180 = extractvalue { i32, i32 } %179, 0, !dbg !43
  %181 = extractvalue { i32, i32 } %179, 1, !dbg !43
  %182 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %176, !dbg !43
  store i32 %180, ptr %182, align 4, !dbg !43
  %183 = add nuw nsw i32 %iq.i.i.i.0.i1657, 1, !dbg !43
  %184 = icmp ult i32 %iq.i.i.i.0.i1657, 5, !dbg !43
  br i1 %184, label %175, label %185, !dbg !43, !llvm.loop !44

185:                                              ; preds = %175
  %186 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !43
  store i32 %181, ptr %186, align 4, !dbg !43
  %187 = and i32 %169, 31, !dbg !43
  %188 = sub nsw i32 6, %174, !dbg !43
  %189 = sext i32 %188 to i64, !dbg !43
  %190 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %189, !dbg !43
  %191 = load i32, ptr %190, align 4, !dbg !43
  %192 = sub nsw i32 5, %174, !dbg !43
  %193 = sext i32 %192 to i64, !dbg !43
  %194 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %193, !dbg !43
  %195 = load i32, ptr %194, align 4, !dbg !43
  %.not20.i17 = icmp eq i32 %187, 0, !dbg !43
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %196, !dbg !43

196:                                              ; preds = %185
  %197 = sub nsw i32 4, %174, !dbg !43
  %198 = sub nuw nsw i32 32, %187, !dbg !43
  %199 = shl i32 %191, %187, !dbg !43
  %200 = lshr i32 %195, %198, !dbg !43
  %201 = add i32 %200, %199, !dbg !43
  %202 = shl i32 %195, %187, !dbg !43
  %203 = sext i32 %197 to i64, !dbg !43
  %204 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %203, !dbg !43
  %205 = load i32, ptr %204, align 4, !dbg !43
  %206 = lshr i32 %205, %198, !dbg !43
  %207 = add i32 %206, %202, !dbg !43
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !43

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %196, %185
  %hi.i.i.i.1.i19 = phi i32 [ %201, %196 ], [ %191, %185 ], !dbg !43
  %lo.i.i.i.0.i20 = phi i32 [ %207, %196 ], [ %195, %185 ], !dbg !43
  %208 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !43
  %209 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !43
  %210 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !43
  %211 = lshr i32 %209, 31, !dbg !43
  %212 = add nuw nsw i32 %211, %208, !dbg !43
  %213 = sub nsw i32 0, %212, !dbg !43
  %.not2123.i21 = icmp slt i32 %168, 0, !dbg !43
  %spec.select.i22 = select i1 %.not2123.i21, i32 %213, i32 %212, !dbg !43
  %214 = xor i32 %209, %168, !dbg !43
  %.lobit.i23 = ashr i32 %209, 31, !dbg !43
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %209, !dbg !43
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %210, !dbg !43
  %215 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !43
  %216 = shl nuw i64 %215, 32, !dbg !43
  %217 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !43
  %218 = or disjoint i64 %216, %217, !dbg !43
  %219 = sitofp i64 %218 to double, !dbg !43
  %220 = fmul double %219, 0x3BF921FB54442D19, !dbg !43
  %221 = fptrunc double %220 to float, !dbg !43
  %222 = fneg float %221, !dbg !43
  %.not2526.i27 = icmp slt i32 %214, 0, !dbg !43
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %222, float %221, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !43

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !43
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !43
  %223 = add i32 %i.i.1.i30, 1, !dbg !43
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not28.i32 = icmp eq i32 %224, 0, !dbg !43
  %225 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !43
  %226 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !43
  %.011.i33 = select i1 %.not28.i32, float %226, float %225, !dbg !43
  %227 = and i32 %i.i.1.i30, 1, !dbg !43
  %.not29.not.i = icmp eq i32 %227, 0, !dbg !43
  %228 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !43
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not30.i34 = icmp eq i32 %229, 0, !dbg !43
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %228, float 0.000000e+00) #4, !dbg !43
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %228, float 0.000000e+00) #4, !dbg !43
  %.012.i35 = select i1 %.not30.i34, float %231, float %230, !dbg !43
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !43

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not31.i49 = icmp eq i32 %232, 0, !dbg !43
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !43
  %234 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !43
  %.013.i50 = select i1 %.not31.i49, float %234, float %233, !dbg !43
  br label %__internal_fmad.exit2.i.i.i36, !dbg !43

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %235 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !43
  %236 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !43
  %237 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !43
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not32.i37 = icmp eq i32 %238, 0, !dbg !43
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %.011.i33, float %236) #4, !dbg !43
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %.011.i33, float %236) #4, !dbg !43
  %.010.i38 = select i1 %.not32.i37, float %240, float %239, !dbg !43
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not33.i39 = icmp eq i32 %241, 0, !dbg !43
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %235) #4, !dbg !43
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %235) #4, !dbg !43
  %.09.i40 = select i1 %.not33.i39, float %243, float %242, !dbg !43
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not34.i41 = icmp eq i32 %244, 0, !dbg !43
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %228) #4, !dbg !43
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %228) #4, !dbg !43
  %.05.i42 = select i1 %.not34.i41, float %246, float %245, !dbg !43
  %247 = and i32 %223, 2, !dbg !43
  %.not35.i43 = icmp eq i32 %247, 0, !dbg !43
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !43

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not36.i45 = icmp eq i32 %248, 0, !dbg !43
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !43
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !43
  %.0.i46 = select i1 %.not36.i45, float %250, float %249, !dbg !43
  br label %__nv_cosf.exit, !dbg !43

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !43
  %251 = icmp slt i32 %11, %18, !dbg !45
  %252 = icmp slt i32 %11, %5, !dbg !46
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !43
  %253 = select i1 %251, float %z.i.i.0.i, float %z.i.i.0.i47, !dbg !47
  %254 = sext i32 %11 to i64, !dbg !48
  %255 = getelementptr float, ptr addrspace(1) %1, i64 %254, !dbg !48
  %256 = bitcast float %253 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %256, ptr addrspace(1) %255, i1 %252) #4, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py", directory: "/opt/inductor_cache/ji")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 19, scope: !7)
!15 = !DILocation(line: 44, column: 16, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime")
!18 = !DILocation(line: 28, column: 50, scope: !7)
!19 = !DILocation(line: 46, column: 47, scope: !16, inlinedAt: !18)
!20 = !DILocation(line: 47, column: 25, scope: !16, inlinedAt: !18)
!21 = !DILocation(line: 47, column: 47, scope: !16, inlinedAt: !18)
!22 = !DILocation(line: 32, column: 18, scope: !7)
!23 = !DILocation(line: 34, column: 20, scope: !7)
!24 = !DILocation(line: 36, column: 20, scope: !7)
!25 = !DILocation(line: 37, column: 42, scope: !7)
!26 = !DILocation(line: 38, column: 21, scope: !7)
!27 = !DILocation(line: 39, column: 20, scope: !7)
!28 = !DILocation(line: 40, column: 24, scope: !7)
!29 = !DILocation(line: 41, column: 20, scope: !7)
!30 = !DILocation(line: 43, column: 21, scope: !7)
!31 = !DILocation(line: 44, column: 20, scope: !7)
!32 = !DILocation(line: 45, column: 24, scope: !7)
!33 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.count", i32 1}
!36 = !DILocation(line: 51, column: 18, scope: !7)
!37 = !DILocation(line: 52, column: 21, scope: !7)
!38 = !DILocation(line: 53, column: 20, scope: !7)
!39 = !DILocation(line: 54, column: 20, scope: !7)
!40 = !DILocation(line: 55, column: 24, scope: !7)
!41 = !DILocation(line: 56, column: 20, scope: !7)
!42 = !DILocation(line: 57, column: 20, scope: !7)
!43 = !DILocation(line: 58, column: 24, scope: !7)
!44 = distinct !{!44, !35}
!45 = !DILocation(line: 29, column: 18, scope: !7)
!46 = !DILocation(line: 21, column: 21, scope: !7)
!47 = !DILocation(line: 0, scope: !7)
!48 = !DILocation(line: 62, column: 25, scope: !7)
!49 = !DILocation(line: 62, column: 37, scope: !7)
!50 = !DILocation(line: 62, column: 4, scope: !7)
