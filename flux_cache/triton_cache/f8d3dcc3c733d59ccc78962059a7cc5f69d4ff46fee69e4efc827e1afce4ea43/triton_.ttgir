#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0), %arg2: i32 loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0), %arg3: i32 loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0), %arg4: i32 loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0), %arg5: i32 loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e+03 : f32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %false = arith.constant false loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<-9.21034049> : tensor<128xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg5 : i32 -> tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<128xi32, #blocked> loc(#loc6)
    %7 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc7)
    %8 = tt.load %7 : !tt.ptr<f32> loc(#loc8)
    %9 = arith.divsi %arg2, %c2_i32 : i32 loc(#loc46)
    %10 = arith.remsi %arg2, %c2_i32 : i32 loc(#loc47)
    %11 = arith.cmpi ne, %10, %c0_i32 : i32 loc(#loc48)
    %12 = arith.subi %9, %c1_i32 : i32 loc(#loc49)
    %13 = arith.select %11, %12, %9 : i32 loc(#loc50)
    %14 = arith.cmpi slt, %arg2, %c0_i32 : i32 loc(#loc51)
    %15 = arith.cmpi ne, %14, %false : i1 loc(#loc52)
    %16 = arith.select %15, %13, %9 : i32 loc(#loc53)
    %17 = tt.splat %16 : i32 -> tensor<128xi32, #blocked> loc(#loc18)
    %18 = arith.cmpi slt, %4, %17 : tensor<128xi32, #blocked> loc(#loc18)
    %19 = arith.mulf %8, %cst : f32 loc(#loc19)
    %20 = tt.splat %19 : f32 -> tensor<128xf32, #blocked> loc(#loc19)
    %21 = arith.sitofp %4 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc20)
    %22 = arith.mulf %21, %cst_1 : tensor<128xf32, #blocked> loc(#loc21)
    %23 = arith.subi %16, %arg3 : i32 loc(#loc22)
    %24 = arith.sitofp %23 : i32 to f32 loc(#loc23)
    %25 = tt.splat %24 : f32 -> tensor<128xf32, #blocked> loc(#loc23)
    %26 = arith.divf %22, %25 : tensor<128xf32, #blocked> loc(#loc24)
    %27 = math.exp %26 : tensor<128xf32, #blocked> loc(#loc25)
    %28 = arith.mulf %20, %27 : tensor<128xf32, #blocked> loc(#loc26)
    %29 = arith.sitofp %arg4 : i32 to f32 loc(#loc27)
    %30 = tt.splat %29 : f32 -> tensor<128xf32, #blocked> loc(#loc27)
    %31 = arith.mulf %28, %30 : tensor<128xf32, #blocked> loc(#loc28)
    %32 = math.sin %31 : tensor<128xf32, #blocked> loc(#loc29)
    %33 = arith.cmpi sge, %4, %17 : tensor<128xi32, #blocked> loc(#loc30)
    %34 = arith.muli %16, %c-1_i32 : i32 loc(#loc31)
    %35 = tt.splat %34 : i32 -> tensor<128xi32, #blocked> loc(#loc32)
    %36 = arith.addi %4, %35 : tensor<128xi32, #blocked> loc(#loc32)
    %37 = arith.sitofp %36 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc33)
    %38 = arith.mulf %37, %cst_1 : tensor<128xf32, #blocked> loc(#loc34)
    %39 = arith.divf %38, %25 : tensor<128xf32, #blocked> loc(#loc35)
    %40 = math.exp %39 : tensor<128xf32, #blocked> loc(#loc36)
    %41 = arith.mulf %20, %40 : tensor<128xf32, #blocked> loc(#loc37)
    %42 = arith.mulf %41, %30 : tensor<128xf32, #blocked> loc(#loc38)
    %43 = math.cos %42 : tensor<128xf32, #blocked> loc(#loc39)
    %44 = arith.select %33, %43, %cst_0 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc40)
    %45 = arith.select %18, %32, %44 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc54)
    %46 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc43)
    %47 = tt.addptr %46, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc43)
    tt.store %47, %45, %6 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":19:28)
#loc3 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":19:33)
#loc4 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":20:36)
#loc5 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":20:23)
#loc6 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":21:21)
#loc7 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":23:30)
#loc8 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":23:19)
#loc9 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":44:16)
#loc10 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":28:50)
#loc11 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":45:20)
#loc12 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":46:34)
#loc13 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":46:44)
#loc14 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":46:47)
#loc15 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":47:25)
#loc16 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":47:32)
#loc17 = loc("/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":47:47)
#loc18 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":29:18)
#loc19 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":32:18)
#loc20 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":34:20)
#loc21 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":36:20)
#loc22 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":37:42)
#loc23 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":38:21)
#loc24 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":39:20)
#loc25 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":40:24)
#loc26 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":41:20)
#loc27 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":43:21)
#loc28 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":44:20)
#loc29 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":45:24)
#loc30 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":48:20)
#loc31 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":51:24)
#loc32 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":51:18)
#loc33 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":52:21)
#loc34 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":53:20)
#loc35 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":54:20)
#loc36 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":55:24)
#loc37 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":56:20)
#loc38 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":57:20)
#loc39 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":58:24)
#loc40 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":60:35)
#loc41 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":61:34)
#loc42 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":47:34)
#loc43 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":62:25)
#loc44 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":62:37)
#loc45 = loc("/opt/inductor_cache/ji/cjidaxru2mtihb4rhx7pv6kimo27y7dyzhdzq6hxcikfif7diwsj.py":62:4)
#loc46 = loc(callsite(#loc9 at #loc10))
#loc47 = loc(callsite(#loc11 at #loc10))
#loc48 = loc(callsite(#loc12 at #loc10))
#loc49 = loc(callsite(#loc13 at #loc10))
#loc50 = loc(callsite(#loc14 at #loc10))
#loc51 = loc(callsite(#loc15 at #loc10))
#loc52 = loc(callsite(#loc16 at #loc10))
#loc53 = loc(callsite(#loc17 at #loc10))
#loc54 = loc(fused[#loc41, #loc42])
