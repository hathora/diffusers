; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = mul i32 %4, 3072, !dbg !10
  %7 = icmp eq i32 %6, 0, !dbg !11
  br i1 %7, label %common.ret, label %8, !dbg !11

common.ret:                                       ; preds = %5, %186
  ret void, !dbg !12

8:                                                ; preds = %5
  %9 = mul i32 %3, 3072, !dbg !13
  %10 = sext i32 %9 to i64, !dbg !14
  %11 = getelementptr i16, ptr addrspace(1) %0, i64 %10, !dbg !14
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %13 = add i32 %4, 63, !dbg !16
  %14 = sdiv i32 %13, 64, !dbg !17
  %.frozen = freeze i32 %12
  %15 = sdiv i32 %.frozen, 384, !dbg !18
  %16 = shl nsw i32 %15, 3, !dbg !19
  %17 = sub nsw i32 %14, %16, !dbg !20
  %18 = tail call i32 @llvm.smin.i32(i32 %17, i32 8), !dbg !21
  %19 = srem i32 %12, %18, !dbg !22
  %20 = add nsw i32 %16, %19, !dbg !23
  %21 = mul i32 %15, 384
  %.decomposed = sub i32 %.frozen, %21
  %22 = sdiv i32 %.decomposed, %18, !dbg !24
  %23 = shl i32 %20, 6, !dbg !25
  %24 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !26
  %25 = lshr i32 %24, 5, !dbg !26
  %26 = lshr i32 %24, 1, !dbg !26
  %27 = and i32 %26, 63, !dbg !26
  %28 = lshr i32 %24, 3, !dbg !26
  %29 = and i32 %28, 15, !dbg !26
  %30 = shl i32 %24, 3, !dbg !26
  %31 = and i32 %30, 8, !dbg !26
  %32 = or disjoint i32 %23, %27, !dbg !27
  %33 = or disjoint i32 %23, %29, !dbg !26
  %34 = shl nsw i32 %22, 6, !dbg !28
  %35 = or disjoint i32 %34, %27, !dbg !29
  %36 = srem i32 %32, %4, !dbg !30
  %37 = srem i32 %35, 3072, !dbg !31
  %38 = mul i32 %36, 3072, !dbg !32
  %39 = or disjoint i32 %38, %31, !dbg !33
  %40 = sext i32 %39 to i64, !dbg !34
  %41 = getelementptr i16, ptr addrspace(1) %11, i64 %40, !dbg !34
  %42 = mul nsw i32 %37, 3072, !dbg !35
  %43 = or disjoint i32 %42, %31, !dbg !36
  %44 = sext i32 %43 to i64, !dbg !37
  %45 = getelementptr i16, ptr addrspace(1) %1, i64 %44, !dbg !37
  %46 = shl nuw nsw i32 %27, 4, !dbg !38
  %47 = xor i32 %30, %24, !dbg !38
  %48 = and i32 %47, 8, !dbg !38
  %49 = or disjoint i32 %46, %48, !dbg !38
  %50 = zext nneg i32 %49 to i64, !dbg !38
  %51 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %50, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %51, ptr addrspace(1) %41, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %52 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %50, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %52, ptr addrspace(1) %45, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %53 = and i32 %25, 134217724
  br label %54, !dbg !40

54:                                               ; preds = %8, %54
  %55 = phi i32 [ -1, %8 ], [ %93, %54 ]
  %56 = phi i32 [ 0, %8 ], [ %181, %54 ]
  %.pn3266 = phi ptr addrspace(1) [ %45, %8 ], [ %178, %54 ]
  %.pn1665 = phi ptr addrspace(1) [ %41, %8 ], [ %177, %54 ]
  %57 = phi float [ 0.000000e+00, %8 ], [ %145, %54 ]
  %58 = phi float [ 0.000000e+00, %8 ], [ %146, %54 ]
  %59 = phi float [ 0.000000e+00, %8 ], [ %147, %54 ]
  %60 = phi float [ 0.000000e+00, %8 ], [ %148, %54 ]
  %61 = phi float [ 0.000000e+00, %8 ], [ %149, %54 ]
  %62 = phi float [ 0.000000e+00, %8 ], [ %150, %54 ]
  %63 = phi float [ 0.000000e+00, %8 ], [ %151, %54 ]
  %64 = phi float [ 0.000000e+00, %8 ], [ %152, %54 ]
  %65 = phi float [ 0.000000e+00, %8 ], [ %153, %54 ]
  %66 = phi float [ 0.000000e+00, %8 ], [ %154, %54 ]
  %67 = phi float [ 0.000000e+00, %8 ], [ %155, %54 ]
  %68 = phi float [ 0.000000e+00, %8 ], [ %156, %54 ]
  %69 = phi float [ 0.000000e+00, %8 ], [ %157, %54 ]
  %70 = phi float [ 0.000000e+00, %8 ], [ %158, %54 ]
  %71 = phi float [ 0.000000e+00, %8 ], [ %159, %54 ]
  %72 = phi float [ 0.000000e+00, %8 ], [ %160, %54 ]
  %73 = phi float [ 0.000000e+00, %8 ], [ %161, %54 ]
  %74 = phi float [ 0.000000e+00, %8 ], [ %162, %54 ]
  %75 = phi float [ 0.000000e+00, %8 ], [ %163, %54 ]
  %76 = phi float [ 0.000000e+00, %8 ], [ %164, %54 ]
  %77 = phi float [ 0.000000e+00, %8 ], [ %165, %54 ]
  %78 = phi float [ 0.000000e+00, %8 ], [ %166, %54 ]
  %79 = phi float [ 0.000000e+00, %8 ], [ %167, %54 ]
  %80 = phi float [ 0.000000e+00, %8 ], [ %168, %54 ]
  %81 = phi float [ 0.000000e+00, %8 ], [ %169, %54 ]
  %82 = phi float [ 0.000000e+00, %8 ], [ %170, %54 ]
  %83 = phi float [ 0.000000e+00, %8 ], [ %171, %54 ]
  %84 = phi float [ 0.000000e+00, %8 ], [ %172, %54 ]
  %85 = phi float [ 0.000000e+00, %8 ], [ %173, %54 ]
  %86 = phi float [ 0.000000e+00, %8 ], [ %174, %54 ]
  %87 = phi float [ 0.000000e+00, %8 ], [ %175, %54 ]
  %88 = phi float [ 0.000000e+00, %8 ], [ %176, %54 ]
  %89 = phi i32 [ 0, %8 ], [ %185, %54 ]
  %90 = icmp ult i32 %89, 3056, !dbg !40
  %91 = add i32 %55, 1, !dbg !40
  %92 = icmp slt i32 %91, 2, !dbg !40
  %93 = select i1 %92, i32 %91, i32 0, !dbg !40
  %94 = shl i32 %93, 10, !dbg !38
  %95 = sext i32 %94 to i64, !dbg !38
  %96 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %95, !dbg !38
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %97 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %95, !dbg !39
  %98 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %53, i32 0, i32 31), !dbg !41
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !41
  %99 = shl i32 %98, 5, !dbg !41
  %100 = and i32 %99, 96, !dbg !41
  %101 = zext nneg i32 %100 to i64, !dbg !41
  %102 = ptrtoint ptr addrspace(3) %96 to i64, !dbg !41
  %103 = lshr exact i64 %102, 4, !dbg !41
  %104 = and i64 %103, 16383, !dbg !41
  %105 = or disjoint i64 %104, -4611685949699522560, !dbg !41
  %106 = add nuw nsw i64 %105, %101, !dbg !41
  %107 = ptrtoint ptr addrspace(3) %97 to i64, !dbg !41
  %108 = lshr exact i64 %107, 4, !dbg !41
  %109 = and i64 %108, 16383, !dbg !41
  %110 = or disjoint i64 %109, -4611685949699522560, !dbg !41
  %111 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %57, float %58, float %59, float %60, float %61, float %62, float %63, float %64, float %65, float %66, float %67, float %68, float %69, float %70, float %71, float %72, float %73, float %74, float %75, float %76, float %77, float %78, float %79, float %80, float %81, float %82, float %83, float %84, float %85, float %86, float %87, float %88, i64 %106, i64 %110) #3, !dbg !41
  %112 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 0, !dbg !41
  %113 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 1, !dbg !41
  %114 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 2, !dbg !41
  %115 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 3, !dbg !41
  %116 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 4, !dbg !41
  %117 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 5, !dbg !41
  %118 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 6, !dbg !41
  %119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 7, !dbg !41
  %120 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 8, !dbg !41
  %121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 9, !dbg !41
  %122 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 10, !dbg !41
  %123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 11, !dbg !41
  %124 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 12, !dbg !41
  %125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 13, !dbg !41
  %126 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 14, !dbg !41
  %127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 15, !dbg !41
  %128 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 16, !dbg !41
  %129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 17, !dbg !41
  %130 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 18, !dbg !41
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 19, !dbg !41
  %132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 20, !dbg !41
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 21, !dbg !41
  %134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 22, !dbg !41
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 23, !dbg !41
  %136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 24, !dbg !41
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 25, !dbg !41
  %138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 26, !dbg !41
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 27, !dbg !41
  %140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 28, !dbg !41
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 29, !dbg !41
  %142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 30, !dbg !41
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, 31, !dbg !41
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !41
  %144 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %112, float %113, float %114, float %115, float %116, float %117, float %118, float %119, float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, ptr addrspace(3) %96, i32 16, i32 1, i32 0, i32 0, ptr addrspace(3) %97, i32 1, i32 16, i32 0, i32 0) #3, !dbg !41
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 0, !dbg !41
  %146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 1, !dbg !41
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 2, !dbg !41
  %148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 3, !dbg !41
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 4, !dbg !41
  %150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 5, !dbg !41
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 6, !dbg !41
  %152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 7, !dbg !41
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 8, !dbg !41
  %154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 9, !dbg !41
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 10, !dbg !41
  %156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 11, !dbg !41
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 12, !dbg !41
  %158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 13, !dbg !41
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 14, !dbg !41
  %160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 15, !dbg !41
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 16, !dbg !41
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 17, !dbg !41
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 18, !dbg !41
  %164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 19, !dbg !41
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 20, !dbg !41
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 21, !dbg !41
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 22, !dbg !41
  %168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 23, !dbg !41
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 24, !dbg !41
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 25, !dbg !41
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 26, !dbg !41
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 27, !dbg !41
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 28, !dbg !41
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 29, !dbg !41
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 30, !dbg !41
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %144, 31, !dbg !41
  %177 = getelementptr i8, ptr addrspace(1) %.pn1665, i64 32, !dbg !42
  %178 = getelementptr i8, ptr addrspace(1) %.pn3266, i64 32, !dbg !43
  %179 = add i32 %56, 1, !dbg !40
  %180 = icmp slt i32 %179, 2, !dbg !40
  %181 = select i1 %180, i32 %179, i32 0, !dbg !40
  %182 = shl i32 %181, 10, !dbg !38
  %183 = sext i32 %182 to i64, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %gep = getelementptr i16, ptr addrspace(3) %51, i64 %183, !dbg !38
  %184 = select i1 %90, i32 16, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %177, i32 %184, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %gep64 = getelementptr i16, ptr addrspace(3) %52, i64 %183, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep64, ptr addrspace(1) %178, i32 %184, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %185 = add nuw nsw i32 %89, 16, !dbg !40
  br i1 %90, label %54, label %186, !dbg !40

186:                                              ; preds = %54
  %187 = and i32 %30, 56, !dbg !26
  %188 = or disjoint i32 %33, 16, !dbg !27
  %189 = or disjoint i32 %33, 32, !dbg !27
  %190 = or disjoint i32 %33, 48, !dbg !27
  %191 = or disjoint i32 %34, %187, !dbg !29
  %192 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, float %163, float %164, float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176) #3, !dbg !40
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %193 = icmp slt i32 %33, %4, !dbg !44
  %194 = icmp slt i32 %188, %4, !dbg !44
  %195 = icmp slt i32 %189, %4, !dbg !44
  %196 = icmp slt i32 %190, %4, !dbg !44
  %197 = icmp slt i32 %191, 3072, !dbg !45
  %198 = and i1 %197, %193, !dbg !46
  %199 = and i1 %194, %197, !dbg !46
  %200 = and i1 %195, %197, !dbg !46
  %201 = and i1 %196, %197, !dbg !46
  %202 = mul i32 %33, 3072, !dbg !47
  %203 = mul i32 %188, 3072, !dbg !47
  %204 = mul i32 %189, 3072, !dbg !47
  %205 = mul i32 %190, 3072, !dbg !47
  %206 = add i32 %202, %191, !dbg !48
  %207 = add i32 %191, %203, !dbg !48
  %208 = add i32 %191, %204, !dbg !48
  %209 = add i32 %191, %205, !dbg !48
  %210 = sext i32 %206 to i64, !dbg !49
  %211 = getelementptr i16, ptr addrspace(1) %2, i64 %210, !dbg !49
  %212 = sext i32 %207 to i64, !dbg !49
  %213 = getelementptr i16, ptr addrspace(1) %2, i64 %212, !dbg !49
  %214 = sext i32 %208 to i64, !dbg !49
  %215 = getelementptr i16, ptr addrspace(1) %2, i64 %214, !dbg !49
  %216 = sext i32 %209 to i64, !dbg !49
  %217 = getelementptr i16, ptr addrspace(1) %2, i64 %216, !dbg !49
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 0, !dbg !50
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 1, !dbg !50
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 2, !dbg !50
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 3, !dbg !50
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 4, !dbg !50
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 5, !dbg !50
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 6, !dbg !50
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 7, !dbg !50
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 8, !dbg !50
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 9, !dbg !50
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 10, !dbg !50
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 11, !dbg !50
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 12, !dbg !50
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 13, !dbg !50
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 14, !dbg !50
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 15, !dbg !50
  %234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 16, !dbg !50
  %235 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 17, !dbg !50
  %236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 18, !dbg !50
  %237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 19, !dbg !50
  %238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 20, !dbg !50
  %239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 21, !dbg !50
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 22, !dbg !50
  %241 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 23, !dbg !50
  %242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 24, !dbg !50
  %243 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 25, !dbg !50
  %244 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 26, !dbg !50
  %245 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 27, !dbg !50
  %246 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 28, !dbg !50
  %247 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 29, !dbg !50
  %248 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 30, !dbg !50
  %249 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %192, 31, !dbg !50
  %250 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %218) #3, !dbg !50
  %251 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %219) #3, !dbg !50
  %252 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %220) #3, !dbg !50
  %253 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %221) #3, !dbg !50
  %254 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %222) #3, !dbg !50
  %255 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %223) #3, !dbg !50
  %256 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %224) #3, !dbg !50
  %257 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %225) #3, !dbg !50
  %258 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %226) #3, !dbg !50
  %259 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %227) #3, !dbg !50
  %260 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %228) #3, !dbg !50
  %261 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %229) #3, !dbg !50
  %262 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %230) #3, !dbg !50
  %263 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %231) #3, !dbg !50
  %264 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %232) #3, !dbg !50
  %265 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %233) #3, !dbg !50
  %266 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %234) #3, !dbg !50
  %267 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %235) #3, !dbg !50
  %268 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %236) #3, !dbg !50
  %269 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %237) #3, !dbg !50
  %270 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %238) #3, !dbg !50
  %271 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %239) #3, !dbg !50
  %272 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %240) #3, !dbg !50
  %273 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %241) #3, !dbg !50
  %274 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %242) #3, !dbg !50
  %275 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %243) #3, !dbg !50
  %276 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %244) #3, !dbg !50
  %277 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %245) #3, !dbg !50
  %278 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %246) #3, !dbg !50
  %279 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %247) #3, !dbg !50
  %280 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %248) #3, !dbg !50
  %281 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %249) #3, !dbg !50
  %282 = and i32 %25, 3, !dbg !50
  %283 = and i32 %28, 3, !dbg !50
  %284 = and i32 %24, 15, !dbg !50
  %285 = shl nuw nsw i32 %28, 2, !dbg !50
  %286 = and i32 %285, 8, !dbg !50
  %287 = mul nuw nsw i32 %284, 72, !dbg !50
  %288 = add nuw nsw i32 %286, %287, !dbg !50
  %289 = mul nuw nsw i32 %282, 1152, !dbg !50
  %290 = add nuw nsw i32 %288, %289, !dbg !50
  %291 = insertelement <2 x i16> poison, i16 %250, i64 0, !dbg !50
  %292 = insertelement <2 x i16> %291, i16 %251, i64 1, !dbg !50
  %293 = bitcast <2 x i16> %292 to i32, !dbg !50
  %294 = insertelement <2 x i16> poison, i16 %252, i64 0, !dbg !50
  %295 = insertelement <2 x i16> %294, i16 %253, i64 1, !dbg !50
  %296 = bitcast <2 x i16> %295 to i32, !dbg !50
  %297 = insertelement <2 x i16> poison, i16 %254, i64 0, !dbg !50
  %298 = insertelement <2 x i16> %297, i16 %255, i64 1, !dbg !50
  %299 = bitcast <2 x i16> %298 to i32, !dbg !50
  %300 = insertelement <2 x i16> poison, i16 %256, i64 0, !dbg !50
  %301 = insertelement <2 x i16> %300, i16 %257, i64 1, !dbg !50
  %302 = bitcast <2 x i16> %301 to i32, !dbg !50
  %303 = zext nneg i32 %290 to i64, !dbg !50
  %304 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %303, !dbg !50
  %305 = ptrtoint ptr addrspace(3) %304 to i64, !dbg !50
  %306 = trunc i64 %305 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %306, i32 %293, i32 %296, i32 %299, i32 %302) #3, !dbg !50
  %307 = insertelement <2 x i16> poison, i16 %258, i64 0, !dbg !50
  %308 = insertelement <2 x i16> %307, i16 %259, i64 1, !dbg !50
  %309 = bitcast <2 x i16> %308 to i32, !dbg !50
  %310 = insertelement <2 x i16> poison, i16 %260, i64 0, !dbg !50
  %311 = insertelement <2 x i16> %310, i16 %261, i64 1, !dbg !50
  %312 = bitcast <2 x i16> %311 to i32, !dbg !50
  %313 = insertelement <2 x i16> poison, i16 %262, i64 0, !dbg !50
  %314 = insertelement <2 x i16> %313, i16 %263, i64 1, !dbg !50
  %315 = bitcast <2 x i16> %314 to i32, !dbg !50
  %316 = insertelement <2 x i16> poison, i16 %264, i64 0, !dbg !50
  %317 = insertelement <2 x i16> %316, i16 %265, i64 1, !dbg !50
  %318 = bitcast <2 x i16> %317 to i32, !dbg !50
  %319 = getelementptr i8, ptr addrspace(3) %304, i64 32, !dbg !50
  %320 = ptrtoint ptr addrspace(3) %319 to i64, !dbg !50
  %321 = trunc i64 %320 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %321, i32 %309, i32 %312, i32 %315, i32 %318) #3, !dbg !50
  %322 = insertelement <2 x i16> poison, i16 %266, i64 0, !dbg !50
  %323 = insertelement <2 x i16> %322, i16 %267, i64 1, !dbg !50
  %324 = bitcast <2 x i16> %323 to i32, !dbg !50
  %325 = insertelement <2 x i16> poison, i16 %268, i64 0, !dbg !50
  %326 = insertelement <2 x i16> %325, i16 %269, i64 1, !dbg !50
  %327 = bitcast <2 x i16> %326 to i32, !dbg !50
  %328 = insertelement <2 x i16> poison, i16 %270, i64 0, !dbg !50
  %329 = insertelement <2 x i16> %328, i16 %271, i64 1, !dbg !50
  %330 = bitcast <2 x i16> %329 to i32, !dbg !50
  %331 = insertelement <2 x i16> poison, i16 %272, i64 0, !dbg !50
  %332 = insertelement <2 x i16> %331, i16 %273, i64 1, !dbg !50
  %333 = bitcast <2 x i16> %332 to i32, !dbg !50
  %334 = getelementptr i8, ptr addrspace(3) %304, i64 64, !dbg !50
  %335 = ptrtoint ptr addrspace(3) %334 to i64, !dbg !50
  %336 = trunc i64 %335 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %336, i32 %324, i32 %327, i32 %330, i32 %333) #3, !dbg !50
  %337 = insertelement <2 x i16> poison, i16 %274, i64 0, !dbg !50
  %338 = insertelement <2 x i16> %337, i16 %275, i64 1, !dbg !50
  %339 = bitcast <2 x i16> %338 to i32, !dbg !50
  %340 = insertelement <2 x i16> poison, i16 %276, i64 0, !dbg !50
  %341 = insertelement <2 x i16> %340, i16 %277, i64 1, !dbg !50
  %342 = bitcast <2 x i16> %341 to i32, !dbg !50
  %343 = insertelement <2 x i16> poison, i16 %278, i64 0, !dbg !50
  %344 = insertelement <2 x i16> %343, i16 %279, i64 1, !dbg !50
  %345 = bitcast <2 x i16> %344 to i32, !dbg !50
  %346 = insertelement <2 x i16> poison, i16 %280, i64 0, !dbg !50
  %347 = insertelement <2 x i16> %346, i16 %281, i64 1, !dbg !50
  %348 = bitcast <2 x i16> %347 to i32, !dbg !50
  %349 = getelementptr i8, ptr addrspace(3) %304, i64 96, !dbg !50
  %350 = ptrtoint ptr addrspace(3) %349 to i64, !dbg !50
  %351 = trunc i64 %350 to i32, !dbg !50
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %351, i32 %339, i32 %342, i32 %345, i32 %348) #3, !dbg !50
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %352 = shl nuw nsw i32 %282, 2, !dbg !50
  %353 = or disjoint i32 %352, %283, !dbg !50
  %354 = mul nuw nsw i32 %353, 72, !dbg !50
  %355 = add nuw nsw i32 %354, %187, !dbg !50
  %356 = zext nneg i32 %355 to i64, !dbg !50
  %357 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %356, !dbg !50
  %358 = getelementptr i8, ptr addrspace(3) %357, i64 2304, !dbg !50
  %359 = load <4 x i32>, ptr addrspace(3) %358, align 16, !dbg !50
  %360 = getelementptr i8, ptr addrspace(3) %357, i64 4608, !dbg !50
  %361 = load <4 x i32>, ptr addrspace(3) %360, align 16, !dbg !50
  %362 = getelementptr i8, ptr addrspace(3) %357, i64 6912, !dbg !50
  %363 = load <4 x i32>, ptr addrspace(3) %362, align 16, !dbg !50
  %.extract = load i32, ptr addrspace(3) %357, align 16, !dbg !50
  %364 = getelementptr inbounds i8, ptr addrspace(3) %357, i64 4, !dbg !50
  %.extract34 = load i32, ptr addrspace(3) %364, align 4, !dbg !50
  %365 = getelementptr inbounds i8, ptr addrspace(3) %357, i64 8, !dbg !50
  %.extract36 = load i32, ptr addrspace(3) %365, align 8, !dbg !50
  %366 = getelementptr inbounds i8, ptr addrspace(3) %357, i64 12, !dbg !50
  %.extract38 = load i32, ptr addrspace(3) %366, align 4, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract34, i32 %.extract36, i32 %.extract38, ptr addrspace(1) %211, i1 %198) #3, !dbg !50
  %.extract40 = extractelement <4 x i32> %359, i64 0, !dbg !50
  %.extract42 = extractelement <4 x i32> %359, i64 1, !dbg !50
  %.extract44 = extractelement <4 x i32> %359, i64 2, !dbg !50
  %.extract46 = extractelement <4 x i32> %359, i64 3, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract40, i32 %.extract42, i32 %.extract44, i32 %.extract46, ptr addrspace(1) %213, i1 %199) #3, !dbg !50
  %.extract48 = extractelement <4 x i32> %361, i64 0, !dbg !50
  %.extract50 = extractelement <4 x i32> %361, i64 1, !dbg !50
  %.extract52 = extractelement <4 x i32> %361, i64 2, !dbg !50
  %.extract54 = extractelement <4 x i32> %361, i64 3, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract48, i32 %.extract50, i32 %.extract52, i32 %.extract54, ptr addrspace(1) %215, i1 %200) #3, !dbg !50
  %.extract56 = extractelement <4 x i32> %363, i64 0, !dbg !50
  %.extract58 = extractelement <4 x i32> %363, i64 1, !dbg !50
  %.extract60 = extractelement <4 x i32> %363, i64 2, !dbg !50
  %.extract62 = extractelement <4 x i32> %363, i64 3, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract56, i32 %.extract58, i32 %.extract60, i32 %.extract62, ptr addrspace(1) %217, i1 %201) #3, !dbg !50
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c44g6iwmlqemjfdcmcvp2f34blmpzpovw5hxsjpqxk76cle64uad.py", directory: "/opt/inductor_cache/44")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 11, scope: !7)
!11 = !DILocation(line: 33, column: 16, scope: !7)
!12 = !DILocation(line: 0, scope: !7)
!13 = !DILocation(line: 27, column: 21, scope: !7)
!14 = !DILocation(line: 27, column: 16, scope: !7)
!15 = !DILocation(line: 42, column: 24, scope: !7)
!16 = !DILocation(line: 43, column: 28, scope: !7)
!17 = !DILocation(line: 43, column: 34, scope: !7)
!18 = !DILocation(line: 48, column: 22, scope: !7)
!19 = !DILocation(line: 49, column: 41, scope: !7)
!20 = !DILocation(line: 49, column: 30, scope: !7)
!21 = !DILocation(line: 49, column: 50, scope: !7)
!22 = !DILocation(line: 50, column: 40, scope: !7)
!23 = !DILocation(line: 50, column: 34, scope: !7)
!24 = !DILocation(line: 51, column: 30, scope: !7)
!25 = !DILocation(line: 53, column: 17, scope: !7)
!26 = !DILocation(line: 53, column: 40, scope: !7)
!27 = !DILocation(line: 53, column: 27, scope: !7)
!28 = !DILocation(line: 54, column: 17, scope: !7)
!29 = !DILocation(line: 54, column: 27, scope: !7)
!30 = !DILocation(line: 56, column: 52, scope: !7)
!31 = !DILocation(line: 60, column: 52, scope: !7)
!32 = !DILocation(line: 64, column: 28, scope: !7)
!33 = !DILocation(line: 64, column: 40, scope: !7)
!34 = !DILocation(line: 64, column: 13, scope: !7)
!35 = !DILocation(line: 65, column: 54, scope: !7)
!36 = !DILocation(line: 65, column: 39, scope: !7)
!37 = !DILocation(line: 65, column: 13, scope: !7)
!38 = !DILocation(line: 70, column: 24, scope: !7)
!39 = !DILocation(line: 71, column: 24, scope: !7)
!40 = !DILocation(line: 68, column: 25, scope: !7)
!41 = !DILocation(line: 77, column: 25, scope: !7)
!42 = !DILocation(line: 78, column: 13, scope: !7)
!43 = !DILocation(line: 79, column: 13, scope: !7)
!44 = !DILocation(line: 86, column: 20, scope: !7)
!45 = !DILocation(line: 86, column: 34, scope: !7)
!46 = !DILocation(line: 86, column: 26, scope: !7)
!47 = !DILocation(line: 89, column: 27, scope: !7)
!48 = !DILocation(line: 89, column: 22, scope: !7)
!49 = !DILocation(line: 90, column: 25, scope: !7)
!50 = !DILocation(line: 90, column: 67, scope: !7)
