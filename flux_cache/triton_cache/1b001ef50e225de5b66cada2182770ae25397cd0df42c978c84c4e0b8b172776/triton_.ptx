//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5,
	.param .u32 triton__param_6
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<126>;
	.reg .f32 	%f<164>;
	.reg .b64 	%rd<18>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u32 	%r10, [triton__param_5];
	ld.param.u64 	%rd4, [triton__param_3];
	ld.param.u64 	%rd3, [triton__param_2];
	ld.param.u64 	%rd2, [triton__param_1];
	ld.param.u64 	%rd1, [triton__param_0];
$L__tmp0:
	.loc	1 20 28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 20 33
	shl.b32 	%r21, %r11, 6;
	.loc	1 21 44
	mov.u32 	%r22, %tid.x;
	ld.param.u32 	%r23, [triton__param_4];
	bfe.u32 	%r24, %r22, 1, 6;
	.loc	1 21 23
	or.b32  	%r1, %r21, %r24;
	.loc	1 22 21
	setp.lt.s32 	%p5, %r1, %r10;
	.loc	1 23 33
	shl.b32 	%r25, %r22, 2;
	and.b32  	%r2, %r25, 4;
	.loc	1 32 58
	mul.lo.s32 	%r3, %r1, 3072;
	add.s32 	%r26, %r1, %r23;
	mul.lo.s32 	%r4, %r26, 3072;
	.loc	1 32 53
	or.b32  	%r27, %r4, %r2;
	.loc	1 32 34
	mul.wide.s32 	%rd6, %r27, 2;
	add.s64 	%rd5, %rd1, %rd6;
	mov.b32 	%r14, 0;
	.loc	1 32 64
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd5 + 0 ];
	@!%p5 mov.u32 %r12, %r14;
	@!%p5 mov.u32 %r13, %r14;
	// end inline asm
	cvt.u16.u32 	%rs1, %r12;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r12; }
	cvt.u16.u32 	%rs3, %r13;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r13; }
	.loc	1 32 123
	// begin inline asm
	cvt.f32.bf16 %r16, %rs1;
	// end inline asm
	mov.b32 	%f36, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs2;
	// end inline asm
	mov.b32 	%f37, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs3;
	// end inline asm
	mov.b32 	%f38, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs4;
	// end inline asm
	mov.b32 	%f39, %r19;
	.loc	1 40 64
	selp.f32 	%f152, 0f3F800000, 0f00000000, %p5;
	.loc	1 38 60
	selp.f32 	%f163, %f39, 0f00000000, %p5;
	selp.f32 	%f162, %f38, 0f00000000, %p5;
	selp.f32 	%f161, %f37, 0f00000000, %p5;
	selp.f32 	%f160, %f36, 0f00000000, %p5;
	.loc	1 28 36
	add.s32 	%r28, %r23, %r21;
	add.s32 	%r29, %r28, %r24;
	mul.lo.s32 	%r30, %r29, 3072;
	or.b32  	%r31, %r30, %r2;
	or.b32  	%r5, %r31, 8;
	mov.f32 	%f156, 0f00000000;
	mov.u32 	%r124, %r14;
	mov.f32 	%f153, %f152;
	mov.f32 	%f154, %f152;
	mov.f32 	%f155, %f152;
	mov.f32 	%f157, %f156;
	mov.f32 	%f158, %f156;
	mov.f32 	%f159, %f156;
$L__BB0_1:
	.loc	1 32 34
	add.s32 	%r52, %r5, %r124;
	mul.wide.s32 	%rd8, %r52, 2;
	add.s64 	%rd7, %rd1, %rd8;
	.loc	1 32 64
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r32, %r33 }, [ %rd7 + 0 ];
	@!%p5 mov.u32 %r32, %r14;
	@!%p5 mov.u32 %r33, %r14;
	// end inline asm
	cvt.u16.u32 	%rs5, %r32;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r32; }
	cvt.u16.u32 	%rs7, %r33;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r33; }
	.loc	1 32 123
	// begin inline asm
	cvt.f32.bf16 %r36, %rs5;
	// end inline asm
	mov.b32 	%f40, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs6;
	// end inline asm
	mov.b32 	%f41, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs7;
	// end inline asm
	mov.b32 	%f42, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs8;
	// end inline asm
	mov.b32 	%f43, %r39;
$L__tmp1:
	.loc	2 148 30
	add.f32 	%f44, %f152, 0f3F800000;
	add.f32 	%f45, %f153, 0f3F800000;
	add.f32 	%f46, %f154, 0f3F800000;
	add.f32 	%f47, %f155, 0f3F800000;
	.loc	2 147 24
	sub.f32 	%f48, %f43, %f163;
	sub.f32 	%f49, %f42, %f162;
	sub.f32 	%f50, %f41, %f161;
	sub.f32 	%f51, %f40, %f160;
	.loc	2 149 34
	mov.b32 	%r41, %f51;
	mov.b32 	%r42, %f44;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f52, %r40;
	mov.b32 	%r44, %f50;
	mov.b32 	%r45, %f45;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f53, %r43;
	mov.b32 	%r47, %f49;
	mov.b32 	%r48, %f46;
	// begin inline asm
	div.full.f32 %r46, %r47, %r48;
	// end inline asm
	mov.b32 	%f54, %r46;
	mov.b32 	%r50, %f48;
	mov.b32 	%r51, %f47;
	// begin inline asm
	div.full.f32 %r49, %r50, %r51;
	// end inline asm
	mov.b32 	%f55, %r49;
	.loc	2 149 26
	add.f32 	%f56, %f160, %f52;
	add.f32 	%f57, %f161, %f53;
	add.f32 	%f58, %f162, %f54;
	add.f32 	%f59, %f163, %f55;
	.loc	2 150 39
	sub.f32 	%f60, %f43, %f59;
	sub.f32 	%f61, %f42, %f58;
	sub.f32 	%f62, %f41, %f57;
	sub.f32 	%f63, %f40, %f56;
	.loc	2 150 22
	fma.rn.f32 	%f64, %f51, %f63, %f156;
	fma.rn.f32 	%f65, %f50, %f62, %f157;
	fma.rn.f32 	%f66, %f49, %f61, %f158;
	fma.rn.f32 	%f67, %f48, %f60, %f159;
$L__tmp2:
	.loc	1 38 60
	selp.f32 	%f163, %f59, %f163, %p5;
	selp.f32 	%f162, %f58, %f162, %p5;
	selp.f32 	%f161, %f57, %f161, %p5;
	selp.f32 	%f160, %f56, %f160, %p5;
	.loc	1 39 56
	selp.f32 	%f159, %f67, %f159, %p5;
	selp.f32 	%f158, %f66, %f158, %p5;
	selp.f32 	%f157, %f65, %f157, %p5;
	selp.f32 	%f156, %f64, %f156, %p5;
	.loc	1 40 64
	selp.f32 	%f152, %f44, %f152, %p5;
	selp.f32 	%f153, %f45, %f153, %p5;
	selp.f32 	%f154, %f46, %f154, %p5;
	selp.f32 	%f155, %f47, %f155, %p5;
	.loc	1 28 36
	add.s32 	%r124, %r124, 8;
	setp.lt.u32 	%p11, %r124, 3064;
	@%p11 bra 	$L__BB0_1;
$L__tmp3:
	.loc	2 156 21
	sub.f32 	%f68, %f161, %f160;
	.loc	2 157 28
	add.f32 	%f69, %f152, %f153;
	.loc	2 158 39
	setp.eq.f32 	%p12, %f69, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r55, %f69;
	mov.b32 	%r54, %f153;
	// begin inline asm
	div.full.f32 %r53, %r54, %r55;
	// end inline asm
	mov.b32 	%f70, %r53;
	.loc	2 158 49
	selp.f32 	%f71, 0f00000000, %f70, %p12;
	.loc	2 160 17
	fma.rn.f32 	%f72, %f68, %f71, %f160;
	.loc	2 161 15
	add.f32 	%f73, %f156, %f157;
	.loc	2 161 30
	mul.f32 	%f74, %f68, %f68;
	.loc	2 161 38
	mul.f32 	%f75, %f74, %f152;
	.loc	2 161 22
	fma.rn.f32 	%f76, %f75, %f71, %f73;
	.loc	2 156 21
	sub.f32 	%f77, %f162, %f72;
	.loc	2 157 28
	add.f32 	%f78, %f154, %f69;
	.loc	2 158 39
	setp.eq.f32 	%p13, %f78, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r58, %f78;
	mov.b32 	%r57, %f154;
	// begin inline asm
	div.full.f32 %r56, %r57, %r58;
	// end inline asm
	mov.b32 	%f79, %r56;
	.loc	2 158 49
	selp.f32 	%f80, 0f00000000, %f79, %p13;
	.loc	2 160 17
	fma.rn.f32 	%f81, %f80, %f77, %f72;
	.loc	2 161 15
	add.f32 	%f82, %f158, %f76;
	.loc	2 161 30
	mul.f32 	%f83, %f77, %f77;
	.loc	2 161 38
	mul.f32 	%f84, %f69, %f83;
	.loc	2 161 22
	fma.rn.f32 	%f85, %f80, %f84, %f82;
	.loc	2 156 21
	sub.f32 	%f86, %f163, %f81;
	.loc	2 157 28
	add.f32 	%f87, %f155, %f78;
	.loc	2 158 39
	setp.eq.f32 	%p14, %f87, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r61, %f87;
	mov.b32 	%r60, %f155;
	// begin inline asm
	div.full.f32 %r59, %r60, %r61;
	// end inline asm
	mov.b32 	%f88, %r59;
	.loc	2 158 49
	selp.f32 	%f89, 0f00000000, %f88, %p14;
	.loc	2 160 17
	fma.rn.f32 	%f90, %f89, %f86, %f81;
	.loc	2 161 15
	add.f32 	%f91, %f159, %f85;
	.loc	2 161 30
	mul.f32 	%f92, %f86, %f86;
	.loc	2 161 38
	mul.f32 	%f93, %f78, %f92;
	.loc	2 161 22
	fma.rn.f32 	%f94, %f89, %f93, %f91;
	.loc	2 168 46
	mov.b32 	%r69, %f90;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f95, %r70;
	mov.b32 	%r71, %f94;
	shfl.sync.bfly.b32	%r72, %r71, 1, 31, -1;
	mov.b32 	%f96, %r72;
	shfl.sync.bfly.b32	%r63, %r61, 1, 31, -1;
	mov.b32 	%f97, %r63;
	.loc	2 156 21
	sub.f32 	%f98, %f95, %f90;
	.loc	2 157 28
	add.f32 	%f99, %f87, %f97;
	.loc	2 158 39
	setp.eq.f32 	%p15, %f99, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r64, %f99;
	// begin inline asm
	div.full.f32 %r62, %r63, %r64;
	// end inline asm
	mov.b32 	%f100, %r62;
	.loc	2 158 49
	selp.f32 	%f101, 0f00000000, %f100, %p15;
	.loc	2 160 17
	fma.rn.f32 	%f30, %f101, %f98, %f90;
	.loc	2 161 15
	add.f32 	%f102, %f94, %f96;
	.loc	2 161 30
	mul.f32 	%f103, %f98, %f98;
	.loc	2 161 38
	mul.f32 	%f104, %f87, %f103;
	.loc	2 161 22
	fma.rn.f32 	%f105, %f101, %f104, %f102;
$L__tmp4:
	.loc	1 59 23
	mov.b32 	%r66, %f105;
	mov.b32 	%r67, 1161822208;
	// begin inline asm
	div.full.f32 %r65, %r66, %r67;
	// end inline asm
	mov.b32 	%f106, %r65;
	.loc	1 61 24
	add.f32 	%f31, %f106, 0f358637BD;
	mov.b32 	%r75, 0;
	rsqrt.approx.ftz.f32 	%f131, %f31;
	mov.u32 	%r125, %r75;
$L__BB0_3:
	.loc	1 48 27
	or.b32  	%r119, %r125, %r2;
	.loc	1 51 53
	add.s32 	%r120, %r4, %r119;
	.loc	1 51 34
	mul.wide.s32 	%rd15, %r120, 2;
	add.s64 	%rd9, %rd1, %rd15;
	.loc	1 51 64
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	@%p5 ld.global.L1::evict_first.v2.b32 { %r73, %r74 }, [ %rd9 + 0 ];
	@!%p5 mov.u32 %r73, %r75;
	@!%p5 mov.u32 %r74, %r75;
	// end inline asm
	cvt.u16.u32 	%rs9, %r73;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r73; }
	cvt.u16.u32 	%rs11, %r74;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r74; }
	.loc	1 51 124
	// begin inline asm
	cvt.f32.bf16 %r77, %rs9;
	// end inline asm
	mov.b32 	%f107, %r77;
	// begin inline asm
	cvt.f32.bf16 %r78, %rs10;
	// end inline asm
	mov.b32 	%f108, %r78;
	// begin inline asm
	cvt.f32.bf16 %r79, %rs11;
	// end inline asm
	mov.b32 	%f109, %r79;
	// begin inline asm
	cvt.f32.bf16 %r80, %rs12;
	// end inline asm
	mov.b32 	%f110, %r80;
	.loc	1 52 35
	mul.wide.u32 	%rd16, %r119, 2;
	add.s64 	%rd10, %rd2, %rd16;
	mov.pred 	%p19, -1;
	.loc	1 52 40
	// begin inline asm
	mov.u32 %r81, 0x0;
	mov.u32 %r82, 0x0;
	@%p19 ld.global.L1::evict_last.v2.b32 { %r81, %r82 }, [ %rd10 + 0 ];
	@!%p19 mov.u32 %r81, %r75;
	@!%p19 mov.u32 %r82, %r75;
	// end inline asm
	cvt.u16.u32 	%rs13, %r81;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r81; }
	cvt.u16.u32 	%rs15, %r82;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r82; }
	.loc	1 52 91
	// begin inline asm
	cvt.f32.bf16 %r85, %rs13;
	// end inline asm
	mov.b32 	%f111, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs14;
	// end inline asm
	mov.b32 	%f112, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs15;
	// end inline asm
	mov.b32 	%f113, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs16;
	// end inline asm
	mov.b32 	%f114, %r88;
	.loc	1 53 35
	add.s64 	%rd11, %rd3, %rd16;
	.loc	1 53 40
	// begin inline asm
	mov.u32 %r89, 0x0;
	mov.u32 %r90, 0x0;
	@%p19 ld.global.L1::evict_last.v2.b32 { %r89, %r90 }, [ %rd11 + 0 ];
	@!%p19 mov.u32 %r89, %r75;
	@!%p19 mov.u32 %r90, %r75;
	// end inline asm
	cvt.u16.u32 	%rs17, %r89;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs18}, %r89; }
	cvt.u16.u32 	%rs19, %r90;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs20}, %r90; }
	.loc	1 53 91
	// begin inline asm
	cvt.f32.bf16 %r93, %rs17;
	// end inline asm
	mov.b32 	%f115, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs18;
	// end inline asm
	mov.b32 	%f116, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs19;
	// end inline asm
	mov.b32 	%f117, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs20;
	// end inline asm
	mov.b32 	%f118, %r96;
	.loc	1 54 35
	add.s64 	%rd12, %rd10, 6144;
	.loc	1 54 47
	// begin inline asm
	mov.u32 %r97, 0x0;
	mov.u32 %r98, 0x0;
	@%p19 ld.global.L1::evict_last.v2.b32 { %r97, %r98 }, [ %rd12 + 0 ];
	@!%p19 mov.u32 %r97, %r75;
	@!%p19 mov.u32 %r98, %r75;
	// end inline asm
	cvt.u16.u32 	%rs21, %r97;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs22}, %r97; }
	cvt.u16.u32 	%rs23, %r98;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs24}, %r98; }
	.loc	1 54 98
	// begin inline asm
	cvt.f32.bf16 %r101, %rs21;
	// end inline asm
	mov.b32 	%f119, %r101;
	// begin inline asm
	cvt.f32.bf16 %r102, %rs22;
	// end inline asm
	mov.b32 	%f120, %r102;
	// begin inline asm
	cvt.f32.bf16 %r103, %rs23;
	// end inline asm
	mov.b32 	%f121, %r103;
	// begin inline asm
	cvt.f32.bf16 %r104, %rs24;
	// end inline asm
	mov.b32 	%f122, %r104;
	.loc	1 55 35
	add.s64 	%rd13, %rd11, 6144;
	.loc	1 55 47
	// begin inline asm
	mov.u32 %r105, 0x0;
	mov.u32 %r106, 0x0;
	@%p19 ld.global.L1::evict_last.v2.b32 { %r105, %r106 }, [ %rd13 + 0 ];
	@!%p19 mov.u32 %r105, %r75;
	@!%p19 mov.u32 %r106, %r75;
	// end inline asm
	cvt.u16.u32 	%rs25, %r105;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs26}, %r105; }
	cvt.u16.u32 	%rs27, %r106;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs28}, %r106; }
	.loc	1 55 98
	// begin inline asm
	cvt.f32.bf16 %r109, %rs25;
	// end inline asm
	mov.b32 	%f123, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs26;
	// end inline asm
	mov.b32 	%f124, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs27;
	// end inline asm
	mov.b32 	%f125, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs28;
	// end inline asm
	mov.b32 	%f126, %r112;
	.loc	1 57 22
	sub.f32 	%f127, %f107, %f30;
	sub.f32 	%f128, %f108, %f30;
	sub.f32 	%f129, %f109, %f30;
	sub.f32 	%f130, %f110, %f30;
	.loc	1 63 23
	mul.f32 	%f132, %f127, %f131;
	mul.f32 	%f133, %f128, %f131;
	mul.f32 	%f134, %f129, %f131;
	mul.f32 	%f135, %f130, %f131;
	.loc	1 65 24
	add.f32 	%f136, %f111, %f115;
	add.f32 	%f137, %f112, %f116;
	add.f32 	%f138, %f113, %f117;
	add.f32 	%f139, %f114, %f118;
	.loc	1 67 24
	add.f32 	%f140, %f136, 0f3F800000;
	add.f32 	%f141, %f137, 0f3F800000;
	add.f32 	%f142, %f138, 0f3F800000;
	add.f32 	%f143, %f139, 0f3F800000;
	.loc	1 69 24
	add.f32 	%f144, %f119, %f123;
	add.f32 	%f145, %f120, %f124;
	add.f32 	%f146, %f121, %f125;
	add.f32 	%f147, %f122, %f126;
	.loc	1 70 24
	fma.rn.f32 	%f148, %f140, %f132, %f144;
	fma.rn.f32 	%f149, %f141, %f133, %f145;
	fma.rn.f32 	%f150, %f142, %f134, %f146;
	fma.rn.f32 	%f151, %f143, %f135, %f147;
	.loc	1 71 35
	add.s32 	%r121, %r119, %r3;
	.loc	1 71 29
	mul.wide.s32 	%rd17, %r121, 2;
	add.s64 	%rd14, %rd4, %rd17;
	.loc	1 71 53
	mov.b32 	%r113, %f148;
	// begin inline asm
	cvt.rn.bf16.f32 %rs29, %r113;
	// end inline asm
	mov.b32 	%r114, %f149;
	// begin inline asm
	cvt.rn.bf16.f32 %rs30, %r114;
	// end inline asm
	mov.b32 	%r115, %f150;
	// begin inline asm
	cvt.rn.bf16.f32 %rs31, %r115;
	// end inline asm
	mov.b32 	%r116, %f151;
	// begin inline asm
	cvt.rn.bf16.f32 %rs32, %r116;
	// end inline asm
	mov.b32 	%r122, {%rs29, %rs30};
	mov.b32 	%r123, {%rs31, %rs32};
	// begin inline asm
	@%p5 st.global.v2.b32 [ %rd14 + 0 ], { %r122, %r123 };
	// end inline asm
	.loc	1 47 36
	add.s32 	%r9, %r125, 8;
	setp.lt.u32 	%p32, %r125, 3064;
	mov.u32 	%r125, %r9;
	@%p32 bra 	$L__BB0_3;
	.loc	1 47 4
	ret;
$L__tmp5:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/zv/czvecxcitv7sbfb6hlkdlkxunvvadz3gkbp7fvmnc3aopuc3k3u2.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 197
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 122
.b8 118
.b8 101
.b8 99
.b8 120
.b8 99
.b8 105
.b8 116
.b8 118
.b8 55
.b8 115
.b8 98
.b8 102
.b8 98
.b8 54
.b8 104
.b8 108
.b8 107
.b8 100
.b8 108
.b8 107
.b8 120
.b8 117
.b8 110
.b8 118
.b8 118
.b8 97
.b8 100
.b8 122
.b8 51
.b8 103
.b8 107
.b8 98
.b8 112
.b8 55
.b8 102
.b8 118
.b8 109
.b8 110
.b8 99
.b8 51
.b8 97
.b8 111
.b8 112
.b8 117
.b8 99
.b8 51
.b8 107
.b8 51
.b8 117
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 118
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 36
.b8 51
.b8 4
.b32 120
.b64 $L__tmp3
.b64 $L__tmp4
.b8 1
.b8 42
.b8 41
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
