#loc = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0)
module {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg9: i32 loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xbf16> loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<512xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.280000e+02> : tensor<512xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_3 = arith.constant dense<24> : tensor<512xi32> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<512xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3072> : tensor<512xi32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)
    %5 = tt.splat %arg10 : i32 -> tensor<512xi32> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<512xi32> loc(#loc6)
    %7 = arith.divsi %4, %cst_5 : tensor<512xi32> loc(#loc7)
    %8 = arith.remsi %4, %cst_5 : tensor<512xi32> loc(#loc8)
    %9 = arith.divsi %4, %cst_4 : tensor<512xi32> loc(#loc9)
    %10 = arith.remsi %9, %cst_3 : tensor<512xi32> loc(#loc10)
    %11 = arith.remsi %4, %cst_4 : tensor<512xi32> loc(#loc11)
    %12 = tt.splat %arg9 : i32 -> tensor<512xi32> loc(#loc12)
    %13 = arith.cmpi slt, %7, %12 : tensor<512xi32> loc(#loc12)
    %14 = arith.muli %7, %cst_5 : tensor<512xi32> loc(#loc13)
    %15 = arith.addi %8, %14 : tensor<512xi32> loc(#loc14)
    %16 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc15)
    %18 = arith.andi %13, %6 : tensor<512xi1> loc(#loc16)
    %19 = tt.load %17, %18, %cst : tensor<512x!tt.ptr<bf16>> loc(#loc17)
    %20 = arith.extf %19 : tensor<512xbf16> to tensor<512xf32> loc(#loc18)
    %21 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc19)
    %22 = tt.addptr %21, %8 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc19)
    %23 = tt.load %22, %18, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>> loc(#loc20)
    %24 = arith.extf %23 : tensor<512xbf16> to tensor<512xf32> loc(#loc21)
    %25 = arith.addf %20, %24 : tensor<512xf32> loc(#loc22)
    %26 = arith.muli %7, %cst_3 : tensor<512xi32> loc(#loc23)
    %27 = arith.addi %10, %26 : tensor<512xi32> loc(#loc24)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc25)
    %29 = tt.addptr %28, %27 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc25)
    %30 = tt.load %29, %18, %cst_2 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc26)
    %31 = arith.divf %30, %cst_1 : tensor<512xf32> loc(#loc27)
    %32 = arith.addf %31, %cst_0 : tensor<512xf32> loc(#loc28)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<512xf32>) -> tensor<512xf32> loc(#loc29)
    %34 = arith.mulf %25, %33 : tensor<512xf32> loc(#loc30)
    %35 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc31)
    %36 = tt.addptr %35, %11 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc31)
    %37 = tt.load %36, %18, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>> loc(#loc32)
    %38 = arith.extf %37 : tensor<512xbf16> to tensor<512xf32> loc(#loc33)
    %39 = arith.addf %38, %cst_2 : tensor<512xf32> loc(#loc34)
    %40 = arith.mulf %34, %39 : tensor<512xf32> loc(#loc35)
    %41 = arith.cmpi sge, %7, %12 : tensor<512xi32> loc(#loc36)
    %42 = arith.muli %arg9, %c-1_i32 : i32 loc(#loc37)
    %43 = tt.splat %42 : i32 -> tensor<512xi32> loc(#loc38)
    %44 = arith.addi %7, %43 : tensor<512xi32> loc(#loc38)
    %45 = arith.muli %44, %cst_5 : tensor<512xi32> loc(#loc39)
    %46 = arith.addi %8, %45 : tensor<512xi32> loc(#loc40)
    %47 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc41)
    %48 = tt.addptr %47, %46 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc41)
    %49 = arith.andi %41, %6 : tensor<512xi1> loc(#loc42)
    %50 = tt.load %48, %49, %cst : tensor<512x!tt.ptr<bf16>> loc(#loc43)
    %51 = arith.extf %50 : tensor<512xbf16> to tensor<512xf32> loc(#loc44)
    %52 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc45)
    %53 = tt.addptr %52, %8 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc45)
    %54 = tt.load %53, %49, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>> loc(#loc46)
    %55 = arith.extf %54 : tensor<512xbf16> to tensor<512xf32> loc(#loc47)
    %56 = arith.addf %51, %55 : tensor<512xf32> loc(#loc48)
    %57 = arith.muli %44, %cst_3 : tensor<512xi32> loc(#loc49)
    %58 = arith.addi %10, %57 : tensor<512xi32> loc(#loc50)
    %59 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc51)
    %60 = tt.addptr %59, %58 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc51)
    %61 = tt.load %60, %49, %cst_2 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc52)
    %62 = arith.divf %61, %cst_1 : tensor<512xf32> loc(#loc53)
    %63 = arith.addf %62, %cst_0 : tensor<512xf32> loc(#loc54)
    %64 = tt.extern_elementwise %63 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<512xf32>) -> tensor<512xf32> loc(#loc55)
    %65 = arith.mulf %56, %64 : tensor<512xf32> loc(#loc56)
    %66 = tt.splat %arg7 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc57)
    %67 = tt.addptr %66, %11 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc57)
    %68 = tt.load %67, %49, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>> loc(#loc58)
    %69 = arith.extf %68 : tensor<512xbf16> to tensor<512xf32> loc(#loc59)
    %70 = arith.addf %69, %cst_2 : tensor<512xf32> loc(#loc60)
    %71 = arith.mulf %65, %70 : tensor<512xf32> loc(#loc61)
    %72 = arith.select %41, %71, %cst_2 : tensor<512xi1>, tensor<512xf32> loc(#loc62)
    %73 = arith.select %13, %40, %72 : tensor<512xi1>, tensor<512xf32> loc(#loc68)
    %74 = tt.splat %arg8 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>> loc(#loc65)
    %75 = tt.addptr %74, %4 : tensor<512x!tt.ptr<bf16>>, tensor<512xi32> loc(#loc65)
    %76 = arith.truncf %73 : tensor<512xf32> to tensor<512xbf16> loc(#loc66)
    tt.store %75, %76, %6 : tensor<512x!tt.ptr<bf16>> loc(#loc66)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":19:28)
#loc3 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":19:33)
#loc4 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":20:36)
#loc5 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":20:23)
#loc6 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":21:21)
#loc7 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":22:20)
#loc8 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":23:18)
#loc9 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":24:20)
#loc10 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":24:27)
#loc11 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":25:18)
#loc12 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":31:18)
#loc13 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":32:41)
#loc14 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":32:36)
#loc15 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":32:30)
#loc16 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":32:54)
#loc17 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":32:47)
#loc18 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":32:75)
#loc19 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":33:30)
#loc20 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":33:35)
#loc21 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":33:93)
#loc22 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":34:18)
#loc23 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":35:39)
#loc24 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":35:36)
#loc25 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":35:30)
#loc26 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":35:45)
#loc27 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":37:19)
#loc28 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":40:20)
#loc29 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":41:28)
#loc30 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":42:19)
#loc31 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":43:31)
#loc32 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":43:36)
#loc33 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":43:94)
#loc34 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":45:20)
#loc35 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":46:20)
#loc36 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":49:20)
#loc37 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:54)
#loc38 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:49)
#loc39 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:43)
#loc40 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:37)
#loc41 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:31)
#loc42 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:71)
#loc43 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:63)
#loc44 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":52:92)
#loc45 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":53:31)
#loc46 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":53:36)
#loc47 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":53:95)
#loc48 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":54:20)
#loc49 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":55:41)
#loc50 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":55:37)
#loc51 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":55:31)
#loc52 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":55:61)
#loc53 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":56:20)
#loc54 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":58:20)
#loc55 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":59:28)
#loc56 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":60:20)
#loc57 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":61:31)
#loc58 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":61:36)
#loc59 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":61:95)
#loc60 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":62:20)
#loc61 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":63:20)
#loc62 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":65:35)
#loc63 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":66:34)
#loc64 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":48:34)
#loc65 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":67:25)
#loc66 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":67:37)
#loc67 = loc("/opt/inductor_cache/hy/chyieuxy32gjmwnssevdufabejvnnfy52o5w53hl5p6hh26fvs4l.py":67:4)
#loc68 = loc(fused[#loc63, #loc64])
