//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_1[12] = {95, 95, 67, 85, 68, 65, 95, 65, 82, 67, 72};
.global .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.global .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5,
	.param .u32 triton__param_6,
	.param .u32 triton__param_7
)
.maxntid 128, 1, 1
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<174>;
	.reg .b16 	%rs<41>;
	.reg .b32 	%r<277>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<78>;
	.reg .f64 	%fd<427>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r54, [triton__param_7];
	ld.param.u32 	%r53, [triton__param_6];
	ld.param.u64 	%rd15, [triton__param_0];
	ld.param.u64 	%rd16, [triton__param_1];
	ld.param.u32 	%r64, [triton__param_4];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r55, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r65, %r55, 9;
	.loc	1 20 36
	mov.u32 	%r66, %tid.x;
	shl.b32 	%r67, %r66, 2;
	and.b32  	%r68, %r67, 508;
	and.b32  	%r69, %r67, 12;
	.loc	1 20 23
	or.b32  	%r9, %r65, %r68;
	or.b32  	%r70, %r69, %r65;
	or.b32  	%r71, %r70, 1;
	or.b32  	%r72, %r70, 2;
	or.b32  	%r73, %r70, 3;
	.loc	1 21 21
	setp.lt.s32 	%p162, %r9, %r54;
	.loc	1 22 20
	shr.s32 	%r75, %r9, 31;
	shr.u32 	%r76, %r75, 28;
	add.s32 	%r77, %r9, %r76;
	shr.s32 	%r10, %r77, 4;
	and.b32  	%r78, %r77, -16;
	sub.s32 	%r11, %r9, %r78;
	.loc	1 23 18
	bfe.s32 	%r79, %r55, 22, 1;
	shr.u32 	%r80, %r79, 28;
	add.s32 	%r81, %r71, %r80;
	and.b32  	%r82, %r81, 65040;
	sub.s32 	%r83, %r71, %r82;
	add.s32 	%r84, %r72, %r80;
	and.b32  	%r85, %r84, 16;
	sub.s32 	%r86, %r72, %r85;
	add.s32 	%r87, %r73, %r80;
	and.b32  	%r88, %r87, 65040;
	sub.s32 	%r89, %r73, %r88;
	.loc	1 28 18
	setp.lt.s32 	%p34, %r10, %r64;
	.loc	1 29 32
	mul.lo.s32 	%r90, %r10, 3;
	.loc	1 29 30
	mul.wide.s32 	%rd25, %r90, 2;
	add.s64 	%rd7, %rd15, %rd25;
	.loc	1 29 44
	and.pred  	%p17, %p162, %p34;
	mov.u16 	%rs2, 0;
	.loc	1 29 37
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd7 + 0 ];
	@!%p17 mov.u16 %rs1, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd7 + 0 ];
	@!%p17 mov.u16 %rs3, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs5, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd7 + 0 ];
	@!%p17 mov.u16 %rs5, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd7 + 0 ];
	@!%p17 mov.u16 %rs7, %rs2;
	// end inline asm
	.loc	1 30 19
	setp.ge.s32 	%p35, %r10, %r64;
	.loc	1 33 39
	sub.s32 	%r91, %r10, %r64;
	.loc	1 33 33
	mul.lo.s32 	%r92, %r91, 3;
	.loc	1 33 30
	mul.wide.s32 	%rd26, %r92, 2;
	add.s64 	%rd11, %rd16, %rd26;
	.loc	1 33 59
	and.pred  	%p25, %p162, %p35;
	.loc	1 33 52
	// begin inline asm
	mov.u16 %rs13, 0x0;
	@%p25 ld.global.L1::evict_last.b16 { %rs13 }, [ %rd11 + 0 ];
	@!%p25 mov.u16 %rs13, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p25 ld.global.L1::evict_last.b16 { %rs15 }, [ %rd11 + 0 ];
	@!%p25 mov.u16 %rs15, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs17, 0x0;
	@%p25 ld.global.L1::evict_last.b16 { %rs17 }, [ %rd11 + 0 ];
	@!%p25 mov.u16 %rs17, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs19, 0x0;
	@%p25 ld.global.L1::evict_last.b16 { %rs19 }, [ %rd11 + 0 ];
	@!%p25 mov.u16 %rs19, %rs2;
	// end inline asm
	.loc	1 37 37
	cvt.rn.f64.s32 	%fd5, %r53;
	.loc	1 39 21
	cvt.s8.s32 	%rs25, %r11;
	shr.s16 	%rs26, %rs25, 1;
	cvt.u16.u32 	%rs27, %r83;
	and.b16  	%rs28, %rs27, 128;
	shr.u16 	%rs29, %rs28, 7;
	add.s16 	%rs30, %rs27, %rs29;
	cvt.s16.s8 	%rs31, %rs30;
	shr.s16 	%rs32, %rs31, 1;
	cvt.s8.s32 	%rs33, %r86;
	shr.s16 	%rs34, %rs33, 1;
	cvt.u16.u32 	%rs35, %r89;
	and.b16  	%rs36, %rs35, 128;
	shr.u16 	%rs37, %rs36, 7;
	add.s16 	%rs38, %rs35, %rs37;
	.loc	1 39 15
	mul.wide.s16 	%r93, %rs26, 2;
	mul.wide.s16 	%r94, %rs32, 2;
	.loc	1 40 21
	cvt.rn.f64.s32 	%fd93, %r93;
	cvt.rn.f64.s32 	%fd94, %r94;
	.loc	1 42 20
	mul.f64 	%fd6, %fd93, 0d3FB0000000000000;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd5;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r13}, %fd6;
	}
	bfe.u32 	%r97, %r13, 20, 11;
	add.s32 	%r98, %r97, -1012;
	mov.b64 	%rd27, %fd6;
	shl.b64 	%rd1, %rd27, %r98;
	abs.f64 	%fd10, %fd5;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd10;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd6;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd97, [retval0+0];
	} // callseq 0
	setp.ne.s32 	%p36, %r53, 0;
	setp.lt.s32 	%p166, %r12, 0;
	@%p36 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	setp.eq.s64 	%p170, %rd1, -9223372036854775808;
	setp.eq.s64 	%p38, %rd1, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r99, %temp}, %fd97;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r100}, %fd97;
	}
	xor.b32  	%r101, %r100, -2147483648;
	mov.b64 	%fd98, {%r99, %r101};
	selp.f64 	%fd99, %fd98, %fd97, %p38;
	selp.f64 	%fd100, %fd99, %fd97, %p166;
	cvt.rzi.f64.f64 	%fd101, %fd6;
	setp.neu.f64 	%p39, %fd101, %fd6;
	selp.f64 	%fd102, 0dFFF8000000000000, %fd100, %p39;
	selp.f64 	%fd407, %fd102, %fd100, %p166;
	bra.uni 	$L__BB0_3;
$L__BB0_1:
	setp.eq.s64 	%p40, %rd1, -9223372036854775808;
	abs.f64 	%fd103, %fd6;
	setp.neu.f64 	%p41, %fd103, 0d3FE0000000000000;
	and.pred  	%p170, %p41, %p40;
	selp.b32 	%r102, %r12, 0, %p170;
	setp.lt.s32 	%p42, %r13, 0;
	or.b32  	%r103, %r102, 2146435072;
	selp.b32 	%r104, %r103, %r102, %p42;
	mov.b32 	%r105, 0;
	mov.b64 	%fd407, {%r105, %r104};
$L__BB0_3:
	.loc	1 0 33
	cvt.s16.s8 	%rs39, %rs38;
	mul.wide.s16 	%r95, %rs34, 2;
	mul.f64 	%fd7, %fd94, 0d3FB0000000000000;
	.loc	1 43 33
	add.f64 	%fd15, %fd6, %fd5;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r106}, %fd15;
	}
	and.b32  	%r107, %r106, 2146435072;
	setp.ne.s32 	%p43, %r107, 2146435072;
	setp.nan.f64 	%p169, %fd10, %fd10;
	mov.f64 	%fd408, %fd407;
	@%p43 bra 	$L__BB0_10;
	.loc	1 0 33
	mov.f64 	%fd408, %fd15;
	.loc	1 43 33
	@%p169 bra 	$L__BB0_10;
	abs.f64 	%fd104, %fd6;
	setp.nan.f64 	%p45, %fd104, %fd104;
	mov.f64 	%fd408, %fd15;
	@%p45 bra 	$L__BB0_10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r108, %temp}, %fd6;
	}
	and.b32  	%r14, %r13, 2147483647;
	setp.eq.s32 	%p46, %r14, 2146435072;
	setp.eq.s32 	%p47, %r108, 0;
	and.pred  	%p48, %p46, %p47;
	@!%p48 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_7:
	setp.gt.f64 	%p55, %fd10, 0d3FF0000000000000;
	selp.b32 	%r117, 2146435072, 0, %p55;
	setp.lt.s32 	%p56, %r13, 0;
	xor.b32  	%r118, %r117, 2146435072;
	selp.b32 	%r119, %r118, %r117, %p56;
	setp.eq.s32 	%p57, %r53, -1;
	selp.b32 	%r120, 1072693248, %r119, %p57;
	mov.b32 	%r121, 0;
	mov.b64 	%fd408, {%r121, %r120};
	bra.uni 	$L__BB0_10;
$L__BB0_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r109, %temp}, %fd5;
	}
	and.b32  	%r110, %r12, 2147483647;
	setp.eq.s32 	%p49, %r110, 2146435072;
	setp.eq.s32 	%p50, %r109, 0;
	and.pred  	%p51, %p49, %p50;
	mov.f64 	%fd408, %fd407;
	@!%p51 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:
	setp.lt.s32 	%p53, %r13, 0;
	selp.b32 	%r111, 0, 2146435072, %p53;
	setp.ne.s32 	%p54, %r14, 1071644672;
	or.b32  	%r112, %r111, -2147483648;
	selp.b32 	%r113, %r112, %r111, %p54;
	selp.b32 	%r114, %r113, %r111, %p170;
	selp.b32 	%r115, %r114, %r111, %p166;
	mov.b32 	%r116, 0;
	mov.b64 	%fd408, {%r116, %r115};
$L__BB0_10:
	.loc	1 0 33
	shr.s16 	%rs40, %rs39, 1;
	cvt.rn.f64.s32 	%fd95, %r95;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd7;
	}
	bfe.u32 	%r122, %r15, 20, 11;
	add.s32 	%r123, %r122, -1012;
	mov.b64 	%rd28, %fd7;
	shl.b64 	%rd2, %rd28, %r123;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd10;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd7;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd106, [retval0+0];
	} // callseq 1
	@%p36 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_11;
$L__BB0_12:
	setp.eq.s64 	%p171, %rd2, -9223372036854775808;
	setp.eq.s64 	%p61, %rd2, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r124, %temp}, %fd106;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r125}, %fd106;
	}
	xor.b32  	%r126, %r125, -2147483648;
	mov.b64 	%fd107, {%r124, %r126};
	selp.f64 	%fd108, %fd107, %fd106, %p61;
	selp.f64 	%fd109, %fd108, %fd106, %p166;
	cvt.rzi.f64.f64 	%fd110, %fd7;
	setp.neu.f64 	%p63, %fd110, %fd7;
	selp.f64 	%fd111, 0dFFF8000000000000, %fd109, %p63;
	selp.f64 	%fd409, %fd111, %fd109, %p166;
	bra.uni 	$L__BB0_13;
$L__BB0_11:
	setp.eq.s64 	%p64, %rd2, -9223372036854775808;
	abs.f64 	%fd112, %fd7;
	setp.neu.f64 	%p65, %fd112, 0d3FE0000000000000;
	and.pred  	%p171, %p65, %p64;
	selp.b32 	%r127, %r12, 0, %p171;
	setp.lt.s32 	%p66, %r15, 0;
	or.b32  	%r128, %r127, 2146435072;
	selp.b32 	%r129, %r128, %r127, %p66;
	mov.b32 	%r130, 0;
	mov.b64 	%fd409, {%r130, %r129};
$L__BB0_13:
	.loc	1 0 33
	mul.wide.s16 	%r96, %rs40, 2;
	mul.f64 	%fd8, %fd95, 0d3FB0000000000000;
	.loc	1 43 33
	add.f64 	%fd24, %fd7, %fd5;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r131}, %fd24;
	}
	and.b32  	%r132, %r131, 2146435072;
	setp.ne.s32 	%p67, %r132, 2146435072;
	mov.f64 	%fd410, %fd409;
	@%p67 bra 	$L__BB0_20;
	.loc	1 0 33
	mov.f64 	%fd410, %fd24;
	.loc	1 43 33
	@%p169 bra 	$L__BB0_20;
	abs.f64 	%fd113, %fd7;
	setp.nan.f64 	%p69, %fd113, %fd113;
	mov.f64 	%fd410, %fd24;
	@%p69 bra 	$L__BB0_20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r133, %temp}, %fd7;
	}
	and.b32  	%r16, %r15, 2147483647;
	setp.eq.s32 	%p70, %r16, 2146435072;
	setp.eq.s32 	%p71, %r133, 0;
	and.pred  	%p72, %p70, %p71;
	@!%p72 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;
$L__BB0_17:
	setp.gt.f64 	%p79, %fd10, 0d3FF0000000000000;
	selp.b32 	%r142, 2146435072, 0, %p79;
	setp.lt.s32 	%p80, %r15, 0;
	xor.b32  	%r143, %r142, 2146435072;
	selp.b32 	%r144, %r143, %r142, %p80;
	setp.eq.s32 	%p81, %r53, -1;
	selp.b32 	%r145, 1072693248, %r144, %p81;
	mov.b32 	%r146, 0;
	mov.b64 	%fd410, {%r146, %r145};
	bra.uni 	$L__BB0_20;
$L__BB0_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r134, %temp}, %fd5;
	}
	and.b32  	%r135, %r12, 2147483647;
	setp.eq.s32 	%p73, %r135, 2146435072;
	setp.eq.s32 	%p74, %r134, 0;
	and.pred  	%p75, %p73, %p74;
	mov.f64 	%fd410, %fd409;
	@!%p75 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;
$L__BB0_19:
	setp.lt.s32 	%p77, %r15, 0;
	selp.b32 	%r136, 0, 2146435072, %p77;
	setp.ne.s32 	%p78, %r16, 1071644672;
	or.b32  	%r137, %r136, -2147483648;
	selp.b32 	%r138, %r137, %r136, %p78;
	selp.b32 	%r139, %r138, %r136, %p171;
	selp.b32 	%r140, %r139, %r136, %p166;
	mov.b32 	%r141, 0;
	mov.b64 	%fd410, {%r141, %r140};
$L__BB0_20:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r56, %rs1;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r57, %rs3;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r60, %rs13;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r61, %rs15;
	// end inline asm
	cvt.rn.f64.s32 	%fd96, %r96;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd8;
	}
	bfe.u32 	%r147, %r17, 20, 11;
	add.s32 	%r148, %r147, -1012;
	mov.b64 	%rd29, %fd8;
	shl.b64 	%rd3, %rd29, %r148;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd10;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd8;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd115, [retval0+0];
	} // callseq 2
	@%p36 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;
$L__BB0_22:
	setp.eq.s64 	%p172, %rd3, -9223372036854775808;
	setp.eq.s64 	%p85, %rd3, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r149, %temp}, %fd115;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r150}, %fd115;
	}
	xor.b32  	%r151, %r150, -2147483648;
	mov.b64 	%fd116, {%r149, %r151};
	selp.f64 	%fd117, %fd116, %fd115, %p85;
	selp.f64 	%fd118, %fd117, %fd115, %p166;
	cvt.rzi.f64.f64 	%fd119, %fd8;
	setp.neu.f64 	%p87, %fd119, %fd8;
	selp.f64 	%fd120, 0dFFF8000000000000, %fd118, %p87;
	selp.f64 	%fd411, %fd120, %fd118, %p166;
	bra.uni 	$L__BB0_23;
$L__BB0_21:
	setp.eq.s64 	%p88, %rd3, -9223372036854775808;
	abs.f64 	%fd121, %fd8;
	setp.neu.f64 	%p89, %fd121, 0d3FE0000000000000;
	and.pred  	%p172, %p89, %p88;
	selp.b32 	%r152, %r12, 0, %p172;
	setp.lt.s32 	%p90, %r17, 0;
	or.b32  	%r153, %r152, 2146435072;
	selp.b32 	%r154, %r153, %r152, %p90;
	mov.b32 	%r155, 0;
	mov.b64 	%fd411, {%r155, %r154};
$L__BB0_23:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r58, %rs5;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r62, %rs17;
	// end inline asm
	mov.b32 	%f1, %r56;
	mov.b32 	%f2, %r57;
	mov.b32 	%f5, %r60;
	mov.b32 	%f6, %r61;
	setp.eq.f64 	%p60, %fd6, 0d0000000000000000;
	setp.eq.f64 	%p84, %fd7, 0d0000000000000000;
	mul.f64 	%fd9, %fd96, 0d3FB0000000000000;
	.loc	1 43 33
	add.f64 	%fd33, %fd8, %fd5;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r156}, %fd33;
	}
	and.b32  	%r157, %r156, 2146435072;
	setp.ne.s32 	%p91, %r157, 2146435072;
	mov.f64 	%fd412, %fd411;
	@%p91 bra 	$L__BB0_30;
	.loc	1 0 33
	mov.f64 	%fd412, %fd33;
	.loc	1 43 33
	@%p169 bra 	$L__BB0_30;
	abs.f64 	%fd122, %fd8;
	setp.nan.f64 	%p93, %fd122, %fd122;
	mov.f64 	%fd412, %fd33;
	@%p93 bra 	$L__BB0_30;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r158, %temp}, %fd8;
	}
	and.b32  	%r18, %r17, 2147483647;
	setp.eq.s32 	%p94, %r18, 2146435072;
	setp.eq.s32 	%p95, %r158, 0;
	and.pred  	%p96, %p94, %p95;
	@!%p96 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_27;
$L__BB0_27:
	setp.gt.f64 	%p103, %fd10, 0d3FF0000000000000;
	selp.b32 	%r167, 2146435072, 0, %p103;
	setp.lt.s32 	%p104, %r17, 0;
	xor.b32  	%r168, %r167, 2146435072;
	selp.b32 	%r169, %r168, %r167, %p104;
	setp.eq.s32 	%p105, %r53, -1;
	selp.b32 	%r170, 1072693248, %r169, %p105;
	mov.b32 	%r171, 0;
	mov.b64 	%fd412, {%r171, %r170};
	bra.uni 	$L__BB0_30;
$L__BB0_28:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r159, %temp}, %fd5;
	}
	and.b32  	%r160, %r12, 2147483647;
	setp.eq.s32 	%p97, %r160, 2146435072;
	setp.eq.s32 	%p98, %r159, 0;
	and.pred  	%p99, %p97, %p98;
	mov.f64 	%fd412, %fd411;
	@!%p99 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;
$L__BB0_29:
	setp.lt.s32 	%p101, %r17, 0;
	selp.b32 	%r161, 0, 2146435072, %p101;
	setp.ne.s32 	%p102, %r18, 1071644672;
	or.b32  	%r162, %r161, -2147483648;
	selp.b32 	%r163, %r162, %r161, %p102;
	selp.b32 	%r164, %r163, %r161, %p172;
	selp.b32 	%r165, %r164, %r161, %p166;
	mov.b32 	%r166, 0;
	mov.b64 	%fd412, {%r166, %r165};
$L__BB0_30:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r59, %rs7;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r63, %rs19;
	// end inline asm
	mov.b32 	%f3, %r58;
	mov.b32 	%f7, %r62;
	selp.f32 	%f9, %f1, %f5, %p34;
	selp.f32 	%f10, %f2, %f6, %p34;
	setp.eq.s32 	%p59, %r53, 1;
	selp.f64 	%fd105, 0d3FF0000000000000, %fd408, %p60;
	selp.f64 	%fd114, 0d3FF0000000000000, %fd410, %p84;
	.loc	1 43 33
	setp.eq.f64 	%p108, %fd8, 0d0000000000000000;
	selp.f64 	%fd123, 0d3FF0000000000000, %fd412, %p108;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd9;
	}
	bfe.u32 	%r172, %r19, 20, 11;
	add.s32 	%r173, %r172, -1012;
	mov.b64 	%rd30, %fd9;
	shl.b64 	%rd4, %rd30, %r173;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd10;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd9;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd124, [retval0+0];
	} // callseq 3
	@%p36 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;
$L__BB0_32:
	setp.eq.s64 	%p173, %rd4, -9223372036854775808;
	setp.eq.s64 	%p109, %rd4, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r174, %temp}, %fd124;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r175}, %fd124;
	}
	xor.b32  	%r176, %r175, -2147483648;
	mov.b64 	%fd125, {%r174, %r176};
	selp.f64 	%fd126, %fd125, %fd124, %p109;
	selp.f64 	%fd127, %fd126, %fd124, %p166;
	cvt.rzi.f64.f64 	%fd128, %fd9;
	setp.neu.f64 	%p111, %fd128, %fd9;
	selp.f64 	%fd129, 0dFFF8000000000000, %fd127, %p111;
	selp.f64 	%fd413, %fd129, %fd127, %p166;
	bra.uni 	$L__BB0_33;
$L__BB0_31:
	setp.eq.s64 	%p112, %rd4, -9223372036854775808;
	abs.f64 	%fd130, %fd9;
	setp.neu.f64 	%p113, %fd130, 0d3FE0000000000000;
	and.pred  	%p173, %p113, %p112;
	selp.b32 	%r177, %r12, 0, %p173;
	setp.lt.s32 	%p114, %r19, 0;
	or.b32  	%r178, %r177, 2146435072;
	selp.b32 	%r179, %r178, %r177, %p114;
	mov.b32 	%r180, 0;
	mov.b64 	%fd413, {%r180, %r179};
$L__BB0_33:
	.loc	1 0 33
	mov.b32 	%f4, %r59;
	mov.b32 	%f8, %r63;
	selp.f32 	%f11, %f3, %f7, %p34;
	add.u64 	%rd17, %SP, 0;
	cvt.f64.f32 	%fd1, %f9;
	cvt.f64.f32 	%fd2, %f10;
	.loc	1 43 33
	selp.f64 	%fd19, 0d3FF0000000000000, %fd105, %p59;
	selp.f64 	%fd28, 0d3FF0000000000000, %fd114, %p59;
	selp.f64 	%fd37, 0d3FF0000000000000, %fd123, %p59;
	add.f64 	%fd42, %fd9, %fd5;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r181}, %fd42;
	}
	and.b32  	%r182, %r181, 2146435072;
	setp.ne.s32 	%p115, %r182, 2146435072;
	mov.f64 	%fd414, %fd413;
	@%p115 bra 	$L__BB0_40;
	.loc	1 0 33
	mov.f64 	%fd414, %fd42;
	.loc	1 43 33
	@%p169 bra 	$L__BB0_40;
	abs.f64 	%fd131, %fd9;
	setp.nan.f64 	%p117, %fd131, %fd131;
	mov.f64 	%fd414, %fd42;
	@%p117 bra 	$L__BB0_40;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r183, %temp}, %fd9;
	}
	and.b32  	%r20, %r19, 2147483647;
	setp.eq.s32 	%p118, %r20, 2146435072;
	setp.eq.s32 	%p119, %r183, 0;
	and.pred  	%p120, %p118, %p119;
	@!%p120 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;
$L__BB0_37:
	setp.gt.f64 	%p127, %fd10, 0d3FF0000000000000;
	selp.b32 	%r192, 2146435072, 0, %p127;
	setp.lt.s32 	%p128, %r19, 0;
	xor.b32  	%r193, %r192, 2146435072;
	selp.b32 	%r194, %r193, %r192, %p128;
	setp.eq.s32 	%p129, %r53, -1;
	selp.b32 	%r195, 1072693248, %r194, %p129;
	mov.b32 	%r196, 0;
	mov.b64 	%fd414, {%r196, %r195};
	bra.uni 	$L__BB0_40;
$L__BB0_38:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r184, %temp}, %fd5;
	}
	and.b32  	%r185, %r12, 2147483647;
	setp.eq.s32 	%p121, %r185, 2146435072;
	setp.eq.s32 	%p122, %r184, 0;
	and.pred  	%p123, %p121, %p122;
	mov.f64 	%fd414, %fd413;
	@!%p123 bra 	$L__BB0_40;
	bra.uni 	$L__BB0_39;
$L__BB0_39:
	setp.lt.s32 	%p125, %r19, 0;
	selp.b32 	%r186, 0, 2146435072, %p125;
	setp.ne.s32 	%p126, %r20, 1071644672;
	or.b32  	%r187, %r186, -2147483648;
	selp.b32 	%r188, %r187, %r186, %p126;
	selp.b32 	%r189, %r188, %r186, %p173;
	selp.b32 	%r190, %r189, %r186, %p166;
	mov.b32 	%r191, 0;
	mov.b64 	%fd414, {%r191, %r190};
$L__BB0_40:
	.loc	1 0 33
	selp.f32 	%f12, %f4, %f8, %p34;
	cvt.f64.f32 	%fd3, %f11;
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd17;
	  cvt.u32.u64 	%r1, %tmp; }
	.loc	1 43 33
	setp.eq.f64 	%p131, %fd9, 0d0000000000000000;
	selp.f64 	%fd132, 0d3FF0000000000000, %fd414, %p131;
	selp.f64 	%fd133, 0d3FF0000000000000, %fd132, %p59;
	.loc	1 45 20
	mov.b64 	%rd33, %fd19;
	mov.u64 	%rd32, 4607182418800017408;
	// begin inline asm
	div.rn.f64 %rd31, %rd32, %rd33;
	// end inline asm
	mov.b64 	%fd134, %rd31;
	mov.b64 	%rd36, %fd28;
	// begin inline asm
	div.rn.f64 %rd34, %rd32, %rd36;
	// end inline asm
	mov.b64 	%fd135, %rd34;
	mov.b64 	%rd39, %fd37;
	// begin inline asm
	div.rn.f64 %rd37, %rd32, %rd39;
	// end inline asm
	mov.b64 	%fd136, %rd37;
	mov.b64 	%rd42, %fd133;
	// begin inline asm
	div.rn.f64 %rd40, %rd32, %rd42;
	// end inline asm
	.loc	1 49 20
	mul.f64 	%fd46, %fd134, %fd1;
	mul.f64 	%fd47, %fd135, %fd2;
	.loc	1 50 26
	{
	.reg .b32 %temp; 
	mov.b64 	{%r197, %temp}, %fd46;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r198}, %fd46;
	}
	and.b32  	%r199, %r198, 2147483647;
	setp.eq.s32 	%p132, %r199, 2146435072;
	setp.eq.s32 	%p133, %r197, 0;
	and.pred  	%p13, %p132, %p133;
	mov.f64 	%fd395, 0d3FF921FB54442D18;
	mov.f64 	%fd396, 0d3C91A62633145C00;
	mov.f64 	%fd397, 0d397B839A252049C0;
	abs.f64 	%fd398, %fd46;
	mul.f64 	%fd399, %fd46, 0d3FE45F306DC9C883;
	mov.f64 	%fd406, 0d0000000000000000;
	@%p13 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_41;
$L__BB0_69:
	mul.rn.f64 	%fd416, %fd46, %fd406;
	mov.b32 	%r266, 1;
	bra.uni 	$L__BB0_44;
$L__BB0_41:
	cvt.rni.s32.f64 	%r265, %fd399;
	st.local.u32 	[%r1], %r265;
	cvt.rn.f64.s32 	%fd140, %r265;
	neg.f64 	%fd141, %fd140;
	fma.rn.f64 	%fd143, %fd141, %fd395, %fd46;
	fma.rn.f64 	%fd145, %fd141, %fd396, %fd143;
	fma.rn.f64 	%fd416, %fd141, %fd397, %fd145;
	setp.ltu.f64 	%p134, %fd398, 0d41E0000000000000;
	@%p134 bra 	$L__BB0_43;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd46;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd416, [retval0+0];
	} // callseq 4
	ld.local.u32 	%r265, [%r1];
$L__BB0_43:
	add.s32 	%r266, %r265, 1;
$L__BB0_44:
	.loc	1 0 26
	cvt.f64.f32 	%fd4, %f12;
	mov.b64 	%fd137, %rd40;
	mul.f64 	%fd48, %fd136, %fd3;
	.loc	1 50 26
	and.b32  	%r201, %r266, 1;
	shl.b32 	%r202, %r201, 3;
	mul.wide.u32 	%rd44, %r202, 8;
	mov.u64 	%rd45, __cudart_sin_cos_coeffs;
	add.s64 	%rd46, %rd45, %rd44;
	mul.rn.f64 	%fd149, %fd416, %fd416;
	setp.eq.s32 	%p135, %r201, 0;
	selp.f64 	%fd150, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p135;
	ld.global.nc.f64 	%fd151, [%rd46+8];
	fma.rn.f64 	%fd152, %fd150, %fd149, %fd151;
	ld.global.nc.f64 	%fd153, [%rd46+16];
	fma.rn.f64 	%fd154, %fd152, %fd149, %fd153;
	ld.global.nc.f64 	%fd155, [%rd46+24];
	fma.rn.f64 	%fd156, %fd154, %fd149, %fd155;
	ld.global.nc.f64 	%fd157, [%rd46+32];
	fma.rn.f64 	%fd158, %fd156, %fd149, %fd157;
	ld.global.nc.f64 	%fd159, [%rd46+40];
	ld.global.nc.f64 	%fd161, [%rd46+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r204, %temp}, %fd47;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r205}, %fd47;
	}
	and.b32  	%r206, %r205, 2147483647;
	setp.eq.s32 	%p137, %r206, 2146435072;
	setp.eq.s32 	%p138, %r204, 0;
	and.pred  	%p14, %p137, %p138;
	abs.f64 	%fd400, %fd47;
	mul.f64 	%fd401, %fd47, 0d3FE45F306DC9C883;
	@%p14 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_45;
$L__BB0_70:
	mul.rn.f64 	%fd418, %fd47, %fd406;
	mov.b32 	%r268, 1;
	bra.uni 	$L__BB0_48;
$L__BB0_45:
	cvt.rni.s32.f64 	%r267, %fd401;
	st.local.u32 	[%r1], %r267;
	cvt.rn.f64.s32 	%fd172, %r267;
	neg.f64 	%fd173, %fd172;
	fma.rn.f64 	%fd175, %fd173, %fd395, %fd47;
	fma.rn.f64 	%fd177, %fd173, %fd396, %fd175;
	fma.rn.f64 	%fd418, %fd173, %fd397, %fd177;
	setp.ltu.f64 	%p139, %fd400, 0d41E0000000000000;
	@%p139 bra 	$L__BB0_47;
	{ // callseq 5, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd47;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd418, [retval0+0];
	} // callseq 5
	ld.local.u32 	%r267, [%r1];
$L__BB0_47:
	add.s32 	%r268, %r267, 1;
$L__BB0_48:
	.loc	1 0 26
	fma.rn.f64 	%fd160, %fd158, %fd149, %fd159;
	mul.f64 	%fd49, %fd137, %fd4;
	.loc	1 50 26
	and.b32  	%r208, %r268, 1;
	shl.b32 	%r209, %r208, 3;
	mul.wide.u32 	%rd48, %r209, 8;
	add.s64 	%rd50, %rd45, %rd48;
	mul.rn.f64 	%fd181, %fd418, %fd418;
	setp.eq.s32 	%p140, %r208, 0;
	selp.f64 	%fd182, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p140;
	ld.global.nc.f64 	%fd183, [%rd50+8];
	fma.rn.f64 	%fd184, %fd182, %fd181, %fd183;
	ld.global.nc.f64 	%fd185, [%rd50+16];
	fma.rn.f64 	%fd186, %fd184, %fd181, %fd185;
	ld.global.nc.f64 	%fd187, [%rd50+24];
	fma.rn.f64 	%fd188, %fd186, %fd181, %fd187;
	ld.global.nc.f64 	%fd189, [%rd50+32];
	fma.rn.f64 	%fd190, %fd188, %fd181, %fd189;
	ld.global.nc.f64 	%fd191, [%rd50+40];
	fma.rn.f64 	%fd192, %fd190, %fd181, %fd191;
	ld.global.nc.f64 	%fd193, [%rd50+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r211, %temp}, %fd48;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r212}, %fd48;
	}
	and.b32  	%r213, %r212, 2147483647;
	setp.eq.s32 	%p142, %r213, 2146435072;
	setp.eq.s32 	%p143, %r211, 0;
	and.pred  	%p15, %p142, %p143;
	abs.f64 	%fd402, %fd48;
	mul.f64 	%fd403, %fd48, 0d3FE45F306DC9C883;
	@%p15 bra 	$L__BB0_71;
	bra.uni 	$L__BB0_49;
$L__BB0_71:
	mul.rn.f64 	%fd420, %fd48, %fd406;
	mov.b32 	%r270, 1;
	bra.uni 	$L__BB0_52;
$L__BB0_49:
	cvt.rni.s32.f64 	%r269, %fd403;
	st.local.u32 	[%r1], %r269;
	cvt.rn.f64.s32 	%fd204, %r269;
	neg.f64 	%fd205, %fd204;
	fma.rn.f64 	%fd207, %fd205, %fd395, %fd48;
	fma.rn.f64 	%fd209, %fd205, %fd396, %fd207;
	fma.rn.f64 	%fd420, %fd205, %fd397, %fd209;
	setp.ltu.f64 	%p144, %fd402, 0d41E0000000000000;
	@%p144 bra 	$L__BB0_51;
	{ // callseq 6, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd48;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd420, [retval0+0];
	} // callseq 6
	ld.local.u32 	%r269, [%r1];
$L__BB0_51:
	add.s32 	%r270, %r269, 1;
$L__BB0_52:
	.loc	1 0 26
	fma.rn.f64 	%fd162, %fd160, %fd149, %fd161;
	mov.f64 	%fd164, 0d3FF0000000000000;
	.loc	1 50 26
	fma.rn.f64 	%fd194, %fd192, %fd181, %fd193;
	and.b32  	%r215, %r270, 1;
	shl.b32 	%r216, %r215, 3;
	mul.wide.u32 	%rd52, %r216, 8;
	add.s64 	%rd54, %rd45, %rd52;
	mul.rn.f64 	%fd213, %fd420, %fd420;
	setp.eq.s32 	%p145, %r215, 0;
	selp.f64 	%fd214, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p145;
	ld.global.nc.f64 	%fd215, [%rd54+8];
	fma.rn.f64 	%fd216, %fd214, %fd213, %fd215;
	ld.global.nc.f64 	%fd217, [%rd54+16];
	fma.rn.f64 	%fd218, %fd216, %fd213, %fd217;
	ld.global.nc.f64 	%fd219, [%rd54+24];
	fma.rn.f64 	%fd220, %fd218, %fd213, %fd219;
	ld.global.nc.f64 	%fd221, [%rd54+32];
	fma.rn.f64 	%fd222, %fd220, %fd213, %fd221;
	ld.global.nc.f64 	%fd223, [%rd54+40];
	fma.rn.f64 	%fd224, %fd222, %fd213, %fd223;
	ld.global.nc.f64 	%fd225, [%rd54+48];
	fma.rn.f64 	%fd226, %fd224, %fd213, %fd225;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r218, %temp}, %fd49;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r219}, %fd49;
	}
	and.b32  	%r220, %r219, 2147483647;
	setp.eq.s32 	%p147, %r220, 2146435072;
	setp.eq.s32 	%p148, %r218, 0;
	and.pred  	%p16, %p147, %p148;
	abs.f64 	%fd404, %fd49;
	mul.f64 	%fd405, %fd49, 0d3FE45F306DC9C883;
	@%p16 bra 	$L__BB0_72;
	bra.uni 	$L__BB0_53;
$L__BB0_72:
	.loc	1 0 26
	mov.b32 	%r272, 1;
	.loc	1 50 26
	mul.rn.f64 	%fd422, %fd49, %fd406;
	bra.uni 	$L__BB0_56;
$L__BB0_53:
	cvt.rni.s32.f64 	%r271, %fd405;
	st.local.u32 	[%r1], %r271;
	cvt.rn.f64.s32 	%fd236, %r271;
	neg.f64 	%fd237, %fd236;
	fma.rn.f64 	%fd239, %fd237, %fd395, %fd49;
	fma.rn.f64 	%fd241, %fd237, %fd396, %fd239;
	fma.rn.f64 	%fd422, %fd237, %fd397, %fd241;
	setp.ltu.f64 	%p149, %fd404, 0d41E0000000000000;
	@%p149 bra 	$L__BB0_55;
	{ // callseq 7, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd49;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd422, [retval0+0];
	} // callseq 7
	ld.local.u32 	%r271, [%r1];
$L__BB0_55:
	add.s32 	%r272, %r271, 1;
$L__BB0_56:
	.loc	1 0 26
	fma.rn.f64 	%fd163, %fd162, %fd416, %fd416;
	fma.rn.f64 	%fd165, %fd162, %fd149, %fd164;
	.loc	1 50 26
	fma.rn.f64 	%fd195, %fd194, %fd418, %fd418;
	fma.rn.f64 	%fd197, %fd194, %fd181, %fd164;
	fma.rn.f64 	%fd227, %fd226, %fd420, %fd420;
	fma.rn.f64 	%fd229, %fd226, %fd213, %fd164;
	and.b32  	%r222, %r272, 1;
	shl.b32 	%r223, %r222, 3;
	mul.wide.u32 	%rd56, %r223, 8;
	add.s64 	%rd58, %rd45, %rd56;
	mul.rn.f64 	%fd245, %fd422, %fd422;
	setp.eq.s32 	%p150, %r222, 0;
	selp.f64 	%fd246, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p150;
	ld.global.nc.f64 	%fd247, [%rd58+8];
	fma.rn.f64 	%fd248, %fd246, %fd245, %fd247;
	ld.global.nc.f64 	%fd249, [%rd58+16];
	fma.rn.f64 	%fd250, %fd248, %fd245, %fd249;
	ld.global.nc.f64 	%fd251, [%rd58+24];
	fma.rn.f64 	%fd252, %fd250, %fd245, %fd251;
	ld.global.nc.f64 	%fd253, [%rd58+32];
	fma.rn.f64 	%fd254, %fd252, %fd245, %fd253;
	ld.global.nc.f64 	%fd255, [%rd58+40];
	fma.rn.f64 	%fd256, %fd254, %fd245, %fd255;
	ld.global.nc.f64 	%fd257, [%rd58+48];
	fma.rn.f64 	%fd258, %fd256, %fd245, %fd257;
	fma.rn.f64 	%fd259, %fd258, %fd422, %fd422;
	fma.rn.f64 	%fd261, %fd258, %fd245, %fd164;
	.loc	1 52 26
	@%p13 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_57;
$L__BB0_73:
	mul.rn.f64 	%fd423, %fd46, %fd406;
	mov.b32 	%r273, 0;
	bra.uni 	$L__BB0_59;
$L__BB0_57:
	cvt.rni.s32.f64 	%r273, %fd399;
	st.local.u32 	[%r1], %r273;
	cvt.rn.f64.s32 	%fd268, %r273;
	neg.f64 	%fd269, %fd268;
	fma.rn.f64 	%fd271, %fd269, %fd395, %fd46;
	fma.rn.f64 	%fd273, %fd269, %fd396, %fd271;
	fma.rn.f64 	%fd423, %fd269, %fd397, %fd273;
	setp.ltu.f64 	%p152, %fd398, 0d41E0000000000000;
	@%p152 bra 	$L__BB0_59;
	{ // callseq 8, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd46;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd423, [retval0+0];
	} // callseq 8
	ld.local.u32 	%r273, [%r1];
$L__BB0_59:
	.loc	1 0 26
	selp.f64 	%fd166, %fd163, %fd165, %p135;
	and.b32  	%r203, %r266, 2;
	mov.f64 	%fd168, 0dBFF0000000000000;
	selp.f64 	%fd198, %fd195, %fd197, %p140;
	and.b32  	%r210, %r268, 2;
	selp.f64 	%fd230, %fd227, %fd229, %p145;
	and.b32  	%r217, %r270, 2;
	selp.f64 	%fd262, %fd259, %fd261, %p150;
	and.b32  	%r224, %r272, 2;
	.loc	1 52 26
	and.b32  	%r226, %r273, 1;
	shl.b32 	%r227, %r226, 3;
	mul.wide.u32 	%rd60, %r227, 8;
	add.s64 	%rd62, %rd45, %rd60;
	mul.rn.f64 	%fd277, %fd423, %fd423;
	setp.eq.s32 	%p153, %r226, 0;
	selp.f64 	%fd278, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p153;
	ld.global.nc.f64 	%fd279, [%rd62+8];
	fma.rn.f64 	%fd280, %fd278, %fd277, %fd279;
	ld.global.nc.f64 	%fd281, [%rd62+16];
	fma.rn.f64 	%fd282, %fd280, %fd277, %fd281;
	ld.global.nc.f64 	%fd283, [%rd62+24];
	fma.rn.f64 	%fd284, %fd282, %fd277, %fd283;
	ld.global.nc.f64 	%fd285, [%rd62+32];
	fma.rn.f64 	%fd286, %fd284, %fd277, %fd285;
	ld.global.nc.f64 	%fd287, [%rd62+40];
	fma.rn.f64 	%fd288, %fd286, %fd277, %fd287;
	ld.global.nc.f64 	%fd289, [%rd62+48];
	fma.rn.f64 	%fd290, %fd288, %fd277, %fd289;
	fma.rn.f64 	%fd291, %fd290, %fd423, %fd423;
	fma.rn.f64 	%fd293, %fd290, %fd277, %fd164;
	selp.f64 	%fd294, %fd291, %fd293, %p153;
	and.b32  	%r228, %r273, 2;
	@%p14 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_60;
$L__BB0_74:
	mul.rn.f64 	%fd424, %fd47, %fd406;
	mov.b32 	%r274, 0;
	bra.uni 	$L__BB0_62;
$L__BB0_60:
	cvt.rni.s32.f64 	%r274, %fd401;
	st.local.u32 	[%r1], %r274;
	cvt.rn.f64.s32 	%fd300, %r274;
	neg.f64 	%fd301, %fd300;
	fma.rn.f64 	%fd303, %fd301, %fd395, %fd47;
	fma.rn.f64 	%fd305, %fd301, %fd396, %fd303;
	fma.rn.f64 	%fd424, %fd301, %fd397, %fd305;
	setp.ltu.f64 	%p155, %fd400, 0d41E0000000000000;
	@%p155 bra 	$L__BB0_62;
	{ // callseq 9, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd47;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd424, [retval0+0];
	} // callseq 9
	ld.local.u32 	%r274, [%r1];
$L__BB0_62:
	.loc	1 0 26
	setp.eq.s32 	%p136, %r203, 0;
	fma.rn.f64 	%fd169, %fd166, %fd168, %fd406;
	setp.eq.s32 	%p141, %r210, 0;
	fma.rn.f64 	%fd201, %fd198, %fd168, %fd406;
	setp.eq.s32 	%p146, %r217, 0;
	fma.rn.f64 	%fd233, %fd230, %fd168, %fd406;
	setp.eq.s32 	%p151, %r224, 0;
	fma.rn.f64 	%fd265, %fd262, %fd168, %fd406;
	.loc	1 52 26
	setp.eq.s32 	%p154, %r228, 0;
	fma.rn.f64 	%fd297, %fd294, %fd168, %fd406;
	and.b32  	%r230, %r274, 1;
	shl.b32 	%r231, %r230, 3;
	mul.wide.u32 	%rd64, %r231, 8;
	add.s64 	%rd66, %rd45, %rd64;
	mul.rn.f64 	%fd309, %fd424, %fd424;
	setp.eq.s32 	%p156, %r230, 0;
	selp.f64 	%fd310, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p156;
	ld.global.nc.f64 	%fd311, [%rd66+8];
	fma.rn.f64 	%fd312, %fd310, %fd309, %fd311;
	ld.global.nc.f64 	%fd313, [%rd66+16];
	fma.rn.f64 	%fd314, %fd312, %fd309, %fd313;
	ld.global.nc.f64 	%fd315, [%rd66+24];
	fma.rn.f64 	%fd316, %fd314, %fd309, %fd315;
	ld.global.nc.f64 	%fd317, [%rd66+32];
	fma.rn.f64 	%fd318, %fd316, %fd309, %fd317;
	ld.global.nc.f64 	%fd319, [%rd66+40];
	fma.rn.f64 	%fd320, %fd318, %fd309, %fd319;
	ld.global.nc.f64 	%fd321, [%rd66+48];
	fma.rn.f64 	%fd322, %fd320, %fd309, %fd321;
	fma.rn.f64 	%fd323, %fd322, %fd424, %fd424;
	fma.rn.f64 	%fd325, %fd322, %fd309, %fd164;
	selp.f64 	%fd326, %fd323, %fd325, %p156;
	and.b32  	%r232, %r274, 2;
	setp.eq.s32 	%p157, %r232, 0;
	fma.rn.f64 	%fd329, %fd326, %fd168, %fd406;
	@%p15 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_63;
$L__BB0_75:
	mul.rn.f64 	%fd425, %fd48, %fd406;
	mov.b32 	%r275, 0;
	bra.uni 	$L__BB0_65;
$L__BB0_63:
	cvt.rni.s32.f64 	%r275, %fd403;
	st.local.u32 	[%r1], %r275;
	cvt.rn.f64.s32 	%fd332, %r275;
	neg.f64 	%fd333, %fd332;
	fma.rn.f64 	%fd335, %fd333, %fd395, %fd48;
	fma.rn.f64 	%fd337, %fd333, %fd396, %fd335;
	fma.rn.f64 	%fd425, %fd333, %fd397, %fd337;
	setp.ltu.f64 	%p158, %fd402, 0d41E0000000000000;
	@%p158 bra 	$L__BB0_65;
	{ // callseq 10, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd48;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd425, [retval0+0];
	} // callseq 10
	ld.local.u32 	%r275, [%r1];
$L__BB0_65:
	.loc	1 0 26
	ld.param.u64 	%rd6, [triton__param_3];
	ld.param.u64 	%rd5, [triton__param_2];
	selp.f64 	%fd55, %fd166, %fd169, %p136;
	selp.f64 	%fd61, %fd198, %fd201, %p141;
	selp.f64 	%fd67, %fd230, %fd233, %p146;
	selp.f64 	%fd73, %fd262, %fd265, %p151;
	.loc	1 52 26
	selp.f64 	%fd78, %fd294, %fd297, %p154;
	selp.f64 	%fd83, %fd326, %fd329, %p157;
	and.b32  	%r234, %r275, 1;
	shl.b32 	%r235, %r234, 3;
	mul.wide.u32 	%rd68, %r235, 8;
	add.s64 	%rd70, %rd45, %rd68;
	mul.rn.f64 	%fd341, %fd425, %fd425;
	setp.eq.s32 	%p159, %r234, 0;
	selp.f64 	%fd342, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p159;
	ld.global.nc.f64 	%fd343, [%rd70+8];
	fma.rn.f64 	%fd344, %fd342, %fd341, %fd343;
	ld.global.nc.f64 	%fd345, [%rd70+16];
	fma.rn.f64 	%fd346, %fd344, %fd341, %fd345;
	ld.global.nc.f64 	%fd347, [%rd70+24];
	fma.rn.f64 	%fd348, %fd346, %fd341, %fd347;
	ld.global.nc.f64 	%fd349, [%rd70+32];
	fma.rn.f64 	%fd350, %fd348, %fd341, %fd349;
	ld.global.nc.f64 	%fd351, [%rd70+40];
	fma.rn.f64 	%fd352, %fd350, %fd341, %fd351;
	ld.global.nc.f64 	%fd353, [%rd70+48];
	fma.rn.f64 	%fd354, %fd352, %fd341, %fd353;
	fma.rn.f64 	%fd355, %fd354, %fd425, %fd425;
	fma.rn.f64 	%fd357, %fd354, %fd341, %fd164;
	selp.f64 	%fd358, %fd355, %fd357, %p159;
	and.b32  	%r236, %r275, 2;
	setp.eq.s32 	%p160, %r236, 0;
	fma.rn.f64 	%fd361, %fd358, %fd168, %fd406;
	selp.f64 	%fd88, %fd358, %fd361, %p160;
	@%p16 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_66;
$L__BB0_76:
	.loc	1 0 26
	mov.b32 	%r276, 0;
	.loc	1 52 26
	mul.rn.f64 	%fd426, %fd49, %fd406;
	bra.uni 	$L__BB0_68;
$L__BB0_66:
	cvt.rni.s32.f64 	%r276, %fd405;
	st.local.u32 	[%r1], %r276;
	cvt.rn.f64.s32 	%fd364, %r276;
	neg.f64 	%fd365, %fd364;
	fma.rn.f64 	%fd367, %fd365, %fd395, %fd49;
	fma.rn.f64 	%fd369, %fd365, %fd396, %fd367;
	fma.rn.f64 	%fd426, %fd365, %fd397, %fd369;
	setp.ltu.f64 	%p161, %fd404, 0d41E0000000000000;
	@%p161 bra 	$L__BB0_68;
	{ // callseq 11, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd49;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd426, [retval0+0];
	} // callseq 11
	ld.local.u32 	%r276, [%r1];
$L__BB0_68:
	and.b32  	%r246, %r276, 1;
	shl.b32 	%r247, %r246, 3;
	mul.wide.u32 	%rd74, %r247, 8;
	add.s64 	%rd76, %rd45, %rd74;
	mul.rn.f64 	%fd373, %fd426, %fd426;
	setp.eq.s32 	%p164, %r246, 0;
	selp.f64 	%fd374, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p164;
	ld.global.nc.f64 	%fd375, [%rd76+8];
	fma.rn.f64 	%fd376, %fd374, %fd373, %fd375;
	ld.global.nc.f64 	%fd377, [%rd76+16];
	fma.rn.f64 	%fd378, %fd376, %fd373, %fd377;
	ld.global.nc.f64 	%fd379, [%rd76+24];
	fma.rn.f64 	%fd380, %fd378, %fd373, %fd379;
	ld.global.nc.f64 	%fd381, [%rd76+32];
	fma.rn.f64 	%fd382, %fd380, %fd373, %fd381;
	ld.global.nc.f64 	%fd383, [%rd76+40];
	fma.rn.f64 	%fd384, %fd382, %fd373, %fd383;
	ld.global.nc.f64 	%fd385, [%rd76+48];
	fma.rn.f64 	%fd386, %fd384, %fd373, %fd385;
	fma.rn.f64 	%fd387, %fd386, %fd426, %fd426;
	fma.rn.f64 	%fd389, %fd386, %fd373, %fd164;
	selp.f64 	%fd390, %fd387, %fd389, %p164;
	and.b32  	%r248, %r276, 2;
	setp.eq.s32 	%p165, %r248, 0;
	fma.rn.f64 	%fd393, %fd390, %fd168, %fd406;
	selp.f64 	%fd394, %fd390, %fd393, %p165;
	.loc	1 51 21
	cvt.rn.f32.f64 	%f13, %fd73;
	cvt.rn.f32.f64 	%f14, %fd67;
	cvt.rn.f32.f64 	%f15, %fd61;
	cvt.rn.f32.f64 	%f16, %fd55;
	.loc	1 53 21
	cvt.rn.f32.f64 	%f17, %fd78;
	cvt.rn.f32.f64 	%f18, %fd83;
	cvt.rn.f32.f64 	%f19, %fd88;
	cvt.rn.f32.f64 	%f20, %fd394;
	.loc	1 54 35
	shl.b32 	%r249, %r10, 7;
	.loc	1 54 31
	add.s32 	%r250, %r249, %r11;
	.loc	1 54 25
	mul.wide.s32 	%rd77, %r250, 4;
	add.s64 	%rd72, %rd5, %rd77;
	.loc	1 54 48
	mov.b32 	%r238, %f16;
	mov.b32 	%r239, %f15;
	mov.b32 	%r240, %f14;
	mov.b32 	%r241, %f13;
	// begin inline asm
	@%p162 st.global.v4.b32 [ %rd72 + 0 ], { %r238, %r239, %r240, %r241 };
	// end inline asm
	.loc	1 55 25
	add.s64 	%rd73, %rd6, %rd77;
	.loc	1 55 48
	mov.b32 	%r242, %f17;
	mov.b32 	%r243, %f18;
	mov.b32 	%r244, %f19;
	mov.b32 	%r245, %f20;
	// begin inline asm
	@%p162 st.global.v4.b32 [ %rd73 + 0 ], { %r242, %r243, %r244, %r245 };
	// end inline asm
	.loc	1 55 4
	ret;
$L__tmp1:
$L__func_end0:

}
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<86>;
	.reg .f64 	%fd<5>;
$L__func_begin1:

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd4;
	}
	bfe.u32 	%r4, %r22, 20, 11;
	setp.eq.s32 	%p1, %r4, 2047;
	@%p1 bra 	$L__BB1_13;
	add.u64 	%rd27, %SP, 0;
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd27;
	  cvt.u32.u64 	%r1, %tmp; }
	shr.u32 	%r3, %r22, 20;
	add.s32 	%r23, %r4, -1024;
	shr.u32 	%r5, %r23, 6;
	mov.b32 	%r24, 15;
	sub.s32 	%r43, %r24, %r5;
	mov.b32 	%r25, 19;
	sub.s32 	%r26, %r25, %r5;
	setp.lt.u32 	%p2, %r23, 128;
	selp.b32 	%r45, 18, %r26, %p2;
	setp.ge.s32 	%p3, %r43, %r45;
	@%p3 bra 	$L__BB1_14;
	mov.b64 	%rd28, %fd4;
	shl.b64 	%rd29, %rd28, 11;
	or.b64  	%rd38, %rd29, -9223372036854775808;
	neg.s32 	%r44, %r5;
	mul.wide.s32 	%rd32, %r44, 8;
	mov.u64 	%rd33, __cudart_i2opi_d;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd77, %rd34, 120;
	mov.u64 	%rd79, 0;
	mov.u32 	%r42, %r1;
$L__BB1_3:
	.pragma "nounroll";
	ld.global.nc.u64 	%rd37, [%rd77];
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd37;    
	mov.b64         {blo,bhi}, %rd38;    
	mov.b64         {clo,chi}, %rd79;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd35, {r0,r1};      
	mov.b64         %rd79, {r2,r3};      
	}
	// end inline asm
	st.local.u64 	[%r42], %rd35;
	add.s32 	%r43, %r43, 1;
	add.s32 	%r42, %r42, 8;
	add.s64 	%rd77, %rd77, 8;
	setp.lt.s32 	%p4, %r43, %r45;
	@%p4 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_4;
$L__BB1_14:
	neg.s32 	%r44, %r5;
	mov.u64 	%rd79, 0;
	mov.u32 	%r45, %r43;
$L__BB1_4:
	ld.param.u64 	%rd26, [__internal_trig_reduction_slowpathd_param_1];
	and.b32  	%r46, %r22, -2147483648;
	sub.s32 	%r27, %r45, %r44;
	shl.b32 	%r28, %r27, 3;
	add.s32 	%r29, %r1, %r28;
	st.local.u64 	[%r29+-120], %rd79;
	and.b32  	%r16, %r3, 63;
	ld.local.u64 	%rd81, [%r1+16];
	ld.local.u64 	%rd80, [%r1+24];
	setp.eq.s32 	%p5, %r16, 0;
	mov.b32 	%r41, 64;
	@%p5 bra 	$L__BB1_6;
	sub.s32 	%r31, %r41, %r16;
	shl.b64 	%rd40, %rd80, %r16;
	shr.u64 	%rd41, %rd81, %r31;
	or.b64  	%rd80, %rd40, %rd41;
	shl.b64 	%rd42, %rd81, %r16;
	ld.local.u64 	%rd43, [%r1+8];
	shr.u64 	%rd44, %rd43, %r31;
	or.b64  	%rd81, %rd44, %rd42;
$L__BB1_6:
	shr.u64 	%rd45, %rd80, 62;
	cvt.u32.u64 	%r32, %rd45;
	shr.u64 	%rd46, %rd81, 62;
	shl.b64 	%rd47, %rd80, 2;
	or.b64  	%rd84, %rd47, %rd46;
	shl.b64 	%rd83, %rd81, 2;
	bfe.u64 	%rd48, %rd80, 61, 1;
	cvt.u32.u64 	%r33, %rd48;
	add.s32 	%r34, %r33, %r32;
	setp.eq.s32 	%p6, %r46, 0;
	neg.s32 	%r35, %r34;
	selp.b32 	%r36, %r34, %r35, %p6;
	st.u32 	[%rd26], %r36;
	setp.gt.s64 	%p7, %rd84, -1;
	@%p7 bra 	$L__BB1_8;
	xor.b32  	%r46, %r46, -2147483648;
	mov.u64 	%rd51, 0;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd51;
	mov.b64         {a2,a3}, %rd51;
	mov.b64         {b0,b1}, %rd83;
	mov.b64         {b2,b3}, %rd84;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd83, {r0,r1};
	mov.b64         %rd84, {r2,r3};
	}
	// end inline asm
$L__BB1_8:
	clz.b64 	%r47, %rd84;
	setp.eq.s32 	%p8, %r47, 0;
	@%p8 bra 	$L__BB1_10;
	shl.b64 	%rd55, %rd84, %r47;
	sub.s32 	%r38, %r41, %r47;
	shr.u64 	%rd56, %rd83, %r38;
	or.b64  	%rd84, %rd56, %rd55;
$L__BB1_10:
	mov.u64 	%rd60, -3958705157555305931;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd84;   
	mov.b64         {blo,bhi}, %rd60;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd63, {r0,r1};     
	mov.b64         %rd85, {r2,r3};     
	}
	// end inline asm
	setp.lt.s64 	%p9, %rd85, 1;
	@%p9 bra 	$L__BB1_12;
	add.s32 	%r47, %r47, 1;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd63;
	mov.b64         {a2,a3}, %rd85;
	mov.b64         {b0,b1}, %rd63;
	mov.b64         {b2,b3}, %rd85;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd61, {r0,r1};
	mov.b64         %rd85, {r2,r3};
	}
	// end inline asm
$L__BB1_12:
	mov.b32 	%r39, 1022;
	sub.s32 	%r40, %r39, %r47;
	cvt.u64.u32 	%rd67, %r40;
	cvt.u64.u32 	%rd68, %r46;
	shl.b64 	%rd69, %rd68, 32;
	shl.b64 	%rd70, %rd67, 52;
	add.s64 	%rd71, %rd85, 1;
	shr.u64 	%rd72, %rd71, 10;
	add.s64 	%rd73, %rd72, 1;
	shr.u64 	%rd74, %rd73, 1;
	add.s64 	%rd75, %rd70, %rd74;
	or.b64  	%rd76, %rd75, %rd69;
	mov.b64 	%fd4, %rd76;
$L__BB1_13:
	st.param.f64 	[func_retval0+0], %fd4;
	ret;
$L__func_end1:

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<134>;
$L__func_begin2:

	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd12;
	}
	shr.u32 	%r50, %r49, 20;
	setp.gt.u32 	%p1, %r49, 1048575;
	@%p1 bra 	$L__BB2_2;
	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd13;
	}
	shr.u32 	%r16, %r49, 20;
	add.s32 	%r50, %r16, -54;
$L__BB2_2:
	ld.param.f64 	%fd11, [__internal_accurate_pow_param_1];
	add.s32 	%r51, %r50, -1023;
	and.b32  	%r17, %r49, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd132, {%r48, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB2_4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd132;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd132;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd132, {%r19, %r21};
	add.s32 	%r51, %r50, -1022;
$L__BB2_4:
	add.f64 	%fd14, %fd132, 0dBFF0000000000000;
	add.f64 	%fd15, %fd132, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd15;
	neg.f64 	%fd17, %fd15;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd16, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd16, %fd16;
	mul.f64 	%fd22, %fd14, %fd21;
	fma.rn.f64 	%fd23, %fd14, %fd21, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd14, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd14, %fd39;
	mul.f64 	%fd42, %fd21, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd48, %fd43, %fd47;
	sub.f64 	%fd49, %fd43, %fd48;
	add.f64 	%fd50, %fd47, %fd49;
	mul.rn.f64 	%fd51, %fd23, %fd23;
	neg.f64 	%fd52, %fd51;
	fma.rn.f64 	%fd53, %fd23, %fd23, %fd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd54, {%r22, %r24};
	fma.rn.f64 	%fd55, %fd23, %fd54, %fd53;
	mul.rn.f64 	%fd56, %fd51, %fd23;
	neg.f64 	%fd57, %fd56;
	fma.rn.f64 	%fd58, %fd51, %fd23, %fd57;
	fma.rn.f64 	%fd59, %fd51, %fd42, %fd58;
	fma.rn.f64 	%fd60, %fd55, %fd23, %fd59;
	mul.rn.f64 	%fd61, %fd48, %fd56;
	neg.f64 	%fd62, %fd61;
	fma.rn.f64 	%fd63, %fd48, %fd56, %fd62;
	fma.rn.f64 	%fd64, %fd48, %fd60, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd56, %fd64;
	add.f64 	%fd66, %fd61, %fd65;
	sub.f64 	%fd67, %fd61, %fd66;
	add.f64 	%fd68, %fd65, %fd67;
	add.f64 	%fd69, %fd23, %fd66;
	sub.f64 	%fd70, %fd23, %fd69;
	add.f64 	%fd71, %fd66, %fd70;
	add.f64 	%fd72, %fd68, %fd71;
	fma.rn.f64 	%fd73, %fd21, %fd41, %fd72;
	add.f64 	%fd74, %fd69, %fd73;
	sub.f64 	%fd75, %fd69, %fd74;
	add.f64 	%fd76, %fd73, %fd75;
	xor.b32  	%r25, %r51, -2147483648;
	mov.b32 	%r26, 1127219200;
	mov.b64 	%fd77, {%r25, %r26};
	mov.b32 	%r27, -2147483648;
	mov.b64 	%fd78, {%r27, %r26};
	sub.f64 	%fd79, %fd77, %fd78;
	mov.f64 	%fd80, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd81, %fd79, %fd80, %fd74;
	neg.f64 	%fd82, %fd79;
	fma.rn.f64 	%fd83, %fd82, %fd80, %fd81;
	sub.f64 	%fd84, %fd83, %fd74;
	sub.f64 	%fd85, %fd76, %fd84;
	mov.f64 	%fd86, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd87, %fd79, %fd86, %fd85;
	add.f64 	%fd88, %fd81, %fd87;
	sub.f64 	%fd89, %fd81, %fd88;
	add.f64 	%fd90, %fd87, %fd89;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd11;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd11;
	}
	shl.b32 	%r30, %r28, 1;
	setp.gt.u32 	%p3, %r30, -33554433;
	and.b32  	%r31, %r28, -15728641;
	selp.b32 	%r32, %r31, %r28, %p3;
	mov.b64 	%fd91, {%r29, %r32};
	mul.rn.f64 	%fd4, %fd88, %fd91;
	neg.f64 	%fd92, %fd4;
	fma.rn.f64 	%fd93, %fd88, %fd91, %fd92;
	fma.rn.f64 	%fd5, %fd90, %fd91, %fd93;
	add.f64 	%fd6, %fd4, %fd5;
	mov.f64 	%fd94, 0d4338000000000000;
	mov.f64 	%fd95, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd96, %fd6, %fd95, %fd94;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd96;
	}
	mov.f64 	%fd97, 0dC338000000000000;
	add.rn.f64 	%fd98, %fd96, %fd97;
	mov.f64 	%fd99, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd100, %fd98, %fd99, %fd6;
	mov.f64 	%fd101, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd102, %fd98, %fd101, %fd100;
	mov.f64 	%fd103, 0d3E928AF3FCA213EA;
	mov.f64 	%fd104, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd105, %fd104, %fd102, %fd103;
	mov.f64 	%fd106, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd107, %fd105, %fd102, %fd106;
	mov.f64 	%fd108, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd109, %fd107, %fd102, %fd108;
	mov.f64 	%fd110, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd111, %fd109, %fd102, %fd110;
	mov.f64 	%fd112, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd113, %fd111, %fd102, %fd112;
	mov.f64 	%fd114, 0d3F81111111122322;
	fma.rn.f64 	%fd115, %fd113, %fd102, %fd114;
	mov.f64 	%fd116, 0d3FA55555555502A1;
	fma.rn.f64 	%fd117, %fd115, %fd102, %fd116;
	mov.f64 	%fd118, 0d3FC5555555555511;
	fma.rn.f64 	%fd119, %fd117, %fd102, %fd118;
	mov.f64 	%fd120, 0d3FE000000000000B;
	fma.rn.f64 	%fd121, %fd119, %fd102, %fd120;
	fma.rn.f64 	%fd122, %fd121, %fd102, %fd18;
	fma.rn.f64 	%fd123, %fd122, %fd102, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd123;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd123;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd133, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd6;
	}
	mov.b32 	%f2, %r35;
	abs.ftz.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB2_7;
	setp.lt.f64 	%p5, %fd6, 0d0000000000000000;
	add.f64 	%fd124, %fd6, 0d7FF0000000000000;
	selp.f64 	%fd133, 0d0000000000000000, %fd124, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB2_7;
	shr.u32 	%r36, %r13, 31;
	add.s32 	%r37, %r13, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd125, {%r14, %r40};
	sub.s32 	%r41, %r13, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.b32 	%r44, 0;
	mov.b64 	%fd126, {%r44, %r43};
	mul.f64 	%fd133, %fd126, %fd125;
$L__BB2_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd133;
	}
	and.b32  	%r47, %r46, 2147483647;
	setp.eq.s32 	%p7, %r47, 2146435072;
	setp.eq.s32 	%p8, %r45, 0;
	sub.f64 	%fd127, %fd4, %fd6;
	add.f64 	%fd128, %fd5, %fd127;
	fma.rn.f64 	%fd129, %fd133, %fd128, %fd133;
	selp.f64 	%fd130, %fd133, %fd129, %p8;
	selp.f64 	%fd131, %fd130, %fd129, %p7;
	st.param.f64 	[func_retval0+0], %fd131;
	ret;
$L__func_end2:

}
	.file	1 "/opt/inductor_cache/t3/ct33m6ck2e6qsmkfzbxbrztvwsjrjuazj2ex4kr24zxm25en4oxn.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 116
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 116
.b8 51
.b8 51
.b8 109
.b8 54
.b8 99
.b8 107
.b8 50
.b8 101
.b8 54
.b8 113
.b8 115
.b8 109
.b8 107
.b8 102
.b8 122
.b8 98
.b8 120
.b8 98
.b8 114
.b8 122
.b8 116
.b8 118
.b8 119
.b8 115
.b8 106
.b8 114
.b8 106
.b8 117
.b8 97
.b8 122
.b8 106
.b8 50
.b8 101
.b8 120
.b8 52
.b8 107
.b8 114
.b8 50
.b8 52
.b8 122
.b8 120
.b8 109
.b8 50
.b8 53
.b8 101
.b8 110
.b8 52
.b8 111
.b8 120
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 51
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
