//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u64 triton__param_7,
	.param .u64 triton__param_8,
	.param .u32 triton__param_9,
	.param .u32 triton__param_10,
	.param .u32 triton__param_11
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b16 	%rs<15>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<43>;
	.reg .b64 	%rd<28>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd12, [triton__param_0];
	ld.param.u64 	%rd13, [triton__param_1];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r49, %r1, 9;
	ld.param.u64 	%rd14, [triton__param_2];
	ld.param.u64 	%rd15, [triton__param_3];
	.loc	1 20 36
	mov.u32 	%r50, %tid.x;
	shl.b32 	%r51, %r50, 1;
	ld.param.u64 	%rd16, [triton__param_4];
	and.b32  	%r52, %r51, 510;
	ld.param.u64 	%rd17, [triton__param_5];
	.loc	1 20 23
	or.b32  	%r53, %r49, %r52;
	ld.param.u64 	%rd18, [triton__param_6];
	ld.param.u32 	%r54, [triton__param_11];
	.loc	1 21 21
	setp.lt.s32 	%p21, %r53, %r54;
	ld.param.u64 	%rd19, [triton__param_7];
	ld.param.u64 	%rd20, [triton__param_8];
	.loc	1 22 20
	mul.hi.s32 	%r56, %r53, 715827883;
	shr.u32 	%r57, %r56, 31;
	shr.s32 	%r58, %r56, 9;
	add.s32 	%r59, %r58, %r57;
	ld.param.u32 	%r60, [triton__param_9];
	mul.lo.s32 	%r61, %r59, 3072;
	sub.s32 	%r62, %r53, %r61;
	.loc	1 24 20
	shr.s32 	%r63, %r53, 31;
	shr.u32 	%r64, %r63, 25;
	add.s32 	%r65, %r53, %r64;
	shr.s32 	%r66, %r65, 7;
	.loc	1 24 27
	mul.hi.s32 	%r67, %r66, 715827883;
	shr.u32 	%r68, %r67, 31;
	shr.u32 	%r69, %r67, 2;
	add.s32 	%r70, %r69, %r68;
	mul.lo.s32 	%r71, %r70, 24;
	sub.s32 	%r72, %r66, %r71;
	and.b32  	%r73, %r65, -128;
	sub.s32 	%r74, %r53, %r73;
	.loc	1 31 18
	setp.lt.s32 	%p22, %r59, %r60;
	.loc	1 32 30
	mul.wide.s32 	%rd21, %r53, 2;
	add.s64 	%rd1, %rd12, %rd21;
	.loc	1 32 54
	and.pred  	%p1, %p21, %p22;
	mov.b32 	%r3, 0;
	.loc	1 32 47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	cvt.u16.u32 	%rs1, %r2;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r2; }
	.loc	1 32 75
	// begin inline asm
	cvt.f32.bf16 %r4, %rs1;
	// end inline asm
	mov.b32 	%f1, %r4;
	// begin inline asm
	cvt.f32.bf16 %r5, %rs2;
	// end inline asm
	mov.b32 	%f2, %r5;
	.loc	1 33 30
	mul.wide.s32 	%rd22, %r62, 2;
	add.s64 	%rd2, %rd13, %rd22;
	.loc	1 33 35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	cvt.u16.u32 	%rs3, %r6;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r6; }
	.loc	1 33 93
	// begin inline asm
	cvt.f32.bf16 %r8, %rs3;
	// end inline asm
	mov.b32 	%f3, %r8;
	// begin inline asm
	cvt.f32.bf16 %r9, %rs4;
	// end inline asm
	mov.b32 	%f4, %r9;
	.loc	1 35 36
	mad.lo.s32 	%r75, %r59, 24, %r72;
	.loc	1 35 30
	mul.wide.s32 	%rd23, %r75, 4;
	add.s64 	%rd3, %rd14, %rd23;
	.loc	1 35 45
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r15, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r3;
	// end inline asm
	mov.b32 	%r16, 1124073472;
	.loc	1 37 19
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	div.full.f32 %r17, %r18, %r16;
	// end inline asm
	mov.b32 	%f6, %r17;
	.loc	1 40 20
	add.f32 	%f7, %f5, 0f358637BD;
	add.f32 	%f8, %f6, 0f358637BD;
	.loc	1 41 28
	rsqrt.approx.ftz.f32 	%f9, %f7;
	rsqrt.approx.ftz.f32 	%f10, %f8;
	.loc	1 43 31
	mul.wide.s32 	%rd24, %r74, 2;
	add.s64 	%rd5, %rd15, %rd24;
	.loc	1 43 36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r20, %r3;
	// end inline asm
	cvt.u16.u32 	%rs5, %r20;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r20; }
	.loc	1 43 94
	// begin inline asm
	cvt.f32.bf16 %r22, %rs5;
	// end inline asm
	mov.b32 	%f11, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs6;
	// end inline asm
	mov.b32 	%f12, %r23;
	.loc	1 49 20
	setp.ge.s32 	%p23, %r59, %r60;
	.loc	1 52 49
	sub.s32 	%r76, %r59, %r60;
	.loc	1 52 37
	mad.lo.s32 	%r77, %r76, 3072, %r62;
	.loc	1 52 31
	mul.wide.s32 	%rd25, %r77, 2;
	add.s64 	%rd6, %rd16, %rd25;
	.loc	1 52 71
	and.pred  	%p11, %p21, %p23;
	.loc	1 52 63
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p11 ld.global.b32 { %r24 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r24, %r3;
	// end inline asm
	cvt.u16.u32 	%rs7, %r24;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r24; }
	.loc	1 52 92
	// begin inline asm
	cvt.f32.bf16 %r26, %rs7;
	// end inline asm
	mov.b32 	%f13, %r26;
	// begin inline asm
	cvt.f32.bf16 %r27, %rs8;
	// end inline asm
	mov.b32 	%f14, %r27;
	.loc	1 53 31
	add.s64 	%rd7, %rd17, %rd22;
	.loc	1 53 36
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r28 }, [ %rd7 + 0 ];
	@!%p11 mov.u32 %r28, %r3;
	// end inline asm
	cvt.u16.u32 	%rs9, %r28;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r28; }
	.loc	1 53 95
	// begin inline asm
	cvt.f32.bf16 %r30, %rs9;
	// end inline asm
	mov.b32 	%f15, %r30;
	// begin inline asm
	cvt.f32.bf16 %r31, %rs10;
	// end inline asm
	mov.b32 	%f16, %r31;
	.loc	1 55 37
	mad.lo.s32 	%r78, %r76, 24, %r72;
	.loc	1 55 31
	mul.wide.s32 	%rd26, %r78, 4;
	add.s64 	%rd8, %rd18, %rd26;
	.loc	1 55 61
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r37 }, [ %rd8 + 0 ];
	@!%p11 mov.u32 %r37, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r40 }, [ %rd8 + 0 ];
	@!%p11 mov.u32 %r40, %r3;
	// end inline asm
	.loc	1 56 20
	// begin inline asm
	div.full.f32 %r36, %r37, %r16;
	// end inline asm
	mov.b32 	%f17, %r36;
	// begin inline asm
	div.full.f32 %r39, %r40, %r16;
	// end inline asm
	mov.b32 	%f18, %r39;
	.loc	1 58 20
	add.f32 	%f19, %f17, 0f358637BD;
	add.f32 	%f20, %f18, 0f358637BD;
	.loc	1 59 28
	rsqrt.approx.ftz.f32 	%f21, %f19;
	rsqrt.approx.ftz.f32 	%f22, %f20;
	.loc	1 54 20
	add.f32 	%f23, %f14, %f16;
	add.f32 	%f24, %f13, %f15;
	.loc	1 34 18
	add.f32 	%f25, %f2, %f4;
	.loc	1 42 19
	mul.f32 	%f26, %f25, %f10;
	.loc	1 45 20
	add.f32 	%f27, %f12, 0f00000000;
	.loc	1 46 20
	mul.f32 	%f28, %f26, %f27;
	.loc	1 34 18
	add.f32 	%f29, %f1, %f3;
	.loc	1 42 19
	mul.f32 	%f30, %f29, %f9;
	.loc	1 45 20
	add.f32 	%f31, %f11, 0f00000000;
	.loc	1 46 20
	mul.f32 	%f32, %f30, %f31;
	.loc	1 60 20
	mul.f32 	%f33, %f24, %f21;
	mul.f32 	%f34, %f23, %f22;
	.loc	1 61 31
	add.s64 	%rd10, %rd19, %rd24;
	.loc	1 61 36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r42 }, [ %rd10 + 0 ];
	@!%p11 mov.u32 %r42, %r3;
	// end inline asm
	cvt.u16.u32 	%rs11, %r42;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r42; }
	.loc	1 61 95
	// begin inline asm
	cvt.f32.bf16 %r44, %rs11;
	// end inline asm
	mov.b32 	%f35, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs12;
	// end inline asm
	mov.b32 	%f36, %r45;
	.loc	1 62 20
	add.f32 	%f37, %f35, 0f00000000;
	add.f32 	%f38, %f36, 0f00000000;
	.loc	1 63 20
	mul.f32 	%f39, %f33, %f37;
	mul.f32 	%f40, %f34, %f38;
	.loc	1 0 0
	selp.f32 	%f41, %f32, %f39, %p22;
	selp.f32 	%f42, %f28, %f40, %p22;
	.loc	1 67 25
	add.s64 	%rd11, %rd20, %rd21;
	.loc	1 67 37
	mov.b32 	%r46, %f41;
	// begin inline asm
	cvt.rn.bf16.f32 %rs13, %r46;
	// end inline asm
	mov.b32 	%r47, %f42;
	// begin inline asm
	cvt.rn.bf16.f32 %rs14, %r47;
	// end inline asm
	mov.b32 	%r79, {%rs13, %rs14};
	// begin inline asm
	@%p21 st.global.b32 [ %rd11 + 0 ], { %r79 };
	// end inline asm
	.loc	1 67 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/ii/ciim4s22lv6mweikjg2pvbi4gwpnqx4slg6g72szpowwilitngre.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 116
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 105
.b8 105
.b8 109
.b8 52
.b8 115
.b8 50
.b8 50
.b8 108
.b8 118
.b8 54
.b8 109
.b8 119
.b8 101
.b8 105
.b8 107
.b8 106
.b8 103
.b8 50
.b8 112
.b8 118
.b8 98
.b8 105
.b8 52
.b8 103
.b8 119
.b8 112
.b8 110
.b8 113
.b8 120
.b8 52
.b8 115
.b8 108
.b8 103
.b8 54
.b8 103
.b8 55
.b8 50
.b8 115
.b8 122
.b8 112
.b8 111
.b8 119
.b8 119
.b8 105
.b8 108
.b8 105
.b8 116
.b8 110
.b8 103
.b8 114
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 105
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
