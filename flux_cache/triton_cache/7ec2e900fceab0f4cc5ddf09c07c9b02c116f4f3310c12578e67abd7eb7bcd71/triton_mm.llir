; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %4
  %5 = sdiv i32 %.frozen, 192, !dbg !11
  %6 = shl nsw i32 %5, 3, !dbg !12
  %7 = sub nsw i32 64, %6, !dbg !13
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 8), !dbg !14
  %9 = srem i32 %4, %8, !dbg !15
  %10 = add nsw i32 %6, %9, !dbg !16
  %11 = mul i32 %5, 192
  %.decomposed = sub i32 %.frozen, %11
  %12 = sdiv i32 %.decomposed, %8, !dbg !17
  %13 = shl i32 %10, 6, !dbg !18
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %15 = lshr i32 %14, 5, !dbg !19
  %16 = lshr i32 %14, 2, !dbg !19
  %17 = and i32 %16, 63, !dbg !19
  %18 = or disjoint i32 %13, %17, !dbg !20
  %19 = shl nsw i32 %12, 7, !dbg !21
  %20 = or disjoint i32 %17, 64, !dbg !22
  %21 = shl i32 %14, 3, !dbg !22
  %22 = and i32 %21, 24, !dbg !22
  %23 = or disjoint i32 %19, %17, !dbg !23
  %24 = or disjoint i32 %19, %20, !dbg !23
  %25 = srem i32 %18, 4096, !dbg !24
  %26 = srem i32 %23, 3072, !dbg !25
  %27 = srem i32 %24, 3072, !dbg !25
  %28 = shl nsw i32 %25, 6, !dbg !26
  %29 = or disjoint i32 %28, %22, !dbg !27
  %30 = sext i32 %29 to i64, !dbg !28
  %31 = getelementptr i16, ptr addrspace(1) %0, i64 %30, !dbg !28
  %32 = shl nsw i32 %26, 6, !dbg !29
  %33 = shl nsw i32 %27, 6, !dbg !29
  %34 = or disjoint i32 %32, %22, !dbg !30
  %35 = or disjoint i32 %33, %22, !dbg !30
  %36 = sext i32 %34 to i64, !dbg !31
  %37 = getelementptr i16, ptr addrspace(1) %1, i64 %36, !dbg !31
  %38 = sext i32 %35 to i64, !dbg !31
  %39 = getelementptr i16, ptr addrspace(1) %1, i64 %38, !dbg !31
  %40 = shl nuw nsw i32 %17, 5, !dbg !32
  %41 = xor i32 %21, %14, !dbg !32
  %42 = and i32 %41, 24, !dbg !32
  %43 = or disjoint i32 %40, %42, !dbg !32
  %44 = zext nneg i32 %43 to i64, !dbg !32
  %45 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %44, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %45, ptr addrspace(1) %31, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %46 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %44, !dbg !33
  %47 = shl nuw nsw i32 %20, 5, !dbg !33
  %48 = or disjoint i32 %47, %42, !dbg !33
  %49 = zext nneg i32 %48 to i64, !dbg !33
  %50 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %49, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %46, ptr addrspace(1) %37, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %50, ptr addrspace(1) %39, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %51 = getelementptr i8, ptr addrspace(1) %31, i64 64, !dbg !34
  %52 = getelementptr i8, ptr addrspace(1) %37, i64 64, !dbg !35
  %53 = getelementptr i8, ptr addrspace(1) %39, i64 64, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %54 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %44, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %54, ptr addrspace(1) %51, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %55 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %44, !dbg !33
  %56 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %49, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %55, ptr addrspace(1) %52, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %56, ptr addrspace(1) %53, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %57 = getelementptr i8, ptr addrspace(1) %31, i64 128, !dbg !34
  %58 = getelementptr i8, ptr addrspace(1) %37, i64 128, !dbg !35
  %59 = getelementptr i8, ptr addrspace(1) %39, i64 128, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %60 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %44, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %60, ptr addrspace(1) %57, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %61 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %44, !dbg !33
  %62 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %49, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %61, ptr addrspace(1) %58, i32 0, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %62, ptr addrspace(1) %59, i32 0, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %63 = and i32 %15, 134217724
  %64 = shl i32 %14, 1
  %65 = and i32 %64, 256
  %66 = zext nneg i32 %65 to i64
  %67 = or disjoint i64 %66, -9223371899382267904
  %68 = or disjoint i64 %66, -9223371899382267902
  br label %69, !dbg !36

69:                                               ; preds = %3, %69
  %70 = phi i32 [ -1, %3 ], [ %107, %69 ]
  %71 = phi i32 [ 2, %3 ], [ %234, %69 ]
  %.pn3281 = phi ptr addrspace(1) [ %59, %3 ], [ %231, %69 ]
  %.pn4880 = phi ptr addrspace(1) [ %58, %3 ], [ %230, %69 ]
  %.pn1679 = phi ptr addrspace(1) [ %57, %3 ], [ %229, %69 ]
  %72 = phi float [ 0.000000e+00, %3 ], [ %197, %69 ]
  %73 = phi float [ 0.000000e+00, %3 ], [ %198, %69 ]
  %74 = phi float [ 0.000000e+00, %3 ], [ %199, %69 ]
  %75 = phi float [ 0.000000e+00, %3 ], [ %200, %69 ]
  %76 = phi float [ 0.000000e+00, %3 ], [ %201, %69 ]
  %77 = phi float [ 0.000000e+00, %3 ], [ %202, %69 ]
  %78 = phi float [ 0.000000e+00, %3 ], [ %203, %69 ]
  %79 = phi float [ 0.000000e+00, %3 ], [ %204, %69 ]
  %80 = phi float [ 0.000000e+00, %3 ], [ %205, %69 ]
  %81 = phi float [ 0.000000e+00, %3 ], [ %206, %69 ]
  %82 = phi float [ 0.000000e+00, %3 ], [ %207, %69 ]
  %83 = phi float [ 0.000000e+00, %3 ], [ %208, %69 ]
  %84 = phi float [ 0.000000e+00, %3 ], [ %209, %69 ]
  %85 = phi float [ 0.000000e+00, %3 ], [ %210, %69 ]
  %86 = phi float [ 0.000000e+00, %3 ], [ %211, %69 ]
  %87 = phi float [ 0.000000e+00, %3 ], [ %212, %69 ]
  %88 = phi float [ 0.000000e+00, %3 ], [ %213, %69 ]
  %89 = phi float [ 0.000000e+00, %3 ], [ %214, %69 ]
  %90 = phi float [ 0.000000e+00, %3 ], [ %215, %69 ]
  %91 = phi float [ 0.000000e+00, %3 ], [ %216, %69 ]
  %92 = phi float [ 0.000000e+00, %3 ], [ %217, %69 ]
  %93 = phi float [ 0.000000e+00, %3 ], [ %218, %69 ]
  %94 = phi float [ 0.000000e+00, %3 ], [ %219, %69 ]
  %95 = phi float [ 0.000000e+00, %3 ], [ %220, %69 ]
  %96 = phi float [ 0.000000e+00, %3 ], [ %221, %69 ]
  %97 = phi float [ 0.000000e+00, %3 ], [ %222, %69 ]
  %98 = phi float [ 0.000000e+00, %3 ], [ %223, %69 ]
  %99 = phi float [ 0.000000e+00, %3 ], [ %224, %69 ]
  %100 = phi float [ 0.000000e+00, %3 ], [ %225, %69 ]
  %101 = phi float [ 0.000000e+00, %3 ], [ %226, %69 ]
  %102 = phi float [ 0.000000e+00, %3 ], [ %227, %69 ]
  %103 = phi float [ 0.000000e+00, %3 ], [ %228, %69 ]
  %104 = phi i1 [ true, %3 ], [ false, %69 ]
  %105 = add i32 %70, 1, !dbg !36
  %106 = icmp slt i32 %105, 4, !dbg !36
  %107 = select i1 %106, i32 %105, i32 0, !dbg !36
  %108 = shl i32 %107, 11, !dbg !32
  %109 = sext i32 %108 to i64, !dbg !32
  %110 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %109, !dbg !32
  tail call void asm sideeffect "cp.async.wait_group 0x4;", ""() #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %111 = shl i32 %107, 12, !dbg !33
  %112 = sext i32 %111 to i64, !dbg !33
  %113 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %112, !dbg !33
  %114 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %63, i32 0, i32 31), !dbg !37
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !37
  %115 = shl i32 %114, 6, !dbg !37
  %116 = and i32 %115, 192, !dbg !37
  %117 = zext nneg i32 %116 to i64, !dbg !37
  %118 = ptrtoint ptr addrspace(3) %110 to i64, !dbg !37
  %119 = lshr exact i64 %118, 4, !dbg !37
  %120 = and i64 %119, 16383, !dbg !37
  %121 = or disjoint i64 %120, -9223371899399045120, !dbg !37
  %122 = add nuw nsw i64 %121, %117, !dbg !37
  %123 = ptrtoint ptr addrspace(3) %113 to i64, !dbg !37
  %124 = lshr exact i64 %123, 4, !dbg !37
  %125 = and i64 %124, 16383, !dbg !37
  %126 = add nuw nsw i64 %67, %125, !dbg !37
  %127 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %72, float %73, float %74, float %75, float %76, float %77, float %78, float %79, float %80, float %81, float %82, float %83, float %84, float %85, float %86, float %87, float %88, float %89, float %90, float %91, float %92, float %93, float %94, float %95, float %96, float %97, float %98, float %99, float %100, float %101, float %102, float %103, i64 %122, i64 %126) #3, !dbg !37
  %128 = add nuw nsw i64 %120, -9223371899399045118, !dbg !37
  %129 = add nuw nsw i64 %128, %117, !dbg !37
  %130 = add nuw nsw i64 %68, %125, !dbg !37
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 0, !dbg !37
  %132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 1, !dbg !37
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 2, !dbg !37
  %134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 3, !dbg !37
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 4, !dbg !37
  %136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 5, !dbg !37
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 6, !dbg !37
  %138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 7, !dbg !37
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 8, !dbg !37
  %140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 9, !dbg !37
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 10, !dbg !37
  %142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 11, !dbg !37
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 12, !dbg !37
  %144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 13, !dbg !37
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 14, !dbg !37
  %146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 15, !dbg !37
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 16, !dbg !37
  %148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 17, !dbg !37
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 18, !dbg !37
  %150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 19, !dbg !37
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 20, !dbg !37
  %152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 21, !dbg !37
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 22, !dbg !37
  %154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 23, !dbg !37
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 24, !dbg !37
  %156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 25, !dbg !37
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 26, !dbg !37
  %158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 27, !dbg !37
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 28, !dbg !37
  %160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 29, !dbg !37
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 30, !dbg !37
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %127, 31, !dbg !37
  %163 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, i64 %129, i64 %130) #3, !dbg !37
  %164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 0, !dbg !37
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 1, !dbg !37
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 2, !dbg !37
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 3, !dbg !37
  %168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 4, !dbg !37
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 5, !dbg !37
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 6, !dbg !37
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 7, !dbg !37
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 8, !dbg !37
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 9, !dbg !37
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 10, !dbg !37
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 11, !dbg !37
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 12, !dbg !37
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 13, !dbg !37
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 14, !dbg !37
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 15, !dbg !37
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 16, !dbg !37
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 17, !dbg !37
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 18, !dbg !37
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 19, !dbg !37
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 20, !dbg !37
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 21, !dbg !37
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 22, !dbg !37
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 23, !dbg !37
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 24, !dbg !37
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 25, !dbg !37
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 26, !dbg !37
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 27, !dbg !37
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 28, !dbg !37
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 29, !dbg !37
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 30, !dbg !37
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %163, 31, !dbg !37
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !37
  %196 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %164, float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, ptr addrspace(3) %110, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %113, i32 1, i32 32, i32 0, i32 0) #3, !dbg !37
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 0, !dbg !37
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 1, !dbg !37
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 2, !dbg !37
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 3, !dbg !37
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 4, !dbg !37
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 5, !dbg !37
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 6, !dbg !37
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 7, !dbg !37
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 8, !dbg !37
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 9, !dbg !37
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 10, !dbg !37
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 11, !dbg !37
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 12, !dbg !37
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 13, !dbg !37
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 14, !dbg !37
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 15, !dbg !37
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 16, !dbg !37
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 17, !dbg !37
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 18, !dbg !37
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 19, !dbg !37
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 20, !dbg !37
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 21, !dbg !37
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 22, !dbg !37
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 23, !dbg !37
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 24, !dbg !37
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 25, !dbg !37
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 26, !dbg !37
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 27, !dbg !37
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 28, !dbg !37
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 29, !dbg !37
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 30, !dbg !37
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %196, 31, !dbg !37
  %229 = getelementptr i8, ptr addrspace(1) %.pn1679, i64 64, !dbg !34
  %230 = getelementptr i8, ptr addrspace(1) %.pn4880, i64 64, !dbg !35
  %231 = getelementptr i8, ptr addrspace(1) %.pn3281, i64 64, !dbg !35
  %232 = add i32 %71, 1, !dbg !36
  %233 = icmp slt i32 %232, 4, !dbg !36
  %234 = select i1 %233, i32 %232, i32 0, !dbg !36
  %235 = shl i32 %234, 11, !dbg !32
  %236 = sext i32 %235 to i64, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %gep = getelementptr i16, ptr addrspace(3) %45, i64 %236, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %229, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %237 = shl i32 %234, 12, !dbg !33
  %238 = sext i32 %237 to i64, !dbg !33
  %239 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %238, !dbg !33
  %240 = getelementptr i16, ptr addrspace(3) %239, i64 %44, !dbg !33
  %241 = getelementptr i16, ptr addrspace(3) %239, i64 %49, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %240, ptr addrspace(1) %230, i32 0, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %241, ptr addrspace(1) %231, i32 0, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  br i1 %104, label %69, label %242, !dbg !36

242:                                              ; preds = %69
  %243 = and i32 %21, 120, !dbg !22
  %244 = or disjoint i32 %19, %243, !dbg !23
  %245 = lshr i32 %14, 4, !dbg !19
  %.lobit1 = and i32 %245, 1, !dbg !19
  %246 = and i32 %245, 7, !dbg !19
  %247 = lshr i32 %14, 4, !dbg !19
  %248 = and i32 %247, 8, !dbg !19
  %249 = or disjoint i32 %246, %248, !dbg !19
  %250 = or disjoint i32 %249, %13, !dbg !20
  %251 = or disjoint i32 %250, 48, !dbg !20
  %252 = or disjoint i32 %250, 32, !dbg !20
  %253 = or disjoint i32 %250, 16, !dbg !20
  %254 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228) #3, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %255 = icmp slt i32 %250, 4096, !dbg !38
  %256 = icmp slt i32 %253, 4096, !dbg !38
  %257 = icmp slt i32 %252, 4096, !dbg !38
  %258 = icmp slt i32 %251, 4096, !dbg !38
  %259 = icmp slt i32 %244, 3072, !dbg !39
  %260 = and i1 %259, %255, !dbg !40
  %261 = and i1 %259, %256, !dbg !40
  %262 = and i1 %259, %257, !dbg !40
  %263 = and i1 %259, %258, !dbg !40
  %264 = mul i32 %250, 3072, !dbg !41
  %265 = mul i32 %253, 3072, !dbg !41
  %266 = mul i32 %252, 3072, !dbg !41
  %267 = mul i32 %251, 3072, !dbg !41
  %268 = add i32 %264, %244, !dbg !42
  %269 = add i32 %265, %244, !dbg !42
  %270 = add i32 %266, %244, !dbg !42
  %271 = add i32 %267, %244, !dbg !42
  %272 = sext i32 %268 to i64, !dbg !43
  %273 = getelementptr i16, ptr addrspace(1) %2, i64 %272, !dbg !43
  %274 = sext i32 %269 to i64, !dbg !43
  %275 = getelementptr i16, ptr addrspace(1) %2, i64 %274, !dbg !43
  %276 = sext i32 %270 to i64, !dbg !43
  %277 = getelementptr i16, ptr addrspace(1) %2, i64 %276, !dbg !43
  %278 = sext i32 %271 to i64, !dbg !43
  %279 = getelementptr i16, ptr addrspace(1) %2, i64 %278, !dbg !43
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 0, !dbg !44
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 1, !dbg !44
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 2, !dbg !44
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 3, !dbg !44
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 4, !dbg !44
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 5, !dbg !44
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 6, !dbg !44
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 7, !dbg !44
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 8, !dbg !44
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 9, !dbg !44
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 10, !dbg !44
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 11, !dbg !44
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 12, !dbg !44
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 13, !dbg !44
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 14, !dbg !44
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 15, !dbg !44
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 16, !dbg !44
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 17, !dbg !44
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 18, !dbg !44
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 19, !dbg !44
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 20, !dbg !44
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 21, !dbg !44
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 22, !dbg !44
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 23, !dbg !44
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 24, !dbg !44
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 25, !dbg !44
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 26, !dbg !44
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 27, !dbg !44
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 28, !dbg !44
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 29, !dbg !44
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 30, !dbg !44
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %254, 31, !dbg !44
  %312 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %280) #3, !dbg !44
  %313 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %281) #3, !dbg !44
  %314 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %282) #3, !dbg !44
  %315 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %283) #3, !dbg !44
  %316 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %284) #3, !dbg !44
  %317 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %285) #3, !dbg !44
  %318 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %286) #3, !dbg !44
  %319 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %287) #3, !dbg !44
  %320 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %288) #3, !dbg !44
  %321 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %289) #3, !dbg !44
  %322 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %290) #3, !dbg !44
  %323 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %291) #3, !dbg !44
  %324 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %292) #3, !dbg !44
  %325 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %293) #3, !dbg !44
  %326 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %294) #3, !dbg !44
  %327 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %295) #3, !dbg !44
  %328 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %296) #3, !dbg !44
  %329 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %297) #3, !dbg !44
  %330 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %298) #3, !dbg !44
  %331 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %299) #3, !dbg !44
  %332 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %300) #3, !dbg !44
  %333 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %301) #3, !dbg !44
  %334 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %302) #3, !dbg !44
  %335 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %303) #3, !dbg !44
  %336 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %304) #3, !dbg !44
  %337 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %305) #3, !dbg !44
  %338 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %306) #3, !dbg !44
  %339 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %307) #3, !dbg !44
  %340 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %308) #3, !dbg !44
  %341 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %309) #3, !dbg !44
  %342 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %310) #3, !dbg !44
  %343 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %311) #3, !dbg !44
  %344 = and i32 %14, 15, !dbg !44
  %345 = lshr i32 %14, 1, !dbg !44
  %346 = shl nuw nsw i32 %15, 4, !dbg !44
  %347 = and i32 %346, 48, !dbg !44
  %reass.add = or disjoint i32 %347, %344
  %reass.mul = mul nuw nsw i32 %reass.add, 136
  %348 = and i32 %345, 72, !dbg !44
  %349 = add nuw nsw i32 %348, %reass.mul, !dbg !44
  %350 = insertelement <2 x i16> poison, i16 %312, i64 0, !dbg !44
  %351 = insertelement <2 x i16> %350, i16 %313, i64 1, !dbg !44
  %352 = bitcast <2 x i16> %351 to i32, !dbg !44
  %353 = insertelement <2 x i16> poison, i16 %314, i64 0, !dbg !44
  %354 = insertelement <2 x i16> %353, i16 %315, i64 1, !dbg !44
  %355 = bitcast <2 x i16> %354 to i32, !dbg !44
  %356 = insertelement <2 x i16> poison, i16 %316, i64 0, !dbg !44
  %357 = insertelement <2 x i16> %356, i16 %317, i64 1, !dbg !44
  %358 = bitcast <2 x i16> %357 to i32, !dbg !44
  %359 = insertelement <2 x i16> poison, i16 %318, i64 0, !dbg !44
  %360 = insertelement <2 x i16> %359, i16 %319, i64 1, !dbg !44
  %361 = bitcast <2 x i16> %360 to i32, !dbg !44
  %362 = zext nneg i32 %349 to i64, !dbg !44
  %363 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %362, !dbg !44
  %364 = ptrtoint ptr addrspace(3) %363 to i64, !dbg !44
  %365 = trunc i64 %364 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %365, i32 %352, i32 %355, i32 %358, i32 %361) #3, !dbg !44
  %366 = insertelement <2 x i16> poison, i16 %320, i64 0, !dbg !44
  %367 = insertelement <2 x i16> %366, i16 %321, i64 1, !dbg !44
  %368 = bitcast <2 x i16> %367 to i32, !dbg !44
  %369 = insertelement <2 x i16> poison, i16 %322, i64 0, !dbg !44
  %370 = insertelement <2 x i16> %369, i16 %323, i64 1, !dbg !44
  %371 = bitcast <2 x i16> %370 to i32, !dbg !44
  %372 = insertelement <2 x i16> poison, i16 %324, i64 0, !dbg !44
  %373 = insertelement <2 x i16> %372, i16 %325, i64 1, !dbg !44
  %374 = bitcast <2 x i16> %373 to i32, !dbg !44
  %375 = insertelement <2 x i16> poison, i16 %326, i64 0, !dbg !44
  %376 = insertelement <2 x i16> %375, i16 %327, i64 1, !dbg !44
  %377 = bitcast <2 x i16> %376 to i32, !dbg !44
  %378 = getelementptr i8, ptr addrspace(3) %363, i64 32, !dbg !44
  %379 = ptrtoint ptr addrspace(3) %378 to i64, !dbg !44
  %380 = trunc i64 %379 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %380, i32 %368, i32 %371, i32 %374, i32 %377) #3, !dbg !44
  %381 = insertelement <2 x i16> poison, i16 %328, i64 0, !dbg !44
  %382 = insertelement <2 x i16> %381, i16 %329, i64 1, !dbg !44
  %383 = bitcast <2 x i16> %382 to i32, !dbg !44
  %384 = insertelement <2 x i16> poison, i16 %330, i64 0, !dbg !44
  %385 = insertelement <2 x i16> %384, i16 %331, i64 1, !dbg !44
  %386 = bitcast <2 x i16> %385 to i32, !dbg !44
  %387 = insertelement <2 x i16> poison, i16 %332, i64 0, !dbg !44
  %388 = insertelement <2 x i16> %387, i16 %333, i64 1, !dbg !44
  %389 = bitcast <2 x i16> %388 to i32, !dbg !44
  %390 = insertelement <2 x i16> poison, i16 %334, i64 0, !dbg !44
  %391 = insertelement <2 x i16> %390, i16 %335, i64 1, !dbg !44
  %392 = bitcast <2 x i16> %391 to i32, !dbg !44
  %393 = getelementptr i8, ptr addrspace(3) %363, i64 64, !dbg !44
  %394 = ptrtoint ptr addrspace(3) %393 to i64, !dbg !44
  %395 = trunc i64 %394 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %395, i32 %383, i32 %386, i32 %389, i32 %392) #3, !dbg !44
  %396 = insertelement <2 x i16> poison, i16 %336, i64 0, !dbg !44
  %397 = insertelement <2 x i16> %396, i16 %337, i64 1, !dbg !44
  %398 = bitcast <2 x i16> %397 to i32, !dbg !44
  %399 = insertelement <2 x i16> poison, i16 %338, i64 0, !dbg !44
  %400 = insertelement <2 x i16> %399, i16 %339, i64 1, !dbg !44
  %401 = bitcast <2 x i16> %400 to i32, !dbg !44
  %402 = insertelement <2 x i16> poison, i16 %340, i64 0, !dbg !44
  %403 = insertelement <2 x i16> %402, i16 %341, i64 1, !dbg !44
  %404 = bitcast <2 x i16> %403 to i32, !dbg !44
  %405 = insertelement <2 x i16> poison, i16 %342, i64 0, !dbg !44
  %406 = insertelement <2 x i16> %405, i16 %343, i64 1, !dbg !44
  %407 = bitcast <2 x i16> %406 to i32, !dbg !44
  %408 = getelementptr i8, ptr addrspace(3) %363, i64 96, !dbg !44
  %409 = ptrtoint ptr addrspace(3) %408 to i64, !dbg !44
  %410 = trunc i64 %409 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %410, i32 %398, i32 %401, i32 %404, i32 %407) #3, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %411 = shl nuw nsw i32 %15, 1, !dbg !44
  %412 = and i32 %411, 14, !dbg !44
  %413 = or disjoint i32 %412, %.lobit1, !dbg !44
  %414 = mul nuw nsw i32 %413, 136, !dbg !44
  %415 = add nuw nsw i32 %414, %243, !dbg !44
  %416 = zext nneg i32 %415 to i64, !dbg !44
  %417 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %416, !dbg !44
  %418 = getelementptr i8, ptr addrspace(3) %417, i64 4352, !dbg !44
  %419 = load <4 x i32>, ptr addrspace(3) %418, align 16, !dbg !44
  %420 = getelementptr i8, ptr addrspace(3) %417, i64 8704, !dbg !44
  %421 = load <4 x i32>, ptr addrspace(3) %420, align 16, !dbg !44
  %422 = getelementptr i8, ptr addrspace(3) %417, i64 13056, !dbg !44
  %423 = load <4 x i32>, ptr addrspace(3) %422, align 16, !dbg !44
  %.extract = load i32, ptr addrspace(3) %417, align 16, !dbg !44
  %424 = getelementptr inbounds i8, ptr addrspace(3) %417, i64 4, !dbg !44
  %.extract50 = load i32, ptr addrspace(3) %424, align 4, !dbg !44
  %425 = getelementptr inbounds i8, ptr addrspace(3) %417, i64 8, !dbg !44
  %.extract52 = load i32, ptr addrspace(3) %425, align 8, !dbg !44
  %426 = getelementptr inbounds i8, ptr addrspace(3) %417, i64 12, !dbg !44
  %.extract54 = load i32, ptr addrspace(3) %426, align 4, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract50, i32 %.extract52, i32 %.extract54, ptr addrspace(1) %273, i1 %260) #3, !dbg !44
  %.extract56 = extractelement <4 x i32> %419, i64 0, !dbg !44
  %.extract58 = extractelement <4 x i32> %419, i64 1, !dbg !44
  %.extract60 = extractelement <4 x i32> %419, i64 2, !dbg !44
  %.extract62 = extractelement <4 x i32> %419, i64 3, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract56, i32 %.extract58, i32 %.extract60, i32 %.extract62, ptr addrspace(1) %275, i1 %261) #3, !dbg !44
  %.extract64 = extractelement <4 x i32> %421, i64 0, !dbg !44
  %.extract66 = extractelement <4 x i32> %421, i64 1, !dbg !44
  %.extract68 = extractelement <4 x i32> %421, i64 2, !dbg !44
  %.extract70 = extractelement <4 x i32> %421, i64 3, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract64, i32 %.extract66, i32 %.extract68, i32 %.extract70, ptr addrspace(1) %277, i1 %262) #3, !dbg !44
  %.extract72 = extractelement <4 x i32> %423, i64 0, !dbg !44
  %.extract74 = extractelement <4 x i32> %423, i64 1, !dbg !44
  %.extract76 = extractelement <4 x i32> %423, i64 2, !dbg !44
  %.extract78 = extractelement <4 x i32> %423, i64 3, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract72, i32 %.extract74, i32 %.extract76, i32 %.extract78, ptr addrspace(1) %279, i1 %263) #3, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpwtz57yjzzaibcdgq7v53mqndpxs57he5bpgqpvl543w67kdc6v.py", directory: "/opt/inductor_cache/pw")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 42, column: 24, scope: !7)
!11 = !DILocation(line: 48, column: 22, scope: !7)
!12 = !DILocation(line: 49, column: 41, scope: !7)
!13 = !DILocation(line: 49, column: 30, scope: !7)
!14 = !DILocation(line: 49, column: 50, scope: !7)
!15 = !DILocation(line: 50, column: 40, scope: !7)
!16 = !DILocation(line: 50, column: 34, scope: !7)
!17 = !DILocation(line: 51, column: 30, scope: !7)
!18 = !DILocation(line: 53, column: 17, scope: !7)
!19 = !DILocation(line: 53, column: 40, scope: !7)
!20 = !DILocation(line: 53, column: 27, scope: !7)
!21 = !DILocation(line: 54, column: 17, scope: !7)
!22 = !DILocation(line: 54, column: 40, scope: !7)
!23 = !DILocation(line: 54, column: 27, scope: !7)
!24 = !DILocation(line: 56, column: 52, scope: !7)
!25 = !DILocation(line: 60, column: 52, scope: !7)
!26 = !DILocation(line: 64, column: 28, scope: !7)
!27 = !DILocation(line: 64, column: 40, scope: !7)
!28 = !DILocation(line: 64, column: 13, scope: !7)
!29 = !DILocation(line: 65, column: 54, scope: !7)
!30 = !DILocation(line: 65, column: 39, scope: !7)
!31 = !DILocation(line: 65, column: 13, scope: !7)
!32 = !DILocation(line: 70, column: 24, scope: !7)
!33 = !DILocation(line: 71, column: 24, scope: !7)
!34 = !DILocation(line: 78, column: 13, scope: !7)
!35 = !DILocation(line: 79, column: 13, scope: !7)
!36 = !DILocation(line: 68, column: 25, scope: !7)
!37 = !DILocation(line: 77, column: 25, scope: !7)
!38 = !DILocation(line: 86, column: 20, scope: !7)
!39 = !DILocation(line: 86, column: 34, scope: !7)
!40 = !DILocation(line: 86, column: 26, scope: !7)
!41 = !DILocation(line: 89, column: 27, scope: !7)
!42 = !DILocation(line: 89, column: 22, scope: !7)
!43 = !DILocation(line: 90, column: 25, scope: !7)
!44 = !DILocation(line: 90, column: 67, scope: !7)
!45 = !DILocation(line: 90, column: 4, scope: !7)
