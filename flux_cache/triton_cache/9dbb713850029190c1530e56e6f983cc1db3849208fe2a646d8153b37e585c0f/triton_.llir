; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, ptr addrspace(1) %12, ptr addrspace(1) %13, ptr addrspace(1) %14, ptr addrspace(1) %15, ptr addrspace(1) %16, ptr addrspace(1) %17, ptr addrspace(1) %18, ptr addrspace(1) %19, ptr addrspace(1) %20, ptr addrspace(1) %21, ptr addrspace(1) %22, ptr addrspace(1) %23, ptr addrspace(1) %24, ptr addrspace(1) %25, ptr addrspace(1) %26, ptr addrspace(1) %27, ptr addrspace(1) %28, ptr addrspace(1) %29, ptr addrspace(1) %30, ptr addrspace(1) %31, ptr addrspace(1) %32, ptr addrspace(1) %33, ptr addrspace(1) %34, ptr addrspace(1) %35, ptr addrspace(1) %36, ptr addrspace(1) %37, ptr addrspace(1) %38, ptr addrspace(1) %39, ptr addrspace(1) %40, ptr addrspace(1) %41, ptr addrspace(1) %42, ptr addrspace(1) %43, ptr addrspace(1) %44, ptr addrspace(1) %45, ptr addrspace(1) %46, ptr addrspace(1) %47, ptr addrspace(1) %48, ptr addrspace(1) %49, ptr addrspace(1) %50, ptr addrspace(1) %51, ptr addrspace(1) %52, ptr addrspace(1) %53, ptr addrspace(1) %54, ptr addrspace(1) %55, ptr addrspace(1) %56, ptr addrspace(1) %57, ptr addrspace(1) %58, ptr addrspace(1) %59, ptr addrspace(1) %60, ptr addrspace(1) %61, ptr addrspace(1) %62, ptr addrspace(1) %63, ptr addrspace(1) %64, ptr addrspace(1) %65, ptr addrspace(1) %66, ptr addrspace(1) %67, ptr addrspace(1) %68, i32 %69) local_unnamed_addr !dbg !7 {
  %71 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %72 = shl i32 %71, 7, !dbg !11
  %73 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %74 = and i32 %73, 127, !dbg !12
  %75 = or disjoint i32 %72, %74, !dbg !13
  %76 = icmp slt i32 %75, 3072, !dbg !14
  %77 = sext i32 %75 to i64, !dbg !15
  %78 = getelementptr i16, ptr addrspace(1) %1, i64 %77, !dbg !15
  %79 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %78, i1 %76) #1, !dbg !16
  %80 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %79) #1, !dbg !17
  %81 = getelementptr i16, ptr addrspace(1) %2, i64 %77, !dbg !18
  %82 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %81, i1 %76) #1, !dbg !19
  %83 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %82) #1, !dbg !20
  %84 = getelementptr i16, ptr addrspace(1) %3, i64 %77, !dbg !21
  %85 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %84, i1 %76) #1, !dbg !22
  %86 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %85) #1, !dbg !23
  %87 = getelementptr i16, ptr addrspace(1) %4, i64 %77, !dbg !24
  %88 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %87, i1 %76) #1, !dbg !25
  %89 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %88) #1, !dbg !26
  %90 = getelementptr i16, ptr addrspace(1) %0, i64 %77, !dbg !27
  %91 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %90, i1 %76) #1, !dbg !28
  %92 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %91) #1, !dbg !29
  %93 = getelementptr i16, ptr addrspace(1) %5, i64 %77, !dbg !30
  %94 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %93, i1 %76) #1, !dbg !31
  %95 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %94) #1, !dbg !32
  %96 = fadd float %80, %83, !dbg !33
  %97 = fadd float %86, %89, !dbg !34
  %98 = fadd float %96, %97, !dbg !35
  %99 = fadd float %92, %95, !dbg !36
  %100 = fadd float %98, %99, !dbg !37
  %101 = fsub float 0.000000e+00, %100, !dbg !38
  %102 = fmul float %101, 0x3FF7154760000000, !dbg !42
  %103 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %102) #1, !dbg !42
  %104 = fadd float %103, 1.000000e+00, !dbg !43
  %105 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %104) #1, !dbg !44
  %106 = fmul float %100, %105, !dbg !45
  %107 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %100) #1, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %107, ptr addrspace(1) %90, i1 %76) #1, !dbg !46
  %108 = getelementptr i16, ptr addrspace(1) %6, i64 %77, !dbg !47
  %109 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %106) #1, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %108, i1 %76) #1, !dbg !48
  %110 = getelementptr i16, ptr addrspace(1) %7, i64 %77, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %110, i1 %76) #1, !dbg !50
  %111 = getelementptr i16, ptr addrspace(1) %8, i64 %77, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %111, i1 %76) #1, !dbg !52
  %112 = getelementptr i16, ptr addrspace(1) %9, i64 %77, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %112, i1 %76) #1, !dbg !54
  %113 = getelementptr i16, ptr addrspace(1) %10, i64 %77, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %113, i1 %76) #1, !dbg !56
  %114 = getelementptr i16, ptr addrspace(1) %11, i64 %77, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %114, i1 %76) #1, !dbg !58
  %115 = getelementptr i16, ptr addrspace(1) %12, i64 %77, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %115, i1 %76) #1, !dbg !60
  %116 = getelementptr i16, ptr addrspace(1) %13, i64 %77, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %116, i1 %76) #1, !dbg !62
  %117 = getelementptr i16, ptr addrspace(1) %14, i64 %77, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %117, i1 %76) #1, !dbg !64
  %118 = getelementptr i16, ptr addrspace(1) %15, i64 %77, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %118, i1 %76) #1, !dbg !66
  %119 = getelementptr i16, ptr addrspace(1) %16, i64 %77, !dbg !67
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %119, i1 %76) #1, !dbg !68
  %120 = getelementptr i16, ptr addrspace(1) %17, i64 %77, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %120, i1 %76) #1, !dbg !70
  %121 = getelementptr i16, ptr addrspace(1) %18, i64 %77, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %121, i1 %76) #1, !dbg !72
  %122 = getelementptr i16, ptr addrspace(1) %19, i64 %77, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %122, i1 %76) #1, !dbg !74
  %123 = getelementptr i16, ptr addrspace(1) %20, i64 %77, !dbg !75
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %123, i1 %76) #1, !dbg !76
  %124 = getelementptr i16, ptr addrspace(1) %21, i64 %77, !dbg !77
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %124, i1 %76) #1, !dbg !78
  %125 = getelementptr i16, ptr addrspace(1) %22, i64 %77, !dbg !79
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %125, i1 %76) #1, !dbg !80
  %126 = getelementptr i16, ptr addrspace(1) %23, i64 %77, !dbg !81
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %126, i1 %76) #1, !dbg !82
  %127 = getelementptr i16, ptr addrspace(1) %24, i64 %77, !dbg !83
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %127, i1 %76) #1, !dbg !84
  %128 = getelementptr i16, ptr addrspace(1) %25, i64 %77, !dbg !85
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %128, i1 %76) #1, !dbg !86
  %129 = getelementptr i16, ptr addrspace(1) %26, i64 %77, !dbg !87
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %129, i1 %76) #1, !dbg !88
  %130 = getelementptr i16, ptr addrspace(1) %27, i64 %77, !dbg !89
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %130, i1 %76) #1, !dbg !90
  %131 = getelementptr i16, ptr addrspace(1) %28, i64 %77, !dbg !91
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %131, i1 %76) #1, !dbg !92
  %132 = getelementptr i16, ptr addrspace(1) %29, i64 %77, !dbg !93
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %132, i1 %76) #1, !dbg !94
  %133 = getelementptr i16, ptr addrspace(1) %30, i64 %77, !dbg !95
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %133, i1 %76) #1, !dbg !96
  %134 = getelementptr i16, ptr addrspace(1) %31, i64 %77, !dbg !97
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %134, i1 %76) #1, !dbg !98
  %135 = getelementptr i16, ptr addrspace(1) %32, i64 %77, !dbg !99
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %135, i1 %76) #1, !dbg !100
  %136 = getelementptr i16, ptr addrspace(1) %33, i64 %77, !dbg !101
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %136, i1 %76) #1, !dbg !102
  %137 = getelementptr i16, ptr addrspace(1) %34, i64 %77, !dbg !103
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %137, i1 %76) #1, !dbg !104
  %138 = getelementptr i16, ptr addrspace(1) %35, i64 %77, !dbg !105
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %138, i1 %76) #1, !dbg !106
  %139 = getelementptr i16, ptr addrspace(1) %36, i64 %77, !dbg !107
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %139, i1 %76) #1, !dbg !108
  %140 = getelementptr i16, ptr addrspace(1) %37, i64 %77, !dbg !109
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %140, i1 %76) #1, !dbg !110
  %141 = getelementptr i16, ptr addrspace(1) %38, i64 %77, !dbg !111
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %141, i1 %76) #1, !dbg !112
  %142 = getelementptr i16, ptr addrspace(1) %39, i64 %77, !dbg !113
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %142, i1 %76) #1, !dbg !114
  %143 = getelementptr i16, ptr addrspace(1) %40, i64 %77, !dbg !115
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %143, i1 %76) #1, !dbg !116
  %144 = getelementptr i16, ptr addrspace(1) %41, i64 %77, !dbg !117
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %144, i1 %76) #1, !dbg !118
  %145 = getelementptr i16, ptr addrspace(1) %42, i64 %77, !dbg !119
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %145, i1 %76) #1, !dbg !120
  %146 = getelementptr i16, ptr addrspace(1) %43, i64 %77, !dbg !121
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %146, i1 %76) #1, !dbg !122
  %147 = getelementptr i16, ptr addrspace(1) %44, i64 %77, !dbg !123
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %147, i1 %76) #1, !dbg !124
  %148 = getelementptr i16, ptr addrspace(1) %45, i64 %77, !dbg !125
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %148, i1 %76) #1, !dbg !126
  %149 = getelementptr i16, ptr addrspace(1) %46, i64 %77, !dbg !127
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %149, i1 %76) #1, !dbg !128
  %150 = getelementptr i16, ptr addrspace(1) %47, i64 %77, !dbg !129
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %150, i1 %76) #1, !dbg !130
  %151 = getelementptr i16, ptr addrspace(1) %48, i64 %77, !dbg !131
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %151, i1 %76) #1, !dbg !132
  %152 = getelementptr i16, ptr addrspace(1) %49, i64 %77, !dbg !133
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %152, i1 %76) #1, !dbg !134
  %153 = getelementptr i16, ptr addrspace(1) %50, i64 %77, !dbg !135
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %153, i1 %76) #1, !dbg !136
  %154 = getelementptr i16, ptr addrspace(1) %51, i64 %77, !dbg !137
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %154, i1 %76) #1, !dbg !138
  %155 = getelementptr i16, ptr addrspace(1) %52, i64 %77, !dbg !139
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %155, i1 %76) #1, !dbg !140
  %156 = getelementptr i16, ptr addrspace(1) %53, i64 %77, !dbg !141
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %156, i1 %76) #1, !dbg !142
  %157 = getelementptr i16, ptr addrspace(1) %54, i64 %77, !dbg !143
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %157, i1 %76) #1, !dbg !144
  %158 = getelementptr i16, ptr addrspace(1) %55, i64 %77, !dbg !145
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %158, i1 %76) #1, !dbg !146
  %159 = getelementptr i16, ptr addrspace(1) %56, i64 %77, !dbg !147
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %159, i1 %76) #1, !dbg !148
  %160 = getelementptr i16, ptr addrspace(1) %57, i64 %77, !dbg !149
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %160, i1 %76) #1, !dbg !150
  %161 = getelementptr i16, ptr addrspace(1) %58, i64 %77, !dbg !151
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %161, i1 %76) #1, !dbg !152
  %162 = getelementptr i16, ptr addrspace(1) %59, i64 %77, !dbg !153
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %162, i1 %76) #1, !dbg !154
  %163 = getelementptr i16, ptr addrspace(1) %60, i64 %77, !dbg !155
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %163, i1 %76) #1, !dbg !156
  %164 = getelementptr i16, ptr addrspace(1) %61, i64 %77, !dbg !157
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %164, i1 %76) #1, !dbg !158
  %165 = getelementptr i16, ptr addrspace(1) %62, i64 %77, !dbg !159
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %165, i1 %76) #1, !dbg !160
  %166 = getelementptr i16, ptr addrspace(1) %63, i64 %77, !dbg !161
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %166, i1 %76) #1, !dbg !162
  %167 = getelementptr i16, ptr addrspace(1) %64, i64 %77, !dbg !163
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %167, i1 %76) #1, !dbg !164
  %168 = getelementptr i16, ptr addrspace(1) %65, i64 %77, !dbg !165
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %168, i1 %76) #1, !dbg !166
  %169 = getelementptr i16, ptr addrspace(1) %66, i64 %77, !dbg !167
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %169, i1 %76) #1, !dbg !168
  %170 = getelementptr i16, ptr addrspace(1) %67, i64 %77, !dbg !169
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %170, i1 %76) #1, !dbg !170
  %171 = getelementptr i16, ptr addrspace(1) %68, i64 %77, !dbg !171
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %109, ptr addrspace(1) %171, i1 %76) #1, !dbg !172
  ret void, !dbg !173
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clzlidfkb7q6z5g4kmago5h7seyetlxr35p7katfd3nvexgi246o.py", directory: "/opt/inductor_cache/lz")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 28, scope: !7)
!11 = !DILocation(line: 20, column: 33, scope: !7)
!12 = !DILocation(line: 21, column: 36, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 22, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 30, scope: !7)
!16 = !DILocation(line: 24, column: 35, scope: !7)
!17 = !DILocation(line: 24, column: 45, scope: !7)
!18 = !DILocation(line: 25, column: 30, scope: !7)
!19 = !DILocation(line: 25, column: 35, scope: !7)
!20 = !DILocation(line: 25, column: 45, scope: !7)
!21 = !DILocation(line: 26, column: 30, scope: !7)
!22 = !DILocation(line: 26, column: 35, scope: !7)
!23 = !DILocation(line: 26, column: 45, scope: !7)
!24 = !DILocation(line: 27, column: 30, scope: !7)
!25 = !DILocation(line: 27, column: 35, scope: !7)
!26 = !DILocation(line: 27, column: 45, scope: !7)
!27 = !DILocation(line: 28, column: 34, scope: !7)
!28 = !DILocation(line: 28, column: 39, scope: !7)
!29 = !DILocation(line: 28, column: 49, scope: !7)
!30 = !DILocation(line: 29, column: 30, scope: !7)
!31 = !DILocation(line: 29, column: 35, scope: !7)
!32 = !DILocation(line: 29, column: 45, scope: !7)
!33 = !DILocation(line: 30, column: 18, scope: !7)
!34 = !DILocation(line: 31, column: 18, scope: !7)
!35 = !DILocation(line: 32, column: 18, scope: !7)
!36 = !DILocation(line: 33, column: 18, scope: !7)
!37 = !DILocation(line: 34, column: 19, scope: !7)
!38 = !DILocation(line: 51, column: 30, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/usr/local/lib/python3.10/site-packages/triton/language")
!41 = !DILocation(line: 36, column: 23, scope: !7)
!42 = !DILocation(line: 51, column: 29, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 51, column: 20, scope: !39, inlinedAt: !41)
!44 = !DILocation(line: 51, column: 16, scope: !39, inlinedAt: !41)
!45 = !DILocation(line: 37, column: 20, scope: !7)
!46 = !DILocation(line: 39, column: 40, scope: !7)
!47 = !DILocation(line: 40, column: 25, scope: !7)
!48 = !DILocation(line: 40, column: 37, scope: !7)
!49 = !DILocation(line: 41, column: 25, scope: !7)
!50 = !DILocation(line: 41, column: 37, scope: !7)
!51 = !DILocation(line: 42, column: 25, scope: !7)
!52 = !DILocation(line: 42, column: 37, scope: !7)
!53 = !DILocation(line: 43, column: 25, scope: !7)
!54 = !DILocation(line: 43, column: 37, scope: !7)
!55 = !DILocation(line: 44, column: 25, scope: !7)
!56 = !DILocation(line: 44, column: 37, scope: !7)
!57 = !DILocation(line: 45, column: 25, scope: !7)
!58 = !DILocation(line: 45, column: 37, scope: !7)
!59 = !DILocation(line: 46, column: 25, scope: !7)
!60 = !DILocation(line: 46, column: 37, scope: !7)
!61 = !DILocation(line: 47, column: 25, scope: !7)
!62 = !DILocation(line: 47, column: 37, scope: !7)
!63 = !DILocation(line: 48, column: 25, scope: !7)
!64 = !DILocation(line: 48, column: 37, scope: !7)
!65 = !DILocation(line: 49, column: 25, scope: !7)
!66 = !DILocation(line: 49, column: 37, scope: !7)
!67 = !DILocation(line: 50, column: 26, scope: !7)
!68 = !DILocation(line: 50, column: 38, scope: !7)
!69 = !DILocation(line: 51, column: 26, scope: !7)
!70 = !DILocation(line: 51, column: 38, scope: !7)
!71 = !DILocation(line: 52, column: 26, scope: !7)
!72 = !DILocation(line: 52, column: 38, scope: !7)
!73 = !DILocation(line: 53, column: 26, scope: !7)
!74 = !DILocation(line: 53, column: 38, scope: !7)
!75 = !DILocation(line: 54, column: 26, scope: !7)
!76 = !DILocation(line: 54, column: 38, scope: !7)
!77 = !DILocation(line: 55, column: 26, scope: !7)
!78 = !DILocation(line: 55, column: 38, scope: !7)
!79 = !DILocation(line: 56, column: 26, scope: !7)
!80 = !DILocation(line: 56, column: 38, scope: !7)
!81 = !DILocation(line: 57, column: 26, scope: !7)
!82 = !DILocation(line: 57, column: 38, scope: !7)
!83 = !DILocation(line: 58, column: 26, scope: !7)
!84 = !DILocation(line: 58, column: 38, scope: !7)
!85 = !DILocation(line: 59, column: 26, scope: !7)
!86 = !DILocation(line: 59, column: 38, scope: !7)
!87 = !DILocation(line: 60, column: 26, scope: !7)
!88 = !DILocation(line: 60, column: 38, scope: !7)
!89 = !DILocation(line: 61, column: 26, scope: !7)
!90 = !DILocation(line: 61, column: 38, scope: !7)
!91 = !DILocation(line: 62, column: 26, scope: !7)
!92 = !DILocation(line: 62, column: 38, scope: !7)
!93 = !DILocation(line: 63, column: 26, scope: !7)
!94 = !DILocation(line: 63, column: 38, scope: !7)
!95 = !DILocation(line: 64, column: 26, scope: !7)
!96 = !DILocation(line: 64, column: 38, scope: !7)
!97 = !DILocation(line: 65, column: 26, scope: !7)
!98 = !DILocation(line: 65, column: 38, scope: !7)
!99 = !DILocation(line: 66, column: 26, scope: !7)
!100 = !DILocation(line: 66, column: 38, scope: !7)
!101 = !DILocation(line: 67, column: 26, scope: !7)
!102 = !DILocation(line: 67, column: 38, scope: !7)
!103 = !DILocation(line: 68, column: 26, scope: !7)
!104 = !DILocation(line: 68, column: 38, scope: !7)
!105 = !DILocation(line: 69, column: 26, scope: !7)
!106 = !DILocation(line: 69, column: 38, scope: !7)
!107 = !DILocation(line: 70, column: 26, scope: !7)
!108 = !DILocation(line: 70, column: 38, scope: !7)
!109 = !DILocation(line: 71, column: 26, scope: !7)
!110 = !DILocation(line: 71, column: 38, scope: !7)
!111 = !DILocation(line: 72, column: 26, scope: !7)
!112 = !DILocation(line: 72, column: 38, scope: !7)
!113 = !DILocation(line: 73, column: 26, scope: !7)
!114 = !DILocation(line: 73, column: 38, scope: !7)
!115 = !DILocation(line: 74, column: 26, scope: !7)
!116 = !DILocation(line: 74, column: 38, scope: !7)
!117 = !DILocation(line: 75, column: 26, scope: !7)
!118 = !DILocation(line: 75, column: 38, scope: !7)
!119 = !DILocation(line: 76, column: 26, scope: !7)
!120 = !DILocation(line: 76, column: 38, scope: !7)
!121 = !DILocation(line: 77, column: 26, scope: !7)
!122 = !DILocation(line: 77, column: 38, scope: !7)
!123 = !DILocation(line: 78, column: 26, scope: !7)
!124 = !DILocation(line: 78, column: 38, scope: !7)
!125 = !DILocation(line: 79, column: 26, scope: !7)
!126 = !DILocation(line: 79, column: 38, scope: !7)
!127 = !DILocation(line: 80, column: 26, scope: !7)
!128 = !DILocation(line: 80, column: 38, scope: !7)
!129 = !DILocation(line: 81, column: 26, scope: !7)
!130 = !DILocation(line: 81, column: 38, scope: !7)
!131 = !DILocation(line: 82, column: 26, scope: !7)
!132 = !DILocation(line: 82, column: 38, scope: !7)
!133 = !DILocation(line: 83, column: 26, scope: !7)
!134 = !DILocation(line: 83, column: 38, scope: !7)
!135 = !DILocation(line: 84, column: 26, scope: !7)
!136 = !DILocation(line: 84, column: 38, scope: !7)
!137 = !DILocation(line: 85, column: 26, scope: !7)
!138 = !DILocation(line: 85, column: 38, scope: !7)
!139 = !DILocation(line: 86, column: 26, scope: !7)
!140 = !DILocation(line: 86, column: 38, scope: !7)
!141 = !DILocation(line: 87, column: 26, scope: !7)
!142 = !DILocation(line: 87, column: 38, scope: !7)
!143 = !DILocation(line: 88, column: 26, scope: !7)
!144 = !DILocation(line: 88, column: 38, scope: !7)
!145 = !DILocation(line: 89, column: 26, scope: !7)
!146 = !DILocation(line: 89, column: 38, scope: !7)
!147 = !DILocation(line: 90, column: 26, scope: !7)
!148 = !DILocation(line: 90, column: 38, scope: !7)
!149 = !DILocation(line: 91, column: 26, scope: !7)
!150 = !DILocation(line: 91, column: 38, scope: !7)
!151 = !DILocation(line: 92, column: 26, scope: !7)
!152 = !DILocation(line: 92, column: 38, scope: !7)
!153 = !DILocation(line: 93, column: 26, scope: !7)
!154 = !DILocation(line: 93, column: 38, scope: !7)
!155 = !DILocation(line: 94, column: 26, scope: !7)
!156 = !DILocation(line: 94, column: 38, scope: !7)
!157 = !DILocation(line: 95, column: 26, scope: !7)
!158 = !DILocation(line: 95, column: 38, scope: !7)
!159 = !DILocation(line: 96, column: 26, scope: !7)
!160 = !DILocation(line: 96, column: 38, scope: !7)
!161 = !DILocation(line: 97, column: 26, scope: !7)
!162 = !DILocation(line: 97, column: 38, scope: !7)
!163 = !DILocation(line: 98, column: 26, scope: !7)
!164 = !DILocation(line: 98, column: 38, scope: !7)
!165 = !DILocation(line: 99, column: 26, scope: !7)
!166 = !DILocation(line: 99, column: 38, scope: !7)
!167 = !DILocation(line: 100, column: 26, scope: !7)
!168 = !DILocation(line: 100, column: 38, scope: !7)
!169 = !DILocation(line: 101, column: 26, scope: !7)
!170 = !DILocation(line: 101, column: 38, scope: !7)
!171 = !DILocation(line: 102, column: 26, scope: !7)
!172 = !DILocation(line: 102, column: 38, scope: !7)
!173 = !DILocation(line: 102, column: 4, scope: !7)
