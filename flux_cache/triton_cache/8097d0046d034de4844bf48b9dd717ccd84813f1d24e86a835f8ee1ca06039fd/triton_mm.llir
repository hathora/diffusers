; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %.mask = and i32 %4, 67108863, !dbg !10
  %6 = icmp eq i32 %.mask, 0, !dbg !10
  br i1 %6, label %common.ret, label %7, !dbg !10

common.ret:                                       ; preds = %5, %374
  ret void, !dbg !11

7:                                                ; preds = %5
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %9 = add i32 %4, 63, !dbg !13
  %10 = sdiv i32 %9, 64, !dbg !14
  %.frozen = freeze i32 %8
  %11 = sdiv i32 %.frozen, 8, !dbg !15
  %12 = shl nsw i32 %11, 3, !dbg !16
  %13 = sub i32 %10, %12, !dbg !17
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 8), !dbg !18
  %15 = srem i32 %8, %14, !dbg !19
  %16 = add i32 %12, %15, !dbg !20
  %17 = mul i32 %11, 8
  %.decomposed = sub i32 %.frozen, %17
  %18 = sdiv i32 %.decomposed, %14, !dbg !21
  %19 = shl i32 %16, 6, !dbg !22
  %20 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !23
  %21 = lshr i32 %20, 5, !dbg !23
  %22 = lshr i32 %20, 3, !dbg !23
  %23 = and i32 %22, 15, !dbg !23
  %24 = or disjoint i32 %23, 16, !dbg !23
  %25 = or disjoint i32 %23, 32, !dbg !23
  %26 = or disjoint i32 %23, 48, !dbg !23
  %27 = shl i32 %20, 3, !dbg !23
  %28 = and i32 %27, 56, !dbg !23
  %29 = or disjoint i32 %19, %23, !dbg !24
  %30 = or disjoint i32 %19, %24, !dbg !24
  %31 = or disjoint i32 %19, %25, !dbg !24
  %32 = or disjoint i32 %19, %26, !dbg !24
  %33 = shl nsw i32 %18, 6, !dbg !25
  %34 = or disjoint i32 %33, %23, !dbg !26
  %35 = or disjoint i32 %33, %24, !dbg !26
  %36 = or disjoint i32 %33, %25, !dbg !26
  %37 = or disjoint i32 %33, %26, !dbg !26
  %38 = srem i32 %29, %4, !dbg !27
  %39 = srem i32 %30, %4, !dbg !27
  %40 = srem i32 %31, %4, !dbg !27
  %41 = srem i32 %32, %4, !dbg !27
  %42 = srem i32 %34, 64, !dbg !28
  %43 = srem i32 %35, 64, !dbg !28
  %44 = srem i32 %36, 64, !dbg !28
  %45 = srem i32 %37, 64, !dbg !28
  %46 = mul i32 %38, 3072, !dbg !29
  %47 = mul i32 %39, 3072, !dbg !29
  %48 = mul i32 %40, 3072, !dbg !29
  %49 = mul i32 %41, 3072, !dbg !29
  %50 = or disjoint i32 %46, %28, !dbg !30
  %51 = or disjoint i32 %47, %28, !dbg !30
  %52 = or disjoint i32 %48, %28, !dbg !30
  %53 = or disjoint i32 %49, %28, !dbg !30
  %54 = sext i32 %50 to i64, !dbg !31
  %55 = getelementptr i16, ptr addrspace(1) %1, i64 %54, !dbg !31
  %56 = sext i32 %51 to i64, !dbg !31
  %57 = getelementptr i16, ptr addrspace(1) %1, i64 %56, !dbg !31
  %58 = sext i32 %52 to i64, !dbg !31
  %59 = getelementptr i16, ptr addrspace(1) %1, i64 %58, !dbg !31
  %60 = sext i32 %53 to i64, !dbg !31
  %61 = getelementptr i16, ptr addrspace(1) %1, i64 %60, !dbg !31
  %62 = mul nsw i32 %42, 3072, !dbg !32
  %63 = mul nsw i32 %43, 3072, !dbg !32
  %64 = mul nsw i32 %44, 3072, !dbg !32
  %65 = mul nsw i32 %45, 3072, !dbg !32
  %66 = or disjoint i32 %62, %28, !dbg !33
  %67 = or disjoint i32 %63, %28, !dbg !33
  %68 = or disjoint i32 %64, %28, !dbg !33
  %69 = or disjoint i32 %65, %28, !dbg !33
  %70 = sext i32 %66 to i64, !dbg !34
  %71 = getelementptr i16, ptr addrspace(1) %2, i64 %70, !dbg !34
  %72 = sext i32 %67 to i64, !dbg !34
  %73 = getelementptr i16, ptr addrspace(1) %2, i64 %72, !dbg !34
  %74 = sext i32 %68 to i64, !dbg !34
  %75 = getelementptr i16, ptr addrspace(1) %2, i64 %74, !dbg !34
  %76 = sext i32 %69 to i64, !dbg !34
  %77 = getelementptr i16, ptr addrspace(1) %2, i64 %76, !dbg !34
  %78 = shl nuw nsw i32 %23, 6, !dbg !35
  %79 = xor i32 %27, %20, !dbg !35
  %80 = and i32 %79, 56, !dbg !35
  %81 = or disjoint i32 %78, %80, !dbg !35
  %82 = zext nneg i32 %81 to i64, !dbg !35
  %83 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %82, !dbg !35
  %84 = shl nuw nsw i32 %24, 6, !dbg !35
  %85 = or disjoint i32 %84, %80, !dbg !35
  %86 = zext nneg i32 %85 to i64, !dbg !35
  %87 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %86, !dbg !35
  %88 = shl nuw nsw i32 %25, 6, !dbg !35
  %89 = or disjoint i32 %88, %80, !dbg !35
  %90 = zext nneg i32 %89 to i64, !dbg !35
  %91 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %90, !dbg !35
  %92 = shl nuw nsw i32 %26, 6, !dbg !35
  %93 = or disjoint i32 %92, %80, !dbg !35
  %94 = zext nneg i32 %93 to i64, !dbg !35
  %95 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %94, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %83, ptr addrspace(1) %55, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %87, ptr addrspace(1) %57, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %91, ptr addrspace(1) %59, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %95, ptr addrspace(1) %61, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !35
  %96 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %82, !dbg !36
  %97 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %86, !dbg !36
  %98 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %90, !dbg !36
  %99 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %94, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %96, ptr addrspace(1) %71, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %97, ptr addrspace(1) %73, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %98, ptr addrspace(1) %75, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %99, ptr addrspace(1) %77, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %100 = getelementptr i8, ptr addrspace(1) %55, i64 128, !dbg !37
  %101 = getelementptr i8, ptr addrspace(1) %57, i64 128, !dbg !37
  %102 = getelementptr i8, ptr addrspace(1) %59, i64 128, !dbg !37
  %103 = getelementptr i8, ptr addrspace(1) %61, i64 128, !dbg !37
  %104 = getelementptr i8, ptr addrspace(1) %71, i64 128, !dbg !38
  %105 = getelementptr i8, ptr addrspace(1) %73, i64 128, !dbg !38
  %106 = getelementptr i8, ptr addrspace(1) %75, i64 128, !dbg !38
  %107 = getelementptr i8, ptr addrspace(1) %77, i64 128, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %108 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %82, !dbg !35
  %109 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %86, !dbg !35
  %110 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %90, !dbg !35
  %111 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %94, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %108, ptr addrspace(1) %100, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %109, ptr addrspace(1) %101, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %110, ptr addrspace(1) %102, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %111, ptr addrspace(1) %103, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !35
  %112 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %82, !dbg !36
  %113 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %86, !dbg !36
  %114 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %90, !dbg !36
  %115 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %94, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %112, ptr addrspace(1) %104, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %113, ptr addrspace(1) %105, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %114, ptr addrspace(1) %106, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %115, ptr addrspace(1) %107, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %116 = and i32 %21, 134217724
  br label %117, !dbg !39

117:                                              ; preds = %7, %117
  %118 = phi i32 [ -1, %7 ], [ %156, %117 ]
  %119 = phi i32 [ 1, %7 ], [ %358, %117 ]
  %.pn79150 = phi ptr addrspace(1) [ %107, %7 ], [ %355, %117 ]
  %.pn95149 = phi ptr addrspace(1) [ %106, %7 ], [ %354, %117 ]
  %.pn111148 = phi ptr addrspace(1) [ %105, %7 ], [ %353, %117 ]
  %.pn127147 = phi ptr addrspace(1) [ %104, %7 ], [ %352, %117 ]
  %.pn15146 = phi ptr addrspace(1) [ %103, %7 ], [ %351, %117 ]
  %.pn31145 = phi ptr addrspace(1) [ %102, %7 ], [ %350, %117 ]
  %.pn47144 = phi ptr addrspace(1) [ %101, %7 ], [ %349, %117 ]
  %.pn63143 = phi ptr addrspace(1) [ %100, %7 ], [ %348, %117 ]
  %120 = phi float [ 0.000000e+00, %7 ], [ %316, %117 ]
  %121 = phi float [ 0.000000e+00, %7 ], [ %317, %117 ]
  %122 = phi float [ 0.000000e+00, %7 ], [ %318, %117 ]
  %123 = phi float [ 0.000000e+00, %7 ], [ %319, %117 ]
  %124 = phi float [ 0.000000e+00, %7 ], [ %320, %117 ]
  %125 = phi float [ 0.000000e+00, %7 ], [ %321, %117 ]
  %126 = phi float [ 0.000000e+00, %7 ], [ %322, %117 ]
  %127 = phi float [ 0.000000e+00, %7 ], [ %323, %117 ]
  %128 = phi float [ 0.000000e+00, %7 ], [ %324, %117 ]
  %129 = phi float [ 0.000000e+00, %7 ], [ %325, %117 ]
  %130 = phi float [ 0.000000e+00, %7 ], [ %326, %117 ]
  %131 = phi float [ 0.000000e+00, %7 ], [ %327, %117 ]
  %132 = phi float [ 0.000000e+00, %7 ], [ %328, %117 ]
  %133 = phi float [ 0.000000e+00, %7 ], [ %329, %117 ]
  %134 = phi float [ 0.000000e+00, %7 ], [ %330, %117 ]
  %135 = phi float [ 0.000000e+00, %7 ], [ %331, %117 ]
  %136 = phi float [ 0.000000e+00, %7 ], [ %332, %117 ]
  %137 = phi float [ 0.000000e+00, %7 ], [ %333, %117 ]
  %138 = phi float [ 0.000000e+00, %7 ], [ %334, %117 ]
  %139 = phi float [ 0.000000e+00, %7 ], [ %335, %117 ]
  %140 = phi float [ 0.000000e+00, %7 ], [ %336, %117 ]
  %141 = phi float [ 0.000000e+00, %7 ], [ %337, %117 ]
  %142 = phi float [ 0.000000e+00, %7 ], [ %338, %117 ]
  %143 = phi float [ 0.000000e+00, %7 ], [ %339, %117 ]
  %144 = phi float [ 0.000000e+00, %7 ], [ %340, %117 ]
  %145 = phi float [ 0.000000e+00, %7 ], [ %341, %117 ]
  %146 = phi float [ 0.000000e+00, %7 ], [ %342, %117 ]
  %147 = phi float [ 0.000000e+00, %7 ], [ %343, %117 ]
  %148 = phi float [ 0.000000e+00, %7 ], [ %344, %117 ]
  %149 = phi float [ 0.000000e+00, %7 ], [ %345, %117 ]
  %150 = phi float [ 0.000000e+00, %7 ], [ %346, %117 ]
  %151 = phi float [ 0.000000e+00, %7 ], [ %347, %117 ]
  %152 = phi i32 [ 0, %7 ], [ %372, %117 ]
  %153 = icmp ult i32 %152, 2944, !dbg !39
  %154 = add i32 %118, 1, !dbg !39
  %155 = icmp slt i32 %154, 3, !dbg !39
  %156 = select i1 %155, i32 %154, i32 0, !dbg !39
  %157 = shl i32 %156, 12, !dbg !35
  %158 = sext i32 %157 to i64, !dbg !35
  %159 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %158, !dbg !35
  tail call void asm sideeffect "cp.async.wait_group 0x2;", ""() #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %160 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %158, !dbg !36
  %161 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %116, i32 0, i32 31), !dbg !40
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !40
  %162 = shl i32 %161, 7, !dbg !40
  %163 = and i32 %162, 384, !dbg !40
  %164 = zext nneg i32 %163 to i64, !dbg !40
  %165 = ptrtoint ptr addrspace(3) %159 to i64, !dbg !40
  %166 = lshr exact i64 %165, 4, !dbg !40
  %167 = and i64 %166, 16383, !dbg !40
  %168 = or disjoint i64 %167, 4611686293338849280, !dbg !40
  %169 = add nuw nsw i64 %168, %164, !dbg !40
  %170 = ptrtoint ptr addrspace(3) %160 to i64, !dbg !40
  %171 = lshr exact i64 %170, 4, !dbg !40
  %172 = and i64 %171, 16383, !dbg !40
  %173 = or disjoint i64 %172, 4611686293338849280, !dbg !40
  %174 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, i64 %169, i64 %173) #3, !dbg !40
  %175 = add nuw nsw i64 %167, 4611686293338849282, !dbg !40
  %176 = add nuw nsw i64 %175, %164, !dbg !40
  %177 = add nuw nsw i64 %172, 4611686293338849282, !dbg !40
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 0, !dbg !40
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 1, !dbg !40
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 2, !dbg !40
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 3, !dbg !40
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 4, !dbg !40
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 5, !dbg !40
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 6, !dbg !40
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 7, !dbg !40
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 8, !dbg !40
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 9, !dbg !40
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 10, !dbg !40
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 11, !dbg !40
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 12, !dbg !40
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 13, !dbg !40
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 14, !dbg !40
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 15, !dbg !40
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 16, !dbg !40
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 17, !dbg !40
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 18, !dbg !40
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 19, !dbg !40
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 20, !dbg !40
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 21, !dbg !40
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 22, !dbg !40
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 23, !dbg !40
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 24, !dbg !40
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 25, !dbg !40
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 26, !dbg !40
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 27, !dbg !40
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 28, !dbg !40
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 29, !dbg !40
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 30, !dbg !40
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, 31, !dbg !40
  %210 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, i64 %176, i64 %177) #3, !dbg !40
  %211 = add nuw nsw i64 %167, 4611686293338849284, !dbg !40
  %212 = add nuw nsw i64 %211, %164, !dbg !40
  %213 = add nuw nsw i64 %172, 4611686293338849284, !dbg !40
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 0, !dbg !40
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 1, !dbg !40
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 2, !dbg !40
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 3, !dbg !40
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 4, !dbg !40
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 5, !dbg !40
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 6, !dbg !40
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 7, !dbg !40
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 8, !dbg !40
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 9, !dbg !40
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 10, !dbg !40
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 11, !dbg !40
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 12, !dbg !40
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 13, !dbg !40
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 14, !dbg !40
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 15, !dbg !40
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 16, !dbg !40
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 17, !dbg !40
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 18, !dbg !40
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 19, !dbg !40
  %234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 20, !dbg !40
  %235 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 21, !dbg !40
  %236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 22, !dbg !40
  %237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 23, !dbg !40
  %238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 24, !dbg !40
  %239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 25, !dbg !40
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 26, !dbg !40
  %241 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 27, !dbg !40
  %242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 28, !dbg !40
  %243 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 29, !dbg !40
  %244 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 30, !dbg !40
  %245 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %210, 31, !dbg !40
  %246 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233, float %234, float %235, float %236, float %237, float %238, float %239, float %240, float %241, float %242, float %243, float %244, float %245, i64 %212, i64 %213) #3, !dbg !40
  %247 = add nuw nsw i64 %167, 4611686293338849286, !dbg !40
  %248 = add nuw nsw i64 %247, %164, !dbg !40
  %249 = add nuw nsw i64 %172, 4611686293338849286, !dbg !40
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 0, !dbg !40
  %251 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 1, !dbg !40
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 2, !dbg !40
  %253 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 3, !dbg !40
  %254 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 4, !dbg !40
  %255 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 5, !dbg !40
  %256 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 6, !dbg !40
  %257 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 7, !dbg !40
  %258 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 8, !dbg !40
  %259 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 9, !dbg !40
  %260 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 10, !dbg !40
  %261 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 11, !dbg !40
  %262 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 12, !dbg !40
  %263 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 13, !dbg !40
  %264 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 14, !dbg !40
  %265 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 15, !dbg !40
  %266 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 16, !dbg !40
  %267 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 17, !dbg !40
  %268 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 18, !dbg !40
  %269 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 19, !dbg !40
  %270 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 20, !dbg !40
  %271 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 21, !dbg !40
  %272 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 22, !dbg !40
  %273 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 23, !dbg !40
  %274 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 24, !dbg !40
  %275 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 25, !dbg !40
  %276 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 26, !dbg !40
  %277 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 27, !dbg !40
  %278 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 28, !dbg !40
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 29, !dbg !40
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 30, !dbg !40
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %246, 31, !dbg !40
  %282 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %250, float %251, float %252, float %253, float %254, float %255, float %256, float %257, float %258, float %259, float %260, float %261, float %262, float %263, float %264, float %265, float %266, float %267, float %268, float %269, float %270, float %271, float %272, float %273, float %274, float %275, float %276, float %277, float %278, float %279, float %280, float %281, i64 %248, i64 %249) #3, !dbg !40
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 0, !dbg !40
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 1, !dbg !40
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 2, !dbg !40
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 3, !dbg !40
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 4, !dbg !40
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 5, !dbg !40
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 6, !dbg !40
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 7, !dbg !40
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 8, !dbg !40
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 9, !dbg !40
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 10, !dbg !40
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 11, !dbg !40
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 12, !dbg !40
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 13, !dbg !40
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 14, !dbg !40
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 15, !dbg !40
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 16, !dbg !40
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 17, !dbg !40
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 18, !dbg !40
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 19, !dbg !40
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 20, !dbg !40
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 21, !dbg !40
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 22, !dbg !40
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 23, !dbg !40
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 24, !dbg !40
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 25, !dbg !40
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 26, !dbg !40
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 27, !dbg !40
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 28, !dbg !40
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 29, !dbg !40
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 30, !dbg !40
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %282, 31, !dbg !40
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !40
  %315 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, float %310, float %311, float %312, float %313, float %314, ptr addrspace(3) %159, i32 64, i32 1, i32 0, i32 0, ptr addrspace(3) %160, i32 1, i32 64, i32 0, i32 0) #3, !dbg !40
  %316 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 0, !dbg !40
  %317 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 1, !dbg !40
  %318 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 2, !dbg !40
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 3, !dbg !40
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 4, !dbg !40
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 5, !dbg !40
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 6, !dbg !40
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 7, !dbg !40
  %324 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 8, !dbg !40
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 9, !dbg !40
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 10, !dbg !40
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 11, !dbg !40
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 12, !dbg !40
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 13, !dbg !40
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 14, !dbg !40
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 15, !dbg !40
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 16, !dbg !40
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 17, !dbg !40
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 18, !dbg !40
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 19, !dbg !40
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 20, !dbg !40
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 21, !dbg !40
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 22, !dbg !40
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 23, !dbg !40
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 24, !dbg !40
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 25, !dbg !40
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 26, !dbg !40
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 27, !dbg !40
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 28, !dbg !40
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 29, !dbg !40
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 30, !dbg !40
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %315, 31, !dbg !40
  %348 = getelementptr i8, ptr addrspace(1) %.pn63143, i64 128, !dbg !37
  %349 = getelementptr i8, ptr addrspace(1) %.pn47144, i64 128, !dbg !37
  %350 = getelementptr i8, ptr addrspace(1) %.pn31145, i64 128, !dbg !37
  %351 = getelementptr i8, ptr addrspace(1) %.pn15146, i64 128, !dbg !37
  %352 = getelementptr i8, ptr addrspace(1) %.pn127147, i64 128, !dbg !38
  %353 = getelementptr i8, ptr addrspace(1) %.pn111148, i64 128, !dbg !38
  %354 = getelementptr i8, ptr addrspace(1) %.pn95149, i64 128, !dbg !38
  %355 = getelementptr i8, ptr addrspace(1) %.pn79150, i64 128, !dbg !38
  %356 = add i32 %119, 1, !dbg !39
  %357 = icmp slt i32 %356, 3, !dbg !39
  %358 = select i1 %357, i32 %356, i32 0, !dbg !39
  %359 = shl i32 %358, 12, !dbg !35
  %360 = sext i32 %359 to i64, !dbg !35
  %361 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %360, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %362 = getelementptr i16, ptr addrspace(3) %361, i64 %82, !dbg !35
  %363 = getelementptr i16, ptr addrspace(3) %361, i64 %86, !dbg !35
  %364 = getelementptr i16, ptr addrspace(3) %361, i64 %90, !dbg !35
  %365 = getelementptr i16, ptr addrspace(3) %361, i64 %94, !dbg !35
  %366 = select i1 %153, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %362, ptr addrspace(1) %348, i32 %366, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %363, ptr addrspace(1) %349, i32 %366, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %364, ptr addrspace(1) %350, i32 %366, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %365, ptr addrspace(1) %351, i32 %366, i1 true) #3, !dbg !35
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !35
  %367 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %360, !dbg !36
  %368 = getelementptr i16, ptr addrspace(3) %367, i64 %82, !dbg !36
  %369 = getelementptr i16, ptr addrspace(3) %367, i64 %86, !dbg !36
  %370 = getelementptr i16, ptr addrspace(3) %367, i64 %90, !dbg !36
  %371 = getelementptr i16, ptr addrspace(3) %367, i64 %94, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %368, ptr addrspace(1) %352, i32 %366, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %369, ptr addrspace(1) %353, i32 %366, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %370, ptr addrspace(1) %354, i32 %366, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %371, ptr addrspace(1) %355, i32 %366, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %372 = add nuw nsw i32 %152, 64, !dbg !39
  %373 = icmp ult i32 %152, 3008, !dbg !39
  br i1 %373, label %117, label %374, !dbg !39

374:                                              ; preds = %117
  %375 = and i32 %20, 31, !dbg !23
  %376 = or disjoint i32 %33, %28, !dbg !26
  %377 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %316, float %317, float %318, float %319, float %320, float %321, float %322, float %323, float %324, float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347) #3, !dbg !39
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 0, !dbg !39
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 1, !dbg !39
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 2, !dbg !39
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 3, !dbg !39
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 4, !dbg !39
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 5, !dbg !39
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 6, !dbg !39
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 7, !dbg !39
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 8, !dbg !39
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 9, !dbg !39
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 10, !dbg !39
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 11, !dbg !39
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 12, !dbg !39
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 13, !dbg !39
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 14, !dbg !39
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 15, !dbg !39
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 16, !dbg !39
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 17, !dbg !39
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 18, !dbg !39
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 19, !dbg !39
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 20, !dbg !39
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 21, !dbg !39
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 22, !dbg !39
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 23, !dbg !39
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 24, !dbg !39
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 25, !dbg !39
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 26, !dbg !39
  %405 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 27, !dbg !39
  %406 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 28, !dbg !39
  %407 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 29, !dbg !39
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 30, !dbg !39
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %377, 31, !dbg !39
  %410 = and i32 %21, 3, !dbg !39
  %411 = lshr i32 %375, 2, !dbg !39
  %412 = shl i32 %20, 1, !dbg !39
  %413 = and i32 %412, 6, !dbg !39
  %414 = shl nuw nsw i32 %410, 4, !dbg !39
  %415 = or disjoint i32 %414, %411, !dbg !39
  %416 = mul nuw nsw i32 %415, 72, !dbg !39
  %417 = or disjoint i32 %416, %413, !dbg !39
  %418 = zext nneg i32 %417 to i64, !dbg !39
  %419 = getelementptr float, ptr addrspace(3) @global_smem, i64 %418, !dbg !39
  %420 = insertelement <2 x float> poison, float %378, i64 0, !dbg !39
  %421 = insertelement <2 x float> %420, float %379, i64 1, !dbg !39
  store <2 x float> %421, ptr addrspace(3) %419, align 8, !dbg !39
  %422 = add nuw nsw i32 %416, 576, !dbg !39
  %423 = or disjoint i32 %422, %413, !dbg !39
  %424 = zext nneg i32 %423 to i64, !dbg !39
  %425 = getelementptr float, ptr addrspace(3) @global_smem, i64 %424, !dbg !39
  %426 = insertelement <2 x float> poison, float %380, i64 0, !dbg !39
  %427 = insertelement <2 x float> %426, float %381, i64 1, !dbg !39
  store <2 x float> %427, ptr addrspace(3) %425, align 8, !dbg !39
  %428 = or disjoint i32 %413, 8, !dbg !39
  %429 = add nuw nsw i32 %416, %428, !dbg !39
  %430 = zext nneg i32 %429 to i64, !dbg !39
  %431 = getelementptr float, ptr addrspace(3) @global_smem, i64 %430, !dbg !39
  %432 = insertelement <2 x float> poison, float %382, i64 0, !dbg !39
  %433 = insertelement <2 x float> %432, float %383, i64 1, !dbg !39
  store <2 x float> %433, ptr addrspace(3) %431, align 8, !dbg !39
  %434 = add nuw nsw i32 %422, %428, !dbg !39
  %435 = zext nneg i32 %434 to i64, !dbg !39
  %436 = getelementptr float, ptr addrspace(3) @global_smem, i64 %435, !dbg !39
  %437 = insertelement <2 x float> poison, float %384, i64 0, !dbg !39
  %438 = insertelement <2 x float> %437, float %385, i64 1, !dbg !39
  store <2 x float> %438, ptr addrspace(3) %436, align 8, !dbg !39
  %439 = or disjoint i32 %413, 16, !dbg !39
  %440 = add nuw nsw i32 %416, %439, !dbg !39
  %441 = zext nneg i32 %440 to i64, !dbg !39
  %442 = getelementptr float, ptr addrspace(3) @global_smem, i64 %441, !dbg !39
  %443 = insertelement <2 x float> poison, float %386, i64 0, !dbg !39
  %444 = insertelement <2 x float> %443, float %387, i64 1, !dbg !39
  store <2 x float> %444, ptr addrspace(3) %442, align 8, !dbg !39
  %445 = add nuw nsw i32 %422, %439, !dbg !39
  %446 = zext nneg i32 %445 to i64, !dbg !39
  %447 = getelementptr float, ptr addrspace(3) @global_smem, i64 %446, !dbg !39
  %448 = insertelement <2 x float> poison, float %388, i64 0, !dbg !39
  %449 = insertelement <2 x float> %448, float %389, i64 1, !dbg !39
  store <2 x float> %449, ptr addrspace(3) %447, align 8, !dbg !39
  %450 = or disjoint i32 %413, 24, !dbg !39
  %451 = add nuw nsw i32 %416, %450, !dbg !39
  %452 = zext nneg i32 %451 to i64, !dbg !39
  %453 = getelementptr float, ptr addrspace(3) @global_smem, i64 %452, !dbg !39
  %454 = insertelement <2 x float> poison, float %390, i64 0, !dbg !39
  %455 = insertelement <2 x float> %454, float %391, i64 1, !dbg !39
  store <2 x float> %455, ptr addrspace(3) %453, align 8, !dbg !39
  %456 = add nuw nsw i32 %422, %450, !dbg !39
  %457 = zext nneg i32 %456 to i64, !dbg !39
  %458 = getelementptr float, ptr addrspace(3) @global_smem, i64 %457, !dbg !39
  %459 = insertelement <2 x float> poison, float %392, i64 0, !dbg !39
  %460 = insertelement <2 x float> %459, float %393, i64 1, !dbg !39
  store <2 x float> %460, ptr addrspace(3) %458, align 8, !dbg !39
  %461 = or disjoint i32 %413, 32, !dbg !39
  %462 = add nuw nsw i32 %416, %461, !dbg !39
  %463 = zext nneg i32 %462 to i64, !dbg !39
  %464 = getelementptr float, ptr addrspace(3) @global_smem, i64 %463, !dbg !39
  %465 = insertelement <2 x float> poison, float %394, i64 0, !dbg !39
  %466 = insertelement <2 x float> %465, float %395, i64 1, !dbg !39
  store <2 x float> %466, ptr addrspace(3) %464, align 8, !dbg !39
  %467 = add nuw nsw i32 %422, %461, !dbg !39
  %468 = zext nneg i32 %467 to i64, !dbg !39
  %469 = getelementptr float, ptr addrspace(3) @global_smem, i64 %468, !dbg !39
  %470 = insertelement <2 x float> poison, float %396, i64 0, !dbg !39
  %471 = insertelement <2 x float> %470, float %397, i64 1, !dbg !39
  store <2 x float> %471, ptr addrspace(3) %469, align 8, !dbg !39
  %472 = or disjoint i32 %413, 40, !dbg !39
  %473 = add nuw nsw i32 %416, %472, !dbg !39
  %474 = zext nneg i32 %473 to i64, !dbg !39
  %475 = getelementptr float, ptr addrspace(3) @global_smem, i64 %474, !dbg !39
  %476 = insertelement <2 x float> poison, float %398, i64 0, !dbg !39
  %477 = insertelement <2 x float> %476, float %399, i64 1, !dbg !39
  store <2 x float> %477, ptr addrspace(3) %475, align 8, !dbg !39
  %478 = add nuw nsw i32 %422, %472, !dbg !39
  %479 = zext nneg i32 %478 to i64, !dbg !39
  %480 = getelementptr float, ptr addrspace(3) @global_smem, i64 %479, !dbg !39
  %481 = insertelement <2 x float> poison, float %400, i64 0, !dbg !39
  %482 = insertelement <2 x float> %481, float %401, i64 1, !dbg !39
  store <2 x float> %482, ptr addrspace(3) %480, align 8, !dbg !39
  %483 = or disjoint i32 %413, 48, !dbg !39
  %484 = add nuw nsw i32 %416, %483, !dbg !39
  %485 = zext nneg i32 %484 to i64, !dbg !39
  %486 = getelementptr float, ptr addrspace(3) @global_smem, i64 %485, !dbg !39
  %487 = insertelement <2 x float> poison, float %402, i64 0, !dbg !39
  %488 = insertelement <2 x float> %487, float %403, i64 1, !dbg !39
  store <2 x float> %488, ptr addrspace(3) %486, align 8, !dbg !39
  %489 = add nuw nsw i32 %422, %483, !dbg !39
  %490 = zext nneg i32 %489 to i64, !dbg !39
  %491 = getelementptr float, ptr addrspace(3) @global_smem, i64 %490, !dbg !39
  %492 = insertelement <2 x float> poison, float %404, i64 0, !dbg !39
  %493 = insertelement <2 x float> %492, float %405, i64 1, !dbg !39
  store <2 x float> %493, ptr addrspace(3) %491, align 8, !dbg !39
  %494 = or disjoint i32 %413, 56, !dbg !39
  %495 = add nuw nsw i32 %416, %494, !dbg !39
  %496 = zext nneg i32 %495 to i64, !dbg !39
  %497 = getelementptr float, ptr addrspace(3) @global_smem, i64 %496, !dbg !39
  %498 = insertelement <2 x float> poison, float %406, i64 0, !dbg !39
  %499 = insertelement <2 x float> %498, float %407, i64 1, !dbg !39
  store <2 x float> %499, ptr addrspace(3) %497, align 8, !dbg !39
  %500 = add nuw nsw i32 %422, %494, !dbg !39
  %501 = zext nneg i32 %500 to i64, !dbg !39
  %502 = getelementptr float, ptr addrspace(3) @global_smem, i64 %501, !dbg !39
  %503 = insertelement <2 x float> poison, float %408, i64 0, !dbg !39
  %504 = insertelement <2 x float> %503, float %409, i64 1, !dbg !39
  store <2 x float> %504, ptr addrspace(3) %502, align 8, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %505 = lshr i32 %375, 3, !dbg !39
  %506 = shl nuw nsw i32 %410, 2, !dbg !39
  %507 = or disjoint i32 %506, %505, !dbg !39
  %508 = mul nuw nsw i32 %507, 72, !dbg !39
  %509 = add nuw nsw i32 %508, %28, !dbg !39
  %510 = zext nneg i32 %509 to i64, !dbg !39
  %511 = getelementptr float, ptr addrspace(3) @global_smem, i64 %510, !dbg !39
  %512 = load float, ptr addrspace(3) %511, align 32, !dbg !39
  %513 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 4, !dbg !39
  %514 = load float, ptr addrspace(3) %513, align 4, !dbg !39
  %515 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 8, !dbg !39
  %516 = load float, ptr addrspace(3) %515, align 8, !dbg !39
  %517 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 12, !dbg !39
  %518 = load float, ptr addrspace(3) %517, align 4, !dbg !39
  %519 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 16, !dbg !39
  %520 = load float, ptr addrspace(3) %519, align 16, !dbg !39
  %521 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 20, !dbg !39
  %522 = load float, ptr addrspace(3) %521, align 4, !dbg !39
  %523 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 24, !dbg !39
  %524 = load float, ptr addrspace(3) %523, align 8, !dbg !39
  %525 = getelementptr inbounds i8, ptr addrspace(3) %511, i64 28, !dbg !39
  %526 = load float, ptr addrspace(3) %525, align 4, !dbg !39
  %527 = getelementptr i8, ptr addrspace(3) %511, i64 4608, !dbg !39
  %528 = load float, ptr addrspace(3) %527, align 32, !dbg !39
  %529 = getelementptr i8, ptr addrspace(3) %511, i64 4612, !dbg !39
  %530 = load float, ptr addrspace(3) %529, align 4, !dbg !39
  %531 = getelementptr i8, ptr addrspace(3) %511, i64 4616, !dbg !39
  %532 = load float, ptr addrspace(3) %531, align 8, !dbg !39
  %533 = getelementptr i8, ptr addrspace(3) %511, i64 4620, !dbg !39
  %534 = load float, ptr addrspace(3) %533, align 4, !dbg !39
  %535 = getelementptr i8, ptr addrspace(3) %511, i64 4624, !dbg !39
  %536 = load float, ptr addrspace(3) %535, align 16, !dbg !39
  %537 = getelementptr i8, ptr addrspace(3) %511, i64 4628, !dbg !39
  %538 = load float, ptr addrspace(3) %537, align 4, !dbg !39
  %539 = getelementptr i8, ptr addrspace(3) %511, i64 4632, !dbg !39
  %540 = load float, ptr addrspace(3) %539, align 8, !dbg !39
  %541 = getelementptr i8, ptr addrspace(3) %511, i64 4636, !dbg !39
  %542 = load float, ptr addrspace(3) %541, align 4, !dbg !39
  %543 = getelementptr i8, ptr addrspace(3) %511, i64 9216, !dbg !39
  %544 = load float, ptr addrspace(3) %543, align 32, !dbg !39
  %545 = getelementptr i8, ptr addrspace(3) %511, i64 9220, !dbg !39
  %546 = load float, ptr addrspace(3) %545, align 4, !dbg !39
  %547 = getelementptr i8, ptr addrspace(3) %511, i64 9224, !dbg !39
  %548 = load float, ptr addrspace(3) %547, align 8, !dbg !39
  %549 = getelementptr i8, ptr addrspace(3) %511, i64 9228, !dbg !39
  %550 = load float, ptr addrspace(3) %549, align 4, !dbg !39
  %551 = getelementptr i8, ptr addrspace(3) %511, i64 9232, !dbg !39
  %552 = load float, ptr addrspace(3) %551, align 16, !dbg !39
  %553 = getelementptr i8, ptr addrspace(3) %511, i64 9236, !dbg !39
  %554 = load float, ptr addrspace(3) %553, align 4, !dbg !39
  %555 = getelementptr i8, ptr addrspace(3) %511, i64 9240, !dbg !39
  %556 = load float, ptr addrspace(3) %555, align 8, !dbg !39
  %557 = getelementptr i8, ptr addrspace(3) %511, i64 9244, !dbg !39
  %558 = load float, ptr addrspace(3) %557, align 4, !dbg !39
  %559 = getelementptr i8, ptr addrspace(3) %511, i64 13824, !dbg !39
  %560 = load float, ptr addrspace(3) %559, align 32, !dbg !39
  %561 = getelementptr i8, ptr addrspace(3) %511, i64 13828, !dbg !39
  %562 = load float, ptr addrspace(3) %561, align 4, !dbg !39
  %563 = getelementptr i8, ptr addrspace(3) %511, i64 13832, !dbg !39
  %564 = load float, ptr addrspace(3) %563, align 8, !dbg !39
  %565 = getelementptr i8, ptr addrspace(3) %511, i64 13836, !dbg !39
  %566 = load float, ptr addrspace(3) %565, align 4, !dbg !39
  %567 = getelementptr i8, ptr addrspace(3) %511, i64 13840, !dbg !39
  %568 = load float, ptr addrspace(3) %567, align 16, !dbg !39
  %569 = getelementptr i8, ptr addrspace(3) %511, i64 13844, !dbg !39
  %570 = load float, ptr addrspace(3) %569, align 4, !dbg !39
  %571 = getelementptr i8, ptr addrspace(3) %511, i64 13848, !dbg !39
  %572 = load float, ptr addrspace(3) %571, align 8, !dbg !39
  %573 = getelementptr i8, ptr addrspace(3) %511, i64 13852, !dbg !39
  %574 = load float, ptr addrspace(3) %573, align 4, !dbg !39
  %575 = icmp slt i32 %29, %4, !dbg !41
  %576 = icmp slt i32 %30, %4, !dbg !41
  %577 = icmp slt i32 %31, %4, !dbg !41
  %578 = icmp slt i32 %32, %4, !dbg !41
  %579 = icmp slt i32 %376, 64, !dbg !42
  %580 = and i1 %579, %575, !dbg !43
  %581 = and i1 %579, %576, !dbg !43
  %582 = and i1 %579, %577, !dbg !43
  %583 = and i1 %579, %578, !dbg !43
  %584 = shl i32 %29, 6, !dbg !44
  %585 = shl i32 %30, 6, !dbg !44
  %586 = shl i32 %31, 6, !dbg !44
  %587 = shl i32 %32, 6, !dbg !44
  %588 = add i32 %584, %376, !dbg !45
  %589 = add i32 %585, %376, !dbg !45
  %590 = add i32 %586, %376, !dbg !45
  %591 = add i32 %587, %376, !dbg !45
  %592 = sext i32 %376 to i64, !dbg !46
  %593 = getelementptr i16, ptr addrspace(1) %0, i64 %592, !dbg !46
  %594 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %593, i1 %580) #3, !dbg !47
  %595 = extractvalue { i32, i32, i32, i32 } %594, 0, !dbg !47
  %596 = extractvalue { i32, i32, i32, i32 } %594, 1, !dbg !47
  %597 = extractvalue { i32, i32, i32, i32 } %594, 2, !dbg !47
  %598 = extractvalue { i32, i32, i32, i32 } %594, 3, !dbg !47
  %599 = trunc i32 %595 to i16, !dbg !47
  %extelt.offset = lshr i32 %595, 16, !dbg !47
  %600 = trunc nuw i32 %extelt.offset to i16, !dbg !47
  %601 = trunc i32 %596 to i16, !dbg !47
  %extelt.offset128 = lshr i32 %596, 16, !dbg !47
  %602 = trunc nuw i32 %extelt.offset128 to i16, !dbg !47
  %603 = trunc i32 %597 to i16, !dbg !47
  %extelt.offset129 = lshr i32 %597, 16, !dbg !47
  %604 = trunc nuw i32 %extelt.offset129 to i16, !dbg !47
  %605 = trunc i32 %598 to i16, !dbg !47
  %extelt.offset130 = lshr i32 %598, 16, !dbg !47
  %606 = trunc nuw i32 %extelt.offset130 to i16, !dbg !47
  %607 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %593, i1 %581) #3, !dbg !47
  %608 = extractvalue { i32, i32, i32, i32 } %607, 0, !dbg !47
  %609 = extractvalue { i32, i32, i32, i32 } %607, 1, !dbg !47
  %610 = extractvalue { i32, i32, i32, i32 } %607, 2, !dbg !47
  %611 = extractvalue { i32, i32, i32, i32 } %607, 3, !dbg !47
  %612 = trunc i32 %608 to i16, !dbg !47
  %extelt.offset131 = lshr i32 %608, 16, !dbg !47
  %613 = trunc nuw i32 %extelt.offset131 to i16, !dbg !47
  %614 = trunc i32 %609 to i16, !dbg !47
  %extelt.offset132 = lshr i32 %609, 16, !dbg !47
  %615 = trunc nuw i32 %extelt.offset132 to i16, !dbg !47
  %616 = trunc i32 %610 to i16, !dbg !47
  %extelt.offset133 = lshr i32 %610, 16, !dbg !47
  %617 = trunc nuw i32 %extelt.offset133 to i16, !dbg !47
  %618 = trunc i32 %611 to i16, !dbg !47
  %extelt.offset134 = lshr i32 %611, 16, !dbg !47
  %619 = trunc nuw i32 %extelt.offset134 to i16, !dbg !47
  %620 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %593, i1 %582) #3, !dbg !47
  %621 = extractvalue { i32, i32, i32, i32 } %620, 0, !dbg !47
  %622 = extractvalue { i32, i32, i32, i32 } %620, 1, !dbg !47
  %623 = extractvalue { i32, i32, i32, i32 } %620, 2, !dbg !47
  %624 = extractvalue { i32, i32, i32, i32 } %620, 3, !dbg !47
  %625 = trunc i32 %621 to i16, !dbg !47
  %extelt.offset135 = lshr i32 %621, 16, !dbg !47
  %626 = trunc nuw i32 %extelt.offset135 to i16, !dbg !47
  %627 = trunc i32 %622 to i16, !dbg !47
  %extelt.offset136 = lshr i32 %622, 16, !dbg !47
  %628 = trunc nuw i32 %extelt.offset136 to i16, !dbg !47
  %629 = trunc i32 %623 to i16, !dbg !47
  %extelt.offset137 = lshr i32 %623, 16, !dbg !47
  %630 = trunc nuw i32 %extelt.offset137 to i16, !dbg !47
  %631 = trunc i32 %624 to i16, !dbg !47
  %extelt.offset138 = lshr i32 %624, 16, !dbg !47
  %632 = trunc nuw i32 %extelt.offset138 to i16, !dbg !47
  %633 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %593, i1 %583) #3, !dbg !47
  %634 = extractvalue { i32, i32, i32, i32 } %633, 0, !dbg !47
  %635 = extractvalue { i32, i32, i32, i32 } %633, 1, !dbg !47
  %636 = extractvalue { i32, i32, i32, i32 } %633, 2, !dbg !47
  %637 = extractvalue { i32, i32, i32, i32 } %633, 3, !dbg !47
  %638 = trunc i32 %634 to i16, !dbg !47
  %extelt.offset139 = lshr i32 %634, 16, !dbg !47
  %639 = trunc nuw i32 %extelt.offset139 to i16, !dbg !47
  %640 = trunc i32 %635 to i16, !dbg !47
  %extelt.offset140 = lshr i32 %635, 16, !dbg !47
  %641 = trunc nuw i32 %extelt.offset140 to i16, !dbg !47
  %642 = trunc i32 %636 to i16, !dbg !47
  %extelt.offset141 = lshr i32 %636, 16, !dbg !47
  %643 = trunc nuw i32 %extelt.offset141 to i16, !dbg !47
  %644 = trunc i32 %637 to i16, !dbg !47
  %extelt.offset142 = lshr i32 %637, 16, !dbg !47
  %645 = trunc nuw i32 %extelt.offset142 to i16, !dbg !47
  %646 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %599) #3, !dbg !48
  %647 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %600) #3, !dbg !48
  %648 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %601) #3, !dbg !48
  %649 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %602) #3, !dbg !48
  %650 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %603) #3, !dbg !48
  %651 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %604) #3, !dbg !48
  %652 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %605) #3, !dbg !48
  %653 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %606) #3, !dbg !48
  %654 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %612) #3, !dbg !48
  %655 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %613) #3, !dbg !48
  %656 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %614) #3, !dbg !48
  %657 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %615) #3, !dbg !48
  %658 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %616) #3, !dbg !48
  %659 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %617) #3, !dbg !48
  %660 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %618) #3, !dbg !48
  %661 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %619) #3, !dbg !48
  %662 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %625) #3, !dbg !48
  %663 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %626) #3, !dbg !48
  %664 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %627) #3, !dbg !48
  %665 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %628) #3, !dbg !48
  %666 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %629) #3, !dbg !48
  %667 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %630) #3, !dbg !48
  %668 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %631) #3, !dbg !48
  %669 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %632) #3, !dbg !48
  %670 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %638) #3, !dbg !48
  %671 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %639) #3, !dbg !48
  %672 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %640) #3, !dbg !48
  %673 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %641) #3, !dbg !48
  %674 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %642) #3, !dbg !48
  %675 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %643) #3, !dbg !48
  %676 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %644) #3, !dbg !48
  %677 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %645) #3, !dbg !48
  %678 = fadd float %512, %646, !dbg !49
  %679 = fadd float %514, %647, !dbg !49
  %680 = fadd float %516, %648, !dbg !49
  %681 = fadd float %518, %649, !dbg !49
  %682 = fadd float %520, %650, !dbg !49
  %683 = fadd float %522, %651, !dbg !49
  %684 = fadd float %524, %652, !dbg !49
  %685 = fadd float %526, %653, !dbg !49
  %686 = fadd float %528, %654, !dbg !49
  %687 = fadd float %530, %655, !dbg !49
  %688 = fadd float %532, %656, !dbg !49
  %689 = fadd float %534, %657, !dbg !49
  %690 = fadd float %536, %658, !dbg !49
  %691 = fadd float %538, %659, !dbg !49
  %692 = fadd float %540, %660, !dbg !49
  %693 = fadd float %542, %661, !dbg !49
  %694 = fadd float %544, %662, !dbg !49
  %695 = fadd float %546, %663, !dbg !49
  %696 = fadd float %548, %664, !dbg !49
  %697 = fadd float %550, %665, !dbg !49
  %698 = fadd float %552, %666, !dbg !49
  %699 = fadd float %554, %667, !dbg !49
  %700 = fadd float %556, %668, !dbg !49
  %701 = fadd float %558, %669, !dbg !49
  %702 = fadd float %560, %670, !dbg !49
  %703 = fadd float %562, %671, !dbg !49
  %704 = fadd float %564, %672, !dbg !49
  %705 = fadd float %566, %673, !dbg !49
  %706 = fadd float %568, %674, !dbg !49
  %707 = fadd float %570, %675, !dbg !49
  %708 = fadd float %572, %676, !dbg !49
  %709 = fadd float %574, %677, !dbg !49
  %710 = sext i32 %588 to i64, !dbg !50
  %711 = getelementptr i16, ptr addrspace(1) %3, i64 %710, !dbg !50
  %712 = sext i32 %589 to i64, !dbg !50
  %713 = getelementptr i16, ptr addrspace(1) %3, i64 %712, !dbg !50
  %714 = sext i32 %590 to i64, !dbg !50
  %715 = getelementptr i16, ptr addrspace(1) %3, i64 %714, !dbg !50
  %716 = sext i32 %591 to i64, !dbg !50
  %717 = getelementptr i16, ptr addrspace(1) %3, i64 %716, !dbg !50
  %718 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %678) #3, !dbg !51
  %719 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %679) #3, !dbg !51
  %720 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %680) #3, !dbg !51
  %721 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %681) #3, !dbg !51
  %722 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %682) #3, !dbg !51
  %723 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %683) #3, !dbg !51
  %724 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %684) #3, !dbg !51
  %725 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %685) #3, !dbg !51
  %726 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %686) #3, !dbg !51
  %727 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %687) #3, !dbg !51
  %728 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %688) #3, !dbg !51
  %729 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %689) #3, !dbg !51
  %730 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %690) #3, !dbg !51
  %731 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %691) #3, !dbg !51
  %732 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %692) #3, !dbg !51
  %733 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %693) #3, !dbg !51
  %734 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %694) #3, !dbg !51
  %735 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %695) #3, !dbg !51
  %736 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %696) #3, !dbg !51
  %737 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %697) #3, !dbg !51
  %738 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %698) #3, !dbg !51
  %739 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %699) #3, !dbg !51
  %740 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %700) #3, !dbg !51
  %741 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %701) #3, !dbg !51
  %742 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %702) #3, !dbg !51
  %743 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %703) #3, !dbg !51
  %744 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %704) #3, !dbg !51
  %745 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %705) #3, !dbg !51
  %746 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %706) #3, !dbg !51
  %747 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %707) #3, !dbg !51
  %748 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %708) #3, !dbg !51
  %749 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %709) #3, !dbg !51
  %750 = insertelement <2 x i16> poison, i16 %718, i64 0, !dbg !51
  %751 = insertelement <2 x i16> %750, i16 %719, i64 1, !dbg !51
  %752 = bitcast <2 x i16> %751 to i32, !dbg !51
  %753 = insertelement <2 x i16> poison, i16 %720, i64 0, !dbg !51
  %754 = insertelement <2 x i16> %753, i16 %721, i64 1, !dbg !51
  %755 = bitcast <2 x i16> %754 to i32, !dbg !51
  %756 = insertelement <2 x i16> poison, i16 %722, i64 0, !dbg !51
  %757 = insertelement <2 x i16> %756, i16 %723, i64 1, !dbg !51
  %758 = bitcast <2 x i16> %757 to i32, !dbg !51
  %759 = insertelement <2 x i16> poison, i16 %724, i64 0, !dbg !51
  %760 = insertelement <2 x i16> %759, i16 %725, i64 1, !dbg !51
  %761 = bitcast <2 x i16> %760 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %752, i32 %755, i32 %758, i32 %761, ptr addrspace(1) %711, i1 %580) #3, !dbg !51
  %762 = insertelement <2 x i16> poison, i16 %726, i64 0, !dbg !51
  %763 = insertelement <2 x i16> %762, i16 %727, i64 1, !dbg !51
  %764 = bitcast <2 x i16> %763 to i32, !dbg !51
  %765 = insertelement <2 x i16> poison, i16 %728, i64 0, !dbg !51
  %766 = insertelement <2 x i16> %765, i16 %729, i64 1, !dbg !51
  %767 = bitcast <2 x i16> %766 to i32, !dbg !51
  %768 = insertelement <2 x i16> poison, i16 %730, i64 0, !dbg !51
  %769 = insertelement <2 x i16> %768, i16 %731, i64 1, !dbg !51
  %770 = bitcast <2 x i16> %769 to i32, !dbg !51
  %771 = insertelement <2 x i16> poison, i16 %732, i64 0, !dbg !51
  %772 = insertelement <2 x i16> %771, i16 %733, i64 1, !dbg !51
  %773 = bitcast <2 x i16> %772 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %764, i32 %767, i32 %770, i32 %773, ptr addrspace(1) %713, i1 %581) #3, !dbg !51
  %774 = insertelement <2 x i16> poison, i16 %734, i64 0, !dbg !51
  %775 = insertelement <2 x i16> %774, i16 %735, i64 1, !dbg !51
  %776 = bitcast <2 x i16> %775 to i32, !dbg !51
  %777 = insertelement <2 x i16> poison, i16 %736, i64 0, !dbg !51
  %778 = insertelement <2 x i16> %777, i16 %737, i64 1, !dbg !51
  %779 = bitcast <2 x i16> %778 to i32, !dbg !51
  %780 = insertelement <2 x i16> poison, i16 %738, i64 0, !dbg !51
  %781 = insertelement <2 x i16> %780, i16 %739, i64 1, !dbg !51
  %782 = bitcast <2 x i16> %781 to i32, !dbg !51
  %783 = insertelement <2 x i16> poison, i16 %740, i64 0, !dbg !51
  %784 = insertelement <2 x i16> %783, i16 %741, i64 1, !dbg !51
  %785 = bitcast <2 x i16> %784 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %776, i32 %779, i32 %782, i32 %785, ptr addrspace(1) %715, i1 %582) #3, !dbg !51
  %786 = insertelement <2 x i16> poison, i16 %742, i64 0, !dbg !51
  %787 = insertelement <2 x i16> %786, i16 %743, i64 1, !dbg !51
  %788 = bitcast <2 x i16> %787 to i32, !dbg !51
  %789 = insertelement <2 x i16> poison, i16 %744, i64 0, !dbg !51
  %790 = insertelement <2 x i16> %789, i16 %745, i64 1, !dbg !51
  %791 = bitcast <2 x i16> %790 to i32, !dbg !51
  %792 = insertelement <2 x i16> poison, i16 %746, i64 0, !dbg !51
  %793 = insertelement <2 x i16> %792, i16 %747, i64 1, !dbg !51
  %794 = bitcast <2 x i16> %793 to i32, !dbg !51
  %795 = insertelement <2 x i16> poison, i16 %748, i64 0, !dbg !51
  %796 = insertelement <2 x i16> %795, i16 %749, i64 1, !dbg !51
  %797 = bitcast <2 x i16> %796 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %788, i32 %791, i32 %794, i32 %797, ptr addrspace(1) %717, i1 %583) #3, !dbg !51
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csi5lse52a5jkhz7lr3w3w4hcd7tkfp6lorbmrmvasizvbypnegm.py", directory: "/opt/inductor_cache/si")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 16, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 42, column: 24, scope: !7)
!13 = !DILocation(line: 43, column: 28, scope: !7)
!14 = !DILocation(line: 43, column: 34, scope: !7)
!15 = !DILocation(line: 48, column: 22, scope: !7)
!16 = !DILocation(line: 49, column: 41, scope: !7)
!17 = !DILocation(line: 49, column: 30, scope: !7)
!18 = !DILocation(line: 49, column: 50, scope: !7)
!19 = !DILocation(line: 50, column: 40, scope: !7)
!20 = !DILocation(line: 50, column: 34, scope: !7)
!21 = !DILocation(line: 51, column: 30, scope: !7)
!22 = !DILocation(line: 53, column: 17, scope: !7)
!23 = !DILocation(line: 53, column: 40, scope: !7)
!24 = !DILocation(line: 53, column: 27, scope: !7)
!25 = !DILocation(line: 54, column: 17, scope: !7)
!26 = !DILocation(line: 54, column: 27, scope: !7)
!27 = !DILocation(line: 56, column: 52, scope: !7)
!28 = !DILocation(line: 60, column: 52, scope: !7)
!29 = !DILocation(line: 64, column: 28, scope: !7)
!30 = !DILocation(line: 64, column: 40, scope: !7)
!31 = !DILocation(line: 64, column: 13, scope: !7)
!32 = !DILocation(line: 65, column: 54, scope: !7)
!33 = !DILocation(line: 65, column: 39, scope: !7)
!34 = !DILocation(line: 65, column: 13, scope: !7)
!35 = !DILocation(line: 70, column: 24, scope: !7)
!36 = !DILocation(line: 71, column: 24, scope: !7)
!37 = !DILocation(line: 78, column: 13, scope: !7)
!38 = !DILocation(line: 79, column: 13, scope: !7)
!39 = !DILocation(line: 68, column: 25, scope: !7)
!40 = !DILocation(line: 77, column: 25, scope: !7)
!41 = !DILocation(line: 86, column: 20, scope: !7)
!42 = !DILocation(line: 86, column: 34, scope: !7)
!43 = !DILocation(line: 86, column: 26, scope: !7)
!44 = !DILocation(line: 89, column: 25, scope: !7)
!45 = !DILocation(line: 89, column: 22, scope: !7)
!46 = !DILocation(line: 90, column: 30, scope: !7)
!47 = !DILocation(line: 90, column: 66, scope: !7)
!48 = !DILocation(line: 90, column: 105, scope: !7)
!49 = !DILocation(line: 91, column: 17, scope: !7)
!50 = !DILocation(line: 92, column: 25, scope: !7)
!51 = !DILocation(line: 92, column: 68, scope: !7)
