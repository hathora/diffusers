; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = srem i32 %9, 12288, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr i16, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !16
  %14 = trunc i32 %13 to i16, !dbg !16
  %extelt.offset = lshr i32 %13, 16, !dbg !16
  %15 = trunc nuw i32 %extelt.offset to i16, !dbg !16
  %16 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %14) #3, !dbg !17
  %17 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %15) #3, !dbg !17
  %18 = sext i32 %10 to i64, !dbg !18
  %19 = getelementptr i16, ptr addrspace(1) %1, i64 %18, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #3, !dbg !19
  %21 = trunc i32 %20 to i16, !dbg !19
  %extelt.offset1 = lshr i32 %20, 16, !dbg !19
  %22 = trunc nuw i32 %extelt.offset1 to i16, !dbg !19
  %23 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #3, !dbg !20
  %24 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #3, !dbg !20
  %25 = fadd float %16, %23, !dbg !21
  %26 = fadd float %17, %24, !dbg !21
  %27 = fmul float %25, %25, !dbg !22
  %28 = fmul float %26, %26, !dbg !22
  %29 = fmul float %25, %27, !dbg !23
  %30 = fmul float %26, %28, !dbg !23
  %31 = fmul float %29, 0x3FA6E4E260000000, !dbg !24
  %32 = fmul float %30, 0x3FA6E4E260000000, !dbg !24
  %33 = fadd float %25, %31, !dbg !25
  %34 = fadd float %26, %32, !dbg !25
  %35 = fmul float %33, 0x3FE9884540000000, !dbg !26
  %36 = fmul float %34, 0x3FE9884540000000, !dbg !26
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i = icmp eq i32 %37, 0, !dbg !27
  %38 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #3, !dbg !27
  %39 = tail call float @llvm.nvvm.fabs.f(float %35) #3, !dbg !27
  %.01.i = select i1 %.not.i, float %39, float %38, !dbg !27
  %40 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !27
  br i1 %40, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !27

__internal_fmad.exit1.i:                          ; preds = %3
  %41 = fmul float %.01.i, 0x4007154760000000, !dbg !27
  %42 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %41) #3, !dbg !27
  %43 = fadd float %42, 1.000000e+00, !dbg !27
  %44 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %43) #4, !dbg !27, !srcloc !28
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i = icmp eq i32 %45, 0, !dbg !27
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %44, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %44, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %.03.i = select i1 %.not6.i, float %47, float %46, !dbg !27
  %48 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !27
  %s.0.i = select i1 %48, float 1.000000e+00, float %.03.i, !dbg !27
  %49 = bitcast float %s.0.i to i32, !dbg !27
  %50 = bitcast float %35 to i32, !dbg !27
  %51 = and i32 %50, -2147483648, !dbg !27
  %52 = or i32 %51, %49, !dbg !27
  %53 = bitcast i32 %52 to float, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__internal_fmad.exit3.i:                          ; preds = %3
  %54 = fmul float %35, %35, !dbg !27
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i = icmp eq i32 %55, 0, !dbg !27
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %54, float 0xBFAAC795C0000000) #3, !dbg !27
  %57 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %54, float 0xBFAAC795C0000000) #3, !dbg !27
  %.06.i = select i1 %.not1.i, float %57, float %56, !dbg !27
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i = icmp eq i32 %58, 0, !dbg !27
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %54, float 0x3FC10B2820000000) #3, !dbg !27
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %54, float 0x3FC10B2820000000) #3, !dbg !27
  %.05.i = select i1 %.not2.i, float %60, float %59, !dbg !27
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i = icmp eq i32 %61, 0, !dbg !27
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %54, float 0xBFD5553DA0000000) #3, !dbg !27
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %54, float 0xBFD5553DA0000000) #3, !dbg !27
  %.0.i = select i1 %.not3.i, float %63, float %62, !dbg !27
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i = icmp eq i32 %64, 0, !dbg !27
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %54, float 0.000000e+00) #3, !dbg !27
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %54, float 0.000000e+00) #3, !dbg !27
  %.04.i = select i1 %.not4.i, float %66, float %65, !dbg !27
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i = icmp eq i32 %67, 0, !dbg !27
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %35, float %35) #3, !dbg !27
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %35, float %35) #3, !dbg !27
  %.02.i = select i1 %.not5.i, float %69, float %68, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %53, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !27
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i2 = icmp eq i32 %70, 0, !dbg !27
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %36) #3, !dbg !27
  %72 = tail call float @llvm.nvvm.fabs.f(float %36) #3, !dbg !27
  %.01.i3 = select i1 %.not.i2, float %72, float %71, !dbg !27
  %73 = fcmp ult float %.01.i3, 0x3FE3333340000000, !dbg !27
  br i1 %73, label %__internal_fmad.exit3.i9, label %__internal_fmad.exit1.i4, !dbg !27

__internal_fmad.exit1.i4:                         ; preds = %__nv_tanhf.exit
  %74 = fmul float %.01.i3, 0x4007154760000000, !dbg !27
  %75 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %74) #3, !dbg !27
  %76 = fadd float %75, 1.000000e+00, !dbg !27
  %77 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %76) #4, !dbg !27, !srcloc !28
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i5 = icmp eq i32 %78, 0, !dbg !27
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %77, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %77, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %.03.i6 = select i1 %.not6.i5, float %80, float %79, !dbg !27
  %81 = fcmp oge float %.01.i3, 0x4022059680000000, !dbg !27
  %s.0.i7 = select i1 %81, float 1.000000e+00, float %.03.i6, !dbg !27
  %82 = bitcast float %s.0.i7 to i32, !dbg !27
  %83 = bitcast float %36 to i32, !dbg !27
  %84 = and i32 %83, -2147483648, !dbg !27
  %85 = or i32 %84, %82, !dbg !27
  %86 = bitcast i32 %85 to float, !dbg !27
  br label %__nv_tanhf.exit20, !dbg !27

__internal_fmad.exit3.i9:                         ; preds = %__nv_tanhf.exit
  %87 = fmul float %36, %36, !dbg !27
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i10 = icmp eq i32 %88, 0, !dbg !27
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %87, float 0xBFAAC795C0000000) #3, !dbg !27
  %90 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %87, float 0xBFAAC795C0000000) #3, !dbg !27
  %.06.i11 = select i1 %.not1.i10, float %90, float %89, !dbg !27
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i12 = icmp eq i32 %91, 0, !dbg !27
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i11, float %87, float 0x3FC10B2820000000) #3, !dbg !27
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i11, float %87, float 0x3FC10B2820000000) #3, !dbg !27
  %.05.i13 = select i1 %.not2.i12, float %93, float %92, !dbg !27
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i14 = icmp eq i32 %94, 0, !dbg !27
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i13, float %87, float 0xBFD5553DA0000000) #3, !dbg !27
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i13, float %87, float 0xBFD5553DA0000000) #3, !dbg !27
  %.0.i15 = select i1 %.not3.i14, float %96, float %95, !dbg !27
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i16 = icmp eq i32 %97, 0, !dbg !27
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %87, float 0.000000e+00) #3, !dbg !27
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %87, float 0.000000e+00) #3, !dbg !27
  %.04.i17 = select i1 %.not4.i16, float %99, float %98, !dbg !27
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i18 = icmp eq i32 %100, 0, !dbg !27
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i17, float %36, float %36) #3, !dbg !27
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i17, float %36, float %36) #3, !dbg !27
  %.02.i19 = select i1 %.not5.i18, float %102, float %101, !dbg !27
  br label %__nv_tanhf.exit20, !dbg !27

__nv_tanhf.exit20:                                ; preds = %__internal_fmad.exit1.i4, %__internal_fmad.exit3.i9
  %s.1.i8 = phi float [ %86, %__internal_fmad.exit1.i4 ], [ %.02.i19, %__internal_fmad.exit3.i9 ], !dbg !27
  %103 = fmul float %26, 5.000000e-01, !dbg !29
  %104 = fmul float %25, 5.000000e-01, !dbg !29
  %105 = fadd float %s.1.i, 1.000000e+00, !dbg !30
  %106 = fadd float %s.1.i8, 1.000000e+00, !dbg !30
  %107 = fmul float %104, %105, !dbg !31
  %108 = fmul float %103, %106, !dbg !31
  %109 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %107) #3, !dbg !32
  %110 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %108) #3, !dbg !32
  %111 = insertelement <2 x i16> poison, i16 %109, i64 0, !dbg !32
  %112 = insertelement <2 x i16> %111, i16 %110, i64 1, !dbg !32
  %113 = bitcast <2 x i16> %112 to i32, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %113, ptr addrspace(1) %12, i1 true) #3, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ct76z3ppccvibpyaoi4gb2mbwluwmpiduh2svzjcw7z4n7qg7svf.py", directory: "/opt/inductor_cache/t7")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 18, scope: !7)
!15 = !DILocation(line: 24, column: 34, scope: !7)
!16 = !DILocation(line: 24, column: 39, scope: !7)
!17 = !DILocation(line: 24, column: 48, scope: !7)
!18 = !DILocation(line: 25, column: 30, scope: !7)
!19 = !DILocation(line: 25, column: 35, scope: !7)
!20 = !DILocation(line: 25, column: 74, scope: !7)
!21 = !DILocation(line: 26, column: 18, scope: !7)
!22 = !DILocation(line: 30, column: 18, scope: !7)
!23 = !DILocation(line: 31, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 34, column: 19, scope: !7)
!26 = !DILocation(line: 36, column: 20, scope: !7)
!27 = !DILocation(line: 37, column: 27, scope: !7)
!28 = !{i32 21046}
!29 = !DILocation(line: 29, column: 18, scope: !7)
!30 = !DILocation(line: 39, column: 20, scope: !7)
!31 = !DILocation(line: 40, column: 19, scope: !7)
!32 = !DILocation(line: 42, column: 40, scope: !7)
!33 = !DILocation(line: 42, column: 4, scope: !7)
