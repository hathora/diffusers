//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u64 triton__param_7,
	.param .u64 triton__param_8,
	.param .u64 triton__param_9,
	.param .u64 triton__param_10,
	.param .u64 triton__param_11,
	.param .u64 triton__param_12,
	.param .u64 triton__param_13,
	.param .u32 triton__param_14,
	.param .u32 triton__param_15,
	.param .u32 triton__param_16
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<63>;
	.reg .b16 	%rs<82>;
	.reg .b32 	%r<79>;
	.reg .f32 	%f<91>;
	.reg .b64 	%rd<85>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u32 	%r10, [triton__param_15];
	ld.param.u32 	%r9, [triton__param_14];
	ld.param.u64 	%rd33, [triton__param_13];
	ld.param.u64 	%rd32, [triton__param_12];
	ld.param.u64 	%rd31, [triton__param_11];
	ld.param.u64 	%rd30, [triton__param_10];
	ld.param.u64 	%rd29, [triton__param_8];
	ld.param.u64 	%rd28, [triton__param_5];
	ld.param.u64 	%rd27, [triton__param_3];
	ld.param.u64 	%rd26, [triton__param_0];
	ld.param.u64 	%rd45, [triton__param_1];
$L__tmp0:
	.loc	1 20 28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 20 33
	shl.b32 	%r24, %r11, 6;
	ld.param.u64 	%rd46, [triton__param_2];
	.loc	1 21 44
	mov.u32 	%r25, %tid.x;
	ld.param.u64 	%rd47, [triton__param_4];
	bfe.u32 	%r26, %r25, 2, 6;
	.loc	1 21 23
	or.b32  	%r1, %r24, %r26;
	ld.param.u64 	%rd48, [triton__param_6];
	.loc	1 22 21
	setp.lt.s32 	%p51, %r1, %r10;
	ld.param.u64 	%rd49, [triton__param_7];
	.loc	1 23 33
	and.b32  	%r27, %r25, 3;
	.loc	1 36 22
	setp.lt.s32 	%p24, %r1, %r9;
	ld.param.u64 	%rd50, [triton__param_9];
	.loc	1 37 45
	mul.lo.s32 	%r28, %r1, 3072;
	.loc	1 48 24
	setp.ge.s32 	%p25, %r1, %r9;
	.loc	1 51 53
	sub.s32 	%r29, %r1, %r9;
	.loc	1 51 47
	mul.lo.s32 	%r30, %r29, 3072;
	.loc	1 37 40
	or.b32  	%r31, %r27, %r28;
	.loc	1 37 34
	mul.wide.s32 	%rd51, %r31, 2;
	add.s64 	%rd34, %rd26, %rd51;
	.loc	1 37 66
	and.pred  	%p26, %p51, %p24;
	mov.u16 	%rs2, 0;
	.loc	1 37 51
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p26 ld.global.L1::evict_first.b16 { %rs3 }, [ %rd34 + 0 ];
	@!%p26 mov.u16 %rs3, %rs2;
	// end inline asm
	.loc	1 37 118
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f12, %r12;
	.loc	1 38 34
	mul.wide.u32 	%rd1, %r27, 2;
	add.s64 	%rd52, %rd45, %rd1;
	add.s64 	%rd35, %rd52, 30720;
	.loc	1 38 82
	// begin inline asm
	mov.u16 %rs6, 0x0;
	@%p26 ld.global.L1::evict_last.b16 { %rs6 }, [ %rd35 + 0 ];
	@!%p26 mov.u16 %rs6, %rs2;
	// end inline asm
	.loc	1 38 148
	// begin inline asm
	cvt.f32.bf16 %r13, %rs6;
	// end inline asm
	mov.b32 	%f13, %r13;
	.loc	1 39 34
	add.s64 	%rd53, %rd46, %rd1;
	add.s64 	%rd36, %rd53, 30720;
	.loc	1 39 82
	// begin inline asm
	mov.u16 %rs9, 0x0;
	@%p26 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd36 + 0 ];
	@!%p26 mov.u16 %rs9, %rs2;
	// end inline asm
	.loc	1 39 148
	// begin inline asm
	cvt.f32.bf16 %r14, %rs9;
	// end inline asm
	mov.b32 	%f14, %r14;
	.loc	1 41 34
	add.s64 	%rd37, %rd27, %rd51;
	.loc	1 41 51
	// begin inline asm
	mov.u16 %rs12, 0x0;
	@%p26 ld.global.L1::evict_first.b16 { %rs12 }, [ %rd37 + 0 ];
	@!%p26 mov.u16 %rs12, %rs2;
	// end inline asm
	.loc	1 41 118
	// begin inline asm
	cvt.f32.bf16 %r15, %rs12;
	// end inline asm
	mov.b32 	%f15, %r15;
	.loc	1 42 35
	add.s64 	%rd38, %rd47, %rd1;
	.loc	1 42 75
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p26 ld.global.L1::evict_last.b16 { %rs15 }, [ %rd38 + 0 ];
	@!%p26 mov.u16 %rs15, %rs2;
	// end inline asm
	.loc	1 42 141
	// begin inline asm
	cvt.f32.bf16 %r16, %rs15;
	// end inline asm
	mov.b32 	%f16, %r16;
	.loc	1 51 41
	or.b32  	%r32, %r27, %r30;
	.loc	1 51 35
	mul.wide.s32 	%rd54, %r32, 2;
	add.s64 	%rd39, %rd28, %rd54;
	.loc	1 51 83
	and.pred  	%p36, %p51, %p25;
	.loc	1 51 67
	// begin inline asm
	mov.u16 %rs18, 0x0;
	@%p36 ld.global.L1::evict_first.b16 { %rs18 }, [ %rd39 + 0 ];
	@!%p36 mov.u16 %rs18, %rs2;
	// end inline asm
	.loc	1 51 135
	// begin inline asm
	cvt.f32.bf16 %r17, %rs18;
	// end inline asm
	mov.b32 	%f17, %r17;
	.loc	1 52 35
	add.s64 	%rd55, %rd48, %rd1;
	add.s64 	%rd40, %rd55, 30720;
	.loc	1 52 83
	// begin inline asm
	mov.u16 %rs21, 0x0;
	@%p36 ld.global.L1::evict_last.b16 { %rs21 }, [ %rd40 + 0 ];
	@!%p36 mov.u16 %rs21, %rs2;
	// end inline asm
	.loc	1 52 150
	// begin inline asm
	cvt.f32.bf16 %r18, %rs21;
	// end inline asm
	mov.b32 	%f18, %r18;
	.loc	1 53 35
	add.s64 	%rd56, %rd49, %rd1;
	add.s64 	%rd41, %rd56, 30720;
	.loc	1 53 83
	// begin inline asm
	mov.u16 %rs24, 0x0;
	@%p36 ld.global.L1::evict_last.b16 { %rs24 }, [ %rd41 + 0 ];
	@!%p36 mov.u16 %rs24, %rs2;
	// end inline asm
	.loc	1 53 150
	// begin inline asm
	cvt.f32.bf16 %r19, %rs24;
	// end inline asm
	mov.b32 	%f19, %r19;
	.loc	1 55 35
	add.s64 	%rd42, %rd29, %rd54;
	.loc	1 55 67
	// begin inline asm
	mov.u16 %rs27, 0x0;
	@%p36 ld.global.L1::evict_first.b16 { %rs27 }, [ %rd42 + 0 ];
	@!%p36 mov.u16 %rs27, %rs2;
	// end inline asm
	.loc	1 55 135
	// begin inline asm
	cvt.f32.bf16 %r20, %rs27;
	// end inline asm
	mov.b32 	%f20, %r20;
	.loc	1 56 35
	add.s64 	%rd43, %rd50, %rd1;
	.loc	1 56 75
	// begin inline asm
	mov.u16 %rs30, 0x0;
	@%p36 ld.global.L1::evict_last.b16 { %rs30 }, [ %rd43 + 0 ];
	@!%p36 mov.u16 %rs30, %rs2;
	// end inline asm
	.loc	1 56 142
	// begin inline asm
	cvt.f32.bf16 %r21, %rs30;
	// end inline asm
	mov.b32 	%f21, %r21;
	.loc	1 40 22
	add.f32 	%f22, %f13, %f14;
	.loc	1 43 23
	add.f32 	%f23, %f15, %f16;
	.loc	1 45 23
	fma.rn.f32 	%f24, %f22, %f23, %f12;
	.loc	1 54 24
	add.f32 	%f25, %f18, %f19;
	.loc	1 57 24
	add.f32 	%f26, %f20, %f21;
	.loc	1 59 24
	fma.rn.f32 	%f27, %f25, %f26, %f17;
	.loc	1 0 0
	selp.f32 	%f28, %f24, %f27, %p24;
	.loc	1 71 29
	add.s64 	%rd44, %rd32, %rd51;
	.loc	1 71 53
	mov.b32 	%r22, %f28;
	// begin inline asm
	cvt.rn.bf16.f32 %rs32, %r22;
	// end inline asm
	// begin inline asm
	@%p51 st.global.b16 [ %rd44 + 0 ], { %rs32 };
	// end inline asm
	.loc	1 70 66
	selp.f32 	%f88, 0f3F800000, 0f00000000, %p51;
	.loc	1 68 62
	selp.f32 	%f90, %f28, 0f00000000, %p51;
	.loc	1 28 36
	add.s64 	%rd82, %rd49, 30728;
	add.s64 	%rd81, %rd48, 30728;
	add.s64 	%rd80, %rd47, 8;
	add.s64 	%rd79, %rd50, 8;
	add.s64 	%rd78, %rd46, 30728;
	add.s64 	%rd77, %rd45, 30728;
	or.b32  	%r2, %r32, 4;
	mul.lo.s32 	%r33, %r26, 3072;
	mad.lo.s32 	%r34, %r11, 196608, %r33;
	or.b32  	%r3, %r34, %r27;
	or.b32  	%r4, %r3, 4;
	mov.f32 	%f89, 0f00000000;
	mov.b32 	%r77, 0;
$L__BB0_1:
	.loc	1 37 34
	add.s32 	%r49, %r4, %r77;
	mul.wide.s32 	%rd68, %r49, 2;
	add.s64 	%rd57, %rd26, %rd68;
	.loc	1 37 51
	// begin inline asm
	mov.u16 %rs33, 0x0;
	@%p26 ld.global.L1::evict_first.b16 { %rs33 }, [ %rd57 + 0 ];
	@!%p26 mov.u16 %rs33, %rs2;
	// end inline asm
	.loc	1 37 118
	// begin inline asm
	cvt.f32.bf16 %r35, %rs33;
	// end inline asm
	mov.b32 	%f29, %r35;
	.loc	1 38 82
	add.s64 	%rd58, %rd77, %rd1;
	// begin inline asm
	mov.u16 %rs36, 0x0;
	@%p26 ld.global.L1::evict_last.b16 { %rs36 }, [ %rd58 + 0 ];
	@!%p26 mov.u16 %rs36, %rs2;
	// end inline asm
	.loc	1 38 148
	// begin inline asm
	cvt.f32.bf16 %r36, %rs36;
	// end inline asm
	mov.b32 	%f30, %r36;
	.loc	1 39 82
	add.s64 	%rd59, %rd78, %rd1;
	// begin inline asm
	mov.u16 %rs39, 0x0;
	@%p26 ld.global.L1::evict_last.b16 { %rs39 }, [ %rd59 + 0 ];
	@!%p26 mov.u16 %rs39, %rs2;
	// end inline asm
	.loc	1 39 148
	// begin inline asm
	cvt.f32.bf16 %r37, %rs39;
	// end inline asm
	mov.b32 	%f31, %r37;
	.loc	1 40 22
	add.f32 	%f32, %f30, %f31;
	.loc	1 41 34
	add.s64 	%rd60, %rd27, %rd68;
	.loc	1 41 51
	// begin inline asm
	mov.u16 %rs42, 0x0;
	@%p26 ld.global.L1::evict_first.b16 { %rs42 }, [ %rd60 + 0 ];
	@!%p26 mov.u16 %rs42, %rs2;
	// end inline asm
	.loc	1 41 118
	// begin inline asm
	cvt.f32.bf16 %r38, %rs42;
	// end inline asm
	mov.b32 	%f33, %r38;
	.loc	1 42 75
	add.s64 	%rd61, %rd80, %rd1;
	// begin inline asm
	mov.u16 %rs45, 0x0;
	@%p26 ld.global.L1::evict_last.b16 { %rs45 }, [ %rd61 + 0 ];
	@!%p26 mov.u16 %rs45, %rs2;
	// end inline asm
	.loc	1 42 141
	// begin inline asm
	cvt.f32.bf16 %r39, %rs45;
	// end inline asm
	mov.b32 	%f34, %r39;
	.loc	1 43 23
	add.f32 	%f35, %f33, %f34;
	.loc	1 45 23
	fma.rn.f32 	%f36, %f32, %f35, %f29;
	.loc	1 51 35
	add.s32 	%r50, %r2, %r77;
	mul.wide.s32 	%rd69, %r50, 2;
	add.s64 	%rd62, %rd28, %rd69;
	.loc	1 51 67
	// begin inline asm
	mov.u16 %rs48, 0x0;
	@%p36 ld.global.L1::evict_first.b16 { %rs48 }, [ %rd62 + 0 ];
	@!%p36 mov.u16 %rs48, %rs2;
	// end inline asm
	.loc	1 51 135
	// begin inline asm
	cvt.f32.bf16 %r40, %rs48;
	// end inline asm
	mov.b32 	%f37, %r40;
	.loc	1 52 83
	add.s64 	%rd63, %rd81, %rd1;
	// begin inline asm
	mov.u16 %rs51, 0x0;
	@%p36 ld.global.L1::evict_last.b16 { %rs51 }, [ %rd63 + 0 ];
	@!%p36 mov.u16 %rs51, %rs2;
	// end inline asm
	.loc	1 52 150
	// begin inline asm
	cvt.f32.bf16 %r41, %rs51;
	// end inline asm
	mov.b32 	%f38, %r41;
	.loc	1 53 83
	add.s64 	%rd64, %rd82, %rd1;
	// begin inline asm
	mov.u16 %rs54, 0x0;
	@%p36 ld.global.L1::evict_last.b16 { %rs54 }, [ %rd64 + 0 ];
	@!%p36 mov.u16 %rs54, %rs2;
	// end inline asm
	.loc	1 53 150
	// begin inline asm
	cvt.f32.bf16 %r42, %rs54;
	// end inline asm
	mov.b32 	%f39, %r42;
	.loc	1 54 24
	add.f32 	%f40, %f38, %f39;
	.loc	1 55 35
	add.s64 	%rd65, %rd29, %rd69;
	.loc	1 55 67
	// begin inline asm
	mov.u16 %rs57, 0x0;
	@%p36 ld.global.L1::evict_first.b16 { %rs57 }, [ %rd65 + 0 ];
	@!%p36 mov.u16 %rs57, %rs2;
	// end inline asm
	.loc	1 55 135
	// begin inline asm
	cvt.f32.bf16 %r43, %rs57;
	// end inline asm
	mov.b32 	%f41, %r43;
	.loc	1 56 75
	add.s64 	%rd66, %rd79, %rd1;
	// begin inline asm
	mov.u16 %rs60, 0x0;
	@%p36 ld.global.L1::evict_last.b16 { %rs60 }, [ %rd66 + 0 ];
	@!%p36 mov.u16 %rs60, %rs2;
	// end inline asm
	.loc	1 56 142
	// begin inline asm
	cvt.f32.bf16 %r44, %rs60;
	// end inline asm
	mov.b32 	%f42, %r44;
	.loc	1 57 24
	add.f32 	%f43, %f41, %f42;
	.loc	1 59 24
	fma.rn.f32 	%f44, %f40, %f43, %f37;
	.loc	1 0 0
	selp.f32 	%f45, %f36, %f44, %p24;
$L__tmp1:
	.loc	2 147 24
	sub.f32 	%f46, %f45, %f90;
	.loc	2 148 30
	add.f32 	%f47, %f88, 0f3F800000;
	.loc	2 149 34
	mov.b32 	%r46, %f46;
	mov.b32 	%r47, %f47;
	// begin inline asm
	div.full.f32 %r45, %r46, %r47;
	// end inline asm
	mov.b32 	%f48, %r45;
	.loc	2 149 26
	add.f32 	%f49, %f90, %f48;
	.loc	2 150 39
	sub.f32 	%f50, %f45, %f49;
	.loc	2 150 22
	fma.rn.f32 	%f51, %f46, %f50, %f89;
$L__tmp2:
	.loc	1 68 62
	selp.f32 	%f90, %f49, %f90, %p51;
	.loc	1 69 58
	selp.f32 	%f89, %f51, %f89, %p51;
	.loc	1 70 66
	selp.f32 	%f88, %f47, %f88, %p51;
	.loc	1 71 29
	add.s64 	%rd67, %rd32, %rd68;
	.loc	1 71 53
	mov.b32 	%r48, %f45;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r48;
	// end inline asm
	// begin inline asm
	@%p51 st.global.b16 [ %rd67 + 0 ], { %rs63 };
	// end inline asm
	.loc	1 28 36
	add.s32 	%r77, %r77, 4;
	add.s64 	%rd82, %rd82, 8;
	add.s64 	%rd81, %rd81, 8;
	add.s64 	%rd80, %rd80, 8;
	add.s64 	%rd79, %rd79, 8;
	add.s64 	%rd78, %rd78, 8;
	add.s64 	%rd77, %rd77, 8;
	setp.lt.u32 	%p48, %r77, 3068;
	@%p48 bra 	$L__BB0_1;
$L__tmp3:
	.loc	2 168 46
	mov.b32 	%r61, %f90;
	shfl.sync.bfly.b32	%r62, %r61, 2, 31, -1;
	mov.b32 	%f52, %r62;
	mov.b32 	%r63, %f89;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f53, %r64;
	mov.b32 	%r65, %f88;
	shfl.sync.bfly.b32	%r52, %r65, 2, 31, -1;
	mov.b32 	%f54, %r52;
	.loc	2 156 21
	sub.f32 	%f55, %f52, %f90;
	.loc	2 157 28
	add.f32 	%f56, %f88, %f54;
	.loc	2 158 39
	setp.eq.f32 	%p49, %f56, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r53, %f56;
	// begin inline asm
	div.full.f32 %r51, %r52, %r53;
	// end inline asm
	mov.b32 	%f57, %r51;
	.loc	2 158 49
	selp.f32 	%f58, 0f00000000, %f57, %p49;
	.loc	2 160 17
	fma.rn.f32 	%f59, %f55, %f58, %f90;
	.loc	2 161 15
	add.f32 	%f60, %f89, %f53;
	.loc	2 161 30
	mul.f32 	%f61, %f55, %f55;
	.loc	2 161 38
	mul.f32 	%f62, %f88, %f61;
	.loc	2 161 22
	fma.rn.f32 	%f63, %f62, %f58, %f60;
	.loc	2 168 46
	mov.b32 	%r66, %f59;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f64, %r67;
	mov.b32 	%r68, %f63;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f65, %r69;
	shfl.sync.bfly.b32	%r55, %r53, 1, 31, -1;
	mov.b32 	%f66, %r55;
	.loc	2 156 21
	sub.f32 	%f67, %f64, %f59;
	.loc	2 157 28
	add.f32 	%f68, %f56, %f66;
	.loc	2 158 39
	setp.eq.f32 	%p50, %f68, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r56, %f68;
	// begin inline asm
	div.full.f32 %r54, %r55, %r56;
	// end inline asm
	mov.b32 	%f69, %r54;
	.loc	2 158 49
	selp.f32 	%f70, 0f00000000, %f69, %p50;
	.loc	2 160 17
	fma.rn.f32 	%f9, %f67, %f70, %f59;
	.loc	2 161 15
	add.f32 	%f71, %f63, %f65;
	.loc	2 161 30
	mul.f32 	%f72, %f67, %f67;
	.loc	2 161 38
	mul.f32 	%f73, %f56, %f72;
	.loc	2 161 22
	fma.rn.f32 	%f74, %f70, %f73, %f71;
$L__tmp4:
	.loc	1 90 24
	mov.b32 	%r58, %f74;
	mov.b32 	%r59, 1161822208;
	// begin inline asm
	div.full.f32 %r57, %r58, %r59;
	// end inline asm
	mov.b32 	%f75, %r57;
	.loc	1 92 24
	add.f32 	%f10, %f75, 0f358637BD;
	.loc	1 78 36
	add.s64 	%rd84, %rd31, %rd1;
	add.s64 	%rd83, %rd30, %rd1;
	mov.b32 	%r78, -4;
	rsqrt.approx.ftz.f32 	%f82, %f10;
$L__BB0_3:
	add.s32 	%r78, %r78, 4;
	.loc	1 82 36
	add.s32 	%r76, %r78, %r3;
	mul.wide.s32 	%rd76, %r76, 2;
	add.s64 	%rd70, %rd32, %rd76;
	.loc	1 82 53
	// begin inline asm
	mov.u16 %rs65, 0x0;
	@%p51 ld.global.L1::evict_first.b16 { %rs65 }, [ %rd70 + 0 ];
	@!%p51 mov.u16 %rs65, %rs2;
	// end inline asm
	.loc	1 82 113
	// begin inline asm
	cvt.f32.bf16 %r70, %rs65;
	// end inline asm
	mov.b32 	%f76, %r70;
	.loc	1 83 48
	add.s64 	%rd71, %rd83, 6144;
	mov.pred 	%p53, -1;
	// begin inline asm
	mov.u16 %rs68, 0x0;
	@%p53 ld.global.L1::evict_last.b16 { %rs68 }, [ %rd71 + 0 ];
	@!%p53 mov.u16 %rs68, %rs2;
	// end inline asm
	.loc	1 83 99
	// begin inline asm
	cvt.f32.bf16 %r71, %rs68;
	// end inline asm
	mov.b32 	%f77, %r71;
	.loc	1 84 48
	add.s64 	%rd72, %rd84, 6144;
	// begin inline asm
	mov.u16 %rs71, 0x0;
	@%p53 ld.global.L1::evict_last.b16 { %rs71 }, [ %rd72 + 0 ];
	@!%p53 mov.u16 %rs71, %rs2;
	// end inline asm
	.loc	1 84 99
	// begin inline asm
	cvt.f32.bf16 %r72, %rs71;
	// end inline asm
	mov.b32 	%f78, %r72;
	.loc	1 85 41
	// begin inline asm
	mov.u16 %rs74, 0x0;
	@%p53 ld.global.L1::evict_last.b16 { %rs74 }, [ %rd83 + 0 ];
	@!%p53 mov.u16 %rs74, %rs2;
	// end inline asm
	.loc	1 85 92
	// begin inline asm
	cvt.f32.bf16 %r73, %rs74;
	// end inline asm
	mov.b32 	%f79, %r73;
	.loc	1 86 41
	// begin inline asm
	mov.u16 %rs77, 0x0;
	@%p53 ld.global.L1::evict_last.b16 { %rs77 }, [ %rd84 + 0 ];
	@!%p53 mov.u16 %rs77, %rs2;
	// end inline asm
	.loc	1 86 92
	// begin inline asm
	cvt.f32.bf16 %r74, %rs77;
	// end inline asm
	mov.b32 	%f80, %r74;
	.loc	1 88 24
	sub.f32 	%f81, %f76, %f9;
	.loc	1 94 24
	mul.f32 	%f83, %f81, %f82;
	.loc	1 96 24
	add.f32 	%f84, %f77, %f78;
	.loc	1 98 24
	add.f32 	%f85, %f84, 0f3F800000;
	.loc	1 100 24
	add.f32 	%f86, %f79, %f80;
	.loc	1 101 24
	fma.rn.f32 	%f87, %f85, %f83, %f86;
	.loc	1 102 29
	add.s64 	%rd75, %rd33, %rd76;
	.loc	1 102 53
	mov.b32 	%r75, %f87;
	// begin inline asm
	cvt.rn.bf16.f32 %rs80, %r75;
	// end inline asm
	// begin inline asm
	@%p51 st.global.b16 [ %rd75 + 0 ], { %rs80 };
	// end inline asm
	.loc	1 78 36
	add.s64 	%rd84, %rd84, 8;
	add.s64 	%rd83, %rd83, 8;
	setp.lt.u32 	%p62, %r78, 3068;
	@%p62 bra 	$L__BB0_3;
	.loc	1 78 4
	ret;
$L__tmp5:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/jw/cjwu6ilecswgqpxzxcwon43fntv5djbp6j4qy5j3mvcadvxvuqhn.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 197
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 106
.b8 119
.b8 117
.b8 54
.b8 105
.b8 108
.b8 101
.b8 99
.b8 115
.b8 119
.b8 103
.b8 113
.b8 112
.b8 120
.b8 122
.b8 120
.b8 99
.b8 119
.b8 111
.b8 110
.b8 52
.b8 51
.b8 102
.b8 110
.b8 116
.b8 118
.b8 53
.b8 100
.b8 106
.b8 98
.b8 112
.b8 54
.b8 106
.b8 52
.b8 113
.b8 121
.b8 53
.b8 106
.b8 51
.b8 109
.b8 118
.b8 99
.b8 97
.b8 100
.b8 118
.b8 120
.b8 118
.b8 117
.b8 113
.b8 104
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 119
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 66
.b8 55
.b8 4
.b32 120
.b64 $L__tmp3
.b64 $L__tmp4
.b8 1
.b8 73
.b8 44
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
