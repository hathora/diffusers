; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = mul i32 %3, 3072, !dbg !10
  %6 = icmp eq i32 %5, 0, !dbg !11
  br i1 %6, label %common.ret, label %7, !dbg !11

common.ret:                                       ; preds = %4, %247
  ret void, !dbg !12

7:                                                ; preds = %4
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !13
  %9 = add i32 %3, 63, !dbg !14
  %10 = sdiv i32 %9, 64, !dbg !15
  %.frozen = freeze i32 %8
  %11 = sdiv i32 %.frozen, 384, !dbg !16
  %12 = shl nsw i32 %11, 3, !dbg !17
  %13 = sub nsw i32 %10, %12, !dbg !18
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 8), !dbg !19
  %15 = srem i32 %8, %14, !dbg !20
  %16 = add nsw i32 %12, %15, !dbg !21
  %17 = mul i32 %11, 384
  %.decomposed = sub i32 %.frozen, %17
  %18 = sdiv i32 %.decomposed, %14, !dbg !22
  %19 = shl i32 %16, 6, !dbg !23
  %20 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !24
  %21 = lshr i32 %20, 5, !dbg !24
  %22 = lshr i32 %20, 2, !dbg !24
  %23 = and i32 %22, 31, !dbg !24
  %24 = or disjoint i32 %23, 32, !dbg !24
  %25 = lshr i32 %20, 3, !dbg !24
  %26 = and i32 %25, 7, !dbg !24
  %27 = lshr i32 %20, 3, !dbg !24
  %28 = and i32 %27, 8, !dbg !24
  %29 = or disjoint i32 %26, %28, !dbg !24
  %30 = shl i32 %20, 3, !dbg !24
  %31 = and i32 %30, 24, !dbg !24
  %32 = or disjoint i32 %19, %23, !dbg !25
  %33 = or disjoint i32 %19, %24, !dbg !25
  %34 = or disjoint i32 %19, %29, !dbg !24
  %35 = shl nsw i32 %18, 6, !dbg !26
  %36 = or disjoint i32 %35, %23, !dbg !27
  %37 = or disjoint i32 %35, %24, !dbg !27
  %38 = srem i32 %32, %3, !dbg !28
  %39 = srem i32 %33, %3, !dbg !28
  %40 = srem i32 %36, 3072, !dbg !29
  %41 = srem i32 %37, 3072, !dbg !29
  %42 = mul i32 %38, 12288, !dbg !30
  %43 = mul i32 %39, 12288, !dbg !30
  %44 = or disjoint i32 %42, %31, !dbg !31
  %45 = or disjoint i32 %43, %31, !dbg !31
  %46 = sext i32 %44 to i64, !dbg !32
  %47 = getelementptr i16, ptr addrspace(1) %0, i64 %46, !dbg !32
  %48 = sext i32 %45 to i64, !dbg !32
  %49 = getelementptr i16, ptr addrspace(1) %0, i64 %48, !dbg !32
  %50 = mul nsw i32 %40, 12288, !dbg !33
  %51 = mul nsw i32 %41, 12288, !dbg !33
  %52 = or disjoint i32 %50, %31, !dbg !34
  %53 = or disjoint i32 %51, %31, !dbg !34
  %54 = sext i32 %52 to i64, !dbg !35
  %55 = getelementptr i16, ptr addrspace(1) %1, i64 %54, !dbg !35
  %56 = sext i32 %53 to i64, !dbg !35
  %57 = getelementptr i16, ptr addrspace(1) %1, i64 %56, !dbg !35
  %58 = shl nuw nsw i32 %23, 5, !dbg !36
  %59 = xor i32 %30, %20, !dbg !36
  %60 = and i32 %59, 24, !dbg !36
  %61 = or disjoint i32 %58, %60, !dbg !36
  %62 = zext nneg i32 %61 to i64, !dbg !36
  %63 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %62, !dbg !36
  %64 = shl nuw nsw i32 %24, 5, !dbg !36
  %65 = or disjoint i32 %64, %60, !dbg !36
  %66 = zext nneg i32 %65 to i64, !dbg !36
  %67 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %66, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %47, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %67, ptr addrspace(1) %49, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %68 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %62, !dbg !37
  %69 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %66, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %68, ptr addrspace(1) %55, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %69, ptr addrspace(1) %57, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %70 = and i32 %21, 134217724
  br label %71, !dbg !38

71:                                               ; preds = %7, %71
  %72 = phi i32 [ -1, %7 ], [ %110, %71 ]
  %73 = phi i32 [ 0, %7 ], [ %236, %71 ]
  %.pn4899 = phi ptr addrspace(1) [ %57, %7 ], [ %233, %71 ]
  %.pn6498 = phi ptr addrspace(1) [ %55, %7 ], [ %232, %71 ]
  %.pn1697 = phi ptr addrspace(1) [ %49, %7 ], [ %231, %71 ]
  %.pn3296 = phi ptr addrspace(1) [ %47, %7 ], [ %230, %71 ]
  %74 = phi float [ 0.000000e+00, %7 ], [ %198, %71 ]
  %75 = phi float [ 0.000000e+00, %7 ], [ %199, %71 ]
  %76 = phi float [ 0.000000e+00, %7 ], [ %200, %71 ]
  %77 = phi float [ 0.000000e+00, %7 ], [ %201, %71 ]
  %78 = phi float [ 0.000000e+00, %7 ], [ %202, %71 ]
  %79 = phi float [ 0.000000e+00, %7 ], [ %203, %71 ]
  %80 = phi float [ 0.000000e+00, %7 ], [ %204, %71 ]
  %81 = phi float [ 0.000000e+00, %7 ], [ %205, %71 ]
  %82 = phi float [ 0.000000e+00, %7 ], [ %206, %71 ]
  %83 = phi float [ 0.000000e+00, %7 ], [ %207, %71 ]
  %84 = phi float [ 0.000000e+00, %7 ], [ %208, %71 ]
  %85 = phi float [ 0.000000e+00, %7 ], [ %209, %71 ]
  %86 = phi float [ 0.000000e+00, %7 ], [ %210, %71 ]
  %87 = phi float [ 0.000000e+00, %7 ], [ %211, %71 ]
  %88 = phi float [ 0.000000e+00, %7 ], [ %212, %71 ]
  %89 = phi float [ 0.000000e+00, %7 ], [ %213, %71 ]
  %90 = phi float [ 0.000000e+00, %7 ], [ %214, %71 ]
  %91 = phi float [ 0.000000e+00, %7 ], [ %215, %71 ]
  %92 = phi float [ 0.000000e+00, %7 ], [ %216, %71 ]
  %93 = phi float [ 0.000000e+00, %7 ], [ %217, %71 ]
  %94 = phi float [ 0.000000e+00, %7 ], [ %218, %71 ]
  %95 = phi float [ 0.000000e+00, %7 ], [ %219, %71 ]
  %96 = phi float [ 0.000000e+00, %7 ], [ %220, %71 ]
  %97 = phi float [ 0.000000e+00, %7 ], [ %221, %71 ]
  %98 = phi float [ 0.000000e+00, %7 ], [ %222, %71 ]
  %99 = phi float [ 0.000000e+00, %7 ], [ %223, %71 ]
  %100 = phi float [ 0.000000e+00, %7 ], [ %224, %71 ]
  %101 = phi float [ 0.000000e+00, %7 ], [ %225, %71 ]
  %102 = phi float [ 0.000000e+00, %7 ], [ %226, %71 ]
  %103 = phi float [ 0.000000e+00, %7 ], [ %227, %71 ]
  %104 = phi float [ 0.000000e+00, %7 ], [ %228, %71 ]
  %105 = phi float [ 0.000000e+00, %7 ], [ %229, %71 ]
  %106 = phi i32 [ 0, %7 ], [ %246, %71 ]
  %107 = icmp ult i32 %106, 12256, !dbg !38
  %108 = add i32 %72, 1, !dbg !38
  %109 = icmp slt i32 %108, 2, !dbg !38
  %110 = select i1 %109, i32 %108, i32 0, !dbg !38
  %111 = shl i32 %110, 11, !dbg !36
  %112 = sext i32 %111 to i64, !dbg !36
  %113 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %112, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %114 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %112, !dbg !37
  %115 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %70, i32 0, i32 31), !dbg !39
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !39
  %116 = shl i32 %115, 6, !dbg !39
  %117 = and i32 %116, 192, !dbg !39
  %118 = zext nneg i32 %117 to i64, !dbg !39
  %119 = ptrtoint ptr addrspace(3) %113 to i64, !dbg !39
  %120 = lshr exact i64 %119, 4, !dbg !39
  %121 = and i64 %120, 16383, !dbg !39
  %122 = or disjoint i64 %121, -9223371899399045120, !dbg !39
  %123 = add nuw nsw i64 %122, %118, !dbg !39
  %124 = ptrtoint ptr addrspace(3) %114 to i64, !dbg !39
  %125 = lshr exact i64 %124, 4, !dbg !39
  %126 = and i64 %125, 16383, !dbg !39
  %127 = or disjoint i64 %126, -9223371899399045120, !dbg !39
  %128 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %74, float %75, float %76, float %77, float %78, float %79, float %80, float %81, float %82, float %83, float %84, float %85, float %86, float %87, float %88, float %89, float %90, float %91, float %92, float %93, float %94, float %95, float %96, float %97, float %98, float %99, float %100, float %101, float %102, float %103, float %104, float %105, i64 %123, i64 %127) #3, !dbg !39
  %129 = add nuw nsw i64 %121, -9223371899399045118, !dbg !39
  %130 = add nuw nsw i64 %129, %118, !dbg !39
  %131 = add nuw nsw i64 %126, -9223371899399045118, !dbg !39
  %132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 0, !dbg !39
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 1, !dbg !39
  %134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 2, !dbg !39
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 3, !dbg !39
  %136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 4, !dbg !39
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 5, !dbg !39
  %138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 6, !dbg !39
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 7, !dbg !39
  %140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 8, !dbg !39
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 9, !dbg !39
  %142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 10, !dbg !39
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 11, !dbg !39
  %144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 12, !dbg !39
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 13, !dbg !39
  %146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 14, !dbg !39
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 15, !dbg !39
  %148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 16, !dbg !39
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 17, !dbg !39
  %150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 18, !dbg !39
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 19, !dbg !39
  %152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 20, !dbg !39
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 21, !dbg !39
  %154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 22, !dbg !39
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 23, !dbg !39
  %156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 24, !dbg !39
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 25, !dbg !39
  %158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 26, !dbg !39
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 27, !dbg !39
  %160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 28, !dbg !39
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 29, !dbg !39
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 30, !dbg !39
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %128, 31, !dbg !39
  %164 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, float %163, i64 %130, i64 %131) #3, !dbg !39
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 0, !dbg !39
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 1, !dbg !39
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 2, !dbg !39
  %168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 3, !dbg !39
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 4, !dbg !39
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 5, !dbg !39
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 6, !dbg !39
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 7, !dbg !39
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 8, !dbg !39
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 9, !dbg !39
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 10, !dbg !39
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 11, !dbg !39
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 12, !dbg !39
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 13, !dbg !39
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 14, !dbg !39
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 15, !dbg !39
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 16, !dbg !39
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 17, !dbg !39
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 18, !dbg !39
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 19, !dbg !39
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 20, !dbg !39
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 21, !dbg !39
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 22, !dbg !39
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 23, !dbg !39
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 24, !dbg !39
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 25, !dbg !39
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 26, !dbg !39
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 27, !dbg !39
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 28, !dbg !39
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 29, !dbg !39
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 30, !dbg !39
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %164, 31, !dbg !39
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !39
  %197 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, ptr addrspace(3) %113, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %114, i32 1, i32 32, i32 0, i32 0) #3, !dbg !39
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 0, !dbg !39
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 1, !dbg !39
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 2, !dbg !39
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 3, !dbg !39
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 4, !dbg !39
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 5, !dbg !39
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 6, !dbg !39
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 7, !dbg !39
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 8, !dbg !39
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 9, !dbg !39
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 10, !dbg !39
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 11, !dbg !39
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 12, !dbg !39
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 13, !dbg !39
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 14, !dbg !39
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 15, !dbg !39
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 16, !dbg !39
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 17, !dbg !39
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 18, !dbg !39
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 19, !dbg !39
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 20, !dbg !39
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 21, !dbg !39
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 22, !dbg !39
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 23, !dbg !39
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 24, !dbg !39
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 25, !dbg !39
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 26, !dbg !39
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 27, !dbg !39
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 28, !dbg !39
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 29, !dbg !39
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 30, !dbg !39
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %197, 31, !dbg !39
  %230 = getelementptr i8, ptr addrspace(1) %.pn3296, i64 64, !dbg !40
  %231 = getelementptr i8, ptr addrspace(1) %.pn1697, i64 64, !dbg !40
  %232 = getelementptr i8, ptr addrspace(1) %.pn6498, i64 64, !dbg !41
  %233 = getelementptr i8, ptr addrspace(1) %.pn4899, i64 64, !dbg !41
  %234 = add i32 %73, 1, !dbg !38
  %235 = icmp slt i32 %234, 2, !dbg !38
  %236 = select i1 %235, i32 %234, i32 0, !dbg !38
  %237 = shl i32 %236, 11, !dbg !36
  %238 = sext i32 %237 to i64, !dbg !36
  %239 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %238, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %240 = getelementptr i16, ptr addrspace(3) %239, i64 %62, !dbg !36
  %241 = getelementptr i16, ptr addrspace(3) %239, i64 %66, !dbg !36
  %242 = select i1 %107, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %240, ptr addrspace(1) %230, i32 %242, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %241, ptr addrspace(1) %231, i32 %242, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %243 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %238, !dbg !37
  %244 = getelementptr i16, ptr addrspace(3) %243, i64 %62, !dbg !37
  %245 = getelementptr i16, ptr addrspace(3) %243, i64 %66, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %244, ptr addrspace(1) %232, i32 %242, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %245, ptr addrspace(1) %233, i32 %242, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %246 = add nuw nsw i32 %106, 32, !dbg !38
  br i1 %107, label %71, label %247, !dbg !38

247:                                              ; preds = %71
  %248 = and i32 %30, 56, !dbg !24
  %249 = or disjoint i32 %34, 16, !dbg !25
  %250 = or disjoint i32 %34, 32, !dbg !25
  %251 = or disjoint i32 %34, 48, !dbg !25
  %252 = or disjoint i32 %248, %35, !dbg !27
  %253 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229) #3, !dbg !38
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %254 = icmp slt i32 %34, %3, !dbg !42
  %255 = icmp slt i32 %249, %3, !dbg !42
  %256 = icmp slt i32 %250, %3, !dbg !42
  %257 = icmp slt i32 %251, %3, !dbg !42
  %258 = icmp slt i32 %252, 3072, !dbg !43
  %259 = and i1 %258, %254, !dbg !44
  %260 = and i1 %255, %258, !dbg !44
  %261 = and i1 %256, %258, !dbg !44
  %262 = and i1 %257, %258, !dbg !44
  %263 = mul i32 %34, 3072, !dbg !45
  %264 = mul i32 %249, 3072, !dbg !45
  %265 = mul i32 %250, 3072, !dbg !45
  %266 = mul i32 %251, 3072, !dbg !45
  %267 = add i32 %263, %252, !dbg !46
  %268 = add i32 %252, %264, !dbg !46
  %269 = add i32 %252, %265, !dbg !46
  %270 = add i32 %252, %266, !dbg !46
  %271 = sext i32 %267 to i64, !dbg !47
  %272 = getelementptr i16, ptr addrspace(1) %2, i64 %271, !dbg !47
  %273 = sext i32 %268 to i64, !dbg !47
  %274 = getelementptr i16, ptr addrspace(1) %2, i64 %273, !dbg !47
  %275 = sext i32 %269 to i64, !dbg !47
  %276 = getelementptr i16, ptr addrspace(1) %2, i64 %275, !dbg !47
  %277 = sext i32 %270 to i64, !dbg !47
  %278 = getelementptr i16, ptr addrspace(1) %2, i64 %277, !dbg !47
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 0, !dbg !48
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 1, !dbg !48
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 2, !dbg !48
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 3, !dbg !48
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 4, !dbg !48
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 5, !dbg !48
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 6, !dbg !48
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 7, !dbg !48
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 8, !dbg !48
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 9, !dbg !48
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 10, !dbg !48
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 11, !dbg !48
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 12, !dbg !48
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 13, !dbg !48
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 14, !dbg !48
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 15, !dbg !48
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 16, !dbg !48
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 17, !dbg !48
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 18, !dbg !48
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 19, !dbg !48
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 20, !dbg !48
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 21, !dbg !48
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 22, !dbg !48
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 23, !dbg !48
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 24, !dbg !48
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 25, !dbg !48
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 26, !dbg !48
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 27, !dbg !48
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 28, !dbg !48
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 29, !dbg !48
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 30, !dbg !48
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %253, 31, !dbg !48
  %311 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %279) #3, !dbg !48
  %312 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %280) #3, !dbg !48
  %313 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %281) #3, !dbg !48
  %314 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %282) #3, !dbg !48
  %315 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %283) #3, !dbg !48
  %316 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %284) #3, !dbg !48
  %317 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %285) #3, !dbg !48
  %318 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %286) #3, !dbg !48
  %319 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %287) #3, !dbg !48
  %320 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %288) #3, !dbg !48
  %321 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %289) #3, !dbg !48
  %322 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %290) #3, !dbg !48
  %323 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %291) #3, !dbg !48
  %324 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %292) #3, !dbg !48
  %325 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %293) #3, !dbg !48
  %326 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %294) #3, !dbg !48
  %327 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %295) #3, !dbg !48
  %328 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %296) #3, !dbg !48
  %329 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %297) #3, !dbg !48
  %330 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %298) #3, !dbg !48
  %331 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %299) #3, !dbg !48
  %332 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %300) #3, !dbg !48
  %333 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %301) #3, !dbg !48
  %334 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %302) #3, !dbg !48
  %335 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %303) #3, !dbg !48
  %336 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %304) #3, !dbg !48
  %337 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %305) #3, !dbg !48
  %338 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %306) #3, !dbg !48
  %339 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %307) #3, !dbg !48
  %340 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %308) #3, !dbg !48
  %341 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %309) #3, !dbg !48
  %342 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %310) #3, !dbg !48
  %343 = and i32 %21, 3, !dbg !48
  %344 = and i32 %25, 3, !dbg !48
  %345 = and i32 %20, 15, !dbg !48
  %346 = shl nuw nsw i32 %25, 2, !dbg !48
  %347 = and i32 %346, 8, !dbg !48
  %348 = mul nuw nsw i32 %345, 72, !dbg !48
  %349 = add nuw nsw i32 %347, %348, !dbg !48
  %350 = mul nuw nsw i32 %343, 1152, !dbg !48
  %351 = add nuw nsw i32 %349, %350, !dbg !48
  %352 = insertelement <2 x i16> poison, i16 %311, i64 0, !dbg !48
  %353 = insertelement <2 x i16> %352, i16 %312, i64 1, !dbg !48
  %354 = bitcast <2 x i16> %353 to i32, !dbg !48
  %355 = insertelement <2 x i16> poison, i16 %313, i64 0, !dbg !48
  %356 = insertelement <2 x i16> %355, i16 %314, i64 1, !dbg !48
  %357 = bitcast <2 x i16> %356 to i32, !dbg !48
  %358 = insertelement <2 x i16> poison, i16 %315, i64 0, !dbg !48
  %359 = insertelement <2 x i16> %358, i16 %316, i64 1, !dbg !48
  %360 = bitcast <2 x i16> %359 to i32, !dbg !48
  %361 = insertelement <2 x i16> poison, i16 %317, i64 0, !dbg !48
  %362 = insertelement <2 x i16> %361, i16 %318, i64 1, !dbg !48
  %363 = bitcast <2 x i16> %362 to i32, !dbg !48
  %364 = zext nneg i32 %351 to i64, !dbg !48
  %365 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %364, !dbg !48
  %366 = ptrtoint ptr addrspace(3) %365 to i64, !dbg !48
  %367 = trunc i64 %366 to i32, !dbg !48
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %367, i32 %354, i32 %357, i32 %360, i32 %363) #3, !dbg !48
  %368 = insertelement <2 x i16> poison, i16 %319, i64 0, !dbg !48
  %369 = insertelement <2 x i16> %368, i16 %320, i64 1, !dbg !48
  %370 = bitcast <2 x i16> %369 to i32, !dbg !48
  %371 = insertelement <2 x i16> poison, i16 %321, i64 0, !dbg !48
  %372 = insertelement <2 x i16> %371, i16 %322, i64 1, !dbg !48
  %373 = bitcast <2 x i16> %372 to i32, !dbg !48
  %374 = insertelement <2 x i16> poison, i16 %323, i64 0, !dbg !48
  %375 = insertelement <2 x i16> %374, i16 %324, i64 1, !dbg !48
  %376 = bitcast <2 x i16> %375 to i32, !dbg !48
  %377 = insertelement <2 x i16> poison, i16 %325, i64 0, !dbg !48
  %378 = insertelement <2 x i16> %377, i16 %326, i64 1, !dbg !48
  %379 = bitcast <2 x i16> %378 to i32, !dbg !48
  %380 = getelementptr i8, ptr addrspace(3) %365, i64 32, !dbg !48
  %381 = ptrtoint ptr addrspace(3) %380 to i64, !dbg !48
  %382 = trunc i64 %381 to i32, !dbg !48
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %382, i32 %370, i32 %373, i32 %376, i32 %379) #3, !dbg !48
  %383 = insertelement <2 x i16> poison, i16 %327, i64 0, !dbg !48
  %384 = insertelement <2 x i16> %383, i16 %328, i64 1, !dbg !48
  %385 = bitcast <2 x i16> %384 to i32, !dbg !48
  %386 = insertelement <2 x i16> poison, i16 %329, i64 0, !dbg !48
  %387 = insertelement <2 x i16> %386, i16 %330, i64 1, !dbg !48
  %388 = bitcast <2 x i16> %387 to i32, !dbg !48
  %389 = insertelement <2 x i16> poison, i16 %331, i64 0, !dbg !48
  %390 = insertelement <2 x i16> %389, i16 %332, i64 1, !dbg !48
  %391 = bitcast <2 x i16> %390 to i32, !dbg !48
  %392 = insertelement <2 x i16> poison, i16 %333, i64 0, !dbg !48
  %393 = insertelement <2 x i16> %392, i16 %334, i64 1, !dbg !48
  %394 = bitcast <2 x i16> %393 to i32, !dbg !48
  %395 = getelementptr i8, ptr addrspace(3) %365, i64 64, !dbg !48
  %396 = ptrtoint ptr addrspace(3) %395 to i64, !dbg !48
  %397 = trunc i64 %396 to i32, !dbg !48
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %397, i32 %385, i32 %388, i32 %391, i32 %394) #3, !dbg !48
  %398 = insertelement <2 x i16> poison, i16 %335, i64 0, !dbg !48
  %399 = insertelement <2 x i16> %398, i16 %336, i64 1, !dbg !48
  %400 = bitcast <2 x i16> %399 to i32, !dbg !48
  %401 = insertelement <2 x i16> poison, i16 %337, i64 0, !dbg !48
  %402 = insertelement <2 x i16> %401, i16 %338, i64 1, !dbg !48
  %403 = bitcast <2 x i16> %402 to i32, !dbg !48
  %404 = insertelement <2 x i16> poison, i16 %339, i64 0, !dbg !48
  %405 = insertelement <2 x i16> %404, i16 %340, i64 1, !dbg !48
  %406 = bitcast <2 x i16> %405 to i32, !dbg !48
  %407 = insertelement <2 x i16> poison, i16 %341, i64 0, !dbg !48
  %408 = insertelement <2 x i16> %407, i16 %342, i64 1, !dbg !48
  %409 = bitcast <2 x i16> %408 to i32, !dbg !48
  %410 = getelementptr i8, ptr addrspace(3) %365, i64 96, !dbg !48
  %411 = ptrtoint ptr addrspace(3) %410 to i64, !dbg !48
  %412 = trunc i64 %411 to i32, !dbg !48
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %412, i32 %400, i32 %403, i32 %406, i32 %409) #3, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %413 = shl nuw nsw i32 %343, 2, !dbg !48
  %414 = or disjoint i32 %413, %344, !dbg !48
  %415 = and i32 %30, 56, !dbg !48
  %416 = mul nuw nsw i32 %414, 72, !dbg !48
  %417 = add nuw nsw i32 %416, %415, !dbg !48
  %418 = zext nneg i32 %417 to i64, !dbg !48
  %419 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %418, !dbg !48
  %420 = getelementptr i8, ptr addrspace(3) %419, i64 2304, !dbg !48
  %421 = load <4 x i32>, ptr addrspace(3) %420, align 16, !dbg !48
  %422 = getelementptr i8, ptr addrspace(3) %419, i64 4608, !dbg !48
  %423 = load <4 x i32>, ptr addrspace(3) %422, align 16, !dbg !48
  %424 = getelementptr i8, ptr addrspace(3) %419, i64 6912, !dbg !48
  %425 = load <4 x i32>, ptr addrspace(3) %424, align 16, !dbg !48
  %.extract = load i32, ptr addrspace(3) %419, align 16, !dbg !48
  %426 = getelementptr inbounds i8, ptr addrspace(3) %419, i64 4, !dbg !48
  %.extract66 = load i32, ptr addrspace(3) %426, align 4, !dbg !48
  %427 = getelementptr inbounds i8, ptr addrspace(3) %419, i64 8, !dbg !48
  %.extract68 = load i32, ptr addrspace(3) %427, align 8, !dbg !48
  %428 = getelementptr inbounds i8, ptr addrspace(3) %419, i64 12, !dbg !48
  %.extract70 = load i32, ptr addrspace(3) %428, align 4, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract66, i32 %.extract68, i32 %.extract70, ptr addrspace(1) %272, i1 %259) #3, !dbg !48
  %.extract72 = extractelement <4 x i32> %421, i64 0, !dbg !48
  %.extract74 = extractelement <4 x i32> %421, i64 1, !dbg !48
  %.extract76 = extractelement <4 x i32> %421, i64 2, !dbg !48
  %.extract78 = extractelement <4 x i32> %421, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract72, i32 %.extract74, i32 %.extract76, i32 %.extract78, ptr addrspace(1) %274, i1 %260) #3, !dbg !48
  %.extract80 = extractelement <4 x i32> %423, i64 0, !dbg !48
  %.extract82 = extractelement <4 x i32> %423, i64 1, !dbg !48
  %.extract84 = extractelement <4 x i32> %423, i64 2, !dbg !48
  %.extract86 = extractelement <4 x i32> %423, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract80, i32 %.extract82, i32 %.extract84, i32 %.extract86, ptr addrspace(1) %276, i1 %261) #3, !dbg !48
  %.extract88 = extractelement <4 x i32> %425, i64 0, !dbg !48
  %.extract90 = extractelement <4 x i32> %425, i64 1, !dbg !48
  %.extract92 = extractelement <4 x i32> %425, i64 2, !dbg !48
  %.extract94 = extractelement <4 x i32> %425, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract88, i32 %.extract90, i32 %.extract92, i32 %.extract94, ptr addrspace(1) %278, i1 %262) #3, !dbg !48
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czafb4a443qfr6mct43jkt7qaqtkadnyjmj2voclanswhwplavpg.py", directory: "/opt/inductor_cache/za")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 11, scope: !7)
!11 = !DILocation(line: 33, column: 16, scope: !7)
!12 = !DILocation(line: 0, scope: !7)
!13 = !DILocation(line: 42, column: 24, scope: !7)
!14 = !DILocation(line: 43, column: 28, scope: !7)
!15 = !DILocation(line: 43, column: 34, scope: !7)
!16 = !DILocation(line: 48, column: 22, scope: !7)
!17 = !DILocation(line: 49, column: 41, scope: !7)
!18 = !DILocation(line: 49, column: 30, scope: !7)
!19 = !DILocation(line: 49, column: 50, scope: !7)
!20 = !DILocation(line: 50, column: 40, scope: !7)
!21 = !DILocation(line: 50, column: 34, scope: !7)
!22 = !DILocation(line: 51, column: 30, scope: !7)
!23 = !DILocation(line: 53, column: 17, scope: !7)
!24 = !DILocation(line: 53, column: 40, scope: !7)
!25 = !DILocation(line: 53, column: 27, scope: !7)
!26 = !DILocation(line: 54, column: 17, scope: !7)
!27 = !DILocation(line: 54, column: 27, scope: !7)
!28 = !DILocation(line: 56, column: 52, scope: !7)
!29 = !DILocation(line: 60, column: 52, scope: !7)
!30 = !DILocation(line: 64, column: 28, scope: !7)
!31 = !DILocation(line: 64, column: 40, scope: !7)
!32 = !DILocation(line: 64, column: 13, scope: !7)
!33 = !DILocation(line: 65, column: 54, scope: !7)
!34 = !DILocation(line: 65, column: 39, scope: !7)
!35 = !DILocation(line: 65, column: 13, scope: !7)
!36 = !DILocation(line: 70, column: 24, scope: !7)
!37 = !DILocation(line: 71, column: 24, scope: !7)
!38 = !DILocation(line: 68, column: 25, scope: !7)
!39 = !DILocation(line: 77, column: 25, scope: !7)
!40 = !DILocation(line: 78, column: 13, scope: !7)
!41 = !DILocation(line: 79, column: 13, scope: !7)
!42 = !DILocation(line: 86, column: 20, scope: !7)
!43 = !DILocation(line: 86, column: 34, scope: !7)
!44 = !DILocation(line: 86, column: 26, scope: !7)
!45 = !DILocation(line: 89, column: 27, scope: !7)
!46 = !DILocation(line: 89, column: 22, scope: !7)
!47 = !DILocation(line: 90, column: 25, scope: !7)
!48 = !DILocation(line: 90, column: 67, scope: !7)
