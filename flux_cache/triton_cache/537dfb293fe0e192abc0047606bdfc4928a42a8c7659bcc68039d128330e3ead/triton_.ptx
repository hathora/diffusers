//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2,
	.param .u32 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5
)
.maxntid 128, 1, 1
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<148>;
	.reg .f32 	%f<107>;
	.reg .b64 	%rd<23>;
	.reg .f64 	%fd<5>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd6, [triton__param_0];
	add.u64 	%rd7, %SP, 0;
	ld.param.u32 	%r54, [triton__param_2];
	ld.param.u32 	%r55, [triton__param_3];
	ld.param.u32 	%r56, [triton__param_4];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r49, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r57, %r49, 7;
	.loc	1 20 36
	mov.u32 	%r58, %tid.x;
	and.b32  	%r59, %r58, 127;
	.loc	1 20 23
	or.b32  	%r3, %r57, %r59;
	mov.pred 	%p1, -1;
	.loc	1 23 19
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p1 ld.global.b16 { %rs1 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 23 37
	// begin inline asm
	cvt.f32.bf16 %r50, %rs1;
	// end inline asm
	mov.b32 	%f38, %r50;
$L__tmp1:
	.loc	2 47 47
	shr.u32 	%r60, %r54, 31;
	.loc	2 44 16
	add.s32 	%r61, %r54, %r60;
	shr.s32 	%r62, %r61, 1;
	.loc	2 46 47
	and.b32  	%r63, %r54, %r60;
	.loc	2 47 47
	sub.s32 	%r4, %r62, %r63;
$L__tmp2:
	.loc	1 31 18
	mul.f32 	%f1, %f38, 0f447A0000;
	.loc	1 33 20
	cvt.rn.f32.s32 	%f39, %r3;
	.loc	1 35 20
	mul.f32 	%f40, %f39, 0fC1135D8E;
	.loc	1 36 42
	sub.s32 	%r64, %r4, %r55;
	.loc	1 37 21
	cvt.rn.f32.s32 	%f2, %r64;
	.loc	1 38 20
	mov.b32 	%r53, %f2;
	mov.b32 	%r52, %f40;
	// begin inline asm
	div.full.f32 %r51, %r52, %r53;
	// end inline asm
	mov.b32 	%f41, %r51;
	.loc	1 39 24
	mul.f32 	%f37, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f36, %f37;
	// end inline asm
	.loc	1 40 19
	mul.f32 	%f42, %f1, %f36;
	.loc	1 42 21
	cvt.rn.f32.s32 	%f3, %r56;
	.loc	1 43 20
	mul.f32 	%f4, %f42, %f3;
	.loc	1 44 24
	mul.f32 	%f43, %f4, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r141, %f43;
	cvt.rn.f32.s32 	%f44, %r141;
	mov.f32 	%f45, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f46, %f44, %f45, %f4;
	mov.f32 	%f47, 0fB3A22168;
	fma.rn.ftz.f32 	%f48, %f44, %f47, %f46;
	mov.f32 	%f49, 0fA7C234C5;
	fma.rn.ftz.f32 	%f97, %f44, %f49, %f48;
	abs.ftz.f32 	%f6, %f4;
	setp.ltu.f32 	%p2, %f6, 0f47CE4780;
	mov.f32 	%f94, 0f00000000;
	@%p2 bra 	$L__BB0_8;
	setp.neu.f32 	%p3, %f6, 0f7F800000;
	@%p3 bra 	$L__BB0_3;
	mul.rn.ftz.f32 	%f97, %f4, %f94;
	mov.b32 	%r141, 0;
	bra.uni 	$L__BB0_8;
$L__BB0_3:
	.loc	1 0 24
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd7;
	  cvt.u32.u64 	%r2, %tmp; }
	.loc	1 44 24
	mov.b32 	%r6, %f4;
	shr.u32 	%r7, %r6, 23;
	and.b32  	%r67, %r7, 224;
	add.s32 	%r68, %r67, -128;
	shl.b32 	%r69, %r6, 8;
	or.b32  	%r73, %r69, -2147483648;
	shr.u32 	%r9, %r68, 5;
	mov.b32 	%r138, 0;
	mov.b32 	%r136, -1;
	mov.u64 	%rd21, __cudart_i2opi_f;
	mov.u32 	%r137, %r2;
$L__BB0_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r72, [%rd21];
	// begin inline asm
	{
	mad.lo.cc.u32   %r70, %r72, %r73, %r138;
	madc.hi.u32     %r138, %r72, %r73,  0;
	}
	// end inline asm
	st.local.u32 	[%r137], %r70;
	add.s32 	%r137, %r137, 4;
	add.s32 	%r136, %r136, 1;
	add.s64 	%rd21, %rd21, 4;
	setp.lt.u32 	%p4, %r136, 5;
	@%p4 bra 	$L__BB0_4;
	st.local.u32 	[%r2+24], %r138;
	and.b32  	%r16, %r7, 31;
	shl.b32 	%r75, %r9, 2;
	sub.s32 	%r17, %r2, %r75;
	ld.local.u32 	%r139, [%r17+24];
	ld.local.u32 	%r140, [%r17+20];
	setp.eq.s32 	%p5, %r16, 0;
	@%p5 bra 	$L__BB0_7;
	.loc	1 0 24
	mov.b32 	%r76, 32;
	.loc	1 44 24
	sub.s32 	%r77, %r76, %r16;
	shl.b32 	%r78, %r139, %r16;
	shr.u32 	%r79, %r140, %r77;
	add.s32 	%r139, %r79, %r78;
	shl.b32 	%r80, %r140, %r16;
	ld.local.u32 	%r81, [%r17+16];
	shr.u32 	%r82, %r81, %r77;
	add.s32 	%r140, %r82, %r80;
$L__BB0_7:
	shr.u32 	%r83, %r139, 30;
	shr.u32 	%r84, %r140, 30;
	shl.b32 	%r85, %r139, 2;
	or.b32  	%r86, %r85, %r84;
	shl.b32 	%r87, %r140, 2;
	bfe.u32 	%r88, %r139, 29, 1;
	add.s32 	%r89, %r88, %r83;
	neg.s32 	%r90, %r89;
	setp.lt.s32 	%p6, %r6, 0;
	selp.b32 	%r141, %r90, %r89, %p6;
	xor.b32  	%r91, %r86, %r6;
	bfe.s32 	%r92, %r139, 29, 1;
	xor.b32  	%r93, %r92, %r86;
	xor.b32  	%r94, %r92, %r87;
	cvt.u64.u32 	%rd10, %r93;
	shl.b64 	%rd11, %rd10, 32;
	cvt.u64.u32 	%rd12, %r94;
	or.b64  	%rd13, %rd11, %rd12;
	cvt.rn.f64.s64 	%fd1, %rd13;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f50, %fd2;
	neg.f32 	%f51, %f50;
	setp.lt.s32 	%p7, %r91, 0;
	selp.f32 	%f97, %f51, %f50, %p7;
$L__BB0_8:
	mul.rn.ftz.f32 	%f10, %f97, %f97;
	and.b32  	%r96, %r141, 1;
	setp.eq.b32 	%p8, %r96, 1;
	selp.f32 	%f11, 0f3F800000, %f97, %p8;
	fma.rn.ftz.f32 	%f12, %f10, %f11, %f94;
	mov.f32 	%f57, 0fBAB607ED;
	mov.f32 	%f58, 0f37CBAC00;
	mov.f32 	%f100, 0fB94D4153;
	mov.f32 	%f99, 0f3C0885E4;
	mov.f32 	%f98, 0fBE2AAAA8;
	@!%p8 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:
	.loc	1 0 24
	fma.rn.ftz.f32 	%f100, %f58, %f10, %f57;
	mov.f32 	%f99, 0f3D2AAABB;
	mov.f32 	%f98, 0fBEFFFFFF;
$L__BB0_10:
	.loc	1 44 24
	fma.rn.ftz.f32 	%f61, %f100, %f10, %f99;
	fma.rn.ftz.f32 	%f62, %f61, %f10, %f98;
	fma.rn.ftz.f32 	%f101, %f62, %f12, %f11;
	and.b32  	%r97, %r141, 2;
	setp.eq.s32 	%p9, %r97, 0;
	mov.f32 	%f64, 0fBF800000;
	@%p9 bra 	$L__BB0_12;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f101, %f101, %f64, %f94;
$L__BB0_12:
	.loc	1 50 18
	sub.s32 	%r101, %r3, %r4;
	.loc	1 51 21
	cvt.rn.f32.s32 	%f67, %r101;
	.loc	1 52 20
	mul.f32 	%f68, %f67, 0fC1135D8E;
	.loc	1 53 20
	mov.b32 	%r99, %f68;
	// begin inline asm
	div.full.f32 %r98, %r99, %r53;
	// end inline asm
	mov.b32 	%f69, %r98;
	.loc	1 54 24
	mul.f32 	%f66, %f69, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f65, %f66;
	// end inline asm
	.loc	1 55 19
	mul.f32 	%f70, %f1, %f65;
	.loc	1 56 20
	mul.f32 	%f20, %f70, %f3;
	.loc	1 57 24
	mul.f32 	%f71, %f20, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r147, %f71;
	cvt.rn.f32.s32 	%f72, %r147;
	fma.rn.ftz.f32 	%f74, %f72, %f45, %f20;
	fma.rn.ftz.f32 	%f76, %f72, %f47, %f74;
	fma.rn.ftz.f32 	%f102, %f72, %f49, %f76;
	abs.ftz.f32 	%f22, %f20;
	setp.ltu.f32 	%p10, %f22, 0f47CE4780;
	@%p10 bra 	$L__BB0_20;
	setp.neu.f32 	%p11, %f22, 0f7F800000;
	@%p11 bra 	$L__BB0_15;
	mul.rn.ftz.f32 	%f102, %f20, %f94;
	mov.b32 	%r147, 0;
	bra.uni 	$L__BB0_20;
$L__BB0_15:
	.loc	1 0 24
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd7;
	  cvt.u32.u64 	%r1, %tmp; }
	.loc	1 57 24
	mov.b32 	%r27, %f20;
	shr.u32 	%r28, %r27, 23;
	and.b32  	%r104, %r28, 224;
	add.s32 	%r105, %r104, -128;
	shl.b32 	%r106, %r27, 8;
	or.b32  	%r110, %r106, -2147483648;
	shr.u32 	%r30, %r105, 5;
	mov.b32 	%r144, 0;
	mov.b32 	%r142, -1;
	mov.u64 	%rd22, __cudart_i2opi_f;
	mov.u32 	%r143, %r1;
$L__BB0_16:
	.pragma "nounroll";
	ld.global.nc.u32 	%r109, [%rd22];
	// begin inline asm
	{
	mad.lo.cc.u32   %r107, %r109, %r110, %r144;
	madc.hi.u32     %r144, %r109, %r110,  0;
	}
	// end inline asm
	st.local.u32 	[%r143], %r107;
	add.s32 	%r143, %r143, 4;
	add.s32 	%r142, %r142, 1;
	add.s64 	%rd22, %rd22, 4;
	setp.lt.u32 	%p12, %r142, 5;
	@%p12 bra 	$L__BB0_16;
	st.local.u32 	[%r1+24], %r144;
	and.b32  	%r37, %r28, 31;
	shl.b32 	%r112, %r30, 2;
	sub.s32 	%r38, %r1, %r112;
	ld.local.u32 	%r145, [%r38+24];
	ld.local.u32 	%r146, [%r38+20];
	setp.eq.s32 	%p13, %r37, 0;
	@%p13 bra 	$L__BB0_19;
	.loc	1 0 24
	mov.b32 	%r113, 32;
	.loc	1 57 24
	sub.s32 	%r114, %r113, %r37;
	shl.b32 	%r115, %r145, %r37;
	shr.u32 	%r116, %r146, %r114;
	add.s32 	%r145, %r116, %r115;
	shl.b32 	%r117, %r146, %r37;
	ld.local.u32 	%r118, [%r38+16];
	shr.u32 	%r119, %r118, %r114;
	add.s32 	%r146, %r119, %r117;
$L__BB0_19:
	shr.u32 	%r120, %r145, 30;
	shr.u32 	%r121, %r146, 30;
	shl.b32 	%r122, %r145, 2;
	or.b32  	%r123, %r122, %r121;
	shl.b32 	%r124, %r146, 2;
	bfe.u32 	%r125, %r145, 29, 1;
	add.s32 	%r126, %r125, %r120;
	neg.s32 	%r127, %r126;
	setp.lt.s32 	%p14, %r27, 0;
	selp.b32 	%r147, %r127, %r126, %p14;
	xor.b32  	%r128, %r123, %r27;
	bfe.s32 	%r129, %r145, 29, 1;
	xor.b32  	%r130, %r129, %r123;
	xor.b32  	%r131, %r129, %r124;
	cvt.u64.u32 	%rd15, %r130;
	shl.b64 	%rd16, %rd15, 32;
	cvt.u64.u32 	%rd17, %r131;
	or.b64  	%rd18, %rd16, %rd17;
	cvt.rn.f64.s64 	%fd3, %rd18;
	mul.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f78, %fd4;
	neg.f32 	%f79, %f78;
	setp.lt.s32 	%p15, %r128, 0;
	selp.f32 	%f102, %f79, %f78, %p15;
$L__BB0_20:
	add.s32 	%r47, %r147, 1;
	mul.rn.ftz.f32 	%f26, %f102, %f102;
	and.b32  	%r133, %r147, 1;
	setp.eq.b32 	%p16, %r133, 1;
	selp.f32 	%f27, %f102, 0f3F800000, %p16;
	fma.rn.ftz.f32 	%f28, %f26, %f27, %f94;
	mov.f32 	%f105, 0fB94D4153;
	mov.f32 	%f104, 0f3C0885E4;
	mov.f32 	%f103, 0fBE2AAAA8;
	@%p16 bra 	$L__BB0_22;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f105, %f58, %f26, %f57;
	mov.f32 	%f104, 0f3D2AAABB;
	mov.f32 	%f103, 0fBEFFFFFF;
$L__BB0_22:
	ld.param.u32 	%r48, [triton__param_5];
	ld.param.u64 	%rd5, [triton__param_1];
	.loc	1 57 24
	fma.rn.ftz.f32 	%f89, %f105, %f26, %f104;
	fma.rn.ftz.f32 	%f90, %f89, %f26, %f103;
	fma.rn.ftz.f32 	%f106, %f90, %f28, %f27;
	and.b32  	%r134, %r47, 2;
	setp.eq.s32 	%p17, %r134, 0;
	@%p17 bra 	$L__BB0_24;
	.loc	1 0 24
	fma.rn.ftz.f32 	%f106, %f106, %f64, %f94;
$L__BB0_24:
	.loc	1 29 18
	setp.lt.s32 	%p19, %r3, %r4;
	.loc	1 21 21
	setp.lt.s32 	%p18, %r3, %r48;
	.loc	1 0 0
	selp.f32 	%f93, %f101, %f106, %p19;
	.loc	1 61 25
	mul.wide.s32 	%rd20, %r3, 4;
	add.s64 	%rd19, %rd5, %rd20;
	.loc	1 61 37
	mov.b32 	%r135, %f93;
	// begin inline asm
	@%p18 st.global.b32 [ %rd19 + 0 ], { %r135 };
	// end inline asm
	.loc	1 61 4
	ret;
$L__tmp3:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/ve/cvezxwbsj6cs7i2u34gb53yyu7uxbc7vv2gzcgbudfok7icca7ef.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 173
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 118
.b8 101
.b8 122
.b8 120
.b8 119
.b8 98
.b8 115
.b8 106
.b8 54
.b8 99
.b8 115
.b8 55
.b8 105
.b8 50
.b8 117
.b8 51
.b8 52
.b8 103
.b8 98
.b8 53
.b8 51
.b8 121
.b8 121
.b8 117
.b8 55
.b8 117
.b8 120
.b8 98
.b8 99
.b8 55
.b8 118
.b8 118
.b8 50
.b8 103
.b8 122
.b8 99
.b8 103
.b8 98
.b8 117
.b8 100
.b8 102
.b8 111
.b8 107
.b8 55
.b8 105
.b8 99
.b8 99
.b8 97
.b8 55
.b8 101
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 101
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 28
.b8 50
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
