#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0)
#loc1 = loc(unknown)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg3: i32 loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x128xbf16, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c24_i32 = arith.constant 24 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x128xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %arg3 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc4)
    %4 = arith.remsi %0, %c24_i32 : i32 loc(#loc5)
    %5 = arith.muli %0, %c128_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x128xi32, #blocked> loc(#loc7)
    %7 = arith.addi %3, %6 : tensor<1x128xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x128x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x128x!tt.ptr<bf16>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x128xi1, #blocked> loc(#loc9)
    %11 = tt.load %9, %10, %cst : tensor<1x128x!tt.ptr<bf16>, #blocked> loc(#loc9)
    %12 = arith.extf %11 : tensor<1x128xbf16, #blocked> to tensor<1x128xf32, #blocked> loc(#loc10)
    %13 = arith.muli %4, %c128_i32 : i32 loc(#loc11)
    %14 = tt.splat %13 : i32 -> tensor<1x128xi32, #blocked> loc(#loc12)
    %15 = arith.addi %3, %14 : tensor<1x128xi32, #blocked> loc(#loc12)
    %16 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x128x!tt.ptr<bf16>, #blocked> loc(#loc13)
    %17 = tt.addptr %16, %15 : tensor<1x128x!tt.ptr<bf16>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc13)
    %18 = tt.load %17, %10, %cst evictionPolicy = evict_last : tensor<1x128x!tt.ptr<bf16>, #blocked> loc(#loc14)
    %19 = arith.extf %18 : tensor<1x128xbf16, #blocked> to tensor<1x128xf32, #blocked> loc(#loc15)
    %20 = arith.addf %12, %19 : tensor<1x128xf32, #blocked> loc(#loc16)
    %21 = arith.mulf %20, %20 : tensor<1x128xf32, #blocked> loc(#loc17)
    %22 = arith.select %10, %21, %cst_0 : tensor<1x128xi1, #blocked>, tensor<1x128xf32, #blocked> loc(#loc18)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(unknown), %arg6: f32 loc(unknown)):
      %29 = arith.addf %arg5, %arg6 : f32 loc(#loc28)
      tt.reduce.return %29 : f32 loc(#loc26)
    }) : (tensor<1x128xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc26)
    %24 = triton_gpu.convert_layout %23 : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc22)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc22)
    %26 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc23)
    %27 = tt.splat %26 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc24)
    %28 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc24)
    tt.store %27, %25, %28 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":21:28)
#loc3 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":23:21)
#loc4 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":24:34)
#loc5 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":29:18)
#loc6 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:40)
#loc7 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:36)
#loc8 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:30)
#loc9 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:46)
#loc10 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:67)
#loc11 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:40)
#loc12 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:36)
#loc13 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:30)
#loc14 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:46)
#loc15 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:97)
#loc16 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":32:18)
#loc17 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":33:18)
#loc18 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":36:33)
#loc19 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":267:36)
#loc20 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":37:24)
#loc21 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":37:27)
#loc23 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":38:25)
#loc24 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":38:36)
#loc25 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":38:4)
#loc26 = loc(callsite(#loc19 at #loc20))
#loc27 = loc(callsite(#loc21 at #loc19))
#loc28 = loc(callsite(#loc27 at #loc20))
