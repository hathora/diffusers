//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u32 triton__param_3,
	.param .u32 triton__param_4
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<122>;
	.reg .f32 	%f<83>;
	.reg .b64 	%rd<14>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd6, [triton__param_0];
	ld.param.u64 	%rd7, [triton__param_1];
$L__tmp0:
	.loc	1 21 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33
	shl.b32 	%r67, %r1, 5;
	ld.param.u64 	%rd8, [triton__param_2];
	ld.param.u32 	%r68, [triton__param_3];
	.loc	1 22 44
	mov.u32 	%r69, %tid.x;
	and.b32  	%r70, %r69, 31;
	bfe.u32 	%r71, %r69, 4, 4;
	.loc	1 22 23
	or.b32  	%r72, %r67, %r71;
	or.b32  	%r73, %r72, 16;
	or.b32  	%r74, %r67, %r70;
	.loc	1 23 21
	setp.lt.s32 	%p1, %r72, %r68;
	setp.lt.s32 	%p6, %r73, %r68;
	setp.lt.s32 	%p22, %r74, %r68;
	.loc	1 24 34
	shl.b32 	%r75, %r69, 3;
	and.b32  	%r76, %r75, 120;
	.loc	1 29 18
	mul.hi.s32 	%r77, %r72, 715827883;
	shr.u32 	%r78, %r77, 31;
	shr.u32 	%r79, %r77, 2;
	add.s32 	%r80, %r79, %r78;
	mul.lo.s32 	%r81, %r80, 24;
	sub.s32 	%r82, %r72, %r81;
	mul.hi.s32 	%r83, %r73, 715827883;
	shr.u32 	%r84, %r83, 31;
	shr.u32 	%r85, %r83, 2;
	add.s32 	%r86, %r85, %r84;
	mul.lo.s32 	%r87, %r86, 24;
	sub.s32 	%r88, %r73, %r87;
	.loc	1 30 40
	shl.b32 	%r89, %r72, 7;
	shl.b32 	%r90, %r73, 7;
	.loc	1 30 36
	or.b32  	%r91, %r89, %r76;
	or.b32  	%r92, %r90, %r76;
	.loc	1 30 30
	mul.wide.s32 	%rd9, %r91, 2;
	add.s64 	%rd1, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r92, 2;
	add.s64 	%rd2, %rd6, %rd10;
	mov.b32 	%r6, 0;
	.loc	1 30 46
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	cvt.u16.u32 	%rs1, %r2;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r2; }
	cvt.u16.u32 	%rs3, %r3;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r3; }
	cvt.u16.u32 	%rs5, %r4;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r4; }
	cvt.u16.u32 	%rs7, %r5;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r5; }
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	cvt.u16.u32 	%rs9, %r10;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r10; }
	cvt.u16.u32 	%rs11, %r11;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r11; }
	cvt.u16.u32 	%rs13, %r12;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r12; }
	cvt.u16.u32 	%rs15, %r13;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r13; }
	.loc	1 30 67
	// begin inline asm
	cvt.f32.bf16 %r18, %rs1;
	// end inline asm
	mov.b32 	%f1, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs2;
	// end inline asm
	mov.b32 	%f2, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs3;
	// end inline asm
	mov.b32 	%f3, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs4;
	// end inline asm
	mov.b32 	%f4, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs5;
	// end inline asm
	mov.b32 	%f5, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs6;
	// end inline asm
	mov.b32 	%f6, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs7;
	// end inline asm
	mov.b32 	%f7, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs8;
	// end inline asm
	mov.b32 	%f8, %r25;
	// begin inline asm
	cvt.f32.bf16 %r26, %rs9;
	// end inline asm
	mov.b32 	%f9, %r26;
	// begin inline asm
	cvt.f32.bf16 %r27, %rs10;
	// end inline asm
	mov.b32 	%f10, %r27;
	// begin inline asm
	cvt.f32.bf16 %r28, %rs11;
	// end inline asm
	mov.b32 	%f11, %r28;
	// begin inline asm
	cvt.f32.bf16 %r29, %rs12;
	// end inline asm
	mov.b32 	%f12, %r29;
	// begin inline asm
	cvt.f32.bf16 %r30, %rs13;
	// end inline asm
	mov.b32 	%f13, %r30;
	// begin inline asm
	cvt.f32.bf16 %r31, %rs14;
	// end inline asm
	mov.b32 	%f14, %r31;
	// begin inline asm
	cvt.f32.bf16 %r32, %rs15;
	// end inline asm
	mov.b32 	%f15, %r32;
	// begin inline asm
	cvt.f32.bf16 %r33, %rs16;
	// end inline asm
	mov.b32 	%f16, %r33;
	.loc	1 31 40
	shl.b32 	%r93, %r82, 7;
	shl.b32 	%r94, %r88, 7;
	.loc	1 31 36
	or.b32  	%r95, %r93, %r76;
	or.b32  	%r96, %r94, %r76;
	.loc	1 31 30
	mul.wide.s32 	%rd11, %r95, 2;
	add.s64 	%rd3, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r96, 2;
	add.s64 	%rd4, %rd7, %rd12;
	.loc	1 31 46
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	cvt.u16.u32 	%rs17, %r34;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs18}, %r34; }
	cvt.u16.u32 	%rs19, %r35;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs20}, %r35; }
	cvt.u16.u32 	%rs21, %r36;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs22}, %r36; }
	cvt.u16.u32 	%rs23, %r37;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs24}, %r37; }
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r42, %r6;
	@!%p6 mov.u32 %r43, %r6;
	@!%p6 mov.u32 %r44, %r6;
	@!%p6 mov.u32 %r45, %r6;
	// end inline asm
	cvt.u16.u32 	%rs25, %r42;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs26}, %r42; }
	cvt.u16.u32 	%rs27, %r43;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs28}, %r43; }
	cvt.u16.u32 	%rs29, %r44;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs30}, %r44; }
	cvt.u16.u32 	%rs31, %r45;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs32}, %r45; }
	.loc	1 31 97
	// begin inline asm
	cvt.f32.bf16 %r50, %rs17;
	// end inline asm
	mov.b32 	%f17, %r50;
	// begin inline asm
	cvt.f32.bf16 %r51, %rs18;
	// end inline asm
	mov.b32 	%f18, %r51;
	// begin inline asm
	cvt.f32.bf16 %r52, %rs19;
	// end inline asm
	mov.b32 	%f19, %r52;
	// begin inline asm
	cvt.f32.bf16 %r53, %rs20;
	// end inline asm
	mov.b32 	%f20, %r53;
	// begin inline asm
	cvt.f32.bf16 %r54, %rs21;
	// end inline asm
	mov.b32 	%f21, %r54;
	// begin inline asm
	cvt.f32.bf16 %r55, %rs22;
	// end inline asm
	mov.b32 	%f22, %r55;
	// begin inline asm
	cvt.f32.bf16 %r56, %rs23;
	// end inline asm
	mov.b32 	%f23, %r56;
	// begin inline asm
	cvt.f32.bf16 %r57, %rs24;
	// end inline asm
	mov.b32 	%f24, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs25;
	// end inline asm
	mov.b32 	%f25, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs26;
	// end inline asm
	mov.b32 	%f26, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs27;
	// end inline asm
	mov.b32 	%f27, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs28;
	// end inline asm
	mov.b32 	%f28, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs29;
	// end inline asm
	mov.b32 	%f29, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs30;
	// end inline asm
	mov.b32 	%f30, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs31;
	// end inline asm
	mov.b32 	%f31, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs32;
	// end inline asm
	mov.b32 	%f32, %r65;
	.loc	1 32 18
	add.f32 	%f33, %f1, %f17;
	add.f32 	%f34, %f2, %f18;
	add.f32 	%f35, %f3, %f19;
	add.f32 	%f36, %f4, %f20;
	add.f32 	%f37, %f5, %f21;
	add.f32 	%f38, %f6, %f22;
	add.f32 	%f39, %f7, %f23;
	add.f32 	%f40, %f8, %f24;
	add.f32 	%f41, %f9, %f25;
	add.f32 	%f42, %f10, %f26;
	add.f32 	%f43, %f11, %f27;
	add.f32 	%f44, %f12, %f28;
	add.f32 	%f45, %f13, %f29;
	add.f32 	%f46, %f14, %f30;
	add.f32 	%f47, %f15, %f31;
	add.f32 	%f48, %f16, %f32;
	.loc	1 33 18
	mul.f32 	%f49, %f34, %f34;
	mul.f32 	%f50, %f42, %f42;
$L__tmp1:
	.loc	2 256 15
	fma.rn.f32 	%f51, %f33, %f33, %f49;
	fma.rn.f32 	%f52, %f35, %f35, %f51;
	fma.rn.f32 	%f53, %f36, %f36, %f52;
	fma.rn.f32 	%f54, %f37, %f37, %f53;
	fma.rn.f32 	%f55, %f38, %f38, %f54;
	fma.rn.f32 	%f56, %f39, %f39, %f55;
	fma.rn.f32 	%f57, %f40, %f40, %f56;
	selp.f32 	%f58, %f57, 0f00000000, %p1;
	fma.rn.f32 	%f59, %f41, %f41, %f50;
	fma.rn.f32 	%f60, %f43, %f43, %f59;
	fma.rn.f32 	%f61, %f44, %f44, %f60;
	fma.rn.f32 	%f62, %f45, %f45, %f61;
	fma.rn.f32 	%f63, %f46, %f46, %f62;
	fma.rn.f32 	%f64, %f47, %f47, %f63;
	fma.rn.f32 	%f65, %f48, %f48, %f64;
	selp.f32 	%f66, %f65, 0f00000000, %p6;
	.loc	2 267 36
	mov.b32 	%r97, %f58;
	shfl.sync.bfly.b32	%r98, %r97, 8, 31, -1;
	mov.b32 	%f67, %r98;
	.loc	2 256 15
	add.f32 	%f68, %f58, %f67;
	.loc	2 267 36
	mov.b32 	%r99, %f68;
	shfl.sync.bfly.b32	%r100, %r99, 4, 31, -1;
	mov.b32 	%f69, %r100;
	.loc	2 256 15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36
	mov.b32 	%r101, %f70;
	shfl.sync.bfly.b32	%r102, %r101, 2, 31, -1;
	mov.b32 	%f71, %r102;
	.loc	2 256 15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36
	mov.b32 	%r103, %f72;
	shfl.sync.bfly.b32	%r104, %r103, 1, 31, -1;
	mov.b32 	%f73, %r104;
	.loc	2 256 15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36
	mov.b32 	%r105, %f66;
	shfl.sync.bfly.b32	%r106, %r105, 8, 31, -1;
	mov.b32 	%f75, %r106;
	.loc	2 256 15
	add.f32 	%f76, %f66, %f75;
	.loc	2 267 36
	mov.b32 	%r107, %f76;
	shfl.sync.bfly.b32	%r108, %r107, 4, 31, -1;
	mov.b32 	%f77, %r108;
	.loc	2 256 15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36
	mov.b32 	%r109, %f78;
	shfl.sync.bfly.b32	%r110, %r109, 2, 31, -1;
	mov.b32 	%f79, %r110;
	.loc	2 256 15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36
	mov.b32 	%r111, %f80;
	shfl.sync.bfly.b32	%r112, %r111, 1, 31, -1;
	mov.b32 	%f81, %r112;
	.loc	2 256 15
	add.f32 	%f82, %f80, %f81;
$L__tmp2:
	.loc	1 37 27
	bfe.u32 	%r113, %r69, 5, 3;
	shr.u32 	%r114, %r69, 2;
	and.b32  	%r115, %r114, 4;
	shl.b32 	%r116, %r113, 3;
	or.b32  	%r117, %r116, %r115;
	mov.u32 	%r118, global_smem;
	add.s32 	%r119, %r118, %r117;
	st.shared.f32 	[%r119], %f74;
	st.shared.f32 	[%r119+64], %f82;
	bar.sync 	0;
	shl.b32 	%r120, %r70, 2;
	add.s32 	%r121, %r118, %r120;
	ld.shared.u32 	%r66, [%r121];
	.loc	1 38 25
	mul.wide.s32 	%rd13, %r74, 4;
	add.s64 	%rd5, %rd8, %rd13;
	.loc	1 38 36
	setp.eq.s32 	%p23, %r113, 0;
	and.pred  	%p21, %p23, %p22;
	// begin inline asm
	@%p21 st.global.b32 [ %rd5 + 0 ], { %r66 };
	// end inline asm
	.loc	1 38 4
	ret;
$L__tmp3:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 173
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 112
.b8 122
.b8 110
.b8 109
.b8 108
.b8 51
.b8 111
.b8 121
.b8 117
.b8 55
.b8 116
.b8 98
.b8 110
.b8 54
.b8 103
.b8 115
.b8 109
.b8 109
.b8 114
.b8 50
.b8 115
.b8 112
.b8 50
.b8 111
.b8 104
.b8 52
.b8 99
.b8 54
.b8 108
.b8 106
.b8 51
.b8 107
.b8 51
.b8 104
.b8 120
.b8 109
.b8 106
.b8 120
.b8 55
.b8 97
.b8 112
.b8 119
.b8 117
.b8 97
.b8 116
.b8 102
.b8 118
.b8 55
.b8 97
.b8 115
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 122
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 37
.b8 24
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
