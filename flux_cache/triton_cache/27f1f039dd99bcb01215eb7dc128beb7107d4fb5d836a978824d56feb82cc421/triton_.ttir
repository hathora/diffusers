#loc = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0)
#loc1 = loc(unknown)
module {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg3: i32 loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<32x128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<32x128xbf16> loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<32x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<24> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = tt.splat %arg3 : i32 -> tensor<32x1xi32> loc(#loc7)
    %7 = arith.cmpi slt, %5, %6 : tensor<32x1xi32> loc(#loc7)
    %8 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc8)
    %9 = tt.expand_dims %8 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc9)
    %10 = arith.remsi %5, %cst_2 : tensor<32x1xi32> loc(#loc10)
    %11 = arith.muli %5, %cst_1 : tensor<32x1xi32> loc(#loc11)
    %12 = tt.broadcast %9 : tensor<1x128xi32> -> tensor<32x128xi32> loc(#loc12)
    %13 = tt.broadcast %11 : tensor<32x1xi32> -> tensor<32x128xi32> loc(#loc12)
    %14 = arith.addi %12, %13 : tensor<32x128xi32> loc(#loc12)
    %15 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<32x128x!tt.ptr<bf16>> loc(#loc13)
    %16 = tt.addptr %15, %14 : tensor<32x128x!tt.ptr<bf16>>, tensor<32x128xi32> loc(#loc13)
    %17 = tt.broadcast %7 : tensor<32x1xi1> -> tensor<32x128xi1> loc(#loc14)
    %18 = tt.load %16, %17, %cst_0 : tensor<32x128x!tt.ptr<bf16>> loc(#loc14)
    %19 = arith.extf %18 : tensor<32x128xbf16> to tensor<32x128xf32> loc(#loc15)
    %20 = arith.muli %10, %cst_1 : tensor<32x1xi32> loc(#loc16)
    %21 = tt.broadcast %20 : tensor<32x1xi32> -> tensor<32x128xi32> loc(#loc17)
    %22 = arith.addi %12, %21 : tensor<32x128xi32> loc(#loc17)
    %23 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<32x128x!tt.ptr<bf16>> loc(#loc18)
    %24 = tt.addptr %23, %22 : tensor<32x128x!tt.ptr<bf16>>, tensor<32x128xi32> loc(#loc18)
    %25 = tt.load %24, %17, %cst_0 evictionPolicy = evict_last : tensor<32x128x!tt.ptr<bf16>> loc(#loc19)
    %26 = arith.extf %25 : tensor<32x128xbf16> to tensor<32x128xf32> loc(#loc20)
    %27 = arith.addf %19, %26 : tensor<32x128xf32> loc(#loc21)
    %28 = arith.mulf %27, %27 : tensor<32x128xf32> loc(#loc22)
    %29 = arith.select %17, %28, %cst : tensor<32x128xi1>, tensor<32x128xf32> loc(#loc23)
    %30 = "tt.reduce"(%29) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(unknown), %arg6: f32 loc(unknown)):
      %34 = arith.addf %arg5, %arg6 : f32 loc(#loc33)
      tt.reduce.return %34 : f32 loc(#loc31)
    }) : (tensor<32x128xf32>) -> tensor<32xf32> loc(#loc31)
    %31 = tt.expand_dims %30 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc27)
    %32 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc28)
    %33 = tt.addptr %32, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc28)
    tt.store %33, %31, %7 : tensor<32x1x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":21:28)
#loc3 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":21:33)
#loc4 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":22:36)
#loc5 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":22:44)
#loc6 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":22:23)
#loc7 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":23:21)
#loc8 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":24:26)
#loc9 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":24:34)
#loc10 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":29:18)
#loc11 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:40)
#loc12 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:36)
#loc13 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:30)
#loc14 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:46)
#loc15 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":30:67)
#loc16 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:40)
#loc17 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:36)
#loc18 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:30)
#loc19 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:46)
#loc20 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":31:97)
#loc21 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":32:18)
#loc22 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":33:18)
#loc23 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":36:33)
#loc24 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":37:24)
#loc26 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":256:15)
#loc27 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":37:27)
#loc28 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":38:25)
#loc29 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":38:36)
#loc30 = loc("/opt/inductor_cache/pz/cpznml3oyu7tbn6gsmmr2sp2oh4c6lj3k3hxmjx7apwuatfv7asi.py":38:4)
#loc31 = loc(callsite(#loc24 at #loc25))
#loc32 = loc(callsite(#loc26 at #loc24))
#loc33 = loc(callsite(#loc32 at #loc25))
