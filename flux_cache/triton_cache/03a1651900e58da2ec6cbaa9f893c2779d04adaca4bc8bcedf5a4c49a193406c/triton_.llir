; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %5
  %6 = sdiv i32 %.frozen, 8, !dbg !11
  %7 = shl nsw i32 %6, 3, !dbg !12
  %8 = sub i32 64, %7, !dbg !13
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 8), !dbg !14
  %10 = srem i32 %5, %9, !dbg !15
  %11 = add i32 %7, %10, !dbg !16
  %12 = mul i32 %6, 8
  %.decomposed = sub i32 %.frozen, %12
  %13 = sdiv i32 %.decomposed, %9, !dbg !17
  %14 = shl i32 %11, 6, !dbg !18
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %16 = lshr i32 %15, 5, !dbg !19
  %17 = lshr i32 %15, 4, !dbg !19
  %18 = and i32 %17, 7, !dbg !19
  %19 = or disjoint i32 %18, 8, !dbg !19
  %20 = or disjoint i32 %18, 16, !dbg !19
  %21 = or disjoint i32 %18, 24, !dbg !19
  %22 = or disjoint i32 %18, 32, !dbg !19
  %23 = or disjoint i32 %18, 40, !dbg !19
  %24 = or disjoint i32 %18, 48, !dbg !19
  %25 = or disjoint i32 %18, 56, !dbg !19
  %26 = or disjoint i32 %14, %18, !dbg !20
  %27 = or disjoint i32 %14, %19, !dbg !20
  %28 = or disjoint i32 %14, %20, !dbg !20
  %29 = or disjoint i32 %14, %21, !dbg !20
  %30 = or disjoint i32 %14, %22, !dbg !20
  %31 = or disjoint i32 %14, %23, !dbg !20
  %32 = or disjoint i32 %14, %24, !dbg !20
  %33 = or disjoint i32 %14, %25, !dbg !20
  %34 = shl nsw i32 %13, 6, !dbg !21
  %35 = or disjoint i32 %34, %18, !dbg !22
  %36 = or disjoint i32 %34, %19, !dbg !22
  %37 = or disjoint i32 %34, %20, !dbg !22
  %38 = or disjoint i32 %34, %21, !dbg !22
  %39 = or disjoint i32 %34, %22, !dbg !22
  %40 = or disjoint i32 %34, %23, !dbg !22
  %41 = or disjoint i32 %34, %24, !dbg !22
  %42 = or disjoint i32 %34, %25, !dbg !22
  %43 = srem i32 %26, 4096, !dbg !23
  %44 = srem i32 %27, 4096, !dbg !23
  %45 = srem i32 %28, 4096, !dbg !23
  %46 = srem i32 %29, 4096, !dbg !23
  %47 = srem i32 %30, 4096, !dbg !23
  %48 = srem i32 %31, 4096, !dbg !23
  %49 = srem i32 %32, 4096, !dbg !23
  %50 = srem i32 %33, 4096, !dbg !23
  %51 = srem i32 %35, 64, !dbg !24
  %52 = srem i32 %36, 64, !dbg !24
  %53 = srem i32 %37, 64, !dbg !24
  %54 = srem i32 %38, 64, !dbg !24
  %55 = srem i32 %39, 64, !dbg !24
  %56 = srem i32 %40, 64, !dbg !24
  %57 = srem i32 %41, 64, !dbg !24
  %58 = srem i32 %42, 64, !dbg !24
  %59 = mul nsw i32 %43, 3072, !dbg !25
  %60 = mul nsw i32 %44, 3072, !dbg !25
  %61 = mul nsw i32 %45, 3072, !dbg !25
  %62 = mul nsw i32 %46, 3072, !dbg !25
  %63 = mul nsw i32 %47, 3072, !dbg !25
  %64 = mul nsw i32 %48, 3072, !dbg !25
  %65 = mul nsw i32 %49, 3072, !dbg !25
  %66 = mul nsw i32 %50, 3072, !dbg !25
  %67 = shl i32 %15, 3, !dbg !26
  %68 = and i32 %67, 120, !dbg !26
  %69 = or disjoint i32 %59, %68, !dbg !27
  %70 = or disjoint i32 %60, %68, !dbg !27
  %71 = or disjoint i32 %61, %68, !dbg !27
  %72 = or disjoint i32 %62, %68, !dbg !27
  %73 = or disjoint i32 %63, %68, !dbg !27
  %74 = or disjoint i32 %64, %68, !dbg !27
  %75 = or disjoint i32 %65, %68, !dbg !27
  %76 = or disjoint i32 %66, %68, !dbg !27
  %77 = sext i32 %69 to i64, !dbg !28
  %78 = getelementptr i16, ptr addrspace(1) %1, i64 %77, !dbg !28
  %79 = sext i32 %70 to i64, !dbg !28
  %80 = getelementptr i16, ptr addrspace(1) %1, i64 %79, !dbg !28
  %81 = sext i32 %71 to i64, !dbg !28
  %82 = getelementptr i16, ptr addrspace(1) %1, i64 %81, !dbg !28
  %83 = sext i32 %72 to i64, !dbg !28
  %84 = getelementptr i16, ptr addrspace(1) %1, i64 %83, !dbg !28
  %85 = sext i32 %73 to i64, !dbg !28
  %86 = getelementptr i16, ptr addrspace(1) %1, i64 %85, !dbg !28
  %87 = sext i32 %74 to i64, !dbg !28
  %88 = getelementptr i16, ptr addrspace(1) %1, i64 %87, !dbg !28
  %89 = sext i32 %75 to i64, !dbg !28
  %90 = getelementptr i16, ptr addrspace(1) %1, i64 %89, !dbg !28
  %91 = sext i32 %76 to i64, !dbg !28
  %92 = getelementptr i16, ptr addrspace(1) %1, i64 %91, !dbg !28
  %93 = mul nsw i32 %51, 3072, !dbg !29
  %94 = mul nsw i32 %52, 3072, !dbg !29
  %95 = mul nsw i32 %53, 3072, !dbg !29
  %96 = mul nsw i32 %54, 3072, !dbg !29
  %97 = mul nsw i32 %55, 3072, !dbg !29
  %98 = mul nsw i32 %56, 3072, !dbg !29
  %99 = mul nsw i32 %57, 3072, !dbg !29
  %100 = mul nsw i32 %58, 3072, !dbg !29
  %101 = or disjoint i32 %93, %68, !dbg !30
  %102 = or disjoint i32 %94, %68, !dbg !30
  %103 = or disjoint i32 %95, %68, !dbg !30
  %104 = or disjoint i32 %96, %68, !dbg !30
  %105 = or disjoint i32 %97, %68, !dbg !30
  %106 = or disjoint i32 %98, %68, !dbg !30
  %107 = or disjoint i32 %99, %68, !dbg !30
  %108 = or disjoint i32 %100, %68, !dbg !30
  %109 = sext i32 %101 to i64, !dbg !31
  %110 = getelementptr i16, ptr addrspace(1) %2, i64 %109, !dbg !31
  %111 = sext i32 %102 to i64, !dbg !31
  %112 = getelementptr i16, ptr addrspace(1) %2, i64 %111, !dbg !31
  %113 = sext i32 %103 to i64, !dbg !31
  %114 = getelementptr i16, ptr addrspace(1) %2, i64 %113, !dbg !31
  %115 = sext i32 %104 to i64, !dbg !31
  %116 = getelementptr i16, ptr addrspace(1) %2, i64 %115, !dbg !31
  %117 = sext i32 %105 to i64, !dbg !31
  %118 = getelementptr i16, ptr addrspace(1) %2, i64 %117, !dbg !31
  %119 = sext i32 %106 to i64, !dbg !31
  %120 = getelementptr i16, ptr addrspace(1) %2, i64 %119, !dbg !31
  %121 = sext i32 %107 to i64, !dbg !31
  %122 = getelementptr i16, ptr addrspace(1) %2, i64 %121, !dbg !31
  %123 = sext i32 %108 to i64, !dbg !31
  %124 = getelementptr i16, ptr addrspace(1) %2, i64 %123, !dbg !31
  %125 = shl i32 %15, 9, !dbg !32
  %126 = and i32 %125, 4096, !dbg !32
  %127 = shl nuw nsw i32 %18, 6, !dbg !32
  %128 = xor i32 %17, %15, !dbg !32
  %129 = shl i32 %128, 3, !dbg !32
  %130 = and i32 %129, 56, !dbg !32
  %131 = or disjoint i32 %130, %127, !dbg !32
  %132 = or disjoint i32 %131, %126, !dbg !32
  %133 = zext nneg i32 %132 to i64, !dbg !32
  %134 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %133, !dbg !32
  %135 = shl nuw nsw i32 %19, 6, !dbg !32
  %136 = or disjoint i32 %135, %130, !dbg !32
  %137 = or disjoint i32 %136, %126, !dbg !32
  %138 = zext nneg i32 %137 to i64, !dbg !32
  %139 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %138, !dbg !32
  %140 = shl nuw nsw i32 %20, 6, !dbg !32
  %141 = or disjoint i32 %140, %130, !dbg !32
  %142 = or disjoint i32 %141, %126, !dbg !32
  %143 = zext nneg i32 %142 to i64, !dbg !32
  %144 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %143, !dbg !32
  %145 = shl nuw nsw i32 %21, 6, !dbg !32
  %146 = or disjoint i32 %145, %130, !dbg !32
  %147 = or disjoint i32 %146, %126, !dbg !32
  %148 = zext nneg i32 %147 to i64, !dbg !32
  %149 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %148, !dbg !32
  %150 = shl nuw nsw i32 %22, 6, !dbg !32
  %151 = or disjoint i32 %150, %130, !dbg !32
  %152 = or disjoint i32 %151, %126, !dbg !32
  %153 = zext nneg i32 %152 to i64, !dbg !32
  %154 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %153, !dbg !32
  %155 = shl nuw nsw i32 %23, 6, !dbg !32
  %156 = or disjoint i32 %155, %130, !dbg !32
  %157 = or disjoint i32 %156, %126, !dbg !32
  %158 = zext nneg i32 %157 to i64, !dbg !32
  %159 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %158, !dbg !32
  %160 = shl nuw nsw i32 %24, 6, !dbg !32
  %161 = or disjoint i32 %160, %130, !dbg !32
  %162 = or disjoint i32 %161, %126, !dbg !32
  %163 = zext nneg i32 %162 to i64, !dbg !32
  %164 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %163, !dbg !32
  %165 = shl nuw nsw i32 %25, 6, !dbg !32
  %166 = or disjoint i32 %165, %130, !dbg !32
  %167 = or disjoint i32 %166, %126, !dbg !32
  %168 = zext nneg i32 %167 to i64, !dbg !32
  %169 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %168, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %134, ptr addrspace(1) %78, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %139, ptr addrspace(1) %80, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %144, ptr addrspace(1) %82, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %149, ptr addrspace(1) %84, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %154, ptr addrspace(1) %86, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %159, ptr addrspace(1) %88, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %164, ptr addrspace(1) %90, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %169, ptr addrspace(1) %92, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %170 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %133, !dbg !33
  %171 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %138, !dbg !33
  %172 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %143, !dbg !33
  %173 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %148, !dbg !33
  %174 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %153, !dbg !33
  %175 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %158, !dbg !33
  %176 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %163, !dbg !33
  %177 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %168, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %170, ptr addrspace(1) %110, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %171, ptr addrspace(1) %112, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %172, ptr addrspace(1) %114, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %173, ptr addrspace(1) %116, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %174, ptr addrspace(1) %118, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %175, ptr addrspace(1) %120, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %176, ptr addrspace(1) %122, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %177, ptr addrspace(1) %124, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %178 = getelementptr i8, ptr addrspace(1) %78, i64 256, !dbg !34
  %179 = getelementptr i8, ptr addrspace(1) %80, i64 256, !dbg !34
  %180 = getelementptr i8, ptr addrspace(1) %82, i64 256, !dbg !34
  %181 = getelementptr i8, ptr addrspace(1) %84, i64 256, !dbg !34
  %182 = getelementptr i8, ptr addrspace(1) %86, i64 256, !dbg !34
  %183 = getelementptr i8, ptr addrspace(1) %88, i64 256, !dbg !34
  %184 = getelementptr i8, ptr addrspace(1) %90, i64 256, !dbg !34
  %185 = getelementptr i8, ptr addrspace(1) %92, i64 256, !dbg !34
  %186 = getelementptr i8, ptr addrspace(1) %110, i64 256, !dbg !35
  %187 = getelementptr i8, ptr addrspace(1) %112, i64 256, !dbg !35
  %188 = getelementptr i8, ptr addrspace(1) %114, i64 256, !dbg !35
  %189 = getelementptr i8, ptr addrspace(1) %116, i64 256, !dbg !35
  %190 = getelementptr i8, ptr addrspace(1) %118, i64 256, !dbg !35
  %191 = getelementptr i8, ptr addrspace(1) %120, i64 256, !dbg !35
  %192 = getelementptr i8, ptr addrspace(1) %122, i64 256, !dbg !35
  %193 = getelementptr i8, ptr addrspace(1) %124, i64 256, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %194 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %133, !dbg !32
  %195 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %138, !dbg !32
  %196 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %143, !dbg !32
  %197 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %148, !dbg !32
  %198 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %153, !dbg !32
  %199 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %158, !dbg !32
  %200 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %163, !dbg !32
  %201 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %168, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %194, ptr addrspace(1) %178, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %195, ptr addrspace(1) %179, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %196, ptr addrspace(1) %180, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %197, ptr addrspace(1) %181, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %198, ptr addrspace(1) %182, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %199, ptr addrspace(1) %183, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %200, ptr addrspace(1) %184, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %201, ptr addrspace(1) %185, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %202 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %133, !dbg !33
  %203 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %138, !dbg !33
  %204 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %143, !dbg !33
  %205 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %148, !dbg !33
  %206 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %153, !dbg !33
  %207 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %158, !dbg !33
  %208 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %163, !dbg !33
  %209 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 98304), i64 %168, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %202, ptr addrspace(1) %186, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %203, ptr addrspace(1) %187, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %204, ptr addrspace(1) %188, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %205, ptr addrspace(1) %189, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %206, ptr addrspace(1) %190, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %207, ptr addrspace(1) %191, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %208, ptr addrspace(1) %192, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %209, ptr addrspace(1) %193, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %210 = getelementptr i8, ptr addrspace(1) %78, i64 512, !dbg !34
  %211 = getelementptr i8, ptr addrspace(1) %80, i64 512, !dbg !34
  %212 = getelementptr i8, ptr addrspace(1) %82, i64 512, !dbg !34
  %213 = getelementptr i8, ptr addrspace(1) %84, i64 512, !dbg !34
  %214 = getelementptr i8, ptr addrspace(1) %86, i64 512, !dbg !34
  %215 = getelementptr i8, ptr addrspace(1) %88, i64 512, !dbg !34
  %216 = getelementptr i8, ptr addrspace(1) %90, i64 512, !dbg !34
  %217 = getelementptr i8, ptr addrspace(1) %92, i64 512, !dbg !34
  %218 = getelementptr i8, ptr addrspace(1) %110, i64 512, !dbg !35
  %219 = getelementptr i8, ptr addrspace(1) %112, i64 512, !dbg !35
  %220 = getelementptr i8, ptr addrspace(1) %114, i64 512, !dbg !35
  %221 = getelementptr i8, ptr addrspace(1) %116, i64 512, !dbg !35
  %222 = getelementptr i8, ptr addrspace(1) %118, i64 512, !dbg !35
  %223 = getelementptr i8, ptr addrspace(1) %120, i64 512, !dbg !35
  %224 = getelementptr i8, ptr addrspace(1) %122, i64 512, !dbg !35
  %225 = getelementptr i8, ptr addrspace(1) %124, i64 512, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %226 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %133, !dbg !32
  %227 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %138, !dbg !32
  %228 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %143, !dbg !32
  %229 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %148, !dbg !32
  %230 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %153, !dbg !32
  %231 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %158, !dbg !32
  %232 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %163, !dbg !32
  %233 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %168, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %226, ptr addrspace(1) %210, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %227, ptr addrspace(1) %211, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %228, ptr addrspace(1) %212, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %229, ptr addrspace(1) %213, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %230, ptr addrspace(1) %214, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %231, ptr addrspace(1) %215, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %232, ptr addrspace(1) %216, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %233, ptr addrspace(1) %217, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %234 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %133, !dbg !33
  %235 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %138, !dbg !33
  %236 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %143, !dbg !33
  %237 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %148, !dbg !33
  %238 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %153, !dbg !33
  %239 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %158, !dbg !33
  %240 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %163, !dbg !33
  %241 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 114688), i64 %168, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %234, ptr addrspace(1) %218, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %235, ptr addrspace(1) %219, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %236, ptr addrspace(1) %220, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %237, ptr addrspace(1) %221, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %238, ptr addrspace(1) %222, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %239, ptr addrspace(1) %223, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %240, ptr addrspace(1) %224, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %241, ptr addrspace(1) %225, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %242 = getelementptr i8, ptr addrspace(1) %78, i64 768, !dbg !34
  %243 = getelementptr i8, ptr addrspace(1) %80, i64 768, !dbg !34
  %244 = getelementptr i8, ptr addrspace(1) %82, i64 768, !dbg !34
  %245 = getelementptr i8, ptr addrspace(1) %84, i64 768, !dbg !34
  %246 = getelementptr i8, ptr addrspace(1) %86, i64 768, !dbg !34
  %247 = getelementptr i8, ptr addrspace(1) %88, i64 768, !dbg !34
  %248 = getelementptr i8, ptr addrspace(1) %90, i64 768, !dbg !34
  %249 = getelementptr i8, ptr addrspace(1) %92, i64 768, !dbg !34
  %250 = getelementptr i8, ptr addrspace(1) %110, i64 768, !dbg !35
  %251 = getelementptr i8, ptr addrspace(1) %112, i64 768, !dbg !35
  %252 = getelementptr i8, ptr addrspace(1) %114, i64 768, !dbg !35
  %253 = getelementptr i8, ptr addrspace(1) %116, i64 768, !dbg !35
  %254 = getelementptr i8, ptr addrspace(1) %118, i64 768, !dbg !35
  %255 = getelementptr i8, ptr addrspace(1) %120, i64 768, !dbg !35
  %256 = getelementptr i8, ptr addrspace(1) %122, i64 768, !dbg !35
  %257 = getelementptr i8, ptr addrspace(1) %124, i64 768, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %258 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %133, !dbg !32
  %259 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %138, !dbg !32
  %260 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %143, !dbg !32
  %261 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %148, !dbg !32
  %262 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %153, !dbg !32
  %263 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %158, !dbg !32
  %264 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %163, !dbg !32
  %265 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 49152), i64 %168, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %258, ptr addrspace(1) %242, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %259, ptr addrspace(1) %243, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %260, ptr addrspace(1) %244, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %261, ptr addrspace(1) %245, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %262, ptr addrspace(1) %246, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %263, ptr addrspace(1) %247, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %264, ptr addrspace(1) %248, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %265, ptr addrspace(1) %249, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %266 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %133, !dbg !33
  %267 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %138, !dbg !33
  %268 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %143, !dbg !33
  %269 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %148, !dbg !33
  %270 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %153, !dbg !33
  %271 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %158, !dbg !33
  %272 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %163, !dbg !33
  %273 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 131072), i64 %168, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %266, ptr addrspace(1) %250, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %267, ptr addrspace(1) %251, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %268, ptr addrspace(1) %252, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %269, ptr addrspace(1) %253, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %270, ptr addrspace(1) %254, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %271, ptr addrspace(1) %255, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %272, ptr addrspace(1) %256, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %273, ptr addrspace(1) %257, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %274 = and i32 %16, 134217724
  br label %275, !dbg !36

275:                                              ; preds = %4, %275
  %276 = phi i32 [ -1, %4 ], [ %314, %275 ]
  %277 = phi i32 [ 3, %4 ], [ %668, %275 ]
  %.pn145289 = phi ptr addrspace(1) [ %257, %4 ], [ %665, %275 ]
  %.pn161288 = phi ptr addrspace(1) [ %256, %4 ], [ %664, %275 ]
  %.pn177287 = phi ptr addrspace(1) [ %255, %4 ], [ %663, %275 ]
  %.pn193286 = phi ptr addrspace(1) [ %254, %4 ], [ %662, %275 ]
  %.pn209285 = phi ptr addrspace(1) [ %253, %4 ], [ %661, %275 ]
  %.pn225284 = phi ptr addrspace(1) [ %252, %4 ], [ %660, %275 ]
  %.pn241283 = phi ptr addrspace(1) [ %251, %4 ], [ %659, %275 ]
  %.pn257282 = phi ptr addrspace(1) [ %250, %4 ], [ %658, %275 ]
  %.pn17281 = phi ptr addrspace(1) [ %249, %4 ], [ %657, %275 ]
  %.pn33280 = phi ptr addrspace(1) [ %248, %4 ], [ %656, %275 ]
  %.pn49279 = phi ptr addrspace(1) [ %247, %4 ], [ %655, %275 ]
  %.pn65278 = phi ptr addrspace(1) [ %246, %4 ], [ %654, %275 ]
  %.pn81277 = phi ptr addrspace(1) [ %245, %4 ], [ %653, %275 ]
  %.pn97276 = phi ptr addrspace(1) [ %244, %4 ], [ %652, %275 ]
  %.pn113275 = phi ptr addrspace(1) [ %243, %4 ], [ %651, %275 ]
  %.pn129274 = phi ptr addrspace(1) [ %242, %4 ], [ %650, %275 ]
  %278 = phi float [ 0.000000e+00, %4 ], [ %618, %275 ]
  %279 = phi float [ 0.000000e+00, %4 ], [ %619, %275 ]
  %280 = phi float [ 0.000000e+00, %4 ], [ %620, %275 ]
  %281 = phi float [ 0.000000e+00, %4 ], [ %621, %275 ]
  %282 = phi float [ 0.000000e+00, %4 ], [ %622, %275 ]
  %283 = phi float [ 0.000000e+00, %4 ], [ %623, %275 ]
  %284 = phi float [ 0.000000e+00, %4 ], [ %624, %275 ]
  %285 = phi float [ 0.000000e+00, %4 ], [ %625, %275 ]
  %286 = phi float [ 0.000000e+00, %4 ], [ %626, %275 ]
  %287 = phi float [ 0.000000e+00, %4 ], [ %627, %275 ]
  %288 = phi float [ 0.000000e+00, %4 ], [ %628, %275 ]
  %289 = phi float [ 0.000000e+00, %4 ], [ %629, %275 ]
  %290 = phi float [ 0.000000e+00, %4 ], [ %630, %275 ]
  %291 = phi float [ 0.000000e+00, %4 ], [ %631, %275 ]
  %292 = phi float [ 0.000000e+00, %4 ], [ %632, %275 ]
  %293 = phi float [ 0.000000e+00, %4 ], [ %633, %275 ]
  %294 = phi float [ 0.000000e+00, %4 ], [ %634, %275 ]
  %295 = phi float [ 0.000000e+00, %4 ], [ %635, %275 ]
  %296 = phi float [ 0.000000e+00, %4 ], [ %636, %275 ]
  %297 = phi float [ 0.000000e+00, %4 ], [ %637, %275 ]
  %298 = phi float [ 0.000000e+00, %4 ], [ %638, %275 ]
  %299 = phi float [ 0.000000e+00, %4 ], [ %639, %275 ]
  %300 = phi float [ 0.000000e+00, %4 ], [ %640, %275 ]
  %301 = phi float [ 0.000000e+00, %4 ], [ %641, %275 ]
  %302 = phi float [ 0.000000e+00, %4 ], [ %642, %275 ]
  %303 = phi float [ 0.000000e+00, %4 ], [ %643, %275 ]
  %304 = phi float [ 0.000000e+00, %4 ], [ %644, %275 ]
  %305 = phi float [ 0.000000e+00, %4 ], [ %645, %275 ]
  %306 = phi float [ 0.000000e+00, %4 ], [ %646, %275 ]
  %307 = phi float [ 0.000000e+00, %4 ], [ %647, %275 ]
  %308 = phi float [ 0.000000e+00, %4 ], [ %648, %275 ]
  %309 = phi float [ 0.000000e+00, %4 ], [ %649, %275 ]
  %310 = phi i32 [ 0, %4 ], [ %690, %275 ]
  %311 = icmp ult i32 %310, 2560, !dbg !36
  %312 = add i32 %276, 1, !dbg !36
  %313 = icmp slt i32 %312, 5, !dbg !36
  %314 = select i1 %313, i32 %312, i32 0, !dbg !36
  %315 = shl i32 %314, 13, !dbg !32
  %316 = sext i32 %315 to i64, !dbg !32
  %317 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %316, !dbg !32
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %318 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %316, !dbg !33
  %319 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %274, i32 0, i32 31), !dbg !37
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !37
  %320 = shl i32 %319, 7, !dbg !37
  %321 = and i32 %320, 384, !dbg !37
  %322 = zext nneg i32 %321 to i64, !dbg !37
  %323 = ptrtoint ptr addrspace(3) %317 to i64, !dbg !37
  %324 = lshr exact i64 %323, 4, !dbg !37
  %325 = and i64 %324, 16383, !dbg !37
  %326 = or disjoint i64 %325, 4611686293338849280, !dbg !37
  %327 = add nuw nsw i64 %326, %322, !dbg !37
  %328 = ptrtoint ptr addrspace(3) %318 to i64, !dbg !37
  %329 = lshr exact i64 %328, 4, !dbg !37
  %330 = and i64 %329, 16383, !dbg !37
  %331 = or disjoint i64 %330, 4611686293338849280, !dbg !37
  %332 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %278, float %279, float %280, float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, i64 %327, i64 %331) #3, !dbg !37
  %333 = add nuw nsw i64 %325, 4611686293338849282, !dbg !37
  %334 = add nuw nsw i64 %333, %322, !dbg !37
  %335 = add nuw nsw i64 %330, 4611686293338849282, !dbg !37
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 0, !dbg !37
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 1, !dbg !37
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 2, !dbg !37
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 3, !dbg !37
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 4, !dbg !37
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 5, !dbg !37
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 6, !dbg !37
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 7, !dbg !37
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 8, !dbg !37
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 9, !dbg !37
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 10, !dbg !37
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 11, !dbg !37
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 12, !dbg !37
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 13, !dbg !37
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 14, !dbg !37
  %351 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 15, !dbg !37
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 16, !dbg !37
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 17, !dbg !37
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 18, !dbg !37
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 19, !dbg !37
  %356 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 20, !dbg !37
  %357 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 21, !dbg !37
  %358 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 22, !dbg !37
  %359 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 23, !dbg !37
  %360 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 24, !dbg !37
  %361 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 25, !dbg !37
  %362 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 26, !dbg !37
  %363 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 27, !dbg !37
  %364 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 28, !dbg !37
  %365 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 29, !dbg !37
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 30, !dbg !37
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %332, 31, !dbg !37
  %368 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, float %351, float %352, float %353, float %354, float %355, float %356, float %357, float %358, float %359, float %360, float %361, float %362, float %363, float %364, float %365, float %366, float %367, i64 %334, i64 %335) #3, !dbg !37
  %369 = add nuw nsw i64 %325, 4611686293338849284, !dbg !37
  %370 = add nuw nsw i64 %369, %322, !dbg !37
  %371 = add nuw nsw i64 %330, 4611686293338849284, !dbg !37
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 0, !dbg !37
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 1, !dbg !37
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 2, !dbg !37
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 3, !dbg !37
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 4, !dbg !37
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 5, !dbg !37
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 6, !dbg !37
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 7, !dbg !37
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 8, !dbg !37
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 9, !dbg !37
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 10, !dbg !37
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 11, !dbg !37
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 12, !dbg !37
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 13, !dbg !37
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 14, !dbg !37
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 15, !dbg !37
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 16, !dbg !37
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 17, !dbg !37
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 18, !dbg !37
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 19, !dbg !37
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 20, !dbg !37
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 21, !dbg !37
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 22, !dbg !37
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 23, !dbg !37
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 24, !dbg !37
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 25, !dbg !37
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 26, !dbg !37
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 27, !dbg !37
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 28, !dbg !37
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 29, !dbg !37
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 30, !dbg !37
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 31, !dbg !37
  %404 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388, float %389, float %390, float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, float %399, float %400, float %401, float %402, float %403, i64 %370, i64 %371) #3, !dbg !37
  %405 = add nuw nsw i64 %325, 4611686293338849286, !dbg !37
  %406 = add nuw nsw i64 %405, %322, !dbg !37
  %407 = add nuw nsw i64 %330, 4611686293338849286, !dbg !37
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 0, !dbg !37
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 1, !dbg !37
  %410 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 2, !dbg !37
  %411 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 3, !dbg !37
  %412 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 4, !dbg !37
  %413 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 5, !dbg !37
  %414 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 6, !dbg !37
  %415 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 7, !dbg !37
  %416 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 8, !dbg !37
  %417 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 9, !dbg !37
  %418 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 10, !dbg !37
  %419 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 11, !dbg !37
  %420 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 12, !dbg !37
  %421 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 13, !dbg !37
  %422 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 14, !dbg !37
  %423 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 15, !dbg !37
  %424 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 16, !dbg !37
  %425 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 17, !dbg !37
  %426 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 18, !dbg !37
  %427 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 19, !dbg !37
  %428 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 20, !dbg !37
  %429 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 21, !dbg !37
  %430 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 22, !dbg !37
  %431 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 23, !dbg !37
  %432 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 24, !dbg !37
  %433 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 25, !dbg !37
  %434 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 26, !dbg !37
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 27, !dbg !37
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 28, !dbg !37
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 29, !dbg !37
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 30, !dbg !37
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %404, 31, !dbg !37
  %440 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %408, float %409, float %410, float %411, float %412, float %413, float %414, float %415, float %416, float %417, float %418, float %419, float %420, float %421, float %422, float %423, float %424, float %425, float %426, float %427, float %428, float %429, float %430, float %431, float %432, float %433, float %434, float %435, float %436, float %437, float %438, float %439, i64 %406, i64 %407) #3, !dbg !37
  %441 = add nuw nsw i64 %325, 4611686293338849792, !dbg !37
  %442 = add nuw nsw i64 %441, %322, !dbg !37
  %443 = add nuw nsw i64 %330, 4611686293338849792, !dbg !37
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 0, !dbg !37
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 1, !dbg !37
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 2, !dbg !37
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 3, !dbg !37
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 4, !dbg !37
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 5, !dbg !37
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 6, !dbg !37
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 7, !dbg !37
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 8, !dbg !37
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 9, !dbg !37
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 10, !dbg !37
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 11, !dbg !37
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 12, !dbg !37
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 13, !dbg !37
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 14, !dbg !37
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 15, !dbg !37
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 16, !dbg !37
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 17, !dbg !37
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 18, !dbg !37
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 19, !dbg !37
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 20, !dbg !37
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 21, !dbg !37
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 22, !dbg !37
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 23, !dbg !37
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 24, !dbg !37
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 25, !dbg !37
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 26, !dbg !37
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 27, !dbg !37
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 28, !dbg !37
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 29, !dbg !37
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 30, !dbg !37
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %440, 31, !dbg !37
  %476 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %444, float %445, float %446, float %447, float %448, float %449, float %450, float %451, float %452, float %453, float %454, float %455, float %456, float %457, float %458, float %459, float %460, float %461, float %462, float %463, float %464, float %465, float %466, float %467, float %468, float %469, float %470, float %471, float %472, float %473, float %474, float %475, i64 %442, i64 %443) #3, !dbg !37
  %477 = add nuw nsw i64 %325, 4611686293338849794, !dbg !37
  %478 = add nuw nsw i64 %477, %322, !dbg !37
  %479 = add nuw nsw i64 %330, 4611686293338849794, !dbg !37
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 0, !dbg !37
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 1, !dbg !37
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 2, !dbg !37
  %483 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 3, !dbg !37
  %484 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 4, !dbg !37
  %485 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 5, !dbg !37
  %486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 6, !dbg !37
  %487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 7, !dbg !37
  %488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 8, !dbg !37
  %489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 9, !dbg !37
  %490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 10, !dbg !37
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 11, !dbg !37
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 12, !dbg !37
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 13, !dbg !37
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 14, !dbg !37
  %495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 15, !dbg !37
  %496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 16, !dbg !37
  %497 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 17, !dbg !37
  %498 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 18, !dbg !37
  %499 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 19, !dbg !37
  %500 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 20, !dbg !37
  %501 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 21, !dbg !37
  %502 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 22, !dbg !37
  %503 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 23, !dbg !37
  %504 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 24, !dbg !37
  %505 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 25, !dbg !37
  %506 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 26, !dbg !37
  %507 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 27, !dbg !37
  %508 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 28, !dbg !37
  %509 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 29, !dbg !37
  %510 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 30, !dbg !37
  %511 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %476, 31, !dbg !37
  %512 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %480, float %481, float %482, float %483, float %484, float %485, float %486, float %487, float %488, float %489, float %490, float %491, float %492, float %493, float %494, float %495, float %496, float %497, float %498, float %499, float %500, float %501, float %502, float %503, float %504, float %505, float %506, float %507, float %508, float %509, float %510, float %511, i64 %478, i64 %479) #3, !dbg !37
  %513 = add nuw nsw i64 %325, 4611686293338849796, !dbg !37
  %514 = add nuw nsw i64 %513, %322, !dbg !37
  %515 = add nuw nsw i64 %330, 4611686293338849796, !dbg !37
  %516 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 0, !dbg !37
  %517 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 1, !dbg !37
  %518 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 2, !dbg !37
  %519 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 3, !dbg !37
  %520 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 4, !dbg !37
  %521 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 5, !dbg !37
  %522 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 6, !dbg !37
  %523 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 7, !dbg !37
  %524 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 8, !dbg !37
  %525 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 9, !dbg !37
  %526 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 10, !dbg !37
  %527 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 11, !dbg !37
  %528 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 12, !dbg !37
  %529 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 13, !dbg !37
  %530 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 14, !dbg !37
  %531 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 15, !dbg !37
  %532 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 16, !dbg !37
  %533 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 17, !dbg !37
  %534 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 18, !dbg !37
  %535 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 19, !dbg !37
  %536 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 20, !dbg !37
  %537 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 21, !dbg !37
  %538 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 22, !dbg !37
  %539 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 23, !dbg !37
  %540 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 24, !dbg !37
  %541 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 25, !dbg !37
  %542 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 26, !dbg !37
  %543 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 27, !dbg !37
  %544 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 28, !dbg !37
  %545 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 29, !dbg !37
  %546 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 30, !dbg !37
  %547 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %512, 31, !dbg !37
  %548 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %516, float %517, float %518, float %519, float %520, float %521, float %522, float %523, float %524, float %525, float %526, float %527, float %528, float %529, float %530, float %531, float %532, float %533, float %534, float %535, float %536, float %537, float %538, float %539, float %540, float %541, float %542, float %543, float %544, float %545, float %546, float %547, i64 %514, i64 %515) #3, !dbg !37
  %549 = add nuw nsw i64 %325, 4611686293338849798, !dbg !37
  %550 = add nuw nsw i64 %549, %322, !dbg !37
  %551 = add nuw nsw i64 %330, 4611686293338849798, !dbg !37
  %552 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 0, !dbg !37
  %553 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 1, !dbg !37
  %554 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 2, !dbg !37
  %555 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 3, !dbg !37
  %556 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 4, !dbg !37
  %557 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 5, !dbg !37
  %558 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 6, !dbg !37
  %559 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 7, !dbg !37
  %560 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 8, !dbg !37
  %561 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 9, !dbg !37
  %562 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 10, !dbg !37
  %563 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 11, !dbg !37
  %564 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 12, !dbg !37
  %565 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 13, !dbg !37
  %566 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 14, !dbg !37
  %567 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 15, !dbg !37
  %568 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 16, !dbg !37
  %569 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 17, !dbg !37
  %570 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 18, !dbg !37
  %571 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 19, !dbg !37
  %572 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 20, !dbg !37
  %573 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 21, !dbg !37
  %574 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 22, !dbg !37
  %575 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 23, !dbg !37
  %576 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 24, !dbg !37
  %577 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 25, !dbg !37
  %578 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 26, !dbg !37
  %579 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 27, !dbg !37
  %580 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 28, !dbg !37
  %581 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 29, !dbg !37
  %582 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 30, !dbg !37
  %583 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %548, 31, !dbg !37
  %584 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %552, float %553, float %554, float %555, float %556, float %557, float %558, float %559, float %560, float %561, float %562, float %563, float %564, float %565, float %566, float %567, float %568, float %569, float %570, float %571, float %572, float %573, float %574, float %575, float %576, float %577, float %578, float %579, float %580, float %581, float %582, float %583, i64 %550, i64 %551) #3, !dbg !37
  %585 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 0, !dbg !37
  %586 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 1, !dbg !37
  %587 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 2, !dbg !37
  %588 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 3, !dbg !37
  %589 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 4, !dbg !37
  %590 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 5, !dbg !37
  %591 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 6, !dbg !37
  %592 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 7, !dbg !37
  %593 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 8, !dbg !37
  %594 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 9, !dbg !37
  %595 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 10, !dbg !37
  %596 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 11, !dbg !37
  %597 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 12, !dbg !37
  %598 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 13, !dbg !37
  %599 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 14, !dbg !37
  %600 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 15, !dbg !37
  %601 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 16, !dbg !37
  %602 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 17, !dbg !37
  %603 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 18, !dbg !37
  %604 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 19, !dbg !37
  %605 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 20, !dbg !37
  %606 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 21, !dbg !37
  %607 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 22, !dbg !37
  %608 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 23, !dbg !37
  %609 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 24, !dbg !37
  %610 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 25, !dbg !37
  %611 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 26, !dbg !37
  %612 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 27, !dbg !37
  %613 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 28, !dbg !37
  %614 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 29, !dbg !37
  %615 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 30, !dbg !37
  %616 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %584, 31, !dbg !37
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !37
  %617 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %585, float %586, float %587, float %588, float %589, float %590, float %591, float %592, float %593, float %594, float %595, float %596, float %597, float %598, float %599, float %600, float %601, float %602, float %603, float %604, float %605, float %606, float %607, float %608, float %609, float %610, float %611, float %612, float %613, float %614, float %615, float %616, ptr addrspace(3) %317, i32 128, i32 1, i32 0, i32 0, ptr addrspace(3) %318, i32 1, i32 128, i32 0, i32 0) #3, !dbg !37
  %618 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 0, !dbg !37
  %619 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 1, !dbg !37
  %620 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 2, !dbg !37
  %621 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 3, !dbg !37
  %622 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 4, !dbg !37
  %623 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 5, !dbg !37
  %624 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 6, !dbg !37
  %625 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 7, !dbg !37
  %626 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 8, !dbg !37
  %627 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 9, !dbg !37
  %628 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 10, !dbg !37
  %629 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 11, !dbg !37
  %630 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 12, !dbg !37
  %631 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 13, !dbg !37
  %632 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 14, !dbg !37
  %633 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 15, !dbg !37
  %634 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 16, !dbg !37
  %635 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 17, !dbg !37
  %636 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 18, !dbg !37
  %637 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 19, !dbg !37
  %638 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 20, !dbg !37
  %639 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 21, !dbg !37
  %640 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 22, !dbg !37
  %641 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 23, !dbg !37
  %642 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 24, !dbg !37
  %643 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 25, !dbg !37
  %644 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 26, !dbg !37
  %645 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 27, !dbg !37
  %646 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 28, !dbg !37
  %647 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 29, !dbg !37
  %648 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 30, !dbg !37
  %649 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %617, 31, !dbg !37
  %650 = getelementptr i8, ptr addrspace(1) %.pn129274, i64 256, !dbg !34
  %651 = getelementptr i8, ptr addrspace(1) %.pn113275, i64 256, !dbg !34
  %652 = getelementptr i8, ptr addrspace(1) %.pn97276, i64 256, !dbg !34
  %653 = getelementptr i8, ptr addrspace(1) %.pn81277, i64 256, !dbg !34
  %654 = getelementptr i8, ptr addrspace(1) %.pn65278, i64 256, !dbg !34
  %655 = getelementptr i8, ptr addrspace(1) %.pn49279, i64 256, !dbg !34
  %656 = getelementptr i8, ptr addrspace(1) %.pn33280, i64 256, !dbg !34
  %657 = getelementptr i8, ptr addrspace(1) %.pn17281, i64 256, !dbg !34
  %658 = getelementptr i8, ptr addrspace(1) %.pn257282, i64 256, !dbg !35
  %659 = getelementptr i8, ptr addrspace(1) %.pn241283, i64 256, !dbg !35
  %660 = getelementptr i8, ptr addrspace(1) %.pn225284, i64 256, !dbg !35
  %661 = getelementptr i8, ptr addrspace(1) %.pn209285, i64 256, !dbg !35
  %662 = getelementptr i8, ptr addrspace(1) %.pn193286, i64 256, !dbg !35
  %663 = getelementptr i8, ptr addrspace(1) %.pn177287, i64 256, !dbg !35
  %664 = getelementptr i8, ptr addrspace(1) %.pn161288, i64 256, !dbg !35
  %665 = getelementptr i8, ptr addrspace(1) %.pn145289, i64 256, !dbg !35
  %666 = add i32 %277, 1, !dbg !36
  %667 = icmp slt i32 %666, 5, !dbg !36
  %668 = select i1 %667, i32 %666, i32 0, !dbg !36
  %669 = shl i32 %668, 13, !dbg !32
  %670 = sext i32 %669 to i64, !dbg !32
  %671 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %670, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %672 = getelementptr i16, ptr addrspace(3) %671, i64 %133, !dbg !32
  %673 = getelementptr i16, ptr addrspace(3) %671, i64 %138, !dbg !32
  %674 = getelementptr i16, ptr addrspace(3) %671, i64 %143, !dbg !32
  %675 = getelementptr i16, ptr addrspace(3) %671, i64 %148, !dbg !32
  %676 = getelementptr i16, ptr addrspace(3) %671, i64 %153, !dbg !32
  %677 = getelementptr i16, ptr addrspace(3) %671, i64 %158, !dbg !32
  %678 = getelementptr i16, ptr addrspace(3) %671, i64 %163, !dbg !32
  %679 = getelementptr i16, ptr addrspace(3) %671, i64 %168, !dbg !32
  %680 = select i1 %311, i32 16, i32 0, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %672, ptr addrspace(1) %650, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %673, ptr addrspace(1) %651, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %674, ptr addrspace(1) %652, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %675, ptr addrspace(1) %653, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %676, ptr addrspace(1) %654, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %677, ptr addrspace(1) %655, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %678, ptr addrspace(1) %656, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %679, ptr addrspace(1) %657, i32 %680, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %681 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 81920), i64 %670, !dbg !33
  %682 = getelementptr i16, ptr addrspace(3) %681, i64 %133, !dbg !33
  %683 = getelementptr i16, ptr addrspace(3) %681, i64 %138, !dbg !33
  %684 = getelementptr i16, ptr addrspace(3) %681, i64 %143, !dbg !33
  %685 = getelementptr i16, ptr addrspace(3) %681, i64 %148, !dbg !33
  %686 = getelementptr i16, ptr addrspace(3) %681, i64 %153, !dbg !33
  %687 = getelementptr i16, ptr addrspace(3) %681, i64 %158, !dbg !33
  %688 = getelementptr i16, ptr addrspace(3) %681, i64 %163, !dbg !33
  %689 = getelementptr i16, ptr addrspace(3) %681, i64 %168, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %682, ptr addrspace(1) %658, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %683, ptr addrspace(1) %659, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %684, ptr addrspace(1) %660, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %685, ptr addrspace(1) %661, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %686, ptr addrspace(1) %662, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %687, ptr addrspace(1) %663, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %688, ptr addrspace(1) %664, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %689, ptr addrspace(1) %665, i32 %680, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %690 = add nuw nsw i32 %310, 128, !dbg !36
  %691 = icmp ult i32 %310, 2944, !dbg !36
  br i1 %691, label %275, label %692, !dbg !36

692:                                              ; preds = %275
  %693 = shl i32 %15, 3, !dbg !19
  %694 = and i32 %693, 56, !dbg !19
  %695 = or disjoint i32 %34, %694, !dbg !22
  %696 = lshr i32 %15, 3, !dbg !19
  %697 = and i32 %696, 15, !dbg !19
  %698 = or disjoint i32 %697, %14, !dbg !20
  %699 = or disjoint i32 %698, 48, !dbg !20
  %700 = or disjoint i32 %698, 32, !dbg !20
  %701 = or disjoint i32 %698, 16, !dbg !20
  %702 = and i32 %15, 31, !dbg !19
  %703 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %618, float %619, float %620, float %621, float %622, float %623, float %624, float %625, float %626, float %627, float %628, float %629, float %630, float %631, float %632, float %633, float %634, float %635, float %636, float %637, float %638, float %639, float %640, float %641, float %642, float %643, float %644, float %645, float %646, float %647, float %648, float %649) #3, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 0, !dbg !36
  %705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 1, !dbg !36
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 2, !dbg !36
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 3, !dbg !36
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 4, !dbg !36
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 5, !dbg !36
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 6, !dbg !36
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 7, !dbg !36
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 8, !dbg !36
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 9, !dbg !36
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 10, !dbg !36
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 11, !dbg !36
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 12, !dbg !36
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 13, !dbg !36
  %718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 14, !dbg !36
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 15, !dbg !36
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 16, !dbg !36
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 17, !dbg !36
  %722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 18, !dbg !36
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 19, !dbg !36
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 20, !dbg !36
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 21, !dbg !36
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 22, !dbg !36
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 23, !dbg !36
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 24, !dbg !36
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 25, !dbg !36
  %730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 26, !dbg !36
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 27, !dbg !36
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 28, !dbg !36
  %733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 29, !dbg !36
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 30, !dbg !36
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %703, 31, !dbg !36
  %736 = and i32 %16, 3, !dbg !36
  %737 = lshr i32 %702, 2, !dbg !36
  %738 = shl i32 %15, 1, !dbg !36
  %739 = and i32 %738, 6, !dbg !36
  %740 = shl nuw nsw i32 %736, 4, !dbg !36
  %741 = or disjoint i32 %740, %737, !dbg !36
  %742 = mul nuw nsw i32 %741, 72, !dbg !36
  %743 = or disjoint i32 %742, %739, !dbg !36
  %744 = zext nneg i32 %743 to i64, !dbg !36
  %745 = getelementptr float, ptr addrspace(3) @global_smem, i64 %744, !dbg !36
  %746 = insertelement <2 x float> poison, float %704, i64 0, !dbg !36
  %747 = insertelement <2 x float> %746, float %705, i64 1, !dbg !36
  store <2 x float> %747, ptr addrspace(3) %745, align 8, !dbg !36
  %748 = add nuw nsw i32 %742, 576, !dbg !36
  %749 = or disjoint i32 %748, %739, !dbg !36
  %750 = zext nneg i32 %749 to i64, !dbg !36
  %751 = getelementptr float, ptr addrspace(3) @global_smem, i64 %750, !dbg !36
  %752 = insertelement <2 x float> poison, float %706, i64 0, !dbg !36
  %753 = insertelement <2 x float> %752, float %707, i64 1, !dbg !36
  store <2 x float> %753, ptr addrspace(3) %751, align 8, !dbg !36
  %754 = or disjoint i32 %739, 8, !dbg !36
  %755 = add nuw nsw i32 %742, %754, !dbg !36
  %756 = zext nneg i32 %755 to i64, !dbg !36
  %757 = getelementptr float, ptr addrspace(3) @global_smem, i64 %756, !dbg !36
  %758 = insertelement <2 x float> poison, float %708, i64 0, !dbg !36
  %759 = insertelement <2 x float> %758, float %709, i64 1, !dbg !36
  store <2 x float> %759, ptr addrspace(3) %757, align 8, !dbg !36
  %760 = add nuw nsw i32 %748, %754, !dbg !36
  %761 = zext nneg i32 %760 to i64, !dbg !36
  %762 = getelementptr float, ptr addrspace(3) @global_smem, i64 %761, !dbg !36
  %763 = insertelement <2 x float> poison, float %710, i64 0, !dbg !36
  %764 = insertelement <2 x float> %763, float %711, i64 1, !dbg !36
  store <2 x float> %764, ptr addrspace(3) %762, align 8, !dbg !36
  %765 = or disjoint i32 %739, 16, !dbg !36
  %766 = add nuw nsw i32 %742, %765, !dbg !36
  %767 = zext nneg i32 %766 to i64, !dbg !36
  %768 = getelementptr float, ptr addrspace(3) @global_smem, i64 %767, !dbg !36
  %769 = insertelement <2 x float> poison, float %712, i64 0, !dbg !36
  %770 = insertelement <2 x float> %769, float %713, i64 1, !dbg !36
  store <2 x float> %770, ptr addrspace(3) %768, align 8, !dbg !36
  %771 = add nuw nsw i32 %748, %765, !dbg !36
  %772 = zext nneg i32 %771 to i64, !dbg !36
  %773 = getelementptr float, ptr addrspace(3) @global_smem, i64 %772, !dbg !36
  %774 = insertelement <2 x float> poison, float %714, i64 0, !dbg !36
  %775 = insertelement <2 x float> %774, float %715, i64 1, !dbg !36
  store <2 x float> %775, ptr addrspace(3) %773, align 8, !dbg !36
  %776 = or disjoint i32 %739, 24, !dbg !36
  %777 = add nuw nsw i32 %742, %776, !dbg !36
  %778 = zext nneg i32 %777 to i64, !dbg !36
  %779 = getelementptr float, ptr addrspace(3) @global_smem, i64 %778, !dbg !36
  %780 = insertelement <2 x float> poison, float %716, i64 0, !dbg !36
  %781 = insertelement <2 x float> %780, float %717, i64 1, !dbg !36
  store <2 x float> %781, ptr addrspace(3) %779, align 8, !dbg !36
  %782 = add nuw nsw i32 %748, %776, !dbg !36
  %783 = zext nneg i32 %782 to i64, !dbg !36
  %784 = getelementptr float, ptr addrspace(3) @global_smem, i64 %783, !dbg !36
  %785 = insertelement <2 x float> poison, float %718, i64 0, !dbg !36
  %786 = insertelement <2 x float> %785, float %719, i64 1, !dbg !36
  store <2 x float> %786, ptr addrspace(3) %784, align 8, !dbg !36
  %787 = or disjoint i32 %739, 32, !dbg !36
  %788 = add nuw nsw i32 %742, %787, !dbg !36
  %789 = zext nneg i32 %788 to i64, !dbg !36
  %790 = getelementptr float, ptr addrspace(3) @global_smem, i64 %789, !dbg !36
  %791 = insertelement <2 x float> poison, float %720, i64 0, !dbg !36
  %792 = insertelement <2 x float> %791, float %721, i64 1, !dbg !36
  store <2 x float> %792, ptr addrspace(3) %790, align 8, !dbg !36
  %793 = add nuw nsw i32 %748, %787, !dbg !36
  %794 = zext nneg i32 %793 to i64, !dbg !36
  %795 = getelementptr float, ptr addrspace(3) @global_smem, i64 %794, !dbg !36
  %796 = insertelement <2 x float> poison, float %722, i64 0, !dbg !36
  %797 = insertelement <2 x float> %796, float %723, i64 1, !dbg !36
  store <2 x float> %797, ptr addrspace(3) %795, align 8, !dbg !36
  %798 = or disjoint i32 %739, 40, !dbg !36
  %799 = add nuw nsw i32 %742, %798, !dbg !36
  %800 = zext nneg i32 %799 to i64, !dbg !36
  %801 = getelementptr float, ptr addrspace(3) @global_smem, i64 %800, !dbg !36
  %802 = insertelement <2 x float> poison, float %724, i64 0, !dbg !36
  %803 = insertelement <2 x float> %802, float %725, i64 1, !dbg !36
  store <2 x float> %803, ptr addrspace(3) %801, align 8, !dbg !36
  %804 = add nuw nsw i32 %748, %798, !dbg !36
  %805 = zext nneg i32 %804 to i64, !dbg !36
  %806 = getelementptr float, ptr addrspace(3) @global_smem, i64 %805, !dbg !36
  %807 = insertelement <2 x float> poison, float %726, i64 0, !dbg !36
  %808 = insertelement <2 x float> %807, float %727, i64 1, !dbg !36
  store <2 x float> %808, ptr addrspace(3) %806, align 8, !dbg !36
  %809 = or disjoint i32 %739, 48, !dbg !36
  %810 = add nuw nsw i32 %742, %809, !dbg !36
  %811 = zext nneg i32 %810 to i64, !dbg !36
  %812 = getelementptr float, ptr addrspace(3) @global_smem, i64 %811, !dbg !36
  %813 = insertelement <2 x float> poison, float %728, i64 0, !dbg !36
  %814 = insertelement <2 x float> %813, float %729, i64 1, !dbg !36
  store <2 x float> %814, ptr addrspace(3) %812, align 8, !dbg !36
  %815 = add nuw nsw i32 %748, %809, !dbg !36
  %816 = zext nneg i32 %815 to i64, !dbg !36
  %817 = getelementptr float, ptr addrspace(3) @global_smem, i64 %816, !dbg !36
  %818 = insertelement <2 x float> poison, float %730, i64 0, !dbg !36
  %819 = insertelement <2 x float> %818, float %731, i64 1, !dbg !36
  store <2 x float> %819, ptr addrspace(3) %817, align 8, !dbg !36
  %820 = or disjoint i32 %739, 56, !dbg !36
  %821 = add nuw nsw i32 %742, %820, !dbg !36
  %822 = zext nneg i32 %821 to i64, !dbg !36
  %823 = getelementptr float, ptr addrspace(3) @global_smem, i64 %822, !dbg !36
  %824 = insertelement <2 x float> poison, float %732, i64 0, !dbg !36
  %825 = insertelement <2 x float> %824, float %733, i64 1, !dbg !36
  store <2 x float> %825, ptr addrspace(3) %823, align 8, !dbg !36
  %826 = add nuw nsw i32 %748, %820, !dbg !36
  %827 = zext nneg i32 %826 to i64, !dbg !36
  %828 = getelementptr float, ptr addrspace(3) @global_smem, i64 %827, !dbg !36
  %829 = insertelement <2 x float> poison, float %734, i64 0, !dbg !36
  %830 = insertelement <2 x float> %829, float %735, i64 1, !dbg !36
  store <2 x float> %830, ptr addrspace(3) %828, align 8, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %831 = lshr i32 %702, 3, !dbg !36
  %832 = shl nuw nsw i32 %736, 2, !dbg !36
  %833 = or disjoint i32 %832, %831, !dbg !36
  %834 = mul nuw nsw i32 %833, 72, !dbg !36
  %835 = add nuw nsw i32 %834, %694, !dbg !36
  %836 = zext nneg i32 %835 to i64, !dbg !36
  %837 = getelementptr float, ptr addrspace(3) @global_smem, i64 %836, !dbg !36
  %838 = load float, ptr addrspace(3) %837, align 32, !dbg !36
  %839 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 4, !dbg !36
  %840 = load float, ptr addrspace(3) %839, align 4, !dbg !36
  %841 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 8, !dbg !36
  %842 = load float, ptr addrspace(3) %841, align 8, !dbg !36
  %843 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 12, !dbg !36
  %844 = load float, ptr addrspace(3) %843, align 4, !dbg !36
  %845 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 16, !dbg !36
  %846 = load float, ptr addrspace(3) %845, align 16, !dbg !36
  %847 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 20, !dbg !36
  %848 = load float, ptr addrspace(3) %847, align 4, !dbg !36
  %849 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 24, !dbg !36
  %850 = load float, ptr addrspace(3) %849, align 8, !dbg !36
  %851 = getelementptr inbounds i8, ptr addrspace(3) %837, i64 28, !dbg !36
  %852 = load float, ptr addrspace(3) %851, align 4, !dbg !36
  %853 = getelementptr i8, ptr addrspace(3) %837, i64 4608, !dbg !36
  %854 = load float, ptr addrspace(3) %853, align 32, !dbg !36
  %855 = getelementptr i8, ptr addrspace(3) %837, i64 4612, !dbg !36
  %856 = load float, ptr addrspace(3) %855, align 4, !dbg !36
  %857 = getelementptr i8, ptr addrspace(3) %837, i64 4616, !dbg !36
  %858 = load float, ptr addrspace(3) %857, align 8, !dbg !36
  %859 = getelementptr i8, ptr addrspace(3) %837, i64 4620, !dbg !36
  %860 = load float, ptr addrspace(3) %859, align 4, !dbg !36
  %861 = getelementptr i8, ptr addrspace(3) %837, i64 4624, !dbg !36
  %862 = load float, ptr addrspace(3) %861, align 16, !dbg !36
  %863 = getelementptr i8, ptr addrspace(3) %837, i64 4628, !dbg !36
  %864 = load float, ptr addrspace(3) %863, align 4, !dbg !36
  %865 = getelementptr i8, ptr addrspace(3) %837, i64 4632, !dbg !36
  %866 = load float, ptr addrspace(3) %865, align 8, !dbg !36
  %867 = getelementptr i8, ptr addrspace(3) %837, i64 4636, !dbg !36
  %868 = load float, ptr addrspace(3) %867, align 4, !dbg !36
  %869 = getelementptr i8, ptr addrspace(3) %837, i64 9216, !dbg !36
  %870 = load float, ptr addrspace(3) %869, align 32, !dbg !36
  %871 = getelementptr i8, ptr addrspace(3) %837, i64 9220, !dbg !36
  %872 = load float, ptr addrspace(3) %871, align 4, !dbg !36
  %873 = getelementptr i8, ptr addrspace(3) %837, i64 9224, !dbg !36
  %874 = load float, ptr addrspace(3) %873, align 8, !dbg !36
  %875 = getelementptr i8, ptr addrspace(3) %837, i64 9228, !dbg !36
  %876 = load float, ptr addrspace(3) %875, align 4, !dbg !36
  %877 = getelementptr i8, ptr addrspace(3) %837, i64 9232, !dbg !36
  %878 = load float, ptr addrspace(3) %877, align 16, !dbg !36
  %879 = getelementptr i8, ptr addrspace(3) %837, i64 9236, !dbg !36
  %880 = load float, ptr addrspace(3) %879, align 4, !dbg !36
  %881 = getelementptr i8, ptr addrspace(3) %837, i64 9240, !dbg !36
  %882 = load float, ptr addrspace(3) %881, align 8, !dbg !36
  %883 = getelementptr i8, ptr addrspace(3) %837, i64 9244, !dbg !36
  %884 = load float, ptr addrspace(3) %883, align 4, !dbg !36
  %885 = getelementptr i8, ptr addrspace(3) %837, i64 13824, !dbg !36
  %886 = load float, ptr addrspace(3) %885, align 32, !dbg !36
  %887 = getelementptr i8, ptr addrspace(3) %837, i64 13828, !dbg !36
  %888 = load float, ptr addrspace(3) %887, align 4, !dbg !36
  %889 = getelementptr i8, ptr addrspace(3) %837, i64 13832, !dbg !36
  %890 = load float, ptr addrspace(3) %889, align 8, !dbg !36
  %891 = getelementptr i8, ptr addrspace(3) %837, i64 13836, !dbg !36
  %892 = load float, ptr addrspace(3) %891, align 4, !dbg !36
  %893 = getelementptr i8, ptr addrspace(3) %837, i64 13840, !dbg !36
  %894 = load float, ptr addrspace(3) %893, align 16, !dbg !36
  %895 = getelementptr i8, ptr addrspace(3) %837, i64 13844, !dbg !36
  %896 = load float, ptr addrspace(3) %895, align 4, !dbg !36
  %897 = getelementptr i8, ptr addrspace(3) %837, i64 13848, !dbg !36
  %898 = load float, ptr addrspace(3) %897, align 8, !dbg !36
  %899 = getelementptr i8, ptr addrspace(3) %837, i64 13852, !dbg !36
  %900 = load float, ptr addrspace(3) %899, align 4, !dbg !36
  %901 = icmp slt i32 %698, 4096, !dbg !38
  %902 = icmp slt i32 %701, 4096, !dbg !38
  %903 = icmp slt i32 %700, 4096, !dbg !38
  %904 = icmp slt i32 %699, 4096, !dbg !38
  %905 = icmp slt i32 %695, 64, !dbg !39
  %906 = and i1 %905, %901, !dbg !40
  %907 = and i1 %905, %902, !dbg !40
  %908 = and i1 %905, %903, !dbg !40
  %909 = and i1 %905, %904, !dbg !40
  %910 = shl i32 %698, 6, !dbg !41
  %911 = shl i32 %701, 6, !dbg !41
  %912 = shl i32 %700, 6, !dbg !41
  %913 = shl i32 %699, 6, !dbg !41
  %914 = add i32 %910, %695, !dbg !42
  %915 = add i32 %911, %695, !dbg !42
  %916 = add i32 %912, %695, !dbg !42
  %917 = add i32 %913, %695, !dbg !42
  %918 = sext i32 %695 to i64, !dbg !43
  %919 = getelementptr i16, ptr addrspace(1) %0, i64 %918, !dbg !43
  %920 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %919, i1 %906) #3, !dbg !44
  %921 = extractvalue { i32, i32, i32, i32 } %920, 0, !dbg !44
  %922 = extractvalue { i32, i32, i32, i32 } %920, 1, !dbg !44
  %923 = extractvalue { i32, i32, i32, i32 } %920, 2, !dbg !44
  %924 = extractvalue { i32, i32, i32, i32 } %920, 3, !dbg !44
  %925 = trunc i32 %921 to i16, !dbg !44
  %extelt.offset = lshr i32 %921, 16, !dbg !44
  %926 = trunc nuw i32 %extelt.offset to i16, !dbg !44
  %927 = trunc i32 %922 to i16, !dbg !44
  %extelt.offset258 = lshr i32 %922, 16, !dbg !44
  %928 = trunc nuw i32 %extelt.offset258 to i16, !dbg !44
  %929 = trunc i32 %923 to i16, !dbg !44
  %extelt.offset259 = lshr i32 %923, 16, !dbg !44
  %930 = trunc nuw i32 %extelt.offset259 to i16, !dbg !44
  %931 = trunc i32 %924 to i16, !dbg !44
  %extelt.offset260 = lshr i32 %924, 16, !dbg !44
  %932 = trunc nuw i32 %extelt.offset260 to i16, !dbg !44
  %933 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %919, i1 %907) #3, !dbg !44
  %934 = extractvalue { i32, i32, i32, i32 } %933, 0, !dbg !44
  %935 = extractvalue { i32, i32, i32, i32 } %933, 1, !dbg !44
  %936 = extractvalue { i32, i32, i32, i32 } %933, 2, !dbg !44
  %937 = extractvalue { i32, i32, i32, i32 } %933, 3, !dbg !44
  %938 = trunc i32 %934 to i16, !dbg !44
  %extelt.offset261 = lshr i32 %934, 16, !dbg !44
  %939 = trunc nuw i32 %extelt.offset261 to i16, !dbg !44
  %940 = trunc i32 %935 to i16, !dbg !44
  %extelt.offset262 = lshr i32 %935, 16, !dbg !44
  %941 = trunc nuw i32 %extelt.offset262 to i16, !dbg !44
  %942 = trunc i32 %936 to i16, !dbg !44
  %extelt.offset263 = lshr i32 %936, 16, !dbg !44
  %943 = trunc nuw i32 %extelt.offset263 to i16, !dbg !44
  %944 = trunc i32 %937 to i16, !dbg !44
  %extelt.offset264 = lshr i32 %937, 16, !dbg !44
  %945 = trunc nuw i32 %extelt.offset264 to i16, !dbg !44
  %946 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %919, i1 %908) #3, !dbg !44
  %947 = extractvalue { i32, i32, i32, i32 } %946, 0, !dbg !44
  %948 = extractvalue { i32, i32, i32, i32 } %946, 1, !dbg !44
  %949 = extractvalue { i32, i32, i32, i32 } %946, 2, !dbg !44
  %950 = extractvalue { i32, i32, i32, i32 } %946, 3, !dbg !44
  %951 = trunc i32 %947 to i16, !dbg !44
  %extelt.offset265 = lshr i32 %947, 16, !dbg !44
  %952 = trunc nuw i32 %extelt.offset265 to i16, !dbg !44
  %953 = trunc i32 %948 to i16, !dbg !44
  %extelt.offset266 = lshr i32 %948, 16, !dbg !44
  %954 = trunc nuw i32 %extelt.offset266 to i16, !dbg !44
  %955 = trunc i32 %949 to i16, !dbg !44
  %extelt.offset267 = lshr i32 %949, 16, !dbg !44
  %956 = trunc nuw i32 %extelt.offset267 to i16, !dbg !44
  %957 = trunc i32 %950 to i16, !dbg !44
  %extelt.offset268 = lshr i32 %950, 16, !dbg !44
  %958 = trunc nuw i32 %extelt.offset268 to i16, !dbg !44
  %959 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %919, i1 %909) #3, !dbg !44
  %960 = extractvalue { i32, i32, i32, i32 } %959, 0, !dbg !44
  %961 = extractvalue { i32, i32, i32, i32 } %959, 1, !dbg !44
  %962 = extractvalue { i32, i32, i32, i32 } %959, 2, !dbg !44
  %963 = extractvalue { i32, i32, i32, i32 } %959, 3, !dbg !44
  %964 = trunc i32 %960 to i16, !dbg !44
  %extelt.offset269 = lshr i32 %960, 16, !dbg !44
  %965 = trunc nuw i32 %extelt.offset269 to i16, !dbg !44
  %966 = trunc i32 %961 to i16, !dbg !44
  %extelt.offset270 = lshr i32 %961, 16, !dbg !44
  %967 = trunc nuw i32 %extelt.offset270 to i16, !dbg !44
  %968 = trunc i32 %962 to i16, !dbg !44
  %extelt.offset271 = lshr i32 %962, 16, !dbg !44
  %969 = trunc nuw i32 %extelt.offset271 to i16, !dbg !44
  %970 = trunc i32 %963 to i16, !dbg !44
  %extelt.offset272 = lshr i32 %963, 16, !dbg !44
  %971 = trunc nuw i32 %extelt.offset272 to i16, !dbg !44
  %972 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %925) #3, !dbg !45
  %973 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %926) #3, !dbg !45
  %974 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %927) #3, !dbg !45
  %975 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %928) #3, !dbg !45
  %976 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %929) #3, !dbg !45
  %977 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %930) #3, !dbg !45
  %978 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %931) #3, !dbg !45
  %979 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %932) #3, !dbg !45
  %980 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %938) #3, !dbg !45
  %981 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %939) #3, !dbg !45
  %982 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %940) #3, !dbg !45
  %983 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %941) #3, !dbg !45
  %984 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %942) #3, !dbg !45
  %985 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %943) #3, !dbg !45
  %986 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %944) #3, !dbg !45
  %987 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %945) #3, !dbg !45
  %988 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %951) #3, !dbg !45
  %989 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %952) #3, !dbg !45
  %990 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %953) #3, !dbg !45
  %991 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %954) #3, !dbg !45
  %992 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %955) #3, !dbg !45
  %993 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %956) #3, !dbg !45
  %994 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %957) #3, !dbg !45
  %995 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %958) #3, !dbg !45
  %996 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %964) #3, !dbg !45
  %997 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %965) #3, !dbg !45
  %998 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %966) #3, !dbg !45
  %999 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %967) #3, !dbg !45
  %1000 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %968) #3, !dbg !45
  %1001 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %969) #3, !dbg !45
  %1002 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %970) #3, !dbg !45
  %1003 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %971) #3, !dbg !45
  %1004 = fadd float %838, %972, !dbg !46
  %1005 = fadd float %840, %973, !dbg !46
  %1006 = fadd float %842, %974, !dbg !46
  %1007 = fadd float %844, %975, !dbg !46
  %1008 = fadd float %846, %976, !dbg !46
  %1009 = fadd float %848, %977, !dbg !46
  %1010 = fadd float %850, %978, !dbg !46
  %1011 = fadd float %852, %979, !dbg !46
  %1012 = fadd float %854, %980, !dbg !46
  %1013 = fadd float %856, %981, !dbg !46
  %1014 = fadd float %858, %982, !dbg !46
  %1015 = fadd float %860, %983, !dbg !46
  %1016 = fadd float %862, %984, !dbg !46
  %1017 = fadd float %864, %985, !dbg !46
  %1018 = fadd float %866, %986, !dbg !46
  %1019 = fadd float %868, %987, !dbg !46
  %1020 = fadd float %870, %988, !dbg !46
  %1021 = fadd float %872, %989, !dbg !46
  %1022 = fadd float %874, %990, !dbg !46
  %1023 = fadd float %876, %991, !dbg !46
  %1024 = fadd float %878, %992, !dbg !46
  %1025 = fadd float %880, %993, !dbg !46
  %1026 = fadd float %882, %994, !dbg !46
  %1027 = fadd float %884, %995, !dbg !46
  %1028 = fadd float %886, %996, !dbg !46
  %1029 = fadd float %888, %997, !dbg !46
  %1030 = fadd float %890, %998, !dbg !46
  %1031 = fadd float %892, %999, !dbg !46
  %1032 = fadd float %894, %1000, !dbg !46
  %1033 = fadd float %896, %1001, !dbg !46
  %1034 = fadd float %898, %1002, !dbg !46
  %1035 = fadd float %900, %1003, !dbg !46
  %1036 = sext i32 %914 to i64, !dbg !47
  %1037 = getelementptr i16, ptr addrspace(1) %3, i64 %1036, !dbg !47
  %1038 = sext i32 %915 to i64, !dbg !47
  %1039 = getelementptr i16, ptr addrspace(1) %3, i64 %1038, !dbg !47
  %1040 = sext i32 %916 to i64, !dbg !47
  %1041 = getelementptr i16, ptr addrspace(1) %3, i64 %1040, !dbg !47
  %1042 = sext i32 %917 to i64, !dbg !47
  %1043 = getelementptr i16, ptr addrspace(1) %3, i64 %1042, !dbg !47
  %1044 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1004) #3, !dbg !48
  %1045 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1005) #3, !dbg !48
  %1046 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1006) #3, !dbg !48
  %1047 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1007) #3, !dbg !48
  %1048 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1008) #3, !dbg !48
  %1049 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1009) #3, !dbg !48
  %1050 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1010) #3, !dbg !48
  %1051 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1011) #3, !dbg !48
  %1052 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1012) #3, !dbg !48
  %1053 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1013) #3, !dbg !48
  %1054 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1014) #3, !dbg !48
  %1055 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1015) #3, !dbg !48
  %1056 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1016) #3, !dbg !48
  %1057 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1017) #3, !dbg !48
  %1058 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1018) #3, !dbg !48
  %1059 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1019) #3, !dbg !48
  %1060 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1020) #3, !dbg !48
  %1061 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1021) #3, !dbg !48
  %1062 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1022) #3, !dbg !48
  %1063 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1023) #3, !dbg !48
  %1064 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1024) #3, !dbg !48
  %1065 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1025) #3, !dbg !48
  %1066 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1026) #3, !dbg !48
  %1067 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1027) #3, !dbg !48
  %1068 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1028) #3, !dbg !48
  %1069 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1029) #3, !dbg !48
  %1070 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1030) #3, !dbg !48
  %1071 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1031) #3, !dbg !48
  %1072 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1032) #3, !dbg !48
  %1073 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1033) #3, !dbg !48
  %1074 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1034) #3, !dbg !48
  %1075 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1035) #3, !dbg !48
  %1076 = insertelement <2 x i16> poison, i16 %1044, i64 0, !dbg !48
  %1077 = insertelement <2 x i16> %1076, i16 %1045, i64 1, !dbg !48
  %1078 = bitcast <2 x i16> %1077 to i32, !dbg !48
  %1079 = insertelement <2 x i16> poison, i16 %1046, i64 0, !dbg !48
  %1080 = insertelement <2 x i16> %1079, i16 %1047, i64 1, !dbg !48
  %1081 = bitcast <2 x i16> %1080 to i32, !dbg !48
  %1082 = insertelement <2 x i16> poison, i16 %1048, i64 0, !dbg !48
  %1083 = insertelement <2 x i16> %1082, i16 %1049, i64 1, !dbg !48
  %1084 = bitcast <2 x i16> %1083 to i32, !dbg !48
  %1085 = insertelement <2 x i16> poison, i16 %1050, i64 0, !dbg !48
  %1086 = insertelement <2 x i16> %1085, i16 %1051, i64 1, !dbg !48
  %1087 = bitcast <2 x i16> %1086 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1078, i32 %1081, i32 %1084, i32 %1087, ptr addrspace(1) %1037, i1 %906) #3, !dbg !48
  %1088 = insertelement <2 x i16> poison, i16 %1052, i64 0, !dbg !48
  %1089 = insertelement <2 x i16> %1088, i16 %1053, i64 1, !dbg !48
  %1090 = bitcast <2 x i16> %1089 to i32, !dbg !48
  %1091 = insertelement <2 x i16> poison, i16 %1054, i64 0, !dbg !48
  %1092 = insertelement <2 x i16> %1091, i16 %1055, i64 1, !dbg !48
  %1093 = bitcast <2 x i16> %1092 to i32, !dbg !48
  %1094 = insertelement <2 x i16> poison, i16 %1056, i64 0, !dbg !48
  %1095 = insertelement <2 x i16> %1094, i16 %1057, i64 1, !dbg !48
  %1096 = bitcast <2 x i16> %1095 to i32, !dbg !48
  %1097 = insertelement <2 x i16> poison, i16 %1058, i64 0, !dbg !48
  %1098 = insertelement <2 x i16> %1097, i16 %1059, i64 1, !dbg !48
  %1099 = bitcast <2 x i16> %1098 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1090, i32 %1093, i32 %1096, i32 %1099, ptr addrspace(1) %1039, i1 %907) #3, !dbg !48
  %1100 = insertelement <2 x i16> poison, i16 %1060, i64 0, !dbg !48
  %1101 = insertelement <2 x i16> %1100, i16 %1061, i64 1, !dbg !48
  %1102 = bitcast <2 x i16> %1101 to i32, !dbg !48
  %1103 = insertelement <2 x i16> poison, i16 %1062, i64 0, !dbg !48
  %1104 = insertelement <2 x i16> %1103, i16 %1063, i64 1, !dbg !48
  %1105 = bitcast <2 x i16> %1104 to i32, !dbg !48
  %1106 = insertelement <2 x i16> poison, i16 %1064, i64 0, !dbg !48
  %1107 = insertelement <2 x i16> %1106, i16 %1065, i64 1, !dbg !48
  %1108 = bitcast <2 x i16> %1107 to i32, !dbg !48
  %1109 = insertelement <2 x i16> poison, i16 %1066, i64 0, !dbg !48
  %1110 = insertelement <2 x i16> %1109, i16 %1067, i64 1, !dbg !48
  %1111 = bitcast <2 x i16> %1110 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1102, i32 %1105, i32 %1108, i32 %1111, ptr addrspace(1) %1041, i1 %908) #3, !dbg !48
  %1112 = insertelement <2 x i16> poison, i16 %1068, i64 0, !dbg !48
  %1113 = insertelement <2 x i16> %1112, i16 %1069, i64 1, !dbg !48
  %1114 = bitcast <2 x i16> %1113 to i32, !dbg !48
  %1115 = insertelement <2 x i16> poison, i16 %1070, i64 0, !dbg !48
  %1116 = insertelement <2 x i16> %1115, i16 %1071, i64 1, !dbg !48
  %1117 = bitcast <2 x i16> %1116 to i32, !dbg !48
  %1118 = insertelement <2 x i16> poison, i16 %1072, i64 0, !dbg !48
  %1119 = insertelement <2 x i16> %1118, i16 %1073, i64 1, !dbg !48
  %1120 = bitcast <2 x i16> %1119 to i32, !dbg !48
  %1121 = insertelement <2 x i16> poison, i16 %1074, i64 0, !dbg !48
  %1122 = insertelement <2 x i16> %1121, i16 %1075, i64 1, !dbg !48
  %1123 = bitcast <2 x i16> %1122 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1114, i32 %1117, i32 %1120, i32 %1123, ptr addrspace(1) %1043, i1 %909) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpfos6fpk35te6lilqybnnlvmjiarfzppssrru6huphujukdiu77.py", directory: "/opt/inductor_cache/pf")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 17, type: !8, scopeLine: 17, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 41, column: 24, scope: !7)
!11 = !DILocation(line: 47, column: 22, scope: !7)
!12 = !DILocation(line: 48, column: 41, scope: !7)
!13 = !DILocation(line: 48, column: 30, scope: !7)
!14 = !DILocation(line: 48, column: 50, scope: !7)
!15 = !DILocation(line: 49, column: 40, scope: !7)
!16 = !DILocation(line: 49, column: 34, scope: !7)
!17 = !DILocation(line: 50, column: 30, scope: !7)
!18 = !DILocation(line: 52, column: 17, scope: !7)
!19 = !DILocation(line: 52, column: 40, scope: !7)
!20 = !DILocation(line: 52, column: 27, scope: !7)
!21 = !DILocation(line: 53, column: 17, scope: !7)
!22 = !DILocation(line: 53, column: 27, scope: !7)
!23 = !DILocation(line: 55, column: 52, scope: !7)
!24 = !DILocation(line: 59, column: 52, scope: !7)
!25 = !DILocation(line: 63, column: 28, scope: !7)
!26 = !DILocation(line: 63, column: 43, scope: !7)
!27 = !DILocation(line: 63, column: 40, scope: !7)
!28 = !DILocation(line: 63, column: 13, scope: !7)
!29 = !DILocation(line: 64, column: 54, scope: !7)
!30 = !DILocation(line: 64, column: 39, scope: !7)
!31 = !DILocation(line: 64, column: 13, scope: !7)
!32 = !DILocation(line: 69, column: 24, scope: !7)
!33 = !DILocation(line: 70, column: 24, scope: !7)
!34 = !DILocation(line: 77, column: 13, scope: !7)
!35 = !DILocation(line: 78, column: 13, scope: !7)
!36 = !DILocation(line: 67, column: 25, scope: !7)
!37 = !DILocation(line: 76, column: 25, scope: !7)
!38 = !DILocation(line: 85, column: 20, scope: !7)
!39 = !DILocation(line: 85, column: 34, scope: !7)
!40 = !DILocation(line: 85, column: 26, scope: !7)
!41 = !DILocation(line: 88, column: 25, scope: !7)
!42 = !DILocation(line: 88, column: 22, scope: !7)
!43 = !DILocation(line: 89, column: 30, scope: !7)
!44 = !DILocation(line: 89, column: 66, scope: !7)
!45 = !DILocation(line: 89, column: 105, scope: !7)
!46 = !DILocation(line: 90, column: 17, scope: !7)
!47 = !DILocation(line: 91, column: 25, scope: !7)
!48 = !DILocation(line: 91, column: 68, scope: !7)
!49 = !DILocation(line: 91, column: 4, scope: !7)
