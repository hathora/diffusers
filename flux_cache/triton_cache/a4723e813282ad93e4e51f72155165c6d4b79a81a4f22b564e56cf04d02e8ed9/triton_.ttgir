#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<512xbf16, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3072> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg6 : i32 -> tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<512xi32, #blocked> loc(#loc6)
    %7 = arith.remsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc7)
    %8 = arith.divsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc8)
    %9 = arith.divsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc9)
    %10 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc10)
    %12 = tt.load %11, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %13 = arith.extf %12 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc12)
    %14 = arith.muli %8, %cst_1 : tensor<512xi32, #blocked> loc(#loc13)
    %15 = arith.addi %7, %14 : tensor<512xi32, #blocked> loc(#loc14)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %18 = tt.load %17, %6 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = tt.addptr %19, %15 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %21 = tt.load %20, %6 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc19)
    %23 = tt.addptr %22, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %24 = tt.load %23, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc20)
    %25 = arith.extf %24 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc21)
    %26 = arith.mulf %13, %18 : tensor<512xf32, #blocked> loc(#loc22)
    %27 = arith.remsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc23)
    %28 = arith.extsi %27 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc24)
    %29 = arith.cmpi slt, %28, %cst_4 : tensor<512xi64, #blocked> loc(#loc24)
    %30 = arith.divsi %7, %cst_3 : tensor<512xi32, #blocked> loc(#loc25)
    %31 = arith.muli %30, %cst_3 : tensor<512xi32, #blocked> loc(#loc26)
    %32 = arith.addi %31, %cst_5 : tensor<512xi32, #blocked> loc(#loc27)
    %33 = arith.muli %9, %cst_1 : tensor<512xi32, #blocked> loc(#loc28)
    %34 = arith.addi %32, %33 : tensor<512xi32, #blocked> loc(#loc29)
    %35 = tt.addptr %10, %34 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc30)
    %36 = arith.andi %29, %6 : tensor<512xi1, #blocked> loc(#loc31)
    %37 = tt.load %35, %36, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc32)
    %38 = arith.extf %37 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc33)
    %39 = arith.subf %cst, %38 : tensor<512xf32, #blocked> loc(#loc34)
    %40 = arith.cmpi sge, %28, %cst_4 : tensor<512xi64, #blocked> loc(#loc35)
    %41 = arith.addi %31, %33 : tensor<512xi32, #blocked> loc(#loc36)
    %42 = tt.addptr %10, %41 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc37)
    %43 = arith.andi %40, %6 : tensor<512xi1, #blocked> loc(#loc38)
    %44 = tt.load %42, %43, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc39)
    %45 = arith.extf %44 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc40)
    %46 = arith.select %29, %39, %45 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc62)
    %47 = arith.mulf %46, %21 : tensor<512xf32, #blocked> loc(#loc43)
    %48 = arith.addf %26, %47 : tensor<512xf32, #blocked> loc(#loc44)
    %49 = arith.mulf %25, %18 : tensor<512xf32, #blocked> loc(#loc45)
    %50 = tt.addptr %22, %34 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc46)
    %51 = tt.load %50, %36, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc47)
    %52 = arith.extf %51 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc48)
    %53 = arith.subf %cst, %52 : tensor<512xf32, #blocked> loc(#loc49)
    %54 = tt.addptr %22, %41 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc50)
    %55 = tt.load %54, %43, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc51)
    %56 = arith.extf %55 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc52)
    %57 = arith.select %29, %53, %56 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc63)
    %58 = arith.mulf %57, %21 : tensor<512xf32, #blocked> loc(#loc55)
    %59 = arith.addf %49, %58 : tensor<512xf32, #blocked> loc(#loc56)
    %60 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc57)
    %61 = tt.addptr %60, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc57)
    %62 = arith.truncf %48 : tensor<512xf32, #blocked> to tensor<512xbf16, #blocked> loc(#loc58)
    tt.store %61, %62, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc58)
    %63 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc59)
    %64 = tt.addptr %63, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc59)
    %65 = arith.truncf %59 : tensor<512xf32, #blocked> to tensor<512xbf16, #blocked> loc(#loc60)
    tt.store %64, %65, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":19:28)
#loc3 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":19:33)
#loc4 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":20:36)
#loc5 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":20:23)
#loc6 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":21:21)
#loc7 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":23:18)
#loc8 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":24:20)
#loc9 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":25:20)
#loc10 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":26:30)
#loc11 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":26:35)
#loc12 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":26:45)
#loc13 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":27:40)
#loc14 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":27:36)
#loc15 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":27:30)
#loc16 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":27:46)
#loc17 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":28:31)
#loc18 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":28:47)
#loc19 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":29:31)
#loc20 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":29:36)
#loc21 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":29:46)
#loc22 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":31:18)
#loc23 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":32:16)
#loc24 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":36:18)
#loc25 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:44)
#loc26 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:38)
#loc27 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:35)
#loc28 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:55)
#loc29 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:51)
#loc30 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:30)
#loc31 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:68)
#loc32 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:61)
#loc33 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":37:119)
#loc34 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":38:13)
#loc35 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":41:20)
#loc36 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":44:48)
#loc37 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":44:31)
#loc38 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":44:66)
#loc39 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":44:58)
#loc40 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":44:117)
#loc41 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":45:34)
#loc42 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":40:34)
#loc43 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":47:20)
#loc44 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":48:19)
#loc45 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":51:20)
#loc46 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":52:31)
#loc47 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":52:62)
#loc48 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":52:120)
#loc49 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":53:13)
#loc50 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":56:31)
#loc51 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":56:58)
#loc52 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":56:117)
#loc53 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":57:34)
#loc54 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":55:34)
#loc55 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":59:20)
#loc56 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":60:20)
#loc57 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":62:25)
#loc58 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":62:37)
#loc59 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":63:25)
#loc60 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":63:37)
#loc61 = loc("/opt/inductor_cache/k3/ck3lmz5tppgjvum6q7bphfoqurfnkuhzoumdc6fqndkt6asgtzdn.py":63:4)
#loc62 = loc(fused[#loc41, #loc42])
#loc63 = loc(fused[#loc53, #loc54])
