; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %5
  %6 = sdiv i32 %.frozen, 384, !dbg !11
  %7 = shl nsw i32 %6, 3, !dbg !12
  %8 = sub nsw i32 32, %7, !dbg !13
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 8), !dbg !14
  %10 = srem i32 %5, %9, !dbg !15
  %11 = add nsw i32 %7, %10, !dbg !16
  %12 = mul i32 %6, 384
  %.decomposed = sub i32 %.frozen, %12
  %13 = sdiv i32 %.decomposed, %9, !dbg !17
  %14 = shl i32 %11, 7, !dbg !18
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %16 = lshr i32 %15, 5, !dbg !19
  %17 = lshr i32 %15, 2, !dbg !19
  %18 = and i32 %17, 31, !dbg !19
  %19 = or disjoint i32 %18, 32, !dbg !19
  %20 = or disjoint i32 %18, 64, !dbg !19
  %21 = or disjoint i32 %18, 96, !dbg !19
  %22 = or disjoint i32 %14, %18, !dbg !20
  %23 = or disjoint i32 %14, %19, !dbg !20
  %24 = or disjoint i32 %14, %20, !dbg !20
  %25 = or disjoint i32 %14, %21, !dbg !20
  %26 = shl nsw i32 %13, 6, !dbg !21
  %27 = shl i32 %15, 3, !dbg !22
  %28 = and i32 %27, 24, !dbg !22
  %29 = or disjoint i32 %26, %18, !dbg !23
  %30 = or disjoint i32 %26, %19, !dbg !23
  %31 = srem i32 %22, 4096, !dbg !24
  %32 = srem i32 %23, 4096, !dbg !24
  %33 = srem i32 %24, 4096, !dbg !24
  %34 = srem i32 %25, 4096, !dbg !24
  %35 = srem i32 %29, 3072, !dbg !25
  %36 = srem i32 %30, 3072, !dbg !25
  %37 = mul nsw i32 %31, 3072, !dbg !26
  %38 = mul nsw i32 %32, 3072, !dbg !26
  %39 = mul nsw i32 %33, 3072, !dbg !26
  %40 = mul nsw i32 %34, 3072, !dbg !26
  %41 = or disjoint i32 %37, %28, !dbg !27
  %42 = or disjoint i32 %38, %28, !dbg !27
  %43 = or disjoint i32 %39, %28, !dbg !27
  %44 = or disjoint i32 %40, %28, !dbg !27
  %45 = sext i32 %41 to i64, !dbg !28
  %46 = getelementptr i16, ptr addrspace(1) %1, i64 %45, !dbg !28
  %47 = sext i32 %42 to i64, !dbg !28
  %48 = getelementptr i16, ptr addrspace(1) %1, i64 %47, !dbg !28
  %49 = sext i32 %43 to i64, !dbg !28
  %50 = getelementptr i16, ptr addrspace(1) %1, i64 %49, !dbg !28
  %51 = sext i32 %44 to i64, !dbg !28
  %52 = getelementptr i16, ptr addrspace(1) %1, i64 %51, !dbg !28
  %53 = mul nsw i32 %35, 3072, !dbg !29
  %54 = mul nsw i32 %36, 3072, !dbg !29
  %55 = or disjoint i32 %53, %28, !dbg !30
  %56 = or disjoint i32 %54, %28, !dbg !30
  %57 = sext i32 %55 to i64, !dbg !31
  %58 = getelementptr i16, ptr addrspace(1) %2, i64 %57, !dbg !31
  %59 = sext i32 %56 to i64, !dbg !31
  %60 = getelementptr i16, ptr addrspace(1) %2, i64 %59, !dbg !31
  %61 = shl nuw nsw i32 %18, 5, !dbg !32
  %62 = xor i32 %27, %15, !dbg !32
  %63 = and i32 %62, 24, !dbg !32
  %64 = or disjoint i32 %61, %63, !dbg !32
  %65 = zext nneg i32 %64 to i64, !dbg !32
  %66 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %65, !dbg !32
  %67 = shl nuw nsw i32 %19, 5, !dbg !32
  %68 = or disjoint i32 %67, %63, !dbg !32
  %69 = zext nneg i32 %68 to i64, !dbg !32
  %70 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %69, !dbg !32
  %71 = shl nuw nsw i32 %20, 5, !dbg !32
  %72 = or disjoint i32 %71, %63, !dbg !32
  %73 = zext nneg i32 %72 to i64, !dbg !32
  %74 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %73, !dbg !32
  %75 = shl nuw nsw i32 %21, 5, !dbg !32
  %76 = or disjoint i32 %75, %63, !dbg !32
  %77 = zext nneg i32 %76 to i64, !dbg !32
  %78 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %77, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %66, ptr addrspace(1) %46, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %70, ptr addrspace(1) %48, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %74, ptr addrspace(1) %50, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %78, ptr addrspace(1) %52, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %79 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %65, !dbg !33
  %80 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %69, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %79, ptr addrspace(1) %58, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %80, ptr addrspace(1) %60, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %81 = getelementptr i8, ptr addrspace(1) %46, i64 64, !dbg !34
  %82 = getelementptr i8, ptr addrspace(1) %48, i64 64, !dbg !34
  %83 = getelementptr i8, ptr addrspace(1) %50, i64 64, !dbg !34
  %84 = getelementptr i8, ptr addrspace(1) %52, i64 64, !dbg !34
  %85 = getelementptr i8, ptr addrspace(1) %58, i64 64, !dbg !35
  %86 = getelementptr i8, ptr addrspace(1) %60, i64 64, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %87 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %65, !dbg !32
  %88 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %69, !dbg !32
  %89 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %73, !dbg !32
  %90 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %77, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %87, ptr addrspace(1) %81, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %88, ptr addrspace(1) %82, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %89, ptr addrspace(1) %83, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %90, ptr addrspace(1) %84, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %91 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 28672), i64 %65, !dbg !33
  %92 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 28672), i64 %69, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %91, ptr addrspace(1) %85, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %92, ptr addrspace(1) %86, i32 16, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %93 = and i32 %16, 134217724
  br label %94, !dbg !36

94:                                               ; preds = %4, %94
  %95 = phi i32 [ -1, %4 ], [ %165, %94 ]
  %96 = phi i32 [ 1, %4 ], [ %397, %94 ]
  %.pn80134 = phi ptr addrspace(1) [ %86, %4 ], [ %394, %94 ]
  %.pn96133 = phi ptr addrspace(1) [ %85, %4 ], [ %393, %94 ]
  %.pn16132 = phi ptr addrspace(1) [ %84, %4 ], [ %392, %94 ]
  %.pn32131 = phi ptr addrspace(1) [ %83, %4 ], [ %391, %94 ]
  %.pn48130 = phi ptr addrspace(1) [ %82, %4 ], [ %390, %94 ]
  %.pn64129 = phi ptr addrspace(1) [ %81, %4 ], [ %389, %94 ]
  %97 = phi float [ 0.000000e+00, %4 ], [ %325, %94 ]
  %98 = phi float [ 0.000000e+00, %4 ], [ %326, %94 ]
  %99 = phi float [ 0.000000e+00, %4 ], [ %327, %94 ]
  %100 = phi float [ 0.000000e+00, %4 ], [ %328, %94 ]
  %101 = phi float [ 0.000000e+00, %4 ], [ %329, %94 ]
  %102 = phi float [ 0.000000e+00, %4 ], [ %330, %94 ]
  %103 = phi float [ 0.000000e+00, %4 ], [ %331, %94 ]
  %104 = phi float [ 0.000000e+00, %4 ], [ %332, %94 ]
  %105 = phi float [ 0.000000e+00, %4 ], [ %333, %94 ]
  %106 = phi float [ 0.000000e+00, %4 ], [ %334, %94 ]
  %107 = phi float [ 0.000000e+00, %4 ], [ %335, %94 ]
  %108 = phi float [ 0.000000e+00, %4 ], [ %336, %94 ]
  %109 = phi float [ 0.000000e+00, %4 ], [ %337, %94 ]
  %110 = phi float [ 0.000000e+00, %4 ], [ %338, %94 ]
  %111 = phi float [ 0.000000e+00, %4 ], [ %339, %94 ]
  %112 = phi float [ 0.000000e+00, %4 ], [ %340, %94 ]
  %113 = phi float [ 0.000000e+00, %4 ], [ %341, %94 ]
  %114 = phi float [ 0.000000e+00, %4 ], [ %342, %94 ]
  %115 = phi float [ 0.000000e+00, %4 ], [ %343, %94 ]
  %116 = phi float [ 0.000000e+00, %4 ], [ %344, %94 ]
  %117 = phi float [ 0.000000e+00, %4 ], [ %345, %94 ]
  %118 = phi float [ 0.000000e+00, %4 ], [ %346, %94 ]
  %119 = phi float [ 0.000000e+00, %4 ], [ %347, %94 ]
  %120 = phi float [ 0.000000e+00, %4 ], [ %348, %94 ]
  %121 = phi float [ 0.000000e+00, %4 ], [ %349, %94 ]
  %122 = phi float [ 0.000000e+00, %4 ], [ %350, %94 ]
  %123 = phi float [ 0.000000e+00, %4 ], [ %351, %94 ]
  %124 = phi float [ 0.000000e+00, %4 ], [ %352, %94 ]
  %125 = phi float [ 0.000000e+00, %4 ], [ %353, %94 ]
  %126 = phi float [ 0.000000e+00, %4 ], [ %354, %94 ]
  %127 = phi float [ 0.000000e+00, %4 ], [ %355, %94 ]
  %128 = phi float [ 0.000000e+00, %4 ], [ %356, %94 ]
  %129 = phi float [ 0.000000e+00, %4 ], [ %357, %94 ]
  %130 = phi float [ 0.000000e+00, %4 ], [ %358, %94 ]
  %131 = phi float [ 0.000000e+00, %4 ], [ %359, %94 ]
  %132 = phi float [ 0.000000e+00, %4 ], [ %360, %94 ]
  %133 = phi float [ 0.000000e+00, %4 ], [ %361, %94 ]
  %134 = phi float [ 0.000000e+00, %4 ], [ %362, %94 ]
  %135 = phi float [ 0.000000e+00, %4 ], [ %363, %94 ]
  %136 = phi float [ 0.000000e+00, %4 ], [ %364, %94 ]
  %137 = phi float [ 0.000000e+00, %4 ], [ %365, %94 ]
  %138 = phi float [ 0.000000e+00, %4 ], [ %366, %94 ]
  %139 = phi float [ 0.000000e+00, %4 ], [ %367, %94 ]
  %140 = phi float [ 0.000000e+00, %4 ], [ %368, %94 ]
  %141 = phi float [ 0.000000e+00, %4 ], [ %369, %94 ]
  %142 = phi float [ 0.000000e+00, %4 ], [ %370, %94 ]
  %143 = phi float [ 0.000000e+00, %4 ], [ %371, %94 ]
  %144 = phi float [ 0.000000e+00, %4 ], [ %372, %94 ]
  %145 = phi float [ 0.000000e+00, %4 ], [ %373, %94 ]
  %146 = phi float [ 0.000000e+00, %4 ], [ %374, %94 ]
  %147 = phi float [ 0.000000e+00, %4 ], [ %375, %94 ]
  %148 = phi float [ 0.000000e+00, %4 ], [ %376, %94 ]
  %149 = phi float [ 0.000000e+00, %4 ], [ %377, %94 ]
  %150 = phi float [ 0.000000e+00, %4 ], [ %378, %94 ]
  %151 = phi float [ 0.000000e+00, %4 ], [ %379, %94 ]
  %152 = phi float [ 0.000000e+00, %4 ], [ %380, %94 ]
  %153 = phi float [ 0.000000e+00, %4 ], [ %381, %94 ]
  %154 = phi float [ 0.000000e+00, %4 ], [ %382, %94 ]
  %155 = phi float [ 0.000000e+00, %4 ], [ %383, %94 ]
  %156 = phi float [ 0.000000e+00, %4 ], [ %384, %94 ]
  %157 = phi float [ 0.000000e+00, %4 ], [ %385, %94 ]
  %158 = phi float [ 0.000000e+00, %4 ], [ %386, %94 ]
  %159 = phi float [ 0.000000e+00, %4 ], [ %387, %94 ]
  %160 = phi float [ 0.000000e+00, %4 ], [ %388, %94 ]
  %161 = phi i32 [ 0, %4 ], [ %411, %94 ]
  %162 = icmp ult i32 %161, 3008, !dbg !36
  %163 = add i32 %95, 1, !dbg !36
  %164 = icmp slt i32 %163, 3, !dbg !36
  %165 = select i1 %164, i32 %163, i32 0, !dbg !36
  %166 = shl i32 %165, 12, !dbg !32
  %167 = sext i32 %166 to i64, !dbg !32
  %168 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %167, !dbg !32
  tail call void asm sideeffect "cp.async.wait_group 0x2;", ""() #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %169 = shl i32 %165, 11, !dbg !33
  %170 = sext i32 %169 to i64, !dbg !33
  %171 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %170, !dbg !33
  %172 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %93, i32 0, i32 31), !dbg !37
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !37
  %173 = shl i32 %172, 6, !dbg !37
  %174 = and i32 %173, 192, !dbg !37
  %175 = zext nneg i32 %174 to i64, !dbg !37
  %176 = ptrtoint ptr addrspace(3) %168 to i64, !dbg !37
  %177 = lshr exact i64 %176, 4, !dbg !37
  %178 = and i64 %177, 16383, !dbg !37
  %179 = or disjoint i64 %178, -9223371899382267904, !dbg !37
  %180 = add nuw nsw i64 %179, %175, !dbg !37
  %181 = ptrtoint ptr addrspace(3) %171 to i64, !dbg !37
  %182 = lshr exact i64 %181, 4, !dbg !37
  %183 = and i64 %182, 16383, !dbg !37
  %184 = or disjoint i64 %183, -9223371899399045120, !dbg !37
  %185 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %97, float %98, float %99, float %100, float %101, float %102, float %103, float %104, float %105, float %106, float %107, float %108, float %109, float %110, float %111, float %112, float %113, float %114, float %115, float %116, float %117, float %118, float %119, float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, i64 %180, i64 %184) #3, !dbg !37
  %186 = add nuw nsw i64 %178, -9223371899382267902, !dbg !37
  %187 = add nuw nsw i64 %186, %175, !dbg !37
  %188 = add nuw nsw i64 %183, -9223371899399045118, !dbg !37
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 0, !dbg !37
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 1, !dbg !37
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 2, !dbg !37
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 3, !dbg !37
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 4, !dbg !37
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 5, !dbg !37
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 6, !dbg !37
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 7, !dbg !37
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 8, !dbg !37
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 9, !dbg !37
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 10, !dbg !37
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 11, !dbg !37
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 12, !dbg !37
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 13, !dbg !37
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 14, !dbg !37
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 15, !dbg !37
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 16, !dbg !37
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 17, !dbg !37
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 18, !dbg !37
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 19, !dbg !37
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 20, !dbg !37
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 21, !dbg !37
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 22, !dbg !37
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 23, !dbg !37
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 24, !dbg !37
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 25, !dbg !37
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 26, !dbg !37
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 27, !dbg !37
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 28, !dbg !37
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 29, !dbg !37
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 30, !dbg !37
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %185, 31, !dbg !37
  %221 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, i64 %187, i64 %188) #3, !dbg !37
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 0, !dbg !37
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 1, !dbg !37
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 2, !dbg !37
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 3, !dbg !37
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 4, !dbg !37
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 5, !dbg !37
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 6, !dbg !37
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 7, !dbg !37
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 8, !dbg !37
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 9, !dbg !37
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 10, !dbg !37
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 11, !dbg !37
  %234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 12, !dbg !37
  %235 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 13, !dbg !37
  %236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 14, !dbg !37
  %237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 15, !dbg !37
  %238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 16, !dbg !37
  %239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 17, !dbg !37
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 18, !dbg !37
  %241 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 19, !dbg !37
  %242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 20, !dbg !37
  %243 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 21, !dbg !37
  %244 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 22, !dbg !37
  %245 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 23, !dbg !37
  %246 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 24, !dbg !37
  %247 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 25, !dbg !37
  %248 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 26, !dbg !37
  %249 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 27, !dbg !37
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 28, !dbg !37
  %251 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 29, !dbg !37
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 30, !dbg !37
  %253 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %221, 31, !dbg !37
  %254 = add nuw nsw i64 %178, -9223371899382267648, !dbg !37
  %255 = add nuw nsw i64 %254, %175, !dbg !37
  %256 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, i64 %255, i64 %184) #3, !dbg !37
  %257 = add nuw nsw i64 %178, -9223371899382267646, !dbg !37
  %258 = add nuw nsw i64 %257, %175, !dbg !37
  %259 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 0, !dbg !37
  %260 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 1, !dbg !37
  %261 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 2, !dbg !37
  %262 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 3, !dbg !37
  %263 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 4, !dbg !37
  %264 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 5, !dbg !37
  %265 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 6, !dbg !37
  %266 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 7, !dbg !37
  %267 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 8, !dbg !37
  %268 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 9, !dbg !37
  %269 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 10, !dbg !37
  %270 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 11, !dbg !37
  %271 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 12, !dbg !37
  %272 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 13, !dbg !37
  %273 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 14, !dbg !37
  %274 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 15, !dbg !37
  %275 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 16, !dbg !37
  %276 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 17, !dbg !37
  %277 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 18, !dbg !37
  %278 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 19, !dbg !37
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 20, !dbg !37
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 21, !dbg !37
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 22, !dbg !37
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 23, !dbg !37
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 24, !dbg !37
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 25, !dbg !37
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 26, !dbg !37
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 27, !dbg !37
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 28, !dbg !37
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 29, !dbg !37
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 30, !dbg !37
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %256, 31, !dbg !37
  %291 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %259, float %260, float %261, float %262, float %263, float %264, float %265, float %266, float %267, float %268, float %269, float %270, float %271, float %272, float %273, float %274, float %275, float %276, float %277, float %278, float %279, float %280, float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, i64 %258, i64 %188) #3, !dbg !37
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 0, !dbg !37
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 1, !dbg !37
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 2, !dbg !37
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 3, !dbg !37
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 4, !dbg !37
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 5, !dbg !37
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 6, !dbg !37
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 7, !dbg !37
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 8, !dbg !37
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 9, !dbg !37
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 10, !dbg !37
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 11, !dbg !37
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 12, !dbg !37
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 13, !dbg !37
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 14, !dbg !37
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 15, !dbg !37
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 16, !dbg !37
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 17, !dbg !37
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 18, !dbg !37
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 19, !dbg !37
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 20, !dbg !37
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 21, !dbg !37
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 22, !dbg !37
  %315 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 23, !dbg !37
  %316 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 24, !dbg !37
  %317 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 25, !dbg !37
  %318 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 26, !dbg !37
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 27, !dbg !37
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 28, !dbg !37
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 29, !dbg !37
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 30, !dbg !37
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 31, !dbg !37
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !37
  %324 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71,$72,$73\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73"(float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233, float %234, float %235, float %236, float %237, float %238, float %239, float %240, float %241, float %242, float %243, float %244, float %245, float %246, float %247, float %248, float %249, float %250, float %251, float %252, float %253, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, float %310, float %311, float %312, float %313, float %314, float %315, float %316, float %317, float %318, float %319, float %320, float %321, float %322, float %323, ptr addrspace(3) %168, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %171, i32 1, i32 32, i32 0, i32 0) #3, !dbg !37
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 0, !dbg !37
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 1, !dbg !37
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 2, !dbg !37
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 3, !dbg !37
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 4, !dbg !37
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 5, !dbg !37
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 6, !dbg !37
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 7, !dbg !37
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 8, !dbg !37
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 9, !dbg !37
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 10, !dbg !37
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 11, !dbg !37
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 12, !dbg !37
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 13, !dbg !37
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 14, !dbg !37
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 15, !dbg !37
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 16, !dbg !37
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 17, !dbg !37
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 18, !dbg !37
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 19, !dbg !37
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 20, !dbg !37
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 21, !dbg !37
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 22, !dbg !37
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 23, !dbg !37
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 24, !dbg !37
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 25, !dbg !37
  %351 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 26, !dbg !37
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 27, !dbg !37
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 28, !dbg !37
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 29, !dbg !37
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 30, !dbg !37
  %356 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 31, !dbg !37
  %357 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 32, !dbg !37
  %358 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 33, !dbg !37
  %359 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 34, !dbg !37
  %360 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 35, !dbg !37
  %361 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 36, !dbg !37
  %362 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 37, !dbg !37
  %363 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 38, !dbg !37
  %364 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 39, !dbg !37
  %365 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 40, !dbg !37
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 41, !dbg !37
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 42, !dbg !37
  %368 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 43, !dbg !37
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 44, !dbg !37
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 45, !dbg !37
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 46, !dbg !37
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 47, !dbg !37
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 48, !dbg !37
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 49, !dbg !37
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 50, !dbg !37
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 51, !dbg !37
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 52, !dbg !37
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 53, !dbg !37
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 54, !dbg !37
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 55, !dbg !37
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 56, !dbg !37
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 57, !dbg !37
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 58, !dbg !37
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 59, !dbg !37
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 60, !dbg !37
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 61, !dbg !37
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 62, !dbg !37
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %324, 63, !dbg !37
  %389 = getelementptr i8, ptr addrspace(1) %.pn64129, i64 64, !dbg !34
  %390 = getelementptr i8, ptr addrspace(1) %.pn48130, i64 64, !dbg !34
  %391 = getelementptr i8, ptr addrspace(1) %.pn32131, i64 64, !dbg !34
  %392 = getelementptr i8, ptr addrspace(1) %.pn16132, i64 64, !dbg !34
  %393 = getelementptr i8, ptr addrspace(1) %.pn96133, i64 64, !dbg !35
  %394 = getelementptr i8, ptr addrspace(1) %.pn80134, i64 64, !dbg !35
  %395 = add i32 %96, 1, !dbg !36
  %396 = icmp slt i32 %395, 3, !dbg !36
  %397 = select i1 %396, i32 %395, i32 0, !dbg !36
  %398 = shl i32 %397, 12, !dbg !32
  %399 = sext i32 %398 to i64, !dbg !32
  %400 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %399, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %401 = getelementptr i16, ptr addrspace(3) %400, i64 %65, !dbg !32
  %402 = getelementptr i16, ptr addrspace(3) %400, i64 %69, !dbg !32
  %403 = getelementptr i16, ptr addrspace(3) %400, i64 %73, !dbg !32
  %404 = getelementptr i16, ptr addrspace(3) %400, i64 %77, !dbg !32
  %405 = select i1 %162, i32 16, i32 0, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %401, ptr addrspace(1) %389, i32 %405, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %402, ptr addrspace(1) %390, i32 %405, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %403, ptr addrspace(1) %391, i32 %405, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %404, ptr addrspace(1) %392, i32 %405, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %406 = shl i32 %397, 11, !dbg !33
  %407 = sext i32 %406 to i64, !dbg !33
  %408 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %407, !dbg !33
  %409 = getelementptr i16, ptr addrspace(3) %408, i64 %65, !dbg !33
  %410 = getelementptr i16, ptr addrspace(3) %408, i64 %69, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %409, ptr addrspace(1) %393, i32 %405, i1 true) #3, !dbg !33
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %410, ptr addrspace(1) %394, i32 %405, i1 true) #3, !dbg !33
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !33
  %411 = add nuw nsw i32 %161, 32, !dbg !36
  %412 = icmp ult i32 %161, 3040, !dbg !36
  br i1 %412, label %94, label %413, !dbg !36

413:                                              ; preds = %94
  %414 = and i32 %27, 56, !dbg !22
  %415 = or disjoint i32 %414, %26, !dbg !23
  %416 = and i32 %15, 31, !dbg !19
  %417 = lshr i32 %15, 3, !dbg !19
  %418 = and i32 %417, 7, !dbg !19
  %419 = lshr i32 %15, 3, !dbg !19
  %420 = and i32 %419, 8, !dbg !19
  %421 = or disjoint i32 %418, %420, !dbg !19
  %422 = or disjoint i32 %421, %14, !dbg !20
  %423 = or disjoint i32 %422, 112, !dbg !20
  %424 = or disjoint i32 %422, 96, !dbg !20
  %425 = or disjoint i32 %422, 80, !dbg !20
  %426 = or disjoint i32 %422, 64, !dbg !20
  %427 = or disjoint i32 %422, 48, !dbg !20
  %428 = or disjoint i32 %422, 32, !dbg !20
  %429 = or disjoint i32 %422, 16, !dbg !20
  %430 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"(float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, float %351, float %352, float %353, float %354, float %355, float %356, float %357, float %358, float %359, float %360, float %361, float %362, float %363, float %364, float %365, float %366, float %367, float %368, float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388) #3, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %431 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 0, !dbg !36
  %432 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 1, !dbg !36
  %433 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 2, !dbg !36
  %434 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 3, !dbg !36
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 4, !dbg !36
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 5, !dbg !36
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 6, !dbg !36
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 7, !dbg !36
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 8, !dbg !36
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 9, !dbg !36
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 10, !dbg !36
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 11, !dbg !36
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 12, !dbg !36
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 13, !dbg !36
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 14, !dbg !36
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 15, !dbg !36
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 16, !dbg !36
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 17, !dbg !36
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 18, !dbg !36
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 19, !dbg !36
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 20, !dbg !36
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 21, !dbg !36
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 22, !dbg !36
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 23, !dbg !36
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 24, !dbg !36
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 25, !dbg !36
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 26, !dbg !36
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 27, !dbg !36
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 28, !dbg !36
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 29, !dbg !36
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 30, !dbg !36
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 31, !dbg !36
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 32, !dbg !36
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 33, !dbg !36
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 34, !dbg !36
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 35, !dbg !36
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 36, !dbg !36
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 37, !dbg !36
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 38, !dbg !36
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 39, !dbg !36
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 40, !dbg !36
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 41, !dbg !36
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 42, !dbg !36
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 43, !dbg !36
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 44, !dbg !36
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 45, !dbg !36
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 46, !dbg !36
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 47, !dbg !36
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 48, !dbg !36
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 49, !dbg !36
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 50, !dbg !36
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 51, !dbg !36
  %483 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 52, !dbg !36
  %484 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 53, !dbg !36
  %485 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 54, !dbg !36
  %486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 55, !dbg !36
  %487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 56, !dbg !36
  %488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 57, !dbg !36
  %489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 58, !dbg !36
  %490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 59, !dbg !36
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 60, !dbg !36
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 61, !dbg !36
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 62, !dbg !36
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %430, 63, !dbg !36
  %495 = and i32 %16, 3, !dbg !36
  %496 = lshr i32 %416, 2, !dbg !36
  %497 = shl i32 %15, 1, !dbg !36
  %498 = and i32 %497, 6, !dbg !36
  %499 = shl nuw nsw i32 %495, 4, !dbg !36
  %500 = or disjoint i32 %499, %496, !dbg !36
  %501 = mul nuw nsw i32 %500, 72, !dbg !36
  %502 = or disjoint i32 %501, %498, !dbg !36
  %503 = zext nneg i32 %502 to i64, !dbg !36
  %504 = getelementptr float, ptr addrspace(3) @global_smem, i64 %503, !dbg !36
  %505 = insertelement <2 x float> poison, float %431, i64 0, !dbg !36
  %506 = insertelement <2 x float> %505, float %432, i64 1, !dbg !36
  store <2 x float> %506, ptr addrspace(3) %504, align 8, !dbg !36
  %507 = add nuw nsw i32 %501, 576, !dbg !36
  %508 = or disjoint i32 %507, %498, !dbg !36
  %509 = zext nneg i32 %508 to i64, !dbg !36
  %510 = getelementptr float, ptr addrspace(3) @global_smem, i64 %509, !dbg !36
  %511 = insertelement <2 x float> poison, float %433, i64 0, !dbg !36
  %512 = insertelement <2 x float> %511, float %434, i64 1, !dbg !36
  store <2 x float> %512, ptr addrspace(3) %510, align 8, !dbg !36
  %513 = or disjoint i32 %498, 8, !dbg !36
  %514 = add nuw nsw i32 %501, %513, !dbg !36
  %515 = zext nneg i32 %514 to i64, !dbg !36
  %516 = getelementptr float, ptr addrspace(3) @global_smem, i64 %515, !dbg !36
  %517 = insertelement <2 x float> poison, float %435, i64 0, !dbg !36
  %518 = insertelement <2 x float> %517, float %436, i64 1, !dbg !36
  store <2 x float> %518, ptr addrspace(3) %516, align 8, !dbg !36
  %519 = add nuw nsw i32 %507, %513, !dbg !36
  %520 = zext nneg i32 %519 to i64, !dbg !36
  %521 = getelementptr float, ptr addrspace(3) @global_smem, i64 %520, !dbg !36
  %522 = insertelement <2 x float> poison, float %437, i64 0, !dbg !36
  %523 = insertelement <2 x float> %522, float %438, i64 1, !dbg !36
  store <2 x float> %523, ptr addrspace(3) %521, align 8, !dbg !36
  %524 = or disjoint i32 %498, 16, !dbg !36
  %525 = add nuw nsw i32 %501, %524, !dbg !36
  %526 = zext nneg i32 %525 to i64, !dbg !36
  %527 = getelementptr float, ptr addrspace(3) @global_smem, i64 %526, !dbg !36
  %528 = insertelement <2 x float> poison, float %439, i64 0, !dbg !36
  %529 = insertelement <2 x float> %528, float %440, i64 1, !dbg !36
  store <2 x float> %529, ptr addrspace(3) %527, align 8, !dbg !36
  %530 = add nuw nsw i32 %507, %524, !dbg !36
  %531 = zext nneg i32 %530 to i64, !dbg !36
  %532 = getelementptr float, ptr addrspace(3) @global_smem, i64 %531, !dbg !36
  %533 = insertelement <2 x float> poison, float %441, i64 0, !dbg !36
  %534 = insertelement <2 x float> %533, float %442, i64 1, !dbg !36
  store <2 x float> %534, ptr addrspace(3) %532, align 8, !dbg !36
  %535 = or disjoint i32 %498, 24, !dbg !36
  %536 = add nuw nsw i32 %501, %535, !dbg !36
  %537 = zext nneg i32 %536 to i64, !dbg !36
  %538 = getelementptr float, ptr addrspace(3) @global_smem, i64 %537, !dbg !36
  %539 = insertelement <2 x float> poison, float %443, i64 0, !dbg !36
  %540 = insertelement <2 x float> %539, float %444, i64 1, !dbg !36
  store <2 x float> %540, ptr addrspace(3) %538, align 8, !dbg !36
  %541 = add nuw nsw i32 %507, %535, !dbg !36
  %542 = zext nneg i32 %541 to i64, !dbg !36
  %543 = getelementptr float, ptr addrspace(3) @global_smem, i64 %542, !dbg !36
  %544 = insertelement <2 x float> poison, float %445, i64 0, !dbg !36
  %545 = insertelement <2 x float> %544, float %446, i64 1, !dbg !36
  store <2 x float> %545, ptr addrspace(3) %543, align 8, !dbg !36
  %546 = or disjoint i32 %498, 32, !dbg !36
  %547 = add nuw nsw i32 %501, %546, !dbg !36
  %548 = zext nneg i32 %547 to i64, !dbg !36
  %549 = getelementptr float, ptr addrspace(3) @global_smem, i64 %548, !dbg !36
  %550 = insertelement <2 x float> poison, float %447, i64 0, !dbg !36
  %551 = insertelement <2 x float> %550, float %448, i64 1, !dbg !36
  store <2 x float> %551, ptr addrspace(3) %549, align 8, !dbg !36
  %552 = add nuw nsw i32 %507, %546, !dbg !36
  %553 = zext nneg i32 %552 to i64, !dbg !36
  %554 = getelementptr float, ptr addrspace(3) @global_smem, i64 %553, !dbg !36
  %555 = insertelement <2 x float> poison, float %449, i64 0, !dbg !36
  %556 = insertelement <2 x float> %555, float %450, i64 1, !dbg !36
  store <2 x float> %556, ptr addrspace(3) %554, align 8, !dbg !36
  %557 = or disjoint i32 %498, 40, !dbg !36
  %558 = add nuw nsw i32 %501, %557, !dbg !36
  %559 = zext nneg i32 %558 to i64, !dbg !36
  %560 = getelementptr float, ptr addrspace(3) @global_smem, i64 %559, !dbg !36
  %561 = insertelement <2 x float> poison, float %451, i64 0, !dbg !36
  %562 = insertelement <2 x float> %561, float %452, i64 1, !dbg !36
  store <2 x float> %562, ptr addrspace(3) %560, align 8, !dbg !36
  %563 = add nuw nsw i32 %507, %557, !dbg !36
  %564 = zext nneg i32 %563 to i64, !dbg !36
  %565 = getelementptr float, ptr addrspace(3) @global_smem, i64 %564, !dbg !36
  %566 = insertelement <2 x float> poison, float %453, i64 0, !dbg !36
  %567 = insertelement <2 x float> %566, float %454, i64 1, !dbg !36
  store <2 x float> %567, ptr addrspace(3) %565, align 8, !dbg !36
  %568 = or disjoint i32 %498, 48, !dbg !36
  %569 = add nuw nsw i32 %501, %568, !dbg !36
  %570 = zext nneg i32 %569 to i64, !dbg !36
  %571 = getelementptr float, ptr addrspace(3) @global_smem, i64 %570, !dbg !36
  %572 = insertelement <2 x float> poison, float %455, i64 0, !dbg !36
  %573 = insertelement <2 x float> %572, float %456, i64 1, !dbg !36
  store <2 x float> %573, ptr addrspace(3) %571, align 8, !dbg !36
  %574 = add nuw nsw i32 %507, %568, !dbg !36
  %575 = zext nneg i32 %574 to i64, !dbg !36
  %576 = getelementptr float, ptr addrspace(3) @global_smem, i64 %575, !dbg !36
  %577 = insertelement <2 x float> poison, float %457, i64 0, !dbg !36
  %578 = insertelement <2 x float> %577, float %458, i64 1, !dbg !36
  store <2 x float> %578, ptr addrspace(3) %576, align 8, !dbg !36
  %579 = or disjoint i32 %498, 56, !dbg !36
  %580 = add nuw nsw i32 %501, %579, !dbg !36
  %581 = zext nneg i32 %580 to i64, !dbg !36
  %582 = getelementptr float, ptr addrspace(3) @global_smem, i64 %581, !dbg !36
  %583 = insertelement <2 x float> poison, float %459, i64 0, !dbg !36
  %584 = insertelement <2 x float> %583, float %460, i64 1, !dbg !36
  store <2 x float> %584, ptr addrspace(3) %582, align 8, !dbg !36
  %585 = add nuw nsw i32 %507, %579, !dbg !36
  %586 = zext nneg i32 %585 to i64, !dbg !36
  %587 = getelementptr float, ptr addrspace(3) @global_smem, i64 %586, !dbg !36
  %588 = insertelement <2 x float> poison, float %461, i64 0, !dbg !36
  %589 = insertelement <2 x float> %588, float %462, i64 1, !dbg !36
  store <2 x float> %589, ptr addrspace(3) %587, align 8, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %590 = lshr i32 %416, 3, !dbg !36
  %591 = shl nuw nsw i32 %495, 2, !dbg !36
  %592 = or disjoint i32 %591, %590, !dbg !36
  %593 = and i32 %27, 56, !dbg !36
  %594 = mul nuw nsw i32 %592, 72, !dbg !36
  %595 = add nuw nsw i32 %594, %593, !dbg !36
  %596 = zext nneg i32 %595 to i64, !dbg !36
  %597 = getelementptr float, ptr addrspace(3) @global_smem, i64 %596, !dbg !36
  %598 = load float, ptr addrspace(3) %597, align 32, !dbg !36
  %599 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 4, !dbg !36
  %600 = load float, ptr addrspace(3) %599, align 4, !dbg !36
  %601 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 8, !dbg !36
  %602 = load float, ptr addrspace(3) %601, align 8, !dbg !36
  %603 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 12, !dbg !36
  %604 = load float, ptr addrspace(3) %603, align 4, !dbg !36
  %605 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 16, !dbg !36
  %606 = load float, ptr addrspace(3) %605, align 16, !dbg !36
  %607 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 20, !dbg !36
  %608 = load float, ptr addrspace(3) %607, align 4, !dbg !36
  %609 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 24, !dbg !36
  %610 = load float, ptr addrspace(3) %609, align 8, !dbg !36
  %611 = getelementptr inbounds i8, ptr addrspace(3) %597, i64 28, !dbg !36
  %612 = load float, ptr addrspace(3) %611, align 4, !dbg !36
  %613 = getelementptr i8, ptr addrspace(3) %597, i64 4608, !dbg !36
  %614 = load float, ptr addrspace(3) %613, align 32, !dbg !36
  %615 = getelementptr i8, ptr addrspace(3) %597, i64 4612, !dbg !36
  %616 = load float, ptr addrspace(3) %615, align 4, !dbg !36
  %617 = getelementptr i8, ptr addrspace(3) %597, i64 4616, !dbg !36
  %618 = load float, ptr addrspace(3) %617, align 8, !dbg !36
  %619 = getelementptr i8, ptr addrspace(3) %597, i64 4620, !dbg !36
  %620 = load float, ptr addrspace(3) %619, align 4, !dbg !36
  %621 = getelementptr i8, ptr addrspace(3) %597, i64 4624, !dbg !36
  %622 = load float, ptr addrspace(3) %621, align 16, !dbg !36
  %623 = getelementptr i8, ptr addrspace(3) %597, i64 4628, !dbg !36
  %624 = load float, ptr addrspace(3) %623, align 4, !dbg !36
  %625 = getelementptr i8, ptr addrspace(3) %597, i64 4632, !dbg !36
  %626 = load float, ptr addrspace(3) %625, align 8, !dbg !36
  %627 = getelementptr i8, ptr addrspace(3) %597, i64 4636, !dbg !36
  %628 = load float, ptr addrspace(3) %627, align 4, !dbg !36
  %629 = getelementptr i8, ptr addrspace(3) %597, i64 9216, !dbg !36
  %630 = load float, ptr addrspace(3) %629, align 32, !dbg !36
  %631 = getelementptr i8, ptr addrspace(3) %597, i64 9220, !dbg !36
  %632 = load float, ptr addrspace(3) %631, align 4, !dbg !36
  %633 = getelementptr i8, ptr addrspace(3) %597, i64 9224, !dbg !36
  %634 = load float, ptr addrspace(3) %633, align 8, !dbg !36
  %635 = getelementptr i8, ptr addrspace(3) %597, i64 9228, !dbg !36
  %636 = load float, ptr addrspace(3) %635, align 4, !dbg !36
  %637 = getelementptr i8, ptr addrspace(3) %597, i64 9232, !dbg !36
  %638 = load float, ptr addrspace(3) %637, align 16, !dbg !36
  %639 = getelementptr i8, ptr addrspace(3) %597, i64 9236, !dbg !36
  %640 = load float, ptr addrspace(3) %639, align 4, !dbg !36
  %641 = getelementptr i8, ptr addrspace(3) %597, i64 9240, !dbg !36
  %642 = load float, ptr addrspace(3) %641, align 8, !dbg !36
  %643 = getelementptr i8, ptr addrspace(3) %597, i64 9244, !dbg !36
  %644 = load float, ptr addrspace(3) %643, align 4, !dbg !36
  %645 = getelementptr i8, ptr addrspace(3) %597, i64 13824, !dbg !36
  %646 = load float, ptr addrspace(3) %645, align 32, !dbg !36
  %647 = getelementptr i8, ptr addrspace(3) %597, i64 13828, !dbg !36
  %648 = load float, ptr addrspace(3) %647, align 4, !dbg !36
  %649 = getelementptr i8, ptr addrspace(3) %597, i64 13832, !dbg !36
  %650 = load float, ptr addrspace(3) %649, align 8, !dbg !36
  %651 = getelementptr i8, ptr addrspace(3) %597, i64 13836, !dbg !36
  %652 = load float, ptr addrspace(3) %651, align 4, !dbg !36
  %653 = getelementptr i8, ptr addrspace(3) %597, i64 13840, !dbg !36
  %654 = load float, ptr addrspace(3) %653, align 16, !dbg !36
  %655 = getelementptr i8, ptr addrspace(3) %597, i64 13844, !dbg !36
  %656 = load float, ptr addrspace(3) %655, align 4, !dbg !36
  %657 = getelementptr i8, ptr addrspace(3) %597, i64 13848, !dbg !36
  %658 = load float, ptr addrspace(3) %657, align 8, !dbg !36
  %659 = getelementptr i8, ptr addrspace(3) %597, i64 13852, !dbg !36
  %660 = load float, ptr addrspace(3) %659, align 4, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %661 = insertelement <2 x float> poison, float %463, i64 0, !dbg !36
  %662 = insertelement <2 x float> %661, float %464, i64 1, !dbg !36
  store <2 x float> %662, ptr addrspace(3) %504, align 8, !dbg !36
  %663 = insertelement <2 x float> poison, float %465, i64 0, !dbg !36
  %664 = insertelement <2 x float> %663, float %466, i64 1, !dbg !36
  store <2 x float> %664, ptr addrspace(3) %510, align 8, !dbg !36
  %665 = insertelement <2 x float> poison, float %467, i64 0, !dbg !36
  %666 = insertelement <2 x float> %665, float %468, i64 1, !dbg !36
  store <2 x float> %666, ptr addrspace(3) %516, align 8, !dbg !36
  %667 = insertelement <2 x float> poison, float %469, i64 0, !dbg !36
  %668 = insertelement <2 x float> %667, float %470, i64 1, !dbg !36
  store <2 x float> %668, ptr addrspace(3) %521, align 8, !dbg !36
  %669 = insertelement <2 x float> poison, float %471, i64 0, !dbg !36
  %670 = insertelement <2 x float> %669, float %472, i64 1, !dbg !36
  store <2 x float> %670, ptr addrspace(3) %527, align 8, !dbg !36
  %671 = insertelement <2 x float> poison, float %473, i64 0, !dbg !36
  %672 = insertelement <2 x float> %671, float %474, i64 1, !dbg !36
  store <2 x float> %672, ptr addrspace(3) %532, align 8, !dbg !36
  %673 = insertelement <2 x float> poison, float %475, i64 0, !dbg !36
  %674 = insertelement <2 x float> %673, float %476, i64 1, !dbg !36
  store <2 x float> %674, ptr addrspace(3) %538, align 8, !dbg !36
  %675 = insertelement <2 x float> poison, float %477, i64 0, !dbg !36
  %676 = insertelement <2 x float> %675, float %478, i64 1, !dbg !36
  store <2 x float> %676, ptr addrspace(3) %543, align 8, !dbg !36
  %677 = insertelement <2 x float> poison, float %479, i64 0, !dbg !36
  %678 = insertelement <2 x float> %677, float %480, i64 1, !dbg !36
  store <2 x float> %678, ptr addrspace(3) %549, align 8, !dbg !36
  %679 = insertelement <2 x float> poison, float %481, i64 0, !dbg !36
  %680 = insertelement <2 x float> %679, float %482, i64 1, !dbg !36
  store <2 x float> %680, ptr addrspace(3) %554, align 8, !dbg !36
  %681 = insertelement <2 x float> poison, float %483, i64 0, !dbg !36
  %682 = insertelement <2 x float> %681, float %484, i64 1, !dbg !36
  store <2 x float> %682, ptr addrspace(3) %560, align 8, !dbg !36
  %683 = insertelement <2 x float> poison, float %485, i64 0, !dbg !36
  %684 = insertelement <2 x float> %683, float %486, i64 1, !dbg !36
  store <2 x float> %684, ptr addrspace(3) %565, align 8, !dbg !36
  %685 = insertelement <2 x float> poison, float %487, i64 0, !dbg !36
  %686 = insertelement <2 x float> %685, float %488, i64 1, !dbg !36
  store <2 x float> %686, ptr addrspace(3) %571, align 8, !dbg !36
  %687 = insertelement <2 x float> poison, float %489, i64 0, !dbg !36
  %688 = insertelement <2 x float> %687, float %490, i64 1, !dbg !36
  store <2 x float> %688, ptr addrspace(3) %576, align 8, !dbg !36
  %689 = insertelement <2 x float> poison, float %491, i64 0, !dbg !36
  %690 = insertelement <2 x float> %689, float %492, i64 1, !dbg !36
  store <2 x float> %690, ptr addrspace(3) %582, align 8, !dbg !36
  %691 = insertelement <2 x float> poison, float %493, i64 0, !dbg !36
  %692 = insertelement <2 x float> %691, float %494, i64 1, !dbg !36
  store <2 x float> %692, ptr addrspace(3) %587, align 8, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %693 = load float, ptr addrspace(3) %597, align 32, !dbg !36
  %694 = load float, ptr addrspace(3) %599, align 4, !dbg !36
  %695 = load float, ptr addrspace(3) %601, align 8, !dbg !36
  %696 = load float, ptr addrspace(3) %603, align 4, !dbg !36
  %697 = load float, ptr addrspace(3) %605, align 16, !dbg !36
  %698 = load float, ptr addrspace(3) %607, align 4, !dbg !36
  %699 = load float, ptr addrspace(3) %609, align 8, !dbg !36
  %700 = load float, ptr addrspace(3) %611, align 4, !dbg !36
  %701 = load float, ptr addrspace(3) %613, align 32, !dbg !36
  %702 = load float, ptr addrspace(3) %615, align 4, !dbg !36
  %703 = load float, ptr addrspace(3) %617, align 8, !dbg !36
  %704 = load float, ptr addrspace(3) %619, align 4, !dbg !36
  %705 = load float, ptr addrspace(3) %621, align 16, !dbg !36
  %706 = load float, ptr addrspace(3) %623, align 4, !dbg !36
  %707 = load float, ptr addrspace(3) %625, align 8, !dbg !36
  %708 = load float, ptr addrspace(3) %627, align 4, !dbg !36
  %709 = load float, ptr addrspace(3) %629, align 32, !dbg !36
  %710 = load float, ptr addrspace(3) %631, align 4, !dbg !36
  %711 = load float, ptr addrspace(3) %633, align 8, !dbg !36
  %712 = load float, ptr addrspace(3) %635, align 4, !dbg !36
  %713 = load float, ptr addrspace(3) %637, align 16, !dbg !36
  %714 = load float, ptr addrspace(3) %639, align 4, !dbg !36
  %715 = load float, ptr addrspace(3) %641, align 8, !dbg !36
  %716 = load float, ptr addrspace(3) %643, align 4, !dbg !36
  %717 = load float, ptr addrspace(3) %645, align 32, !dbg !36
  %718 = load float, ptr addrspace(3) %647, align 4, !dbg !36
  %719 = load float, ptr addrspace(3) %649, align 8, !dbg !36
  %720 = load float, ptr addrspace(3) %651, align 4, !dbg !36
  %721 = load float, ptr addrspace(3) %653, align 16, !dbg !36
  %722 = load float, ptr addrspace(3) %655, align 4, !dbg !36
  %723 = load float, ptr addrspace(3) %657, align 8, !dbg !36
  %724 = load float, ptr addrspace(3) %659, align 4, !dbg !36
  %725 = icmp slt i32 %422, 4096, !dbg !38
  %726 = icmp slt i32 %429, 4096, !dbg !38
  %727 = icmp slt i32 %428, 4096, !dbg !38
  %728 = icmp slt i32 %427, 4096, !dbg !38
  %729 = icmp slt i32 %426, 4096, !dbg !38
  %730 = icmp slt i32 %425, 4096, !dbg !38
  %731 = icmp slt i32 %424, 4096, !dbg !38
  %732 = icmp slt i32 %423, 4096, !dbg !38
  %733 = icmp slt i32 %415, 3072, !dbg !39
  %734 = and i1 %733, %725, !dbg !40
  %735 = and i1 %733, %726, !dbg !40
  %736 = and i1 %733, %727, !dbg !40
  %737 = and i1 %733, %728, !dbg !40
  %738 = and i1 %733, %729, !dbg !40
  %739 = and i1 %733, %730, !dbg !40
  %740 = and i1 %733, %731, !dbg !40
  %741 = and i1 %733, %732, !dbg !40
  %742 = mul i32 %422, 3072, !dbg !41
  %743 = mul i32 %429, 3072, !dbg !41
  %744 = mul i32 %428, 3072, !dbg !41
  %745 = mul i32 %427, 3072, !dbg !41
  %746 = mul i32 %426, 3072, !dbg !41
  %747 = mul i32 %425, 3072, !dbg !41
  %748 = mul i32 %424, 3072, !dbg !41
  %749 = mul i32 %423, 3072, !dbg !41
  %750 = add i32 %742, %415, !dbg !42
  %751 = add i32 %743, %415, !dbg !42
  %752 = add i32 %744, %415, !dbg !42
  %753 = add i32 %745, %415, !dbg !42
  %754 = add i32 %746, %415, !dbg !42
  %755 = add i32 %747, %415, !dbg !42
  %756 = add i32 %748, %415, !dbg !42
  %757 = add i32 %749, %415, !dbg !42
  %758 = sext i32 %415 to i64, !dbg !43
  %759 = getelementptr i16, ptr addrspace(1) %0, i64 %758, !dbg !43
  %760 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %734) #3, !dbg !44
  %761 = extractvalue { i32, i32, i32, i32 } %760, 0, !dbg !44
  %762 = extractvalue { i32, i32, i32, i32 } %760, 1, !dbg !44
  %763 = extractvalue { i32, i32, i32, i32 } %760, 2, !dbg !44
  %764 = extractvalue { i32, i32, i32, i32 } %760, 3, !dbg !44
  %765 = trunc i32 %761 to i16, !dbg !44
  %extelt.offset = lshr i32 %761, 16, !dbg !44
  %766 = trunc nuw i32 %extelt.offset to i16, !dbg !44
  %767 = trunc i32 %762 to i16, !dbg !44
  %extelt.offset97 = lshr i32 %762, 16, !dbg !44
  %768 = trunc nuw i32 %extelt.offset97 to i16, !dbg !44
  %769 = trunc i32 %763 to i16, !dbg !44
  %extelt.offset98 = lshr i32 %763, 16, !dbg !44
  %770 = trunc nuw i32 %extelt.offset98 to i16, !dbg !44
  %771 = trunc i32 %764 to i16, !dbg !44
  %extelt.offset99 = lshr i32 %764, 16, !dbg !44
  %772 = trunc nuw i32 %extelt.offset99 to i16, !dbg !44
  %773 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %735) #3, !dbg !44
  %774 = extractvalue { i32, i32, i32, i32 } %773, 0, !dbg !44
  %775 = extractvalue { i32, i32, i32, i32 } %773, 1, !dbg !44
  %776 = extractvalue { i32, i32, i32, i32 } %773, 2, !dbg !44
  %777 = extractvalue { i32, i32, i32, i32 } %773, 3, !dbg !44
  %778 = trunc i32 %774 to i16, !dbg !44
  %extelt.offset100 = lshr i32 %774, 16, !dbg !44
  %779 = trunc nuw i32 %extelt.offset100 to i16, !dbg !44
  %780 = trunc i32 %775 to i16, !dbg !44
  %extelt.offset101 = lshr i32 %775, 16, !dbg !44
  %781 = trunc nuw i32 %extelt.offset101 to i16, !dbg !44
  %782 = trunc i32 %776 to i16, !dbg !44
  %extelt.offset102 = lshr i32 %776, 16, !dbg !44
  %783 = trunc nuw i32 %extelt.offset102 to i16, !dbg !44
  %784 = trunc i32 %777 to i16, !dbg !44
  %extelt.offset103 = lshr i32 %777, 16, !dbg !44
  %785 = trunc nuw i32 %extelt.offset103 to i16, !dbg !44
  %786 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %736) #3, !dbg !44
  %787 = extractvalue { i32, i32, i32, i32 } %786, 0, !dbg !44
  %788 = extractvalue { i32, i32, i32, i32 } %786, 1, !dbg !44
  %789 = extractvalue { i32, i32, i32, i32 } %786, 2, !dbg !44
  %790 = extractvalue { i32, i32, i32, i32 } %786, 3, !dbg !44
  %791 = trunc i32 %787 to i16, !dbg !44
  %extelt.offset104 = lshr i32 %787, 16, !dbg !44
  %792 = trunc nuw i32 %extelt.offset104 to i16, !dbg !44
  %793 = trunc i32 %788 to i16, !dbg !44
  %extelt.offset105 = lshr i32 %788, 16, !dbg !44
  %794 = trunc nuw i32 %extelt.offset105 to i16, !dbg !44
  %795 = trunc i32 %789 to i16, !dbg !44
  %extelt.offset106 = lshr i32 %789, 16, !dbg !44
  %796 = trunc nuw i32 %extelt.offset106 to i16, !dbg !44
  %797 = trunc i32 %790 to i16, !dbg !44
  %extelt.offset107 = lshr i32 %790, 16, !dbg !44
  %798 = trunc nuw i32 %extelt.offset107 to i16, !dbg !44
  %799 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %737) #3, !dbg !44
  %800 = extractvalue { i32, i32, i32, i32 } %799, 0, !dbg !44
  %801 = extractvalue { i32, i32, i32, i32 } %799, 1, !dbg !44
  %802 = extractvalue { i32, i32, i32, i32 } %799, 2, !dbg !44
  %803 = extractvalue { i32, i32, i32, i32 } %799, 3, !dbg !44
  %804 = trunc i32 %800 to i16, !dbg !44
  %extelt.offset108 = lshr i32 %800, 16, !dbg !44
  %805 = trunc nuw i32 %extelt.offset108 to i16, !dbg !44
  %806 = trunc i32 %801 to i16, !dbg !44
  %extelt.offset109 = lshr i32 %801, 16, !dbg !44
  %807 = trunc nuw i32 %extelt.offset109 to i16, !dbg !44
  %808 = trunc i32 %802 to i16, !dbg !44
  %extelt.offset110 = lshr i32 %802, 16, !dbg !44
  %809 = trunc nuw i32 %extelt.offset110 to i16, !dbg !44
  %810 = trunc i32 %803 to i16, !dbg !44
  %extelt.offset111 = lshr i32 %803, 16, !dbg !44
  %811 = trunc nuw i32 %extelt.offset111 to i16, !dbg !44
  %812 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %738) #3, !dbg !44
  %813 = extractvalue { i32, i32, i32, i32 } %812, 0, !dbg !44
  %814 = extractvalue { i32, i32, i32, i32 } %812, 1, !dbg !44
  %815 = extractvalue { i32, i32, i32, i32 } %812, 2, !dbg !44
  %816 = extractvalue { i32, i32, i32, i32 } %812, 3, !dbg !44
  %817 = trunc i32 %813 to i16, !dbg !44
  %extelt.offset112 = lshr i32 %813, 16, !dbg !44
  %818 = trunc nuw i32 %extelt.offset112 to i16, !dbg !44
  %819 = trunc i32 %814 to i16, !dbg !44
  %extelt.offset113 = lshr i32 %814, 16, !dbg !44
  %820 = trunc nuw i32 %extelt.offset113 to i16, !dbg !44
  %821 = trunc i32 %815 to i16, !dbg !44
  %extelt.offset114 = lshr i32 %815, 16, !dbg !44
  %822 = trunc nuw i32 %extelt.offset114 to i16, !dbg !44
  %823 = trunc i32 %816 to i16, !dbg !44
  %extelt.offset115 = lshr i32 %816, 16, !dbg !44
  %824 = trunc nuw i32 %extelt.offset115 to i16, !dbg !44
  %825 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %739) #3, !dbg !44
  %826 = extractvalue { i32, i32, i32, i32 } %825, 0, !dbg !44
  %827 = extractvalue { i32, i32, i32, i32 } %825, 1, !dbg !44
  %828 = extractvalue { i32, i32, i32, i32 } %825, 2, !dbg !44
  %829 = extractvalue { i32, i32, i32, i32 } %825, 3, !dbg !44
  %830 = trunc i32 %826 to i16, !dbg !44
  %extelt.offset116 = lshr i32 %826, 16, !dbg !44
  %831 = trunc nuw i32 %extelt.offset116 to i16, !dbg !44
  %832 = trunc i32 %827 to i16, !dbg !44
  %extelt.offset117 = lshr i32 %827, 16, !dbg !44
  %833 = trunc nuw i32 %extelt.offset117 to i16, !dbg !44
  %834 = trunc i32 %828 to i16, !dbg !44
  %extelt.offset118 = lshr i32 %828, 16, !dbg !44
  %835 = trunc nuw i32 %extelt.offset118 to i16, !dbg !44
  %836 = trunc i32 %829 to i16, !dbg !44
  %extelt.offset119 = lshr i32 %829, 16, !dbg !44
  %837 = trunc nuw i32 %extelt.offset119 to i16, !dbg !44
  %838 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %740) #3, !dbg !44
  %839 = extractvalue { i32, i32, i32, i32 } %838, 0, !dbg !44
  %840 = extractvalue { i32, i32, i32, i32 } %838, 1, !dbg !44
  %841 = extractvalue { i32, i32, i32, i32 } %838, 2, !dbg !44
  %842 = extractvalue { i32, i32, i32, i32 } %838, 3, !dbg !44
  %843 = trunc i32 %839 to i16, !dbg !44
  %extelt.offset120 = lshr i32 %839, 16, !dbg !44
  %844 = trunc nuw i32 %extelt.offset120 to i16, !dbg !44
  %845 = trunc i32 %840 to i16, !dbg !44
  %extelt.offset121 = lshr i32 %840, 16, !dbg !44
  %846 = trunc nuw i32 %extelt.offset121 to i16, !dbg !44
  %847 = trunc i32 %841 to i16, !dbg !44
  %extelt.offset122 = lshr i32 %841, 16, !dbg !44
  %848 = trunc nuw i32 %extelt.offset122 to i16, !dbg !44
  %849 = trunc i32 %842 to i16, !dbg !44
  %extelt.offset123 = lshr i32 %842, 16, !dbg !44
  %850 = trunc nuw i32 %extelt.offset123 to i16, !dbg !44
  %851 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %759, i1 %741) #3, !dbg !44
  %852 = extractvalue { i32, i32, i32, i32 } %851, 0, !dbg !44
  %853 = extractvalue { i32, i32, i32, i32 } %851, 1, !dbg !44
  %854 = extractvalue { i32, i32, i32, i32 } %851, 2, !dbg !44
  %855 = extractvalue { i32, i32, i32, i32 } %851, 3, !dbg !44
  %856 = trunc i32 %852 to i16, !dbg !44
  %extelt.offset124 = lshr i32 %852, 16, !dbg !44
  %857 = trunc nuw i32 %extelt.offset124 to i16, !dbg !44
  %858 = trunc i32 %853 to i16, !dbg !44
  %extelt.offset125 = lshr i32 %853, 16, !dbg !44
  %859 = trunc nuw i32 %extelt.offset125 to i16, !dbg !44
  %860 = trunc i32 %854 to i16, !dbg !44
  %extelt.offset126 = lshr i32 %854, 16, !dbg !44
  %861 = trunc nuw i32 %extelt.offset126 to i16, !dbg !44
  %862 = trunc i32 %855 to i16, !dbg !44
  %extelt.offset127 = lshr i32 %855, 16, !dbg !44
  %863 = trunc nuw i32 %extelt.offset127 to i16, !dbg !44
  %864 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %765) #3, !dbg !45
  %865 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %766) #3, !dbg !45
  %866 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %767) #3, !dbg !45
  %867 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %768) #3, !dbg !45
  %868 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %769) #3, !dbg !45
  %869 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %770) #3, !dbg !45
  %870 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %771) #3, !dbg !45
  %871 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %772) #3, !dbg !45
  %872 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %778) #3, !dbg !45
  %873 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %779) #3, !dbg !45
  %874 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %780) #3, !dbg !45
  %875 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %781) #3, !dbg !45
  %876 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %782) #3, !dbg !45
  %877 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %783) #3, !dbg !45
  %878 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %784) #3, !dbg !45
  %879 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %785) #3, !dbg !45
  %880 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %791) #3, !dbg !45
  %881 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %792) #3, !dbg !45
  %882 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %793) #3, !dbg !45
  %883 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %794) #3, !dbg !45
  %884 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %795) #3, !dbg !45
  %885 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %796) #3, !dbg !45
  %886 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %797) #3, !dbg !45
  %887 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %798) #3, !dbg !45
  %888 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %804) #3, !dbg !45
  %889 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %805) #3, !dbg !45
  %890 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %806) #3, !dbg !45
  %891 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %807) #3, !dbg !45
  %892 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %808) #3, !dbg !45
  %893 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %809) #3, !dbg !45
  %894 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %810) #3, !dbg !45
  %895 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %811) #3, !dbg !45
  %896 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %817) #3, !dbg !45
  %897 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %818) #3, !dbg !45
  %898 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %819) #3, !dbg !45
  %899 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %820) #3, !dbg !45
  %900 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %821) #3, !dbg !45
  %901 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %822) #3, !dbg !45
  %902 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %823) #3, !dbg !45
  %903 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %824) #3, !dbg !45
  %904 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %830) #3, !dbg !45
  %905 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %831) #3, !dbg !45
  %906 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %832) #3, !dbg !45
  %907 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %833) #3, !dbg !45
  %908 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %834) #3, !dbg !45
  %909 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %835) #3, !dbg !45
  %910 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %836) #3, !dbg !45
  %911 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %837) #3, !dbg !45
  %912 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %843) #3, !dbg !45
  %913 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %844) #3, !dbg !45
  %914 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %845) #3, !dbg !45
  %915 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %846) #3, !dbg !45
  %916 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %847) #3, !dbg !45
  %917 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %848) #3, !dbg !45
  %918 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %849) #3, !dbg !45
  %919 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %850) #3, !dbg !45
  %920 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %856) #3, !dbg !45
  %921 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %857) #3, !dbg !45
  %922 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %858) #3, !dbg !45
  %923 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %859) #3, !dbg !45
  %924 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %860) #3, !dbg !45
  %925 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %861) #3, !dbg !45
  %926 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %862) #3, !dbg !45
  %927 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %863) #3, !dbg !45
  %928 = fadd float %598, %864, !dbg !46
  %929 = fadd float %600, %865, !dbg !46
  %930 = fadd float %602, %866, !dbg !46
  %931 = fadd float %604, %867, !dbg !46
  %932 = fadd float %606, %868, !dbg !46
  %933 = fadd float %608, %869, !dbg !46
  %934 = fadd float %610, %870, !dbg !46
  %935 = fadd float %612, %871, !dbg !46
  %936 = fadd float %614, %872, !dbg !46
  %937 = fadd float %616, %873, !dbg !46
  %938 = fadd float %618, %874, !dbg !46
  %939 = fadd float %620, %875, !dbg !46
  %940 = fadd float %622, %876, !dbg !46
  %941 = fadd float %624, %877, !dbg !46
  %942 = fadd float %626, %878, !dbg !46
  %943 = fadd float %628, %879, !dbg !46
  %944 = fadd float %630, %880, !dbg !46
  %945 = fadd float %632, %881, !dbg !46
  %946 = fadd float %634, %882, !dbg !46
  %947 = fadd float %636, %883, !dbg !46
  %948 = fadd float %638, %884, !dbg !46
  %949 = fadd float %640, %885, !dbg !46
  %950 = fadd float %642, %886, !dbg !46
  %951 = fadd float %644, %887, !dbg !46
  %952 = fadd float %646, %888, !dbg !46
  %953 = fadd float %648, %889, !dbg !46
  %954 = fadd float %650, %890, !dbg !46
  %955 = fadd float %652, %891, !dbg !46
  %956 = fadd float %654, %892, !dbg !46
  %957 = fadd float %656, %893, !dbg !46
  %958 = fadd float %658, %894, !dbg !46
  %959 = fadd float %660, %895, !dbg !46
  %960 = fadd float %693, %896, !dbg !46
  %961 = fadd float %694, %897, !dbg !46
  %962 = fadd float %695, %898, !dbg !46
  %963 = fadd float %696, %899, !dbg !46
  %964 = fadd float %697, %900, !dbg !46
  %965 = fadd float %698, %901, !dbg !46
  %966 = fadd float %699, %902, !dbg !46
  %967 = fadd float %700, %903, !dbg !46
  %968 = fadd float %701, %904, !dbg !46
  %969 = fadd float %702, %905, !dbg !46
  %970 = fadd float %703, %906, !dbg !46
  %971 = fadd float %704, %907, !dbg !46
  %972 = fadd float %705, %908, !dbg !46
  %973 = fadd float %706, %909, !dbg !46
  %974 = fadd float %707, %910, !dbg !46
  %975 = fadd float %708, %911, !dbg !46
  %976 = fadd float %709, %912, !dbg !46
  %977 = fadd float %710, %913, !dbg !46
  %978 = fadd float %711, %914, !dbg !46
  %979 = fadd float %712, %915, !dbg !46
  %980 = fadd float %713, %916, !dbg !46
  %981 = fadd float %714, %917, !dbg !46
  %982 = fadd float %715, %918, !dbg !46
  %983 = fadd float %716, %919, !dbg !46
  %984 = fadd float %717, %920, !dbg !46
  %985 = fadd float %718, %921, !dbg !46
  %986 = fadd float %719, %922, !dbg !46
  %987 = fadd float %720, %923, !dbg !46
  %988 = fadd float %721, %924, !dbg !46
  %989 = fadd float %722, %925, !dbg !46
  %990 = fadd float %723, %926, !dbg !46
  %991 = fadd float %724, %927, !dbg !46
  %992 = sext i32 %750 to i64, !dbg !47
  %993 = getelementptr i16, ptr addrspace(1) %3, i64 %992, !dbg !47
  %994 = sext i32 %751 to i64, !dbg !47
  %995 = getelementptr i16, ptr addrspace(1) %3, i64 %994, !dbg !47
  %996 = sext i32 %752 to i64, !dbg !47
  %997 = getelementptr i16, ptr addrspace(1) %3, i64 %996, !dbg !47
  %998 = sext i32 %753 to i64, !dbg !47
  %999 = getelementptr i16, ptr addrspace(1) %3, i64 %998, !dbg !47
  %1000 = sext i32 %754 to i64, !dbg !47
  %1001 = getelementptr i16, ptr addrspace(1) %3, i64 %1000, !dbg !47
  %1002 = sext i32 %755 to i64, !dbg !47
  %1003 = getelementptr i16, ptr addrspace(1) %3, i64 %1002, !dbg !47
  %1004 = sext i32 %756 to i64, !dbg !47
  %1005 = getelementptr i16, ptr addrspace(1) %3, i64 %1004, !dbg !47
  %1006 = sext i32 %757 to i64, !dbg !47
  %1007 = getelementptr i16, ptr addrspace(1) %3, i64 %1006, !dbg !47
  %1008 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %928) #3, !dbg !48
  %1009 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %929) #3, !dbg !48
  %1010 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %930) #3, !dbg !48
  %1011 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %931) #3, !dbg !48
  %1012 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %932) #3, !dbg !48
  %1013 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %933) #3, !dbg !48
  %1014 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %934) #3, !dbg !48
  %1015 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %935) #3, !dbg !48
  %1016 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %936) #3, !dbg !48
  %1017 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %937) #3, !dbg !48
  %1018 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %938) #3, !dbg !48
  %1019 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %939) #3, !dbg !48
  %1020 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %940) #3, !dbg !48
  %1021 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %941) #3, !dbg !48
  %1022 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %942) #3, !dbg !48
  %1023 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %943) #3, !dbg !48
  %1024 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %944) #3, !dbg !48
  %1025 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %945) #3, !dbg !48
  %1026 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %946) #3, !dbg !48
  %1027 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %947) #3, !dbg !48
  %1028 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %948) #3, !dbg !48
  %1029 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %949) #3, !dbg !48
  %1030 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %950) #3, !dbg !48
  %1031 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %951) #3, !dbg !48
  %1032 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %952) #3, !dbg !48
  %1033 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %953) #3, !dbg !48
  %1034 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %954) #3, !dbg !48
  %1035 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %955) #3, !dbg !48
  %1036 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %956) #3, !dbg !48
  %1037 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %957) #3, !dbg !48
  %1038 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %958) #3, !dbg !48
  %1039 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %959) #3, !dbg !48
  %1040 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %960) #3, !dbg !48
  %1041 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %961) #3, !dbg !48
  %1042 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %962) #3, !dbg !48
  %1043 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %963) #3, !dbg !48
  %1044 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %964) #3, !dbg !48
  %1045 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %965) #3, !dbg !48
  %1046 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %966) #3, !dbg !48
  %1047 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %967) #3, !dbg !48
  %1048 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %968) #3, !dbg !48
  %1049 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %969) #3, !dbg !48
  %1050 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %970) #3, !dbg !48
  %1051 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %971) #3, !dbg !48
  %1052 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %972) #3, !dbg !48
  %1053 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %973) #3, !dbg !48
  %1054 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %974) #3, !dbg !48
  %1055 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %975) #3, !dbg !48
  %1056 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %976) #3, !dbg !48
  %1057 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %977) #3, !dbg !48
  %1058 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %978) #3, !dbg !48
  %1059 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %979) #3, !dbg !48
  %1060 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %980) #3, !dbg !48
  %1061 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %981) #3, !dbg !48
  %1062 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %982) #3, !dbg !48
  %1063 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %983) #3, !dbg !48
  %1064 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %984) #3, !dbg !48
  %1065 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %985) #3, !dbg !48
  %1066 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %986) #3, !dbg !48
  %1067 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %987) #3, !dbg !48
  %1068 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %988) #3, !dbg !48
  %1069 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %989) #3, !dbg !48
  %1070 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %990) #3, !dbg !48
  %1071 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %991) #3, !dbg !48
  %1072 = insertelement <2 x i16> poison, i16 %1008, i64 0, !dbg !48
  %1073 = insertelement <2 x i16> %1072, i16 %1009, i64 1, !dbg !48
  %1074 = bitcast <2 x i16> %1073 to i32, !dbg !48
  %1075 = insertelement <2 x i16> poison, i16 %1010, i64 0, !dbg !48
  %1076 = insertelement <2 x i16> %1075, i16 %1011, i64 1, !dbg !48
  %1077 = bitcast <2 x i16> %1076 to i32, !dbg !48
  %1078 = insertelement <2 x i16> poison, i16 %1012, i64 0, !dbg !48
  %1079 = insertelement <2 x i16> %1078, i16 %1013, i64 1, !dbg !48
  %1080 = bitcast <2 x i16> %1079 to i32, !dbg !48
  %1081 = insertelement <2 x i16> poison, i16 %1014, i64 0, !dbg !48
  %1082 = insertelement <2 x i16> %1081, i16 %1015, i64 1, !dbg !48
  %1083 = bitcast <2 x i16> %1082 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1074, i32 %1077, i32 %1080, i32 %1083, ptr addrspace(1) %993, i1 %734) #3, !dbg !48
  %1084 = insertelement <2 x i16> poison, i16 %1016, i64 0, !dbg !48
  %1085 = insertelement <2 x i16> %1084, i16 %1017, i64 1, !dbg !48
  %1086 = bitcast <2 x i16> %1085 to i32, !dbg !48
  %1087 = insertelement <2 x i16> poison, i16 %1018, i64 0, !dbg !48
  %1088 = insertelement <2 x i16> %1087, i16 %1019, i64 1, !dbg !48
  %1089 = bitcast <2 x i16> %1088 to i32, !dbg !48
  %1090 = insertelement <2 x i16> poison, i16 %1020, i64 0, !dbg !48
  %1091 = insertelement <2 x i16> %1090, i16 %1021, i64 1, !dbg !48
  %1092 = bitcast <2 x i16> %1091 to i32, !dbg !48
  %1093 = insertelement <2 x i16> poison, i16 %1022, i64 0, !dbg !48
  %1094 = insertelement <2 x i16> %1093, i16 %1023, i64 1, !dbg !48
  %1095 = bitcast <2 x i16> %1094 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1086, i32 %1089, i32 %1092, i32 %1095, ptr addrspace(1) %995, i1 %735) #3, !dbg !48
  %1096 = insertelement <2 x i16> poison, i16 %1024, i64 0, !dbg !48
  %1097 = insertelement <2 x i16> %1096, i16 %1025, i64 1, !dbg !48
  %1098 = bitcast <2 x i16> %1097 to i32, !dbg !48
  %1099 = insertelement <2 x i16> poison, i16 %1026, i64 0, !dbg !48
  %1100 = insertelement <2 x i16> %1099, i16 %1027, i64 1, !dbg !48
  %1101 = bitcast <2 x i16> %1100 to i32, !dbg !48
  %1102 = insertelement <2 x i16> poison, i16 %1028, i64 0, !dbg !48
  %1103 = insertelement <2 x i16> %1102, i16 %1029, i64 1, !dbg !48
  %1104 = bitcast <2 x i16> %1103 to i32, !dbg !48
  %1105 = insertelement <2 x i16> poison, i16 %1030, i64 0, !dbg !48
  %1106 = insertelement <2 x i16> %1105, i16 %1031, i64 1, !dbg !48
  %1107 = bitcast <2 x i16> %1106 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1098, i32 %1101, i32 %1104, i32 %1107, ptr addrspace(1) %997, i1 %736) #3, !dbg !48
  %1108 = insertelement <2 x i16> poison, i16 %1032, i64 0, !dbg !48
  %1109 = insertelement <2 x i16> %1108, i16 %1033, i64 1, !dbg !48
  %1110 = bitcast <2 x i16> %1109 to i32, !dbg !48
  %1111 = insertelement <2 x i16> poison, i16 %1034, i64 0, !dbg !48
  %1112 = insertelement <2 x i16> %1111, i16 %1035, i64 1, !dbg !48
  %1113 = bitcast <2 x i16> %1112 to i32, !dbg !48
  %1114 = insertelement <2 x i16> poison, i16 %1036, i64 0, !dbg !48
  %1115 = insertelement <2 x i16> %1114, i16 %1037, i64 1, !dbg !48
  %1116 = bitcast <2 x i16> %1115 to i32, !dbg !48
  %1117 = insertelement <2 x i16> poison, i16 %1038, i64 0, !dbg !48
  %1118 = insertelement <2 x i16> %1117, i16 %1039, i64 1, !dbg !48
  %1119 = bitcast <2 x i16> %1118 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1110, i32 %1113, i32 %1116, i32 %1119, ptr addrspace(1) %999, i1 %737) #3, !dbg !48
  %1120 = insertelement <2 x i16> poison, i16 %1040, i64 0, !dbg !48
  %1121 = insertelement <2 x i16> %1120, i16 %1041, i64 1, !dbg !48
  %1122 = bitcast <2 x i16> %1121 to i32, !dbg !48
  %1123 = insertelement <2 x i16> poison, i16 %1042, i64 0, !dbg !48
  %1124 = insertelement <2 x i16> %1123, i16 %1043, i64 1, !dbg !48
  %1125 = bitcast <2 x i16> %1124 to i32, !dbg !48
  %1126 = insertelement <2 x i16> poison, i16 %1044, i64 0, !dbg !48
  %1127 = insertelement <2 x i16> %1126, i16 %1045, i64 1, !dbg !48
  %1128 = bitcast <2 x i16> %1127 to i32, !dbg !48
  %1129 = insertelement <2 x i16> poison, i16 %1046, i64 0, !dbg !48
  %1130 = insertelement <2 x i16> %1129, i16 %1047, i64 1, !dbg !48
  %1131 = bitcast <2 x i16> %1130 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1122, i32 %1125, i32 %1128, i32 %1131, ptr addrspace(1) %1001, i1 %738) #3, !dbg !48
  %1132 = insertelement <2 x i16> poison, i16 %1048, i64 0, !dbg !48
  %1133 = insertelement <2 x i16> %1132, i16 %1049, i64 1, !dbg !48
  %1134 = bitcast <2 x i16> %1133 to i32, !dbg !48
  %1135 = insertelement <2 x i16> poison, i16 %1050, i64 0, !dbg !48
  %1136 = insertelement <2 x i16> %1135, i16 %1051, i64 1, !dbg !48
  %1137 = bitcast <2 x i16> %1136 to i32, !dbg !48
  %1138 = insertelement <2 x i16> poison, i16 %1052, i64 0, !dbg !48
  %1139 = insertelement <2 x i16> %1138, i16 %1053, i64 1, !dbg !48
  %1140 = bitcast <2 x i16> %1139 to i32, !dbg !48
  %1141 = insertelement <2 x i16> poison, i16 %1054, i64 0, !dbg !48
  %1142 = insertelement <2 x i16> %1141, i16 %1055, i64 1, !dbg !48
  %1143 = bitcast <2 x i16> %1142 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1134, i32 %1137, i32 %1140, i32 %1143, ptr addrspace(1) %1003, i1 %739) #3, !dbg !48
  %1144 = insertelement <2 x i16> poison, i16 %1056, i64 0, !dbg !48
  %1145 = insertelement <2 x i16> %1144, i16 %1057, i64 1, !dbg !48
  %1146 = bitcast <2 x i16> %1145 to i32, !dbg !48
  %1147 = insertelement <2 x i16> poison, i16 %1058, i64 0, !dbg !48
  %1148 = insertelement <2 x i16> %1147, i16 %1059, i64 1, !dbg !48
  %1149 = bitcast <2 x i16> %1148 to i32, !dbg !48
  %1150 = insertelement <2 x i16> poison, i16 %1060, i64 0, !dbg !48
  %1151 = insertelement <2 x i16> %1150, i16 %1061, i64 1, !dbg !48
  %1152 = bitcast <2 x i16> %1151 to i32, !dbg !48
  %1153 = insertelement <2 x i16> poison, i16 %1062, i64 0, !dbg !48
  %1154 = insertelement <2 x i16> %1153, i16 %1063, i64 1, !dbg !48
  %1155 = bitcast <2 x i16> %1154 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1146, i32 %1149, i32 %1152, i32 %1155, ptr addrspace(1) %1005, i1 %740) #3, !dbg !48
  %1156 = insertelement <2 x i16> poison, i16 %1064, i64 0, !dbg !48
  %1157 = insertelement <2 x i16> %1156, i16 %1065, i64 1, !dbg !48
  %1158 = bitcast <2 x i16> %1157 to i32, !dbg !48
  %1159 = insertelement <2 x i16> poison, i16 %1066, i64 0, !dbg !48
  %1160 = insertelement <2 x i16> %1159, i16 %1067, i64 1, !dbg !48
  %1161 = bitcast <2 x i16> %1160 to i32, !dbg !48
  %1162 = insertelement <2 x i16> poison, i16 %1068, i64 0, !dbg !48
  %1163 = insertelement <2 x i16> %1162, i16 %1069, i64 1, !dbg !48
  %1164 = bitcast <2 x i16> %1163 to i32, !dbg !48
  %1165 = insertelement <2 x i16> poison, i16 %1070, i64 0, !dbg !48
  %1166 = insertelement <2 x i16> %1165, i16 %1071, i64 1, !dbg !48
  %1167 = bitcast <2 x i16> %1166 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1158, i32 %1161, i32 %1164, i32 %1167, ptr addrspace(1) %1007, i1 %741) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cscwlc7mcsg7h3q5txwfqlvv23epbpx76vlgrwtaoso2tl7wxa7o.py", directory: "/opt/inductor_cache/sc")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 42, column: 24, scope: !7)
!11 = !DILocation(line: 48, column: 22, scope: !7)
!12 = !DILocation(line: 49, column: 41, scope: !7)
!13 = !DILocation(line: 49, column: 30, scope: !7)
!14 = !DILocation(line: 49, column: 50, scope: !7)
!15 = !DILocation(line: 50, column: 40, scope: !7)
!16 = !DILocation(line: 50, column: 34, scope: !7)
!17 = !DILocation(line: 51, column: 30, scope: !7)
!18 = !DILocation(line: 53, column: 17, scope: !7)
!19 = !DILocation(line: 53, column: 40, scope: !7)
!20 = !DILocation(line: 53, column: 27, scope: !7)
!21 = !DILocation(line: 54, column: 17, scope: !7)
!22 = !DILocation(line: 54, column: 40, scope: !7)
!23 = !DILocation(line: 54, column: 27, scope: !7)
!24 = !DILocation(line: 56, column: 52, scope: !7)
!25 = !DILocation(line: 60, column: 52, scope: !7)
!26 = !DILocation(line: 64, column: 28, scope: !7)
!27 = !DILocation(line: 64, column: 40, scope: !7)
!28 = !DILocation(line: 64, column: 13, scope: !7)
!29 = !DILocation(line: 65, column: 54, scope: !7)
!30 = !DILocation(line: 65, column: 39, scope: !7)
!31 = !DILocation(line: 65, column: 13, scope: !7)
!32 = !DILocation(line: 70, column: 24, scope: !7)
!33 = !DILocation(line: 71, column: 24, scope: !7)
!34 = !DILocation(line: 78, column: 13, scope: !7)
!35 = !DILocation(line: 79, column: 13, scope: !7)
!36 = !DILocation(line: 68, column: 25, scope: !7)
!37 = !DILocation(line: 77, column: 25, scope: !7)
!38 = !DILocation(line: 86, column: 20, scope: !7)
!39 = !DILocation(line: 86, column: 34, scope: !7)
!40 = !DILocation(line: 86, column: 26, scope: !7)
!41 = !DILocation(line: 89, column: 27, scope: !7)
!42 = !DILocation(line: 89, column: 22, scope: !7)
!43 = !DILocation(line: 90, column: 30, scope: !7)
!44 = !DILocation(line: 90, column: 66, scope: !7)
!45 = !DILocation(line: 90, column: 105, scope: !7)
!46 = !DILocation(line: 91, column: 17, scope: !7)
!47 = !DILocation(line: 92, column: 25, scope: !7)
!48 = !DILocation(line: 92, column: 68, scope: !7)
!49 = !DILocation(line: 92, column: 4, scope: !7)
