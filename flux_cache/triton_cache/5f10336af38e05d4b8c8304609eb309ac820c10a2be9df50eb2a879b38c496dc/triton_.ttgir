#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":23:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":23:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":23:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":23:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<3072> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<128x!tt.ptr<bf16>, #blocked>, tensor<128xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %9 = arith.extf %8 : tensor<128xbf16, #blocked> to tensor<128xf32, #blocked> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %4 : tensor<128x!tt.ptr<bf16>, #blocked>, tensor<128xi32, #blocked> loc(#loc10)
    %12 = tt.load %11, %5 : tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %13 = arith.extf %12 : tensor<128xbf16, #blocked> to tensor<128xf32, #blocked> loc(#loc12)
    %14 = arith.addf %9, %13 : tensor<128xf32, #blocked> loc(#loc13)
    %15 = arith.subf %cst, %14 : tensor<128xf32, #blocked> loc(#loc22)
    %16 = math.exp %15 : tensor<128xf32, #blocked> loc(#loc23)
    %17 = arith.addf %16, %cst_0 : tensor<128xf32, #blocked> loc(#loc24)
    %18 = arith.divf %cst_0, %17 : tensor<128xf32, #blocked> loc(#loc25)
    %19 = arith.mulf %14, %18 : tensor<128xf32, #blocked> loc(#loc19)
    %20 = arith.truncf %19 : tensor<128xf32, #blocked> to tensor<128xbf16, #blocked> loc(#loc20)
    tt.store %7, %20, %5 : tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc20)
    tt.return loc(#loc21)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":25:28)
#loc3 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":25:33)
#loc4 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":26:36)
#loc5 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":26:23)
#loc6 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":27:21)
#loc7 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":29:34)
#loc8 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":29:39)
#loc9 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":29:49)
#loc10 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":30:30)
#loc11 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":30:35)
#loc12 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":30:45)
#loc13 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":31:18)
#loc14 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":51:30)
#loc15 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":33:22)
#loc16 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":51:29)
#loc17 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":51:20)
#loc18 = loc("/usr/local/lib/python3.10/site-packages/triton/language/standard.py":51:16)
#loc19 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":34:18)
#loc20 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":36:39)
#loc21 = loc("/opt/inductor_cache/pf/cpftfnqifkwdg752t3ild4p6yko6eqzbihvwvqyjh3lj5yab2xao.py":36:4)
#loc22 = loc(callsite(#loc14 at #loc15))
#loc23 = loc(callsite(#loc16 at #loc15))
#loc24 = loc(callsite(#loc17 at #loc15))
#loc25 = loc(callsite(#loc18 at #loc15))
