#loc = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0)
module {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg5: i32 loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg6: i32 loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xbf16> loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<6144> : tensor<1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<3072> : tensor<1024xi32> loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = tt.splat %arg7 : i32 -> tensor<1024xi32> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32> loc(#loc6)
    %7 = arith.divsi %4, %cst_1 : tensor<1024xi32> loc(#loc7)
    %8 = arith.remsi %4, %cst_1 : tensor<1024xi32> loc(#loc8)
    %9 = arith.addi %8, %cst_0 : tensor<1024xi32> loc(#loc9)
    %10 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1024x!tt.ptr<bf16>> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1024x!tt.ptr<bf16>>, tensor<1024xi32> loc(#loc10)
    %12 = tt.load %11, %6 evictionPolicy = evict_last : tensor<1024x!tt.ptr<bf16>> loc(#loc11)
    %13 = arith.extf %12 : tensor<1024xbf16> to tensor<1024xf32> loc(#loc12)
    %14 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1024x!tt.ptr<bf16>> loc(#loc13)
    %15 = tt.addptr %14, %9 : tensor<1024x!tt.ptr<bf16>>, tensor<1024xi32> loc(#loc13)
    %16 = tt.load %15, %6 evictionPolicy = evict_last : tensor<1024x!tt.ptr<bf16>> loc(#loc14)
    %17 = arith.extf %16 : tensor<1024xbf16> to tensor<1024xf32> loc(#loc15)
    %18 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1024x!tt.ptr<bf16>> loc(#loc16)
    %19 = tt.addptr %18, %4 : tensor<1024x!tt.ptr<bf16>>, tensor<1024xi32> loc(#loc16)
    %20 = tt.load %19, %6 : tensor<1024x!tt.ptr<bf16>> loc(#loc17)
    %21 = arith.extf %20 : tensor<1024xbf16> to tensor<1024xf32> loc(#loc18)
    %22 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1024x!tt.ptr<bf16>> loc(#loc19)
    %23 = tt.addptr %22, %8 : tensor<1024x!tt.ptr<bf16>>, tensor<1024xi32> loc(#loc19)
    %24 = tt.load %23, %6 evictionPolicy = evict_last : tensor<1024x!tt.ptr<bf16>> loc(#loc20)
    %25 = arith.extf %24 : tensor<1024xbf16> to tensor<1024xf32> loc(#loc21)
    %26 = tt.splat %arg5 : i32 -> tensor<1024xi32> loc(#loc22)
    %27 = arith.cmpi slt, %7, %26 : tensor<1024xi32> loc(#loc22)
    %28 = arith.muli %7, %cst_1 : tensor<1024xi32> loc(#loc23)
    %29 = arith.addi %8, %28 : tensor<1024xi32> loc(#loc24)
    %30 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1024x!tt.ptr<bf16>> loc(#loc25)
    %31 = tt.addptr %30, %29 : tensor<1024x!tt.ptr<bf16>>, tensor<1024xi32> loc(#loc25)
    %32 = arith.andi %27, %6 : tensor<1024xi1> loc(#loc26)
    %33 = tt.load %31, %32, %cst : tensor<1024x!tt.ptr<bf16>> loc(#loc27)
    %34 = arith.extf %33 : tensor<1024xbf16> to tensor<1024xf32> loc(#loc28)
    %35 = arith.cmpi sge, %7, %26 : tensor<1024xi32> loc(#loc29)
    %36 = arith.muli %arg5, %c3072_i32 : i32 loc(#loc30)
    %37 = tt.splat %36 : i32 -> tensor<1024xi32> loc(#loc31)
    %38 = arith.addi %8, %37 : tensor<1024xi32> loc(#loc31)
    %39 = arith.muli %arg5, %c-1_i32 : i32 loc(#loc32)
    %40 = tt.splat %39 : i32 -> tensor<1024xi32> loc(#loc33)
    %41 = arith.addi %7, %40 : tensor<1024xi32> loc(#loc33)
    %42 = arith.muli %41, %cst_1 : tensor<1024xi32> loc(#loc34)
    %43 = arith.addi %38, %42 : tensor<1024xi32> loc(#loc35)
    %44 = tt.addptr %30, %43 : tensor<1024x!tt.ptr<bf16>>, tensor<1024xi32> loc(#loc36)
    %45 = arith.andi %35, %6 : tensor<1024xi1> loc(#loc37)
    %46 = tt.load %44, %45, %cst : tensor<1024x!tt.ptr<bf16>> loc(#loc38)
    %47 = arith.extf %46 : tensor<1024xbf16> to tensor<1024xf32> loc(#loc39)
    %48 = arith.select %27, %34, %47 : tensor<1024xi1>, tensor<1024xf32> loc(#loc40)
    %49 = arith.addf %13, %17 : tensor<1024xf32> loc(#loc41)
    %50 = arith.addf %21, %25 : tensor<1024xf32> loc(#loc42)
    %51 = arith.mulf %49, %50 : tensor<1024xf32> loc(#loc43)
    %52 = arith.addf %48, %51 : tensor<1024xf32> loc(#loc44)
    %53 = arith.truncf %52 : tensor<1024xf32> to tensor<1024xbf16> loc(#loc45)
    tt.store %19, %53, %6 : tensor<1024x!tt.ptr<bf16>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":19:28)
#loc3 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":19:33)
#loc4 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":20:36)
#loc5 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":20:23)
#loc6 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":21:21)
#loc7 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":22:20)
#loc8 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":23:18)
#loc9 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":25:38)
#loc10 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":25:31)
#loc11 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":25:43)
#loc12 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":25:83)
#loc13 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":26:31)
#loc14 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":26:43)
#loc15 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":26:83)
#loc16 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":27:35)
#loc17 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":27:40)
#loc18 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":27:50)
#loc19 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":28:31)
#loc20 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":28:36)
#loc21 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":28:76)
#loc22 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":33:18)
#loc23 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":34:41)
#loc24 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":34:36)
#loc25 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":34:30)
#loc26 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":34:54)
#loc27 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":34:47)
#loc28 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":34:75)
#loc29 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":35:19)
#loc30 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:41)
#loc31 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:36)
#loc32 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:66)
#loc33 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:61)
#loc34 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:55)
#loc35 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:49)
#loc36 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:30)
#loc37 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:82)
#loc38 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:75)
#loc39 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":38:103)
#loc40 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":39:33)
#loc41 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":40:20)
#loc42 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":41:20)
#loc43 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":42:20)
#loc44 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":43:20)
#loc45 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":44:40)
#loc46 = loc("/opt/inductor_cache/o4/co4q4x5lgeyaoitac33kiqtx5pn3k3c2mranmnoot7fcjts3rykm.py":44:4)
