#loc = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":18:0)
module {
  tt.func public @triton_mm(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":18:0)) attributes {noinline = false} {
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %cst = arith.constant dense<3072> : tensor<64x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<3072> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<64x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<64x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3072> : tensor<64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<64xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.divsi %0, %c384_i32 : i32 loc(#loc3)
    %2 = arith.muli %1, %c8_i32 : i32 loc(#loc4)
    %3 = arith.subi %c64_i32, %2 : i32 loc(#loc5)
    %4 = arith.minsi %3, %c8_i32 : i32 loc(#loc6)
    %5 = arith.remsi %0, %4 : i32 loc(#loc7)
    %6 = arith.addi %2, %5 : i32 loc(#loc8)
    %7 = arith.remsi %0, %c384_i32 : i32 loc(#loc9)
    %8 = arith.divsi %7, %4 : i32 loc(#loc10)
    %9 = arith.muli %6, %c64_i32 : i32 loc(#loc11)
    %10 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc12)
    %11 = tt.splat %9 : i32 -> tensor<64xi32> loc(#loc13)
    %12 = arith.addi %11, %10 : tensor<64xi32> loc(#loc13)
    %13 = arith.muli %8, %c64_i32 : i32 loc(#loc14)
    %14 = tt.splat %13 : i32 -> tensor<64xi32> loc(#loc15)
    %15 = arith.addi %14, %10 : tensor<64xi32> loc(#loc15)
    %16 = arith.remsi %12, %cst_6 {tt.contiguity = dense<64> : tensor<1xi32>, tt.divisibility = dense<64> : tensor<1xi32>} : tensor<64xi32> loc(#loc16)
    %17 = arith.remsi %15, %cst_5 {tt.contiguity = dense<64> : tensor<1xi32>, tt.divisibility = dense<64> : tensor<1xi32>} : tensor<64xi32> loc(#loc17)
    %18 = tt.expand_dims %16 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc18)
    %19 = arith.muli %18, %cst_4 : tensor<64x1xi32> loc(#loc19)
    %20 = tt.expand_dims %10 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc20)
    %21 = tt.broadcast %19 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc21)
    %22 = tt.broadcast %20 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc21)
    %23 = arith.addi %21, %22 : tensor<64x64xi32> loc(#loc21)
    %24 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc22)
    %25 = tt.addptr %24, %23 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc22)
    %26 = tt.expand_dims %10 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc23)
    %27 = tt.expand_dims %17 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc24)
    %28 = arith.muli %27, %cst_3 : tensor<1x64xi32> loc(#loc25)
    %29 = tt.broadcast %26 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc26)
    %30 = tt.broadcast %28 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc26)
    %31 = arith.addi %29, %30 : tensor<64x64xi32> loc(#loc26)
    %32 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc27)
    %33 = tt.addptr %32, %31 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc27)
    %34 = tt.load %25 : tensor<64x64x!tt.ptr<bf16>> loc(#loc28)
    %35 = tt.load %33 : tensor<64x64x!tt.ptr<bf16>> loc(#loc29)
    %36 = tt.dot %34, %35, %cst_2, inputPrecision = tf32 : tensor<64x64xbf16> * tensor<64x64xbf16> -> tensor<64x64xf32> loc(#loc30)
    %37 = tt.expand_dims %12 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc31)
    %38 = tt.expand_dims %15 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc32)
    %39 = arith.cmpi slt, %37, %cst_1 : tensor<64x1xi32> loc(#loc33)
    %40 = arith.cmpi slt, %38, %cst_0 : tensor<1x64xi32> loc(#loc34)
    %41 = tt.broadcast %39 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc35)
    %42 = tt.broadcast %40 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc35)
    %43 = arith.andi %41, %42 : tensor<64x64xi1> loc(#loc35)
    %44 = arith.muli %37, %cst : tensor<64x1xi32> loc(#loc36)
    %45 = tt.broadcast %38 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc37)
    %46 = tt.broadcast %44 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc37)
    %47 = arith.addi %45, %46 : tensor<64x64xi32> loc(#loc37)
    %48 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc38)
    %49 = tt.addptr %48, %47 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc38)
    %50 = arith.truncf %36 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc39)
    tt.store %49, %50, %43 : tensor<64x64x!tt.ptr<bf16>> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":42:24)
#loc3 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":48:22)
#loc4 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":49:41)
#loc5 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":49:30)
#loc6 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":49:50)
#loc7 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":50:40)
#loc8 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":50:34)
#loc9 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":51:19)
#loc10 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":51:30)
#loc11 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":53:17)
#loc12 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":53:40)
#loc13 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":53:27)
#loc14 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":54:17)
#loc15 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":54:27)
#loc16 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":56:52)
#loc17 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":60:52)
#loc18 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":64:17)
#loc19 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":64:28)
#loc20 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":64:43)
#loc21 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":64:40)
#loc22 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":64:13)
#loc23 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":65:16)
#loc24 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":65:43)
#loc25 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":65:54)
#loc26 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":65:39)
#loc27 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":65:13)
#loc28 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":70:24)
#loc29 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":71:24)
#loc30 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":77:25)
#loc31 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":84:15)
#loc32 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":85:15)
#loc33 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":86:20)
#loc34 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":86:34)
#loc35 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":86:26)
#loc36 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":89:27)
#loc37 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":89:22)
#loc38 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":90:25)
#loc39 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":90:67)
#loc40 = loc("/opt/inductor_cache/3c/c3csep4xatzvbsy7bq3huqcjqypmlkyneq2nwtk6eml2nruu3qu3.py":90:4)
