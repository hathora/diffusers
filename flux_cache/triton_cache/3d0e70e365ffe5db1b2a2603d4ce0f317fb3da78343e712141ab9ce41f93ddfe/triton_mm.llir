; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %5
  %6 = sdiv i32 %.frozen, 384, !dbg !11
  %7 = shl nsw i32 %6, 3, !dbg !12
  %8 = sub nsw i32 64, %7, !dbg !13
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 8), !dbg !14
  %10 = srem i32 %5, %9, !dbg !15
  %11 = add nsw i32 %7, %10, !dbg !16
  %12 = mul i32 %6, 384
  %.decomposed = sub i32 %.frozen, %12
  %13 = sdiv i32 %.decomposed, %9, !dbg !17
  %14 = shl i32 %11, 6, !dbg !18
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %16 = lshr i32 %15, 5, !dbg !19
  %17 = lshr i32 %15, 2, !dbg !19
  %18 = and i32 %17, 31, !dbg !19
  %19 = or disjoint i32 %18, 32, !dbg !19
  %20 = shl i32 %15, 3, !dbg !19
  %21 = and i32 %20, 24, !dbg !19
  %22 = or disjoint i32 %14, %18, !dbg !20
  %23 = or disjoint i32 %14, %19, !dbg !20
  %24 = shl nsw i32 %13, 6, !dbg !21
  %25 = or disjoint i32 %24, %18, !dbg !22
  %26 = or disjoint i32 %24, %19, !dbg !22
  %27 = srem i32 %22, 4096, !dbg !23
  %28 = srem i32 %23, 4096, !dbg !23
  %29 = srem i32 %25, 3072, !dbg !24
  %30 = srem i32 %26, 3072, !dbg !24
  %31 = mul nsw i32 %27, 3072, !dbg !25
  %32 = mul nsw i32 %28, 3072, !dbg !25
  %33 = or disjoint i32 %31, %21, !dbg !26
  %34 = or disjoint i32 %32, %21, !dbg !26
  %35 = sext i32 %33 to i64, !dbg !27
  %36 = getelementptr i16, ptr addrspace(1) %1, i64 %35, !dbg !27
  %37 = sext i32 %34 to i64, !dbg !27
  %38 = getelementptr i16, ptr addrspace(1) %1, i64 %37, !dbg !27
  %39 = mul nsw i32 %29, 3072, !dbg !28
  %40 = mul nsw i32 %30, 3072, !dbg !28
  %41 = or disjoint i32 %39, %21, !dbg !29
  %42 = or disjoint i32 %40, %21, !dbg !29
  %43 = sext i32 %41 to i64, !dbg !30
  %44 = getelementptr i16, ptr addrspace(1) %2, i64 %43, !dbg !30
  %45 = sext i32 %42 to i64, !dbg !30
  %46 = getelementptr i16, ptr addrspace(1) %2, i64 %45, !dbg !30
  %47 = shl nuw nsw i32 %18, 5, !dbg !31
  %48 = xor i32 %20, %15, !dbg !31
  %49 = and i32 %48, 24, !dbg !31
  %50 = or disjoint i32 %47, %49, !dbg !31
  %51 = zext nneg i32 %50 to i64, !dbg !31
  %52 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %51, !dbg !31
  %53 = shl nuw nsw i32 %19, 5, !dbg !31
  %54 = or disjoint i32 %53, %49, !dbg !31
  %55 = zext nneg i32 %54 to i64, !dbg !31
  %56 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %55, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %52, ptr addrspace(1) %36, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %56, ptr addrspace(1) %38, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %57 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %51, !dbg !32
  %58 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %55, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %57, ptr addrspace(1) %44, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %58, ptr addrspace(1) %46, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %59 = and i32 %16, 134217724
  br label %60, !dbg !33

60:                                               ; preds = %4, %60
  %61 = phi i32 [ -1, %4 ], [ %99, %60 ]
  %62 = phi i32 [ 0, %4 ], [ %225, %60 ]
  %.pn4884 = phi ptr addrspace(1) [ %46, %4 ], [ %222, %60 ]
  %.pn6483 = phi ptr addrspace(1) [ %44, %4 ], [ %221, %60 ]
  %.pn1682 = phi ptr addrspace(1) [ %38, %4 ], [ %220, %60 ]
  %.pn3281 = phi ptr addrspace(1) [ %36, %4 ], [ %219, %60 ]
  %63 = phi float [ 0.000000e+00, %4 ], [ %187, %60 ]
  %64 = phi float [ 0.000000e+00, %4 ], [ %188, %60 ]
  %65 = phi float [ 0.000000e+00, %4 ], [ %189, %60 ]
  %66 = phi float [ 0.000000e+00, %4 ], [ %190, %60 ]
  %67 = phi float [ 0.000000e+00, %4 ], [ %191, %60 ]
  %68 = phi float [ 0.000000e+00, %4 ], [ %192, %60 ]
  %69 = phi float [ 0.000000e+00, %4 ], [ %193, %60 ]
  %70 = phi float [ 0.000000e+00, %4 ], [ %194, %60 ]
  %71 = phi float [ 0.000000e+00, %4 ], [ %195, %60 ]
  %72 = phi float [ 0.000000e+00, %4 ], [ %196, %60 ]
  %73 = phi float [ 0.000000e+00, %4 ], [ %197, %60 ]
  %74 = phi float [ 0.000000e+00, %4 ], [ %198, %60 ]
  %75 = phi float [ 0.000000e+00, %4 ], [ %199, %60 ]
  %76 = phi float [ 0.000000e+00, %4 ], [ %200, %60 ]
  %77 = phi float [ 0.000000e+00, %4 ], [ %201, %60 ]
  %78 = phi float [ 0.000000e+00, %4 ], [ %202, %60 ]
  %79 = phi float [ 0.000000e+00, %4 ], [ %203, %60 ]
  %80 = phi float [ 0.000000e+00, %4 ], [ %204, %60 ]
  %81 = phi float [ 0.000000e+00, %4 ], [ %205, %60 ]
  %82 = phi float [ 0.000000e+00, %4 ], [ %206, %60 ]
  %83 = phi float [ 0.000000e+00, %4 ], [ %207, %60 ]
  %84 = phi float [ 0.000000e+00, %4 ], [ %208, %60 ]
  %85 = phi float [ 0.000000e+00, %4 ], [ %209, %60 ]
  %86 = phi float [ 0.000000e+00, %4 ], [ %210, %60 ]
  %87 = phi float [ 0.000000e+00, %4 ], [ %211, %60 ]
  %88 = phi float [ 0.000000e+00, %4 ], [ %212, %60 ]
  %89 = phi float [ 0.000000e+00, %4 ], [ %213, %60 ]
  %90 = phi float [ 0.000000e+00, %4 ], [ %214, %60 ]
  %91 = phi float [ 0.000000e+00, %4 ], [ %215, %60 ]
  %92 = phi float [ 0.000000e+00, %4 ], [ %216, %60 ]
  %93 = phi float [ 0.000000e+00, %4 ], [ %217, %60 ]
  %94 = phi float [ 0.000000e+00, %4 ], [ %218, %60 ]
  %95 = phi i32 [ 0, %4 ], [ %235, %60 ]
  %96 = icmp ult i32 %95, 3040, !dbg !33
  %97 = add i32 %61, 1, !dbg !33
  %98 = icmp slt i32 %97, 2, !dbg !33
  %99 = select i1 %98, i32 %97, i32 0, !dbg !33
  %100 = shl i32 %99, 11, !dbg !31
  %101 = sext i32 %100 to i64, !dbg !31
  %102 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %101, !dbg !31
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %103 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %101, !dbg !32
  %104 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %59, i32 0, i32 31), !dbg !34
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !34
  %105 = shl i32 %104, 6, !dbg !34
  %106 = and i32 %105, 192, !dbg !34
  %107 = zext nneg i32 %106 to i64, !dbg !34
  %108 = ptrtoint ptr addrspace(3) %102 to i64, !dbg !34
  %109 = lshr exact i64 %108, 4, !dbg !34
  %110 = and i64 %109, 16383, !dbg !34
  %111 = or disjoint i64 %110, -9223371899399045120, !dbg !34
  %112 = add nuw nsw i64 %111, %107, !dbg !34
  %113 = ptrtoint ptr addrspace(3) %103 to i64, !dbg !34
  %114 = lshr exact i64 %113, 4, !dbg !34
  %115 = and i64 %114, 16383, !dbg !34
  %116 = or disjoint i64 %115, -9223371899399045120, !dbg !34
  %117 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %63, float %64, float %65, float %66, float %67, float %68, float %69, float %70, float %71, float %72, float %73, float %74, float %75, float %76, float %77, float %78, float %79, float %80, float %81, float %82, float %83, float %84, float %85, float %86, float %87, float %88, float %89, float %90, float %91, float %92, float %93, float %94, i64 %112, i64 %116) #3, !dbg !34
  %118 = add nuw nsw i64 %110, -9223371899399045118, !dbg !34
  %119 = add nuw nsw i64 %118, %107, !dbg !34
  %120 = add nuw nsw i64 %115, -9223371899399045118, !dbg !34
  %121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 0, !dbg !34
  %122 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 1, !dbg !34
  %123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 2, !dbg !34
  %124 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 3, !dbg !34
  %125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 4, !dbg !34
  %126 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 5, !dbg !34
  %127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 6, !dbg !34
  %128 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 7, !dbg !34
  %129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 8, !dbg !34
  %130 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 9, !dbg !34
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 10, !dbg !34
  %132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 11, !dbg !34
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 12, !dbg !34
  %134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 13, !dbg !34
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 14, !dbg !34
  %136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 15, !dbg !34
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 16, !dbg !34
  %138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 17, !dbg !34
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 18, !dbg !34
  %140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 19, !dbg !34
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 20, !dbg !34
  %142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 21, !dbg !34
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 22, !dbg !34
  %144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 23, !dbg !34
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 24, !dbg !34
  %146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 25, !dbg !34
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 26, !dbg !34
  %148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 27, !dbg !34
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 28, !dbg !34
  %150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 29, !dbg !34
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 30, !dbg !34
  %152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %117, 31, !dbg !34
  %153 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, i64 %119, i64 %120) #3, !dbg !34
  %154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 0, !dbg !34
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 1, !dbg !34
  %156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 2, !dbg !34
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 3, !dbg !34
  %158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 4, !dbg !34
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 5, !dbg !34
  %160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 6, !dbg !34
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 7, !dbg !34
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 8, !dbg !34
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 9, !dbg !34
  %164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 10, !dbg !34
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 11, !dbg !34
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 12, !dbg !34
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 13, !dbg !34
  %168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 14, !dbg !34
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 15, !dbg !34
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 16, !dbg !34
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 17, !dbg !34
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 18, !dbg !34
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 19, !dbg !34
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 20, !dbg !34
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 21, !dbg !34
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 22, !dbg !34
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 23, !dbg !34
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 24, !dbg !34
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 25, !dbg !34
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 26, !dbg !34
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 27, !dbg !34
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 28, !dbg !34
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 29, !dbg !34
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 30, !dbg !34
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %153, 31, !dbg !34
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !34
  %186 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, float %163, float %164, float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, ptr addrspace(3) %102, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %103, i32 1, i32 32, i32 0, i32 0) #3, !dbg !34
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 0, !dbg !34
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 1, !dbg !34
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 2, !dbg !34
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 3, !dbg !34
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 4, !dbg !34
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 5, !dbg !34
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 6, !dbg !34
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 7, !dbg !34
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 8, !dbg !34
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 9, !dbg !34
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 10, !dbg !34
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 11, !dbg !34
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 12, !dbg !34
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 13, !dbg !34
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 14, !dbg !34
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 15, !dbg !34
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 16, !dbg !34
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 17, !dbg !34
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 18, !dbg !34
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 19, !dbg !34
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 20, !dbg !34
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 21, !dbg !34
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 22, !dbg !34
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 23, !dbg !34
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 24, !dbg !34
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 25, !dbg !34
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 26, !dbg !34
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 27, !dbg !34
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 28, !dbg !34
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 29, !dbg !34
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 30, !dbg !34
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %186, 31, !dbg !34
  %219 = getelementptr i8, ptr addrspace(1) %.pn3281, i64 64, !dbg !35
  %220 = getelementptr i8, ptr addrspace(1) %.pn1682, i64 64, !dbg !35
  %221 = getelementptr i8, ptr addrspace(1) %.pn6483, i64 64, !dbg !36
  %222 = getelementptr i8, ptr addrspace(1) %.pn4884, i64 64, !dbg !36
  %223 = add i32 %62, 1, !dbg !33
  %224 = icmp slt i32 %223, 2, !dbg !33
  %225 = select i1 %224, i32 %223, i32 0, !dbg !33
  %226 = shl i32 %225, 11, !dbg !31
  %227 = sext i32 %226 to i64, !dbg !31
  %228 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %227, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %229 = getelementptr i16, ptr addrspace(3) %228, i64 %51, !dbg !31
  %230 = getelementptr i16, ptr addrspace(3) %228, i64 %55, !dbg !31
  %231 = select i1 %96, i32 16, i32 0, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %229, ptr addrspace(1) %219, i32 %231, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %230, ptr addrspace(1) %220, i32 %231, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %232 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %227, !dbg !32
  %233 = getelementptr i16, ptr addrspace(3) %232, i64 %51, !dbg !32
  %234 = getelementptr i16, ptr addrspace(3) %232, i64 %55, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %233, ptr addrspace(1) %221, i32 %231, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %234, ptr addrspace(1) %222, i32 %231, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %235 = add nuw nsw i32 %95, 32, !dbg !33
  br i1 %96, label %60, label %236, !dbg !33

236:                                              ; preds = %60
  %237 = and i32 %20, 56, !dbg !19
  %238 = or disjoint i32 %237, %24, !dbg !22
  %239 = lshr i32 %15, 3, !dbg !19
  %240 = and i32 %239, 7, !dbg !19
  %241 = lshr i32 %15, 3, !dbg !19
  %242 = and i32 %241, 8, !dbg !19
  %243 = or disjoint i32 %240, %242, !dbg !19
  %244 = or disjoint i32 %243, %14, !dbg !20
  %245 = or disjoint i32 %244, 48, !dbg !20
  %246 = or disjoint i32 %244, 32, !dbg !20
  %247 = or disjoint i32 %244, 16, !dbg !20
  %248 = and i32 %15, 31, !dbg !19
  %249 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218) #3, !dbg !33
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 0, !dbg !33
  %251 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 1, !dbg !33
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 2, !dbg !33
  %253 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 3, !dbg !33
  %254 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 4, !dbg !33
  %255 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 5, !dbg !33
  %256 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 6, !dbg !33
  %257 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 7, !dbg !33
  %258 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 8, !dbg !33
  %259 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 9, !dbg !33
  %260 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 10, !dbg !33
  %261 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 11, !dbg !33
  %262 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 12, !dbg !33
  %263 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 13, !dbg !33
  %264 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 14, !dbg !33
  %265 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 15, !dbg !33
  %266 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 16, !dbg !33
  %267 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 17, !dbg !33
  %268 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 18, !dbg !33
  %269 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 19, !dbg !33
  %270 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 20, !dbg !33
  %271 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 21, !dbg !33
  %272 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 22, !dbg !33
  %273 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 23, !dbg !33
  %274 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 24, !dbg !33
  %275 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 25, !dbg !33
  %276 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 26, !dbg !33
  %277 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 27, !dbg !33
  %278 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 28, !dbg !33
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 29, !dbg !33
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 30, !dbg !33
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %249, 31, !dbg !33
  %282 = and i32 %16, 3, !dbg !33
  %283 = lshr i32 %248, 2, !dbg !33
  %284 = shl i32 %15, 1, !dbg !33
  %285 = and i32 %284, 6, !dbg !33
  %286 = shl nuw nsw i32 %282, 4, !dbg !33
  %287 = or disjoint i32 %286, %283, !dbg !33
  %288 = mul nuw nsw i32 %287, 72, !dbg !33
  %289 = or disjoint i32 %288, %285, !dbg !33
  %290 = zext nneg i32 %289 to i64, !dbg !33
  %291 = getelementptr float, ptr addrspace(3) @global_smem, i64 %290, !dbg !33
  %292 = insertelement <2 x float> poison, float %250, i64 0, !dbg !33
  %293 = insertelement <2 x float> %292, float %251, i64 1, !dbg !33
  store <2 x float> %293, ptr addrspace(3) %291, align 8, !dbg !33
  %294 = add nuw nsw i32 %288, 576, !dbg !33
  %295 = or disjoint i32 %294, %285, !dbg !33
  %296 = zext nneg i32 %295 to i64, !dbg !33
  %297 = getelementptr float, ptr addrspace(3) @global_smem, i64 %296, !dbg !33
  %298 = insertelement <2 x float> poison, float %252, i64 0, !dbg !33
  %299 = insertelement <2 x float> %298, float %253, i64 1, !dbg !33
  store <2 x float> %299, ptr addrspace(3) %297, align 8, !dbg !33
  %300 = or disjoint i32 %285, 8, !dbg !33
  %301 = add nuw nsw i32 %288, %300, !dbg !33
  %302 = zext nneg i32 %301 to i64, !dbg !33
  %303 = getelementptr float, ptr addrspace(3) @global_smem, i64 %302, !dbg !33
  %304 = insertelement <2 x float> poison, float %254, i64 0, !dbg !33
  %305 = insertelement <2 x float> %304, float %255, i64 1, !dbg !33
  store <2 x float> %305, ptr addrspace(3) %303, align 8, !dbg !33
  %306 = add nuw nsw i32 %294, %300, !dbg !33
  %307 = zext nneg i32 %306 to i64, !dbg !33
  %308 = getelementptr float, ptr addrspace(3) @global_smem, i64 %307, !dbg !33
  %309 = insertelement <2 x float> poison, float %256, i64 0, !dbg !33
  %310 = insertelement <2 x float> %309, float %257, i64 1, !dbg !33
  store <2 x float> %310, ptr addrspace(3) %308, align 8, !dbg !33
  %311 = or disjoint i32 %285, 16, !dbg !33
  %312 = add nuw nsw i32 %288, %311, !dbg !33
  %313 = zext nneg i32 %312 to i64, !dbg !33
  %314 = getelementptr float, ptr addrspace(3) @global_smem, i64 %313, !dbg !33
  %315 = insertelement <2 x float> poison, float %258, i64 0, !dbg !33
  %316 = insertelement <2 x float> %315, float %259, i64 1, !dbg !33
  store <2 x float> %316, ptr addrspace(3) %314, align 8, !dbg !33
  %317 = add nuw nsw i32 %294, %311, !dbg !33
  %318 = zext nneg i32 %317 to i64, !dbg !33
  %319 = getelementptr float, ptr addrspace(3) @global_smem, i64 %318, !dbg !33
  %320 = insertelement <2 x float> poison, float %260, i64 0, !dbg !33
  %321 = insertelement <2 x float> %320, float %261, i64 1, !dbg !33
  store <2 x float> %321, ptr addrspace(3) %319, align 8, !dbg !33
  %322 = or disjoint i32 %285, 24, !dbg !33
  %323 = add nuw nsw i32 %288, %322, !dbg !33
  %324 = zext nneg i32 %323 to i64, !dbg !33
  %325 = getelementptr float, ptr addrspace(3) @global_smem, i64 %324, !dbg !33
  %326 = insertelement <2 x float> poison, float %262, i64 0, !dbg !33
  %327 = insertelement <2 x float> %326, float %263, i64 1, !dbg !33
  store <2 x float> %327, ptr addrspace(3) %325, align 8, !dbg !33
  %328 = add nuw nsw i32 %294, %322, !dbg !33
  %329 = zext nneg i32 %328 to i64, !dbg !33
  %330 = getelementptr float, ptr addrspace(3) @global_smem, i64 %329, !dbg !33
  %331 = insertelement <2 x float> poison, float %264, i64 0, !dbg !33
  %332 = insertelement <2 x float> %331, float %265, i64 1, !dbg !33
  store <2 x float> %332, ptr addrspace(3) %330, align 8, !dbg !33
  %333 = or disjoint i32 %285, 32, !dbg !33
  %334 = add nuw nsw i32 %288, %333, !dbg !33
  %335 = zext nneg i32 %334 to i64, !dbg !33
  %336 = getelementptr float, ptr addrspace(3) @global_smem, i64 %335, !dbg !33
  %337 = insertelement <2 x float> poison, float %266, i64 0, !dbg !33
  %338 = insertelement <2 x float> %337, float %267, i64 1, !dbg !33
  store <2 x float> %338, ptr addrspace(3) %336, align 8, !dbg !33
  %339 = add nuw nsw i32 %294, %333, !dbg !33
  %340 = zext nneg i32 %339 to i64, !dbg !33
  %341 = getelementptr float, ptr addrspace(3) @global_smem, i64 %340, !dbg !33
  %342 = insertelement <2 x float> poison, float %268, i64 0, !dbg !33
  %343 = insertelement <2 x float> %342, float %269, i64 1, !dbg !33
  store <2 x float> %343, ptr addrspace(3) %341, align 8, !dbg !33
  %344 = or disjoint i32 %285, 40, !dbg !33
  %345 = add nuw nsw i32 %288, %344, !dbg !33
  %346 = zext nneg i32 %345 to i64, !dbg !33
  %347 = getelementptr float, ptr addrspace(3) @global_smem, i64 %346, !dbg !33
  %348 = insertelement <2 x float> poison, float %270, i64 0, !dbg !33
  %349 = insertelement <2 x float> %348, float %271, i64 1, !dbg !33
  store <2 x float> %349, ptr addrspace(3) %347, align 8, !dbg !33
  %350 = add nuw nsw i32 %294, %344, !dbg !33
  %351 = zext nneg i32 %350 to i64, !dbg !33
  %352 = getelementptr float, ptr addrspace(3) @global_smem, i64 %351, !dbg !33
  %353 = insertelement <2 x float> poison, float %272, i64 0, !dbg !33
  %354 = insertelement <2 x float> %353, float %273, i64 1, !dbg !33
  store <2 x float> %354, ptr addrspace(3) %352, align 8, !dbg !33
  %355 = or disjoint i32 %285, 48, !dbg !33
  %356 = add nuw nsw i32 %288, %355, !dbg !33
  %357 = zext nneg i32 %356 to i64, !dbg !33
  %358 = getelementptr float, ptr addrspace(3) @global_smem, i64 %357, !dbg !33
  %359 = insertelement <2 x float> poison, float %274, i64 0, !dbg !33
  %360 = insertelement <2 x float> %359, float %275, i64 1, !dbg !33
  store <2 x float> %360, ptr addrspace(3) %358, align 8, !dbg !33
  %361 = add nuw nsw i32 %294, %355, !dbg !33
  %362 = zext nneg i32 %361 to i64, !dbg !33
  %363 = getelementptr float, ptr addrspace(3) @global_smem, i64 %362, !dbg !33
  %364 = insertelement <2 x float> poison, float %276, i64 0, !dbg !33
  %365 = insertelement <2 x float> %364, float %277, i64 1, !dbg !33
  store <2 x float> %365, ptr addrspace(3) %363, align 8, !dbg !33
  %366 = or disjoint i32 %285, 56, !dbg !33
  %367 = add nuw nsw i32 %288, %366, !dbg !33
  %368 = zext nneg i32 %367 to i64, !dbg !33
  %369 = getelementptr float, ptr addrspace(3) @global_smem, i64 %368, !dbg !33
  %370 = insertelement <2 x float> poison, float %278, i64 0, !dbg !33
  %371 = insertelement <2 x float> %370, float %279, i64 1, !dbg !33
  store <2 x float> %371, ptr addrspace(3) %369, align 8, !dbg !33
  %372 = add nuw nsw i32 %294, %366, !dbg !33
  %373 = zext nneg i32 %372 to i64, !dbg !33
  %374 = getelementptr float, ptr addrspace(3) @global_smem, i64 %373, !dbg !33
  %375 = insertelement <2 x float> poison, float %280, i64 0, !dbg !33
  %376 = insertelement <2 x float> %375, float %281, i64 1, !dbg !33
  store <2 x float> %376, ptr addrspace(3) %374, align 8, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %377 = lshr i32 %248, 3, !dbg !33
  %378 = shl nuw nsw i32 %282, 2, !dbg !33
  %379 = or disjoint i32 %378, %377, !dbg !33
  %380 = and i32 %20, 56, !dbg !33
  %381 = mul nuw nsw i32 %379, 72, !dbg !33
  %382 = add nuw nsw i32 %381, %380, !dbg !33
  %383 = zext nneg i32 %382 to i64, !dbg !33
  %384 = getelementptr float, ptr addrspace(3) @global_smem, i64 %383, !dbg !33
  %385 = load float, ptr addrspace(3) %384, align 32, !dbg !33
  %386 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 4, !dbg !33
  %387 = load float, ptr addrspace(3) %386, align 4, !dbg !33
  %388 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 8, !dbg !33
  %389 = load float, ptr addrspace(3) %388, align 8, !dbg !33
  %390 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 12, !dbg !33
  %391 = load float, ptr addrspace(3) %390, align 4, !dbg !33
  %392 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 16, !dbg !33
  %393 = load float, ptr addrspace(3) %392, align 16, !dbg !33
  %394 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 20, !dbg !33
  %395 = load float, ptr addrspace(3) %394, align 4, !dbg !33
  %396 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 24, !dbg !33
  %397 = load float, ptr addrspace(3) %396, align 8, !dbg !33
  %398 = getelementptr inbounds i8, ptr addrspace(3) %384, i64 28, !dbg !33
  %399 = load float, ptr addrspace(3) %398, align 4, !dbg !33
  %400 = getelementptr i8, ptr addrspace(3) %384, i64 4608, !dbg !33
  %401 = load float, ptr addrspace(3) %400, align 32, !dbg !33
  %402 = getelementptr i8, ptr addrspace(3) %384, i64 4612, !dbg !33
  %403 = load float, ptr addrspace(3) %402, align 4, !dbg !33
  %404 = getelementptr i8, ptr addrspace(3) %384, i64 4616, !dbg !33
  %405 = load float, ptr addrspace(3) %404, align 8, !dbg !33
  %406 = getelementptr i8, ptr addrspace(3) %384, i64 4620, !dbg !33
  %407 = load float, ptr addrspace(3) %406, align 4, !dbg !33
  %408 = getelementptr i8, ptr addrspace(3) %384, i64 4624, !dbg !33
  %409 = load float, ptr addrspace(3) %408, align 16, !dbg !33
  %410 = getelementptr i8, ptr addrspace(3) %384, i64 4628, !dbg !33
  %411 = load float, ptr addrspace(3) %410, align 4, !dbg !33
  %412 = getelementptr i8, ptr addrspace(3) %384, i64 4632, !dbg !33
  %413 = load float, ptr addrspace(3) %412, align 8, !dbg !33
  %414 = getelementptr i8, ptr addrspace(3) %384, i64 4636, !dbg !33
  %415 = load float, ptr addrspace(3) %414, align 4, !dbg !33
  %416 = getelementptr i8, ptr addrspace(3) %384, i64 9216, !dbg !33
  %417 = load float, ptr addrspace(3) %416, align 32, !dbg !33
  %418 = getelementptr i8, ptr addrspace(3) %384, i64 9220, !dbg !33
  %419 = load float, ptr addrspace(3) %418, align 4, !dbg !33
  %420 = getelementptr i8, ptr addrspace(3) %384, i64 9224, !dbg !33
  %421 = load float, ptr addrspace(3) %420, align 8, !dbg !33
  %422 = getelementptr i8, ptr addrspace(3) %384, i64 9228, !dbg !33
  %423 = load float, ptr addrspace(3) %422, align 4, !dbg !33
  %424 = getelementptr i8, ptr addrspace(3) %384, i64 9232, !dbg !33
  %425 = load float, ptr addrspace(3) %424, align 16, !dbg !33
  %426 = getelementptr i8, ptr addrspace(3) %384, i64 9236, !dbg !33
  %427 = load float, ptr addrspace(3) %426, align 4, !dbg !33
  %428 = getelementptr i8, ptr addrspace(3) %384, i64 9240, !dbg !33
  %429 = load float, ptr addrspace(3) %428, align 8, !dbg !33
  %430 = getelementptr i8, ptr addrspace(3) %384, i64 9244, !dbg !33
  %431 = load float, ptr addrspace(3) %430, align 4, !dbg !33
  %432 = getelementptr i8, ptr addrspace(3) %384, i64 13824, !dbg !33
  %433 = load float, ptr addrspace(3) %432, align 32, !dbg !33
  %434 = getelementptr i8, ptr addrspace(3) %384, i64 13828, !dbg !33
  %435 = load float, ptr addrspace(3) %434, align 4, !dbg !33
  %436 = getelementptr i8, ptr addrspace(3) %384, i64 13832, !dbg !33
  %437 = load float, ptr addrspace(3) %436, align 8, !dbg !33
  %438 = getelementptr i8, ptr addrspace(3) %384, i64 13836, !dbg !33
  %439 = load float, ptr addrspace(3) %438, align 4, !dbg !33
  %440 = getelementptr i8, ptr addrspace(3) %384, i64 13840, !dbg !33
  %441 = load float, ptr addrspace(3) %440, align 16, !dbg !33
  %442 = getelementptr i8, ptr addrspace(3) %384, i64 13844, !dbg !33
  %443 = load float, ptr addrspace(3) %442, align 4, !dbg !33
  %444 = getelementptr i8, ptr addrspace(3) %384, i64 13848, !dbg !33
  %445 = load float, ptr addrspace(3) %444, align 8, !dbg !33
  %446 = getelementptr i8, ptr addrspace(3) %384, i64 13852, !dbg !33
  %447 = load float, ptr addrspace(3) %446, align 4, !dbg !33
  %448 = icmp slt i32 %244, 4096, !dbg !37
  %449 = icmp slt i32 %247, 4096, !dbg !37
  %450 = icmp slt i32 %246, 4096, !dbg !37
  %451 = icmp slt i32 %245, 4096, !dbg !37
  %452 = icmp slt i32 %238, 3072, !dbg !38
  %453 = and i1 %452, %448, !dbg !39
  %454 = and i1 %452, %449, !dbg !39
  %455 = and i1 %452, %450, !dbg !39
  %456 = and i1 %452, %451, !dbg !39
  %457 = mul i32 %244, 3072, !dbg !40
  %458 = mul i32 %247, 3072, !dbg !40
  %459 = mul i32 %246, 3072, !dbg !40
  %460 = mul i32 %245, 3072, !dbg !40
  %461 = add i32 %457, %238, !dbg !41
  %462 = add i32 %458, %238, !dbg !41
  %463 = add i32 %459, %238, !dbg !41
  %464 = add i32 %460, %238, !dbg !41
  %465 = sext i32 %238 to i64, !dbg !42
  %466 = getelementptr i16, ptr addrspace(1) %0, i64 %465, !dbg !42
  %467 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %466, i1 %453) #3, !dbg !43
  %468 = extractvalue { i32, i32, i32, i32 } %467, 0, !dbg !43
  %469 = extractvalue { i32, i32, i32, i32 } %467, 1, !dbg !43
  %470 = extractvalue { i32, i32, i32, i32 } %467, 2, !dbg !43
  %471 = extractvalue { i32, i32, i32, i32 } %467, 3, !dbg !43
  %472 = trunc i32 %468 to i16, !dbg !43
  %extelt.offset = lshr i32 %468, 16, !dbg !43
  %473 = trunc nuw i32 %extelt.offset to i16, !dbg !43
  %474 = trunc i32 %469 to i16, !dbg !43
  %extelt.offset65 = lshr i32 %469, 16, !dbg !43
  %475 = trunc nuw i32 %extelt.offset65 to i16, !dbg !43
  %476 = trunc i32 %470 to i16, !dbg !43
  %extelt.offset66 = lshr i32 %470, 16, !dbg !43
  %477 = trunc nuw i32 %extelt.offset66 to i16, !dbg !43
  %478 = trunc i32 %471 to i16, !dbg !43
  %extelt.offset67 = lshr i32 %471, 16, !dbg !43
  %479 = trunc nuw i32 %extelt.offset67 to i16, !dbg !43
  %480 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %466, i1 %454) #3, !dbg !43
  %481 = extractvalue { i32, i32, i32, i32 } %480, 0, !dbg !43
  %482 = extractvalue { i32, i32, i32, i32 } %480, 1, !dbg !43
  %483 = extractvalue { i32, i32, i32, i32 } %480, 2, !dbg !43
  %484 = extractvalue { i32, i32, i32, i32 } %480, 3, !dbg !43
  %485 = trunc i32 %481 to i16, !dbg !43
  %extelt.offset68 = lshr i32 %481, 16, !dbg !43
  %486 = trunc nuw i32 %extelt.offset68 to i16, !dbg !43
  %487 = trunc i32 %482 to i16, !dbg !43
  %extelt.offset69 = lshr i32 %482, 16, !dbg !43
  %488 = trunc nuw i32 %extelt.offset69 to i16, !dbg !43
  %489 = trunc i32 %483 to i16, !dbg !43
  %extelt.offset70 = lshr i32 %483, 16, !dbg !43
  %490 = trunc nuw i32 %extelt.offset70 to i16, !dbg !43
  %491 = trunc i32 %484 to i16, !dbg !43
  %extelt.offset71 = lshr i32 %484, 16, !dbg !43
  %492 = trunc nuw i32 %extelt.offset71 to i16, !dbg !43
  %493 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %466, i1 %455) #3, !dbg !43
  %494 = extractvalue { i32, i32, i32, i32 } %493, 0, !dbg !43
  %495 = extractvalue { i32, i32, i32, i32 } %493, 1, !dbg !43
  %496 = extractvalue { i32, i32, i32, i32 } %493, 2, !dbg !43
  %497 = extractvalue { i32, i32, i32, i32 } %493, 3, !dbg !43
  %498 = trunc i32 %494 to i16, !dbg !43
  %extelt.offset72 = lshr i32 %494, 16, !dbg !43
  %499 = trunc nuw i32 %extelt.offset72 to i16, !dbg !43
  %500 = trunc i32 %495 to i16, !dbg !43
  %extelt.offset73 = lshr i32 %495, 16, !dbg !43
  %501 = trunc nuw i32 %extelt.offset73 to i16, !dbg !43
  %502 = trunc i32 %496 to i16, !dbg !43
  %extelt.offset74 = lshr i32 %496, 16, !dbg !43
  %503 = trunc nuw i32 %extelt.offset74 to i16, !dbg !43
  %504 = trunc i32 %497 to i16, !dbg !43
  %extelt.offset75 = lshr i32 %497, 16, !dbg !43
  %505 = trunc nuw i32 %extelt.offset75 to i16, !dbg !43
  %506 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %466, i1 %456) #3, !dbg !43
  %507 = extractvalue { i32, i32, i32, i32 } %506, 0, !dbg !43
  %508 = extractvalue { i32, i32, i32, i32 } %506, 1, !dbg !43
  %509 = extractvalue { i32, i32, i32, i32 } %506, 2, !dbg !43
  %510 = extractvalue { i32, i32, i32, i32 } %506, 3, !dbg !43
  %511 = trunc i32 %507 to i16, !dbg !43
  %extelt.offset76 = lshr i32 %507, 16, !dbg !43
  %512 = trunc nuw i32 %extelt.offset76 to i16, !dbg !43
  %513 = trunc i32 %508 to i16, !dbg !43
  %extelt.offset77 = lshr i32 %508, 16, !dbg !43
  %514 = trunc nuw i32 %extelt.offset77 to i16, !dbg !43
  %515 = trunc i32 %509 to i16, !dbg !43
  %extelt.offset78 = lshr i32 %509, 16, !dbg !43
  %516 = trunc nuw i32 %extelt.offset78 to i16, !dbg !43
  %517 = trunc i32 %510 to i16, !dbg !43
  %extelt.offset79 = lshr i32 %510, 16, !dbg !43
  %518 = trunc nuw i32 %extelt.offset79 to i16, !dbg !43
  %519 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %472) #3, !dbg !44
  %520 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %473) #3, !dbg !44
  %521 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %474) #3, !dbg !44
  %522 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %475) #3, !dbg !44
  %523 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %476) #3, !dbg !44
  %524 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %477) #3, !dbg !44
  %525 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %478) #3, !dbg !44
  %526 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %479) #3, !dbg !44
  %527 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %485) #3, !dbg !44
  %528 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %486) #3, !dbg !44
  %529 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %487) #3, !dbg !44
  %530 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %488) #3, !dbg !44
  %531 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %489) #3, !dbg !44
  %532 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %490) #3, !dbg !44
  %533 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %491) #3, !dbg !44
  %534 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %492) #3, !dbg !44
  %535 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %498) #3, !dbg !44
  %536 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %499) #3, !dbg !44
  %537 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %500) #3, !dbg !44
  %538 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %501) #3, !dbg !44
  %539 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %502) #3, !dbg !44
  %540 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %503) #3, !dbg !44
  %541 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %504) #3, !dbg !44
  %542 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %505) #3, !dbg !44
  %543 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %511) #3, !dbg !44
  %544 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %512) #3, !dbg !44
  %545 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %513) #3, !dbg !44
  %546 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %514) #3, !dbg !44
  %547 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %515) #3, !dbg !44
  %548 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %516) #3, !dbg !44
  %549 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %517) #3, !dbg !44
  %550 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %518) #3, !dbg !44
  %551 = fadd float %385, %519, !dbg !45
  %552 = fadd float %387, %520, !dbg !45
  %553 = fadd float %389, %521, !dbg !45
  %554 = fadd float %391, %522, !dbg !45
  %555 = fadd float %393, %523, !dbg !45
  %556 = fadd float %395, %524, !dbg !45
  %557 = fadd float %397, %525, !dbg !45
  %558 = fadd float %399, %526, !dbg !45
  %559 = fadd float %401, %527, !dbg !45
  %560 = fadd float %403, %528, !dbg !45
  %561 = fadd float %405, %529, !dbg !45
  %562 = fadd float %407, %530, !dbg !45
  %563 = fadd float %409, %531, !dbg !45
  %564 = fadd float %411, %532, !dbg !45
  %565 = fadd float %413, %533, !dbg !45
  %566 = fadd float %415, %534, !dbg !45
  %567 = fadd float %417, %535, !dbg !45
  %568 = fadd float %419, %536, !dbg !45
  %569 = fadd float %421, %537, !dbg !45
  %570 = fadd float %423, %538, !dbg !45
  %571 = fadd float %425, %539, !dbg !45
  %572 = fadd float %427, %540, !dbg !45
  %573 = fadd float %429, %541, !dbg !45
  %574 = fadd float %431, %542, !dbg !45
  %575 = fadd float %433, %543, !dbg !45
  %576 = fadd float %435, %544, !dbg !45
  %577 = fadd float %437, %545, !dbg !45
  %578 = fadd float %439, %546, !dbg !45
  %579 = fadd float %441, %547, !dbg !45
  %580 = fadd float %443, %548, !dbg !45
  %581 = fadd float %445, %549, !dbg !45
  %582 = fadd float %447, %550, !dbg !45
  %583 = sext i32 %461 to i64, !dbg !46
  %584 = getelementptr i16, ptr addrspace(1) %3, i64 %583, !dbg !46
  %585 = sext i32 %462 to i64, !dbg !46
  %586 = getelementptr i16, ptr addrspace(1) %3, i64 %585, !dbg !46
  %587 = sext i32 %463 to i64, !dbg !46
  %588 = getelementptr i16, ptr addrspace(1) %3, i64 %587, !dbg !46
  %589 = sext i32 %464 to i64, !dbg !46
  %590 = getelementptr i16, ptr addrspace(1) %3, i64 %589, !dbg !46
  %591 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %551) #3, !dbg !47
  %592 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %552) #3, !dbg !47
  %593 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %553) #3, !dbg !47
  %594 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %554) #3, !dbg !47
  %595 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %555) #3, !dbg !47
  %596 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %556) #3, !dbg !47
  %597 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %557) #3, !dbg !47
  %598 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %558) #3, !dbg !47
  %599 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %559) #3, !dbg !47
  %600 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %560) #3, !dbg !47
  %601 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %561) #3, !dbg !47
  %602 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %562) #3, !dbg !47
  %603 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %563) #3, !dbg !47
  %604 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %564) #3, !dbg !47
  %605 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %565) #3, !dbg !47
  %606 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %566) #3, !dbg !47
  %607 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %567) #3, !dbg !47
  %608 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %568) #3, !dbg !47
  %609 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %569) #3, !dbg !47
  %610 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %570) #3, !dbg !47
  %611 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %571) #3, !dbg !47
  %612 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %572) #3, !dbg !47
  %613 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %573) #3, !dbg !47
  %614 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %574) #3, !dbg !47
  %615 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %575) #3, !dbg !47
  %616 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %576) #3, !dbg !47
  %617 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %577) #3, !dbg !47
  %618 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %578) #3, !dbg !47
  %619 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %579) #3, !dbg !47
  %620 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %580) #3, !dbg !47
  %621 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %581) #3, !dbg !47
  %622 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %582) #3, !dbg !47
  %623 = insertelement <2 x i16> poison, i16 %591, i64 0, !dbg !47
  %624 = insertelement <2 x i16> %623, i16 %592, i64 1, !dbg !47
  %625 = bitcast <2 x i16> %624 to i32, !dbg !47
  %626 = insertelement <2 x i16> poison, i16 %593, i64 0, !dbg !47
  %627 = insertelement <2 x i16> %626, i16 %594, i64 1, !dbg !47
  %628 = bitcast <2 x i16> %627 to i32, !dbg !47
  %629 = insertelement <2 x i16> poison, i16 %595, i64 0, !dbg !47
  %630 = insertelement <2 x i16> %629, i16 %596, i64 1, !dbg !47
  %631 = bitcast <2 x i16> %630 to i32, !dbg !47
  %632 = insertelement <2 x i16> poison, i16 %597, i64 0, !dbg !47
  %633 = insertelement <2 x i16> %632, i16 %598, i64 1, !dbg !47
  %634 = bitcast <2 x i16> %633 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %625, i32 %628, i32 %631, i32 %634, ptr addrspace(1) %584, i1 %453) #3, !dbg !47
  %635 = insertelement <2 x i16> poison, i16 %599, i64 0, !dbg !47
  %636 = insertelement <2 x i16> %635, i16 %600, i64 1, !dbg !47
  %637 = bitcast <2 x i16> %636 to i32, !dbg !47
  %638 = insertelement <2 x i16> poison, i16 %601, i64 0, !dbg !47
  %639 = insertelement <2 x i16> %638, i16 %602, i64 1, !dbg !47
  %640 = bitcast <2 x i16> %639 to i32, !dbg !47
  %641 = insertelement <2 x i16> poison, i16 %603, i64 0, !dbg !47
  %642 = insertelement <2 x i16> %641, i16 %604, i64 1, !dbg !47
  %643 = bitcast <2 x i16> %642 to i32, !dbg !47
  %644 = insertelement <2 x i16> poison, i16 %605, i64 0, !dbg !47
  %645 = insertelement <2 x i16> %644, i16 %606, i64 1, !dbg !47
  %646 = bitcast <2 x i16> %645 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %637, i32 %640, i32 %643, i32 %646, ptr addrspace(1) %586, i1 %454) #3, !dbg !47
  %647 = insertelement <2 x i16> poison, i16 %607, i64 0, !dbg !47
  %648 = insertelement <2 x i16> %647, i16 %608, i64 1, !dbg !47
  %649 = bitcast <2 x i16> %648 to i32, !dbg !47
  %650 = insertelement <2 x i16> poison, i16 %609, i64 0, !dbg !47
  %651 = insertelement <2 x i16> %650, i16 %610, i64 1, !dbg !47
  %652 = bitcast <2 x i16> %651 to i32, !dbg !47
  %653 = insertelement <2 x i16> poison, i16 %611, i64 0, !dbg !47
  %654 = insertelement <2 x i16> %653, i16 %612, i64 1, !dbg !47
  %655 = bitcast <2 x i16> %654 to i32, !dbg !47
  %656 = insertelement <2 x i16> poison, i16 %613, i64 0, !dbg !47
  %657 = insertelement <2 x i16> %656, i16 %614, i64 1, !dbg !47
  %658 = bitcast <2 x i16> %657 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %649, i32 %652, i32 %655, i32 %658, ptr addrspace(1) %588, i1 %455) #3, !dbg !47
  %659 = insertelement <2 x i16> poison, i16 %615, i64 0, !dbg !47
  %660 = insertelement <2 x i16> %659, i16 %616, i64 1, !dbg !47
  %661 = bitcast <2 x i16> %660 to i32, !dbg !47
  %662 = insertelement <2 x i16> poison, i16 %617, i64 0, !dbg !47
  %663 = insertelement <2 x i16> %662, i16 %618, i64 1, !dbg !47
  %664 = bitcast <2 x i16> %663 to i32, !dbg !47
  %665 = insertelement <2 x i16> poison, i16 %619, i64 0, !dbg !47
  %666 = insertelement <2 x i16> %665, i16 %620, i64 1, !dbg !47
  %667 = bitcast <2 x i16> %666 to i32, !dbg !47
  %668 = insertelement <2 x i16> poison, i16 %621, i64 0, !dbg !47
  %669 = insertelement <2 x i16> %668, i16 %622, i64 1, !dbg !47
  %670 = bitcast <2 x i16> %669 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %661, i32 %664, i32 %667, i32 %670, ptr addrspace(1) %590, i1 %456) #3, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuzplfq2cbzont73nj5e2idrhwb5di5mitreefva6wwkm5ngvug6.py", directory: "/opt/inductor_cache/uz")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 42, column: 24, scope: !7)
!11 = !DILocation(line: 48, column: 22, scope: !7)
!12 = !DILocation(line: 49, column: 41, scope: !7)
!13 = !DILocation(line: 49, column: 30, scope: !7)
!14 = !DILocation(line: 49, column: 50, scope: !7)
!15 = !DILocation(line: 50, column: 40, scope: !7)
!16 = !DILocation(line: 50, column: 34, scope: !7)
!17 = !DILocation(line: 51, column: 30, scope: !7)
!18 = !DILocation(line: 53, column: 17, scope: !7)
!19 = !DILocation(line: 53, column: 40, scope: !7)
!20 = !DILocation(line: 53, column: 27, scope: !7)
!21 = !DILocation(line: 54, column: 17, scope: !7)
!22 = !DILocation(line: 54, column: 27, scope: !7)
!23 = !DILocation(line: 56, column: 52, scope: !7)
!24 = !DILocation(line: 60, column: 52, scope: !7)
!25 = !DILocation(line: 64, column: 28, scope: !7)
!26 = !DILocation(line: 64, column: 40, scope: !7)
!27 = !DILocation(line: 64, column: 13, scope: !7)
!28 = !DILocation(line: 65, column: 54, scope: !7)
!29 = !DILocation(line: 65, column: 39, scope: !7)
!30 = !DILocation(line: 65, column: 13, scope: !7)
!31 = !DILocation(line: 70, column: 24, scope: !7)
!32 = !DILocation(line: 71, column: 24, scope: !7)
!33 = !DILocation(line: 68, column: 25, scope: !7)
!34 = !DILocation(line: 77, column: 25, scope: !7)
!35 = !DILocation(line: 78, column: 13, scope: !7)
!36 = !DILocation(line: 79, column: 13, scope: !7)
!37 = !DILocation(line: 86, column: 20, scope: !7)
!38 = !DILocation(line: 86, column: 34, scope: !7)
!39 = !DILocation(line: 86, column: 26, scope: !7)
!40 = !DILocation(line: 89, column: 27, scope: !7)
!41 = !DILocation(line: 89, column: 22, scope: !7)
!42 = !DILocation(line: 90, column: 30, scope: !7)
!43 = !DILocation(line: 90, column: 66, scope: !7)
!44 = !DILocation(line: 90, column: 105, scope: !7)
!45 = !DILocation(line: 91, column: 17, scope: !7)
!46 = !DILocation(line: 92, column: 25, scope: !7)
!47 = !DILocation(line: 92, column: 68, scope: !7)
!48 = !DILocation(line: 92, column: 4, scope: !7)
