//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u64 triton__param_7,
	.param .u32 triton__param_8,
	.param .u32 triton__param_9
)
.maxntid 512, 1, 1
{
	.reg .pred 	%p<66>;
	.reg .b16 	%rs<49>;
	.reg .b32 	%r<227>;
	.reg .f32 	%f<306>;
	.reg .b64 	%rd<28>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u32 	%r8, [triton__param_8];
	ld.param.u64 	%rd9, [triton__param_7];
	ld.param.u64 	%rd8, [triton__param_6];
	ld.param.u64 	%rd7, [triton__param_5];
	ld.param.u64 	%rd6, [triton__param_4];
	ld.param.u64 	%rd5, [triton__param_3];
	ld.param.u64 	%rd4, [triton__param_2];
	ld.param.u64 	%rd3, [triton__param_1];
	ld.param.u64 	%rd2, [triton__param_0];
$L__tmp0:
	.loc	1 20 28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 23 33
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	shl.b32 	%r11, %r2, 2;
	and.b32  	%r4, %r11, 2044;
	.loc	1 32 45
	mul.lo.s32 	%r5, %r9, 3072;
	mov.b32 	%r14, 0;
	mov.pred 	%p64, -1;
	mov.f32 	%f55, 0f00000000;
	setp.lt.s32 	%p20, %r9, %r8;
	mov.f32 	%f57, 0f3F800000;
	mov.f32 	%f282, %f55;
	mov.f32 	%f283, %f55;
	mov.f32 	%f284, %f55;
	mov.f32 	%f285, %f55;
	mov.f32 	%f286, %f55;
	mov.f32 	%f287, %f55;
	mov.f32 	%f288, %f55;
	mov.f32 	%f289, %f55;
	mov.f32 	%f290, %f55;
	mov.f32 	%f291, %f55;
	mov.f32 	%f292, %f55;
	mov.f32 	%f293, %f55;
	mov.u32 	%r225, %r14;
	bra.uni 	$L__BB0_1;
$L__BB0_3:
	.loc	1 46 62
	selp.f32 	%f290, %f294, %f290, %p21;
	selp.f32 	%f291, %f295, %f291, %p21;
	selp.f32 	%f292, %f296, %f292, %p21;
	selp.f32 	%f293, %f297, %f293, %p21;
	.loc	1 47 58
	selp.f32 	%f286, %f298, %f286, %p21;
	selp.f32 	%f287, %f299, %f287, %p21;
	selp.f32 	%f288, %f300, %f288, %p21;
	selp.f32 	%f289, %f301, %f289, %p21;
	.loc	1 48 66
	selp.f32 	%f282, %f302, %f282, %p21;
	selp.f32 	%f283, %f303, %f283, %p21;
	selp.f32 	%f284, %f304, %f284, %p21;
	selp.f32 	%f285, %f305, %f285, %p21;
	.loc	1 49 55
	mov.b32 	%r66, %f13;
	// begin inline asm
	cvt.rn.bf16.f32 %rs21, %r66;
	// end inline asm
	mov.b32 	%r67, %f14;
	// begin inline asm
	cvt.rn.bf16.f32 %rs22, %r67;
	// end inline asm
	mov.b32 	%r68, %f15;
	// begin inline asm
	cvt.rn.bf16.f32 %rs23, %r68;
	// end inline asm
	mov.b32 	%r69, %f16;
	// begin inline asm
	cvt.rn.bf16.f32 %rs24, %r69;
	// end inline asm
	mov.b32 	%r73, {%rs21, %rs22};
	mov.b32 	%r74, {%rs23, %rs24};
	// begin inline asm
	@%p21 st.global.v2.b32 [ %rd19 + 0 ], { %r73, %r74 };
	// end inline asm
	mov.b32 	%r225, 2048;
	mov.pred 	%p64, 0;
	.loc	1 28 36
	@%p1 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:
	.loc	1 0 36
	mov.pred 	%p1, %p64;
	.loc	1 29 27
	or.b32  	%r52, %r225, %r4;
	.loc	1 30 25
	setp.lt.u32 	%p8, %r52, 3072;
	.loc	1 32 40
	add.s32 	%r53, %r52, %r5;
	.loc	1 32 34
	mul.wide.s32 	%rd15, %r53, 2;
	add.s64 	%rd10, %rd3, %rd15;
	.loc	1 32 59
	and.pred  	%p21, %p20, %p8;
	.loc	1 32 51
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p21 ld.global.L1::evict_first.v2.b32 { %r12, %r13 }, [ %rd10 + 0 ];
	@!%p21 mov.u32 %r12, %r14;
	@!%p21 mov.u32 %r13, %r14;
	// end inline asm
	cvt.u16.u32 	%rs1, %r12;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r12; }
	cvt.u16.u32 	%rs3, %r13;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r13; }
	.loc	1 32 111
	// begin inline asm
	cvt.f32.bf16 %r16, %rs1;
	// end inline asm
	mov.b32 	%f58, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs2;
	// end inline asm
	mov.b32 	%f59, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs3;
	// end inline asm
	mov.b32 	%f60, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs4;
	// end inline asm
	mov.b32 	%f61, %r19;
	.loc	1 33 34
	mul.wide.u32 	%rd16, %r52, 2;
	add.s64 	%rd17, %rd4, %rd16;
	add.s64 	%rd11, %rd17, 30720;
	.loc	1 33 47
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r20, %r21 }, [ %rd11 + 0 ];
	@!%p8 mov.u32 %r20, %r14;
	@!%p8 mov.u32 %r21, %r14;
	// end inline asm
	cvt.u16.u32 	%rs5, %r20;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r20; }
	cvt.u16.u32 	%rs7, %r21;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r21; }
	.loc	1 33 98
	// begin inline asm
	cvt.f32.bf16 %r24, %rs5;
	// end inline asm
	mov.b32 	%f62, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs6;
	// end inline asm
	mov.b32 	%f63, %r25;
	// begin inline asm
	cvt.f32.bf16 %r26, %rs7;
	// end inline asm
	mov.b32 	%f64, %r26;
	// begin inline asm
	cvt.f32.bf16 %r27, %rs8;
	// end inline asm
	mov.b32 	%f65, %r27;
	.loc	1 34 34
	add.s64 	%rd18, %rd5, %rd16;
	add.s64 	%rd12, %rd18, 30720;
	.loc	1 34 47
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r28, %r29 }, [ %rd12 + 0 ];
	@!%p8 mov.u32 %r28, %r14;
	@!%p8 mov.u32 %r29, %r14;
	// end inline asm
	cvt.u16.u32 	%rs9, %r28;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r28; }
	cvt.u16.u32 	%rs11, %r29;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r29; }
	.loc	1 34 98
	// begin inline asm
	cvt.f32.bf16 %r32, %rs9;
	// end inline asm
	mov.b32 	%f66, %r32;
	// begin inline asm
	cvt.f32.bf16 %r33, %rs10;
	// end inline asm
	mov.b32 	%f67, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs11;
	// end inline asm
	mov.b32 	%f68, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs12;
	// end inline asm
	mov.b32 	%f69, %r35;
	.loc	1 35 38
	add.s64 	%rd19, %rd2, %rd15;
	.loc	1 35 55
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p21 ld.global.L1::evict_first.v2.b32 { %r36, %r37 }, [ %rd19 + 0 ];
	@!%p21 mov.u32 %r36, %r14;
	@!%p21 mov.u32 %r37, %r14;
	// end inline asm
	cvt.u16.u32 	%rs13, %r36;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r36; }
	cvt.u16.u32 	%rs15, %r37;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r37; }
	.loc	1 35 115
	// begin inline asm
	cvt.f32.bf16 %r40, %rs13;
	// end inline asm
	mov.b32 	%f70, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs14;
	// end inline asm
	mov.b32 	%f71, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs15;
	// end inline asm
	mov.b32 	%f72, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs16;
	// end inline asm
	mov.b32 	%f73, %r43;
	.loc	1 36 34
	add.s64 	%rd14, %rd6, %rd16;
	.loc	1 36 39
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r44, %r45 }, [ %rd14 + 0 ];
	@!%p8 mov.u32 %r44, %r14;
	@!%p8 mov.u32 %r45, %r14;
	// end inline asm
	cvt.u16.u32 	%rs17, %r44;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs18}, %r44; }
	cvt.u16.u32 	%rs19, %r45;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs20}, %r45; }
	.loc	1 36 90
	// begin inline asm
	cvt.f32.bf16 %r48, %rs17;
	// end inline asm
	mov.b32 	%f74, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs18;
	// end inline asm
	mov.b32 	%f75, %r49;
	// begin inline asm
	cvt.f32.bf16 %r50, %rs19;
	// end inline asm
	mov.b32 	%f76, %r50;
	// begin inline asm
	cvt.f32.bf16 %r51, %rs20;
	// end inline asm
	mov.b32 	%f77, %r51;
	.loc	1 37 22
	add.f32 	%f78, %f62, %f66;
	add.f32 	%f79, %f63, %f67;
	add.f32 	%f80, %f64, %f68;
	add.f32 	%f81, %f65, %f69;
	.loc	1 38 22
	add.f32 	%f82, %f70, %f74;
	add.f32 	%f83, %f71, %f75;
	add.f32 	%f84, %f72, %f76;
	add.f32 	%f85, %f73, %f77;
	.loc	1 40 22
	fma.rn.f32 	%f13, %f78, %f82, %f58;
	fma.rn.f32 	%f14, %f79, %f83, %f59;
	fma.rn.f32 	%f15, %f80, %f84, %f60;
	fma.rn.f32 	%f16, %f81, %f85, %f61;
	mov.f32 	%f294, %f13;
	mov.f32 	%f295, %f14;
	mov.f32 	%f296, %f15;
	mov.f32 	%f297, %f16;
	mov.f32 	%f298, %f55;
	mov.f32 	%f299, %f55;
	mov.f32 	%f300, %f55;
	mov.f32 	%f301, %f55;
	mov.f32 	%f302, %f57;
	mov.f32 	%f303, %f57;
	mov.f32 	%f304, %f57;
	mov.f32 	%f305, %f57;
$L__tmp1:
	.loc	2 142 7
	@%p1 bra 	$L__BB0_3;
	.loc	2 147 24
	sub.f32 	%f86, %f13, %f290;
	sub.f32 	%f87, %f14, %f291;
	sub.f32 	%f88, %f15, %f292;
	sub.f32 	%f89, %f16, %f293;
	.loc	2 148 30
	add.f32 	%f302, %f282, 0f3F800000;
	add.f32 	%f303, %f283, 0f3F800000;
	add.f32 	%f304, %f284, 0f3F800000;
	add.f32 	%f305, %f285, 0f3F800000;
	.loc	2 149 34
	mov.b32 	%r55, %f86;
	mov.b32 	%r56, %f302;
	// begin inline asm
	div.full.f32 %r54, %r55, %r56;
	// end inline asm
	mov.b32 	%f90, %r54;
	mov.b32 	%r58, %f87;
	mov.b32 	%r59, %f303;
	// begin inline asm
	div.full.f32 %r57, %r58, %r59;
	// end inline asm
	mov.b32 	%f91, %r57;
	mov.b32 	%r61, %f88;
	mov.b32 	%r62, %f304;
	// begin inline asm
	div.full.f32 %r60, %r61, %r62;
	// end inline asm
	mov.b32 	%f92, %r60;
	mov.b32 	%r64, %f89;
	mov.b32 	%r65, %f305;
	// begin inline asm
	div.full.f32 %r63, %r64, %r65;
	// end inline asm
	mov.b32 	%f93, %r63;
	.loc	2 149 26
	add.f32 	%f294, %f290, %f90;
	add.f32 	%f295, %f291, %f91;
	add.f32 	%f296, %f292, %f92;
	add.f32 	%f297, %f293, %f93;
	.loc	2 150 39
	sub.f32 	%f94, %f13, %f294;
	sub.f32 	%f95, %f14, %f295;
	sub.f32 	%f96, %f15, %f296;
	sub.f32 	%f97, %f16, %f297;
	.loc	2 150 22
	fma.rn.f32 	%f298, %f86, %f94, %f286;
	fma.rn.f32 	%f299, %f87, %f95, %f287;
	fma.rn.f32 	%f300, %f88, %f96, %f288;
	fma.rn.f32 	%f301, %f89, %f97, %f289;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	2 156 21
	sub.f32 	%f98, %f291, %f290;
	.loc	2 157 28
	add.f32 	%f99, %f282, %f283;
	.loc	2 158 39
	setp.eq.f32 	%p33, %f99, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r77, %f99;
	mov.b32 	%r76, %f283;
	// begin inline asm
	div.full.f32 %r75, %r76, %r77;
	// end inline asm
	mov.b32 	%f100, %r75;
	.loc	2 158 49
	selp.f32 	%f101, 0f00000000, %f100, %p33;
	.loc	2 160 17
	fma.rn.f32 	%f102, %f98, %f101, %f290;
	.loc	2 161 15
	add.f32 	%f103, %f286, %f287;
	.loc	2 161 30
	mul.f32 	%f104, %f98, %f98;
	.loc	2 161 38
	mul.f32 	%f105, %f104, %f282;
	.loc	2 161 22
	fma.rn.f32 	%f106, %f105, %f101, %f103;
	.loc	2 156 21
	sub.f32 	%f107, %f292, %f102;
	.loc	2 157 28
	add.f32 	%f108, %f284, %f99;
	.loc	2 158 39
	setp.eq.f32 	%p34, %f108, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r80, %f108;
	mov.b32 	%r79, %f284;
	// begin inline asm
	div.full.f32 %r78, %r79, %r80;
	// end inline asm
	mov.b32 	%f109, %r78;
	.loc	2 158 49
	selp.f32 	%f110, 0f00000000, %f109, %p34;
	.loc	2 160 17
	fma.rn.f32 	%f111, %f110, %f107, %f102;
	.loc	2 161 15
	add.f32 	%f112, %f288, %f106;
	.loc	2 161 30
	mul.f32 	%f113, %f107, %f107;
	.loc	2 161 38
	mul.f32 	%f114, %f99, %f113;
	.loc	2 161 22
	fma.rn.f32 	%f115, %f110, %f114, %f112;
	.loc	2 156 21
	sub.f32 	%f116, %f293, %f111;
	.loc	2 157 28
	add.f32 	%f117, %f285, %f108;
	.loc	2 158 39
	setp.eq.f32 	%p35, %f117, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r83, %f117;
	mov.b32 	%r82, %f285;
	// begin inline asm
	div.full.f32 %r81, %r82, %r83;
	// end inline asm
	mov.b32 	%f118, %r81;
	.loc	2 158 49
	selp.f32 	%f119, 0f00000000, %f118, %p35;
	.loc	2 160 17
	fma.rn.f32 	%f120, %f119, %f116, %f111;
	.loc	2 161 15
	add.f32 	%f121, %f289, %f115;
	.loc	2 161 30
	mul.f32 	%f122, %f116, %f116;
	.loc	2 161 38
	mul.f32 	%f123, %f108, %f122;
	.loc	2 161 22
	fma.rn.f32 	%f124, %f119, %f123, %f121;
	.loc	2 168 46
	mov.b32 	%r133, %f120;
	shfl.sync.bfly.b32	%r134, %r133, 16, 31, -1;
	mov.b32 	%f125, %r134;
	mov.b32 	%r135, %f124;
	shfl.sync.bfly.b32	%r136, %r135, 16, 31, -1;
	mov.b32 	%f126, %r136;
	shfl.sync.bfly.b32	%r85, %r83, 16, 31, -1;
	mov.b32 	%f127, %r85;
	.loc	2 156 21
	sub.f32 	%f128, %f125, %f120;
	.loc	2 157 28
	add.f32 	%f129, %f117, %f127;
	.loc	2 158 39
	setp.eq.f32 	%p36, %f129, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r86, %f129;
	// begin inline asm
	div.full.f32 %r84, %r85, %r86;
	// end inline asm
	mov.b32 	%f130, %r84;
	.loc	2 158 49
	selp.f32 	%f131, 0f00000000, %f130, %p36;
	.loc	2 160 17
	fma.rn.f32 	%f132, %f131, %f128, %f120;
	.loc	2 161 15
	add.f32 	%f133, %f124, %f126;
	.loc	2 161 30
	mul.f32 	%f134, %f128, %f128;
	.loc	2 161 38
	mul.f32 	%f135, %f117, %f134;
	.loc	2 161 22
	fma.rn.f32 	%f136, %f131, %f135, %f133;
	.loc	2 168 46
	mov.b32 	%r137, %f132;
	shfl.sync.bfly.b32	%r138, %r137, 8, 31, -1;
	mov.b32 	%f137, %r138;
	mov.b32 	%r139, %f136;
	shfl.sync.bfly.b32	%r140, %r139, 8, 31, -1;
	mov.b32 	%f138, %r140;
	shfl.sync.bfly.b32	%r88, %r86, 8, 31, -1;
	mov.b32 	%f139, %r88;
	.loc	2 156 21
	sub.f32 	%f140, %f137, %f132;
	.loc	2 157 28
	add.f32 	%f141, %f129, %f139;
	.loc	2 158 39
	setp.eq.f32 	%p37, %f141, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r89, %f141;
	// begin inline asm
	div.full.f32 %r87, %r88, %r89;
	// end inline asm
	mov.b32 	%f142, %r87;
	.loc	2 158 49
	selp.f32 	%f143, 0f00000000, %f142, %p37;
	.loc	2 160 17
	fma.rn.f32 	%f144, %f140, %f143, %f132;
	.loc	2 161 15
	add.f32 	%f145, %f136, %f138;
	.loc	2 161 30
	mul.f32 	%f146, %f140, %f140;
	.loc	2 161 38
	mul.f32 	%f147, %f129, %f146;
	.loc	2 161 22
	fma.rn.f32 	%f148, %f143, %f147, %f145;
	.loc	2 168 46
	mov.b32 	%r141, %f144;
	shfl.sync.bfly.b32	%r142, %r141, 4, 31, -1;
	mov.b32 	%f149, %r142;
	mov.b32 	%r143, %f148;
	shfl.sync.bfly.b32	%r144, %r143, 4, 31, -1;
	mov.b32 	%f150, %r144;
	shfl.sync.bfly.b32	%r91, %r89, 4, 31, -1;
	mov.b32 	%f151, %r91;
	.loc	2 156 21
	sub.f32 	%f152, %f149, %f144;
	.loc	2 157 28
	add.f32 	%f153, %f141, %f151;
	.loc	2 158 39
	setp.eq.f32 	%p38, %f153, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r92, %f153;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f154, %r90;
	.loc	2 158 49
	selp.f32 	%f155, 0f00000000, %f154, %p38;
	.loc	2 160 17
	fma.rn.f32 	%f156, %f152, %f155, %f144;
	.loc	2 161 15
	add.f32 	%f157, %f148, %f150;
	.loc	2 161 30
	mul.f32 	%f158, %f152, %f152;
	.loc	2 161 38
	mul.f32 	%f159, %f141, %f158;
	.loc	2 161 22
	fma.rn.f32 	%f160, %f155, %f159, %f157;
	.loc	2 168 46
	mov.b32 	%r145, %f156;
	shfl.sync.bfly.b32	%r146, %r145, 2, 31, -1;
	mov.b32 	%f161, %r146;
	mov.b32 	%r147, %f160;
	shfl.sync.bfly.b32	%r148, %r147, 2, 31, -1;
	mov.b32 	%f162, %r148;
	shfl.sync.bfly.b32	%r94, %r92, 2, 31, -1;
	mov.b32 	%f163, %r94;
	.loc	2 156 21
	sub.f32 	%f164, %f161, %f156;
	.loc	2 157 28
	add.f32 	%f165, %f153, %f163;
	.loc	2 158 39
	setp.eq.f32 	%p39, %f165, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r95, %f165;
	// begin inline asm
	div.full.f32 %r93, %r94, %r95;
	// end inline asm
	mov.b32 	%f166, %r93;
	.loc	2 158 49
	selp.f32 	%f167, 0f00000000, %f166, %p39;
	.loc	2 160 17
	fma.rn.f32 	%f168, %f164, %f167, %f156;
	.loc	2 161 15
	add.f32 	%f169, %f160, %f162;
	.loc	2 161 30
	mul.f32 	%f170, %f164, %f164;
	.loc	2 161 38
	mul.f32 	%f171, %f153, %f170;
	.loc	2 161 22
	fma.rn.f32 	%f172, %f167, %f171, %f169;
	.loc	2 168 46
	mov.b32 	%r149, %f168;
	shfl.sync.bfly.b32	%r150, %r149, 1, 31, -1;
	mov.b32 	%f173, %r150;
	mov.b32 	%r151, %f172;
	shfl.sync.bfly.b32	%r152, %r151, 1, 31, -1;
	mov.b32 	%f174, %r152;
	shfl.sync.bfly.b32	%r97, %r95, 1, 31, -1;
	mov.b32 	%f175, %r97;
	.loc	2 156 21
	sub.f32 	%f176, %f173, %f168;
	.loc	2 157 28
	add.f32 	%f177, %f165, %f175;
	.loc	2 158 39
	setp.eq.f32 	%p40, %f177, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r98, %f177;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f178, %r96;
	.loc	2 158 49
	selp.f32 	%f179, 0f00000000, %f178, %p40;
	.loc	2 160 17
	fma.rn.f32 	%f180, %f176, %f179, %f168;
	.loc	2 161 15
	add.f32 	%f181, %f172, %f174;
	.loc	2 161 30
	mul.f32 	%f182, %f176, %f176;
	.loc	2 161 38
	mul.f32 	%f183, %f165, %f182;
	.loc	2 161 22
	fma.rn.f32 	%f184, %f179, %f183, %f181;
	.loc	2 168 46
	setp.eq.s32 	%p23, %r3, 0;
	shr.u32 	%r153, %r2, 3;
	and.b32  	%r154, %r153, 60;
	mov.u32 	%r155, global_smem;
	add.s32 	%r99, %r155, %r154;
	mov.b32 	%r100, %f180;
	// begin inline asm
	@%p23 st.shared.b32 [ %r99 + 0 ], %r100;
	// end inline asm
	add.s32 	%r156, %r155, 64;
	add.s32 	%r101, %r156, %r154;
	mov.b32 	%r102, %f184;
	// begin inline asm
	@%p23 st.shared.b32 [ %r101 + 0 ], %r102;
	// end inline asm
	add.s32 	%r157, %r155, 128;
	add.s32 	%r103, %r157, %r154;
	// begin inline asm
	@%p23 st.shared.b32 [ %r103 + 0 ], %r98;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r2, 16;
	add.s32 	%r106, %r155, %r11;
	// begin inline asm
	@%p26 ld.shared.b32 %r105, [ %r106 + 0 ];
	// end inline asm
	mov.b32 	%f185, %r105;
	add.s32 	%r108, %r156, %r11;
	// begin inline asm
	@%p26 ld.shared.b32 %r107, [ %r108 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r107;
	add.s32 	%r110, %r157, %r11;
	// begin inline asm
	@%p26 ld.shared.b32 %r109, [ %r110 + 0 ];
	// end inline asm
	mov.b32 	%f187, %r109;
	shfl.sync.bfly.b32	%r159, %r105, 8, 31, -1;
	mov.b32 	%f188, %r159;
	shfl.sync.bfly.b32	%r160, %r107, 8, 31, -1;
	mov.b32 	%f189, %r160;
	shfl.sync.bfly.b32	%r112, %r109, 8, 31, -1;
	mov.b32 	%f190, %r112;
	.loc	2 156 21
	sub.f32 	%f191, %f188, %f185;
	.loc	2 157 28
	add.f32 	%f192, %f187, %f190;
	.loc	2 158 39
	setp.eq.f32 	%p41, %f192, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r113, %f192;
	// begin inline asm
	div.full.f32 %r111, %r112, %r113;
	// end inline asm
	mov.b32 	%f193, %r111;
	.loc	2 158 49
	selp.f32 	%f194, 0f00000000, %f193, %p41;
	.loc	2 160 17
	fma.rn.f32 	%f195, %f191, %f194, %f185;
	.loc	2 161 15
	add.f32 	%f196, %f186, %f189;
	.loc	2 161 30
	mul.f32 	%f197, %f191, %f191;
	.loc	2 161 38
	mul.f32 	%f198, %f187, %f197;
	.loc	2 161 22
	fma.rn.f32 	%f199, %f198, %f194, %f196;
	.loc	2 168 46
	mov.b32 	%r161, %f195;
	shfl.sync.bfly.b32	%r162, %r161, 4, 31, -1;
	mov.b32 	%f200, %r162;
	mov.b32 	%r163, %f199;
	shfl.sync.bfly.b32	%r164, %r163, 4, 31, -1;
	mov.b32 	%f201, %r164;
	shfl.sync.bfly.b32	%r115, %r113, 4, 31, -1;
	mov.b32 	%f202, %r115;
	.loc	2 156 21
	sub.f32 	%f203, %f200, %f195;
	.loc	2 157 28
	add.f32 	%f204, %f192, %f202;
	.loc	2 158 39
	setp.eq.f32 	%p42, %f204, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r116, %f204;
	// begin inline asm
	div.full.f32 %r114, %r115, %r116;
	// end inline asm
	mov.b32 	%f205, %r114;
	.loc	2 158 49
	selp.f32 	%f206, 0f00000000, %f205, %p42;
	.loc	2 160 17
	fma.rn.f32 	%f207, %f203, %f206, %f195;
	.loc	2 161 15
	add.f32 	%f208, %f199, %f201;
	.loc	2 161 30
	mul.f32 	%f209, %f203, %f203;
	.loc	2 161 38
	mul.f32 	%f210, %f192, %f209;
	.loc	2 161 22
	fma.rn.f32 	%f211, %f206, %f210, %f208;
	.loc	2 168 46
	mov.b32 	%r165, %f207;
	shfl.sync.bfly.b32	%r166, %r165, 2, 31, -1;
	mov.b32 	%f212, %r166;
	mov.b32 	%r167, %f211;
	shfl.sync.bfly.b32	%r168, %r167, 2, 31, -1;
	mov.b32 	%f213, %r168;
	shfl.sync.bfly.b32	%r118, %r116, 2, 31, -1;
	mov.b32 	%f214, %r118;
	.loc	2 156 21
	sub.f32 	%f215, %f212, %f207;
	.loc	2 157 28
	add.f32 	%f216, %f204, %f214;
	.loc	2 158 39
	setp.eq.f32 	%p43, %f216, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r119, %f216;
	// begin inline asm
	div.full.f32 %r117, %r118, %r119;
	// end inline asm
	mov.b32 	%f217, %r117;
	.loc	2 158 49
	selp.f32 	%f218, 0f00000000, %f217, %p43;
	.loc	2 160 17
	fma.rn.f32 	%f219, %f215, %f218, %f207;
	.loc	2 161 15
	add.f32 	%f220, %f211, %f213;
	.loc	2 161 30
	mul.f32 	%f221, %f215, %f215;
	.loc	2 161 38
	mul.f32 	%f222, %f204, %f221;
	.loc	2 161 22
	fma.rn.f32 	%f223, %f218, %f222, %f220;
	.loc	2 168 46
	mov.b32 	%r169, %f219;
	shfl.sync.bfly.b32	%r170, %r169, 1, 31, -1;
	mov.b32 	%f224, %r170;
	mov.b32 	%r171, %f223;
	shfl.sync.bfly.b32	%r172, %r171, 1, 31, -1;
	mov.b32 	%f225, %r172;
	shfl.sync.bfly.b32	%r121, %r119, 1, 31, -1;
	mov.b32 	%f226, %r121;
	.loc	2 156 21
	sub.f32 	%f227, %f224, %f219;
	.loc	2 157 28
	add.f32 	%f228, %f216, %f226;
	.loc	2 158 39
	setp.eq.f32 	%p44, %f228, 0f00000000;
	.loc	2 158 60
	mov.b32 	%r122, %f228;
	// begin inline asm
	div.full.f32 %r120, %r121, %r122;
	// end inline asm
	mov.b32 	%f229, %r120;
	.loc	2 158 49
	selp.f32 	%f230, 0f00000000, %f229, %p44;
	.loc	2 160 17
	fma.rn.f32 	%f231, %f227, %f230, %f219;
	.loc	2 161 15
	add.f32 	%f232, %f223, %f225;
	.loc	2 161 30
	mul.f32 	%f233, %f227, %f227;
	.loc	2 161 38
	mul.f32 	%f234, %f216, %f233;
	.loc	2 161 22
	fma.rn.f32 	%f235, %f230, %f234, %f232;
	.loc	2 168 46
	and.b32  	%r173, %r2, 15;
	setp.eq.s32 	%p45, %r173, 0;
	and.pred  	%p29, %p26, %p45;
	mov.b32 	%r124, %f231;
	// begin inline asm
	@%p29 st.shared.b32 [ %r106 + 0 ], %r124;
	// end inline asm
	mov.b32 	%r126, %f235;
	// begin inline asm
	@%p29 st.shared.b32 [ %r108 + 0 ], %r126;
	// end inline asm
	// begin inline asm
	@%p29 st.shared.b32 [ %r110 + 0 ], %r122;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f53, [global_smem];
$L__tmp3:
	.loc	1 68 24
	ld.shared.u32 	%r130, [global_smem+64];
	mov.b32 	%r131, 1161822208;
	// begin inline asm
	div.full.f32 %r129, %r130, %r131;
	// end inline asm
	mov.b32 	%f236, %r129;
	.loc	1 70 24
	add.f32 	%f54, %f236, 0f358637BD;
	mov.b32 	%r176, 0;
	mov.pred 	%p65, -1;
	rsqrt.approx.ftz.f32 	%f261, %f54;
	mov.u32 	%r226, %r176;
$L__BB0_5:
	.loc	1 0 24
	mov.pred 	%p3, %p65;
	.loc	1 57 27
	or.b32  	%r221, %r226, %r4;
	.loc	1 58 25
	setp.lt.u32 	%p49, %r221, 3072;
	.loc	1 60 45
	add.s32 	%r222, %r221, %r5;
	.loc	1 60 39
	mul.wide.s32 	%rd26, %r222, 2;
	add.s64 	%rd20, %rd2, %rd26;
	.loc	1 60 64
	and.pred  	%p46, %p20, %p49;
	.loc	1 60 56
	// begin inline asm
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	@%p46 ld.global.L1::evict_first.v2.b32 { %r174, %r175 }, [ %rd20 + 0 ];
	@!%p46 mov.u32 %r174, %r176;
	@!%p46 mov.u32 %r175, %r176;
	// end inline asm
	cvt.u16.u32 	%rs25, %r174;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs26}, %r174; }
	cvt.u16.u32 	%rs27, %r175;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs28}, %r175; }
	.loc	1 60 116
	// begin inline asm
	cvt.f32.bf16 %r178, %rs25;
	// end inline asm
	mov.b32 	%f237, %r178;
	// begin inline asm
	cvt.f32.bf16 %r179, %rs26;
	// end inline asm
	mov.b32 	%f238, %r179;
	// begin inline asm
	cvt.f32.bf16 %r180, %rs27;
	// end inline asm
	mov.b32 	%f239, %r180;
	// begin inline asm
	cvt.f32.bf16 %r181, %rs28;
	// end inline asm
	mov.b32 	%f240, %r181;
	.loc	1 61 35
	mul.wide.u32 	%rd27, %r221, 2;
	add.s64 	%rd23, %rd7, %rd27;
	add.s64 	%rd21, %rd23, 6144;
	.loc	1 61 47
	// begin inline asm
	mov.u32 %r182, 0x0;
	mov.u32 %r183, 0x0;
	@%p49 ld.global.L1::evict_last.v2.b32 { %r182, %r183 }, [ %rd21 + 0 ];
	@!%p49 mov.u32 %r182, %r176;
	@!%p49 mov.u32 %r183, %r176;
	// end inline asm
	cvt.u16.u32 	%rs29, %r182;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs30}, %r182; }
	cvt.u16.u32 	%rs31, %r183;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs32}, %r183; }
	.loc	1 61 98
	// begin inline asm
	cvt.f32.bf16 %r186, %rs29;
	// end inline asm
	mov.b32 	%f241, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs30;
	// end inline asm
	mov.b32 	%f242, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs31;
	// end inline asm
	mov.b32 	%f243, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs32;
	// end inline asm
	mov.b32 	%f244, %r189;
	.loc	1 62 35
	add.s64 	%rd24, %rd8, %rd27;
	add.s64 	%rd22, %rd24, 6144;
	.loc	1 62 47
	// begin inline asm
	mov.u32 %r190, 0x0;
	mov.u32 %r191, 0x0;
	@%p49 ld.global.L1::evict_last.v2.b32 { %r190, %r191 }, [ %rd22 + 0 ];
	@!%p49 mov.u32 %r190, %r176;
	@!%p49 mov.u32 %r191, %r176;
	// end inline asm
	cvt.u16.u32 	%rs33, %r190;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs34}, %r190; }
	cvt.u16.u32 	%rs35, %r191;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs36}, %r191; }
	.loc	1 62 98
	// begin inline asm
	cvt.f32.bf16 %r194, %rs33;
	// end inline asm
	mov.b32 	%f245, %r194;
	// begin inline asm
	cvt.f32.bf16 %r195, %rs34;
	// end inline asm
	mov.b32 	%f246, %r195;
	// begin inline asm
	cvt.f32.bf16 %r196, %rs35;
	// end inline asm
	mov.b32 	%f247, %r196;
	// begin inline asm
	cvt.f32.bf16 %r197, %rs36;
	// end inline asm
	mov.b32 	%f248, %r197;
	.loc	1 63 40
	// begin inline asm
	mov.u32 %r198, 0x0;
	mov.u32 %r199, 0x0;
	@%p49 ld.global.L1::evict_last.v2.b32 { %r198, %r199 }, [ %rd23 + 0 ];
	@!%p49 mov.u32 %r198, %r176;
	@!%p49 mov.u32 %r199, %r176;
	// end inline asm
	cvt.u16.u32 	%rs37, %r198;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs38}, %r198; }
	cvt.u16.u32 	%rs39, %r199;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs40}, %r199; }
	.loc	1 63 91
	// begin inline asm
	cvt.f32.bf16 %r202, %rs37;
	// end inline asm
	mov.b32 	%f249, %r202;
	// begin inline asm
	cvt.f32.bf16 %r203, %rs38;
	// end inline asm
	mov.b32 	%f250, %r203;
	// begin inline asm
	cvt.f32.bf16 %r204, %rs39;
	// end inline asm
	mov.b32 	%f251, %r204;
	// begin inline asm
	cvt.f32.bf16 %r205, %rs40;
	// end inline asm
	mov.b32 	%f252, %r205;
	.loc	1 64 40
	// begin inline asm
	mov.u32 %r206, 0x0;
	mov.u32 %r207, 0x0;
	@%p49 ld.global.L1::evict_last.v2.b32 { %r206, %r207 }, [ %rd24 + 0 ];
	@!%p49 mov.u32 %r206, %r176;
	@!%p49 mov.u32 %r207, %r176;
	// end inline asm
	cvt.u16.u32 	%rs41, %r206;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs42}, %r206; }
	cvt.u16.u32 	%rs43, %r207;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs44}, %r207; }
	.loc	1 64 91
	// begin inline asm
	cvt.f32.bf16 %r210, %rs41;
	// end inline asm
	mov.b32 	%f253, %r210;
	// begin inline asm
	cvt.f32.bf16 %r211, %rs42;
	// end inline asm
	mov.b32 	%f254, %r211;
	// begin inline asm
	cvt.f32.bf16 %r212, %rs43;
	// end inline asm
	mov.b32 	%f255, %r212;
	// begin inline asm
	cvt.f32.bf16 %r213, %rs44;
	// end inline asm
	mov.b32 	%f256, %r213;
	.loc	1 66 24
	sub.f32 	%f257, %f237, %f53;
	sub.f32 	%f258, %f238, %f53;
	sub.f32 	%f259, %f239, %f53;
	sub.f32 	%f260, %f240, %f53;
	.loc	1 72 24
	mul.f32 	%f262, %f257, %f261;
	mul.f32 	%f263, %f258, %f261;
	mul.f32 	%f264, %f259, %f261;
	mul.f32 	%f265, %f260, %f261;
	.loc	1 74 24
	add.f32 	%f266, %f241, %f245;
	add.f32 	%f267, %f242, %f246;
	add.f32 	%f268, %f243, %f247;
	add.f32 	%f269, %f244, %f248;
	.loc	1 76 24
	add.f32 	%f270, %f266, 0f3F800000;
	add.f32 	%f271, %f267, 0f3F800000;
	add.f32 	%f272, %f268, 0f3F800000;
	add.f32 	%f273, %f269, 0f3F800000;
	.loc	1 78 24
	add.f32 	%f274, %f249, %f253;
	add.f32 	%f275, %f250, %f254;
	add.f32 	%f276, %f251, %f255;
	add.f32 	%f277, %f252, %f256;
	.loc	1 79 24
	fma.rn.f32 	%f278, %f270, %f262, %f274;
	fma.rn.f32 	%f279, %f271, %f263, %f275;
	fma.rn.f32 	%f280, %f272, %f264, %f276;
	fma.rn.f32 	%f281, %f273, %f265, %f277;
	.loc	1 80 29
	add.s64 	%rd25, %rd9, %rd26;
	.loc	1 80 53
	mov.b32 	%r214, %f278;
	// begin inline asm
	cvt.rn.bf16.f32 %rs45, %r214;
	// end inline asm
	mov.b32 	%r215, %f279;
	// begin inline asm
	cvt.rn.bf16.f32 %rs46, %r215;
	// end inline asm
	mov.b32 	%r216, %f280;
	// begin inline asm
	cvt.rn.bf16.f32 %rs47, %r216;
	// end inline asm
	mov.b32 	%r217, %f281;
	// begin inline asm
	cvt.rn.bf16.f32 %rs48, %r217;
	// end inline asm
	mov.b32 	%r223, {%rs45, %rs46};
	mov.b32 	%r224, {%rs47, %rs48};
	// begin inline asm
	@%p46 st.global.v2.b32 [ %rd25 + 0 ], { %r223, %r224 };
	// end inline asm
	mov.b32 	%r226, 2048;
	mov.pred 	%p65, 0;
	.loc	1 56 36
	@%p3 bra 	$L__BB0_5;
	.loc	1 56 4
	ret;
$L__tmp4:
$L__func_end0:

}
	.file	1 "/opt/inductor_cache/gv/cgvyecyhsgkq5ptmwmdgm67dczxeicnf7mmjj7sjugelwv5q4kh7.py"
	.file	2 "/usr/local/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 197
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 103
.b8 118
.b8 121
.b8 101
.b8 99
.b8 121
.b8 104
.b8 115
.b8 103
.b8 107
.b8 113
.b8 53
.b8 112
.b8 116
.b8 109
.b8 119
.b8 109
.b8 100
.b8 103
.b8 109
.b8 54
.b8 55
.b8 100
.b8 99
.b8 122
.b8 120
.b8 101
.b8 105
.b8 99
.b8 110
.b8 102
.b8 55
.b8 109
.b8 109
.b8 106
.b8 106
.b8 55
.b8 115
.b8 106
.b8 117
.b8 103
.b8 101
.b8 108
.b8 119
.b8 118
.b8 53
.b8 113
.b8 52
.b8 107
.b8 104
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 118
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 120
.b8 4
.b32 120
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 44
.b8 55
.b8 4
.b32 120
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 51
.b8 44
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
