; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %4
  %5 = sdiv i32 %.frozen, 384, !dbg !11
  %6 = shl nsw i32 %5, 3, !dbg !12
  %7 = sub nsw i32 64, %6, !dbg !13
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 8), !dbg !14
  %9 = srem i32 %4, %8, !dbg !15
  %10 = add nsw i32 %6, %9, !dbg !16
  %11 = mul i32 %5, 384
  %.decomposed = sub i32 %.frozen, %11
  %12 = sdiv i32 %.decomposed, %8, !dbg !17
  %13 = shl i32 %10, 6, !dbg !18
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %15 = lshr i32 %14, 5, !dbg !19
  %16 = lshr i32 %14, 2, !dbg !19
  %17 = and i32 %16, 31, !dbg !19
  %18 = or disjoint i32 %17, 32, !dbg !19
  %19 = shl i32 %14, 3, !dbg !19
  %20 = and i32 %19, 24, !dbg !19
  %21 = or disjoint i32 %13, %17, !dbg !20
  %22 = or disjoint i32 %13, %18, !dbg !20
  %23 = shl nsw i32 %12, 6, !dbg !21
  %24 = or disjoint i32 %23, %17, !dbg !22
  %25 = or disjoint i32 %23, %18, !dbg !22
  %26 = srem i32 %21, 4096, !dbg !23
  %27 = srem i32 %22, 4096, !dbg !23
  %28 = srem i32 %24, 3072, !dbg !24
  %29 = srem i32 %25, 3072, !dbg !24
  %30 = shl nsw i32 %26, 6, !dbg !25
  %31 = shl nsw i32 %27, 6, !dbg !25
  %32 = or disjoint i32 %30, %20, !dbg !26
  %33 = or disjoint i32 %31, %20, !dbg !26
  %34 = sext i32 %32 to i64, !dbg !27
  %35 = getelementptr i16, ptr addrspace(1) %0, i64 %34, !dbg !27
  %36 = sext i32 %33 to i64, !dbg !27
  %37 = getelementptr i16, ptr addrspace(1) %0, i64 %36, !dbg !27
  %38 = shl nsw i32 %28, 6, !dbg !28
  %39 = shl nsw i32 %29, 6, !dbg !28
  %40 = or disjoint i32 %38, %20, !dbg !29
  %41 = or disjoint i32 %39, %20, !dbg !29
  %42 = sext i32 %40 to i64, !dbg !30
  %43 = getelementptr i16, ptr addrspace(1) %1, i64 %42, !dbg !30
  %44 = sext i32 %41 to i64, !dbg !30
  %45 = getelementptr i16, ptr addrspace(1) %1, i64 %44, !dbg !30
  %46 = shl nuw nsw i32 %17, 5, !dbg !31
  %47 = xor i32 %19, %14, !dbg !31
  %48 = and i32 %47, 24, !dbg !31
  %49 = or disjoint i32 %46, %48, !dbg !31
  %50 = zext nneg i32 %49 to i64, !dbg !31
  %51 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %50, !dbg !31
  %52 = shl nuw nsw i32 %18, 5, !dbg !31
  %53 = or disjoint i32 %52, %48, !dbg !31
  %54 = zext nneg i32 %53 to i64, !dbg !31
  %55 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %54, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %51, ptr addrspace(1) %35, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %55, ptr addrspace(1) %37, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %56 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %50, !dbg !32
  %57 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %54, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %56, ptr addrspace(1) %43, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %57, ptr addrspace(1) %45, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %58 = and i32 %15, 134217724
  br label %59, !dbg !33

59:                                               ; preds = %3, %59
  %60 = phi i32 [ -1, %3 ], [ %97, %59 ]
  %61 = phi i32 [ 0, %3 ], [ %223, %59 ]
  %.pn4899 = phi ptr addrspace(1) [ %45, %3 ], [ %220, %59 ]
  %.pn6498 = phi ptr addrspace(1) [ %43, %3 ], [ %219, %59 ]
  %.pn1697 = phi ptr addrspace(1) [ %37, %3 ], [ %218, %59 ]
  %.pn3296 = phi ptr addrspace(1) [ %35, %3 ], [ %217, %59 ]
  %62 = phi float [ 0.000000e+00, %3 ], [ %185, %59 ]
  %63 = phi float [ 0.000000e+00, %3 ], [ %186, %59 ]
  %64 = phi float [ 0.000000e+00, %3 ], [ %187, %59 ]
  %65 = phi float [ 0.000000e+00, %3 ], [ %188, %59 ]
  %66 = phi float [ 0.000000e+00, %3 ], [ %189, %59 ]
  %67 = phi float [ 0.000000e+00, %3 ], [ %190, %59 ]
  %68 = phi float [ 0.000000e+00, %3 ], [ %191, %59 ]
  %69 = phi float [ 0.000000e+00, %3 ], [ %192, %59 ]
  %70 = phi float [ 0.000000e+00, %3 ], [ %193, %59 ]
  %71 = phi float [ 0.000000e+00, %3 ], [ %194, %59 ]
  %72 = phi float [ 0.000000e+00, %3 ], [ %195, %59 ]
  %73 = phi float [ 0.000000e+00, %3 ], [ %196, %59 ]
  %74 = phi float [ 0.000000e+00, %3 ], [ %197, %59 ]
  %75 = phi float [ 0.000000e+00, %3 ], [ %198, %59 ]
  %76 = phi float [ 0.000000e+00, %3 ], [ %199, %59 ]
  %77 = phi float [ 0.000000e+00, %3 ], [ %200, %59 ]
  %78 = phi float [ 0.000000e+00, %3 ], [ %201, %59 ]
  %79 = phi float [ 0.000000e+00, %3 ], [ %202, %59 ]
  %80 = phi float [ 0.000000e+00, %3 ], [ %203, %59 ]
  %81 = phi float [ 0.000000e+00, %3 ], [ %204, %59 ]
  %82 = phi float [ 0.000000e+00, %3 ], [ %205, %59 ]
  %83 = phi float [ 0.000000e+00, %3 ], [ %206, %59 ]
  %84 = phi float [ 0.000000e+00, %3 ], [ %207, %59 ]
  %85 = phi float [ 0.000000e+00, %3 ], [ %208, %59 ]
  %86 = phi float [ 0.000000e+00, %3 ], [ %209, %59 ]
  %87 = phi float [ 0.000000e+00, %3 ], [ %210, %59 ]
  %88 = phi float [ 0.000000e+00, %3 ], [ %211, %59 ]
  %89 = phi float [ 0.000000e+00, %3 ], [ %212, %59 ]
  %90 = phi float [ 0.000000e+00, %3 ], [ %213, %59 ]
  %91 = phi float [ 0.000000e+00, %3 ], [ %214, %59 ]
  %92 = phi float [ 0.000000e+00, %3 ], [ %215, %59 ]
  %93 = phi float [ 0.000000e+00, %3 ], [ %216, %59 ]
  %94 = phi i1 [ true, %3 ], [ false, %59 ]
  %95 = add i32 %60, 1, !dbg !33
  %96 = icmp slt i32 %95, 2, !dbg !33
  %97 = select i1 %96, i32 %95, i32 0, !dbg !33
  %98 = shl i32 %97, 11, !dbg !31
  %99 = sext i32 %98 to i64, !dbg !31
  %100 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %99, !dbg !31
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %101 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %99, !dbg !32
  %102 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %58, i32 0, i32 31), !dbg !34
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !34
  %103 = shl i32 %102, 6, !dbg !34
  %104 = and i32 %103, 192, !dbg !34
  %105 = zext nneg i32 %104 to i64, !dbg !34
  %106 = ptrtoint ptr addrspace(3) %100 to i64, !dbg !34
  %107 = lshr exact i64 %106, 4, !dbg !34
  %108 = and i64 %107, 16383, !dbg !34
  %109 = or disjoint i64 %108, -9223371899399045120, !dbg !34
  %110 = add nuw nsw i64 %109, %105, !dbg !34
  %111 = ptrtoint ptr addrspace(3) %101 to i64, !dbg !34
  %112 = lshr exact i64 %111, 4, !dbg !34
  %113 = and i64 %112, 16383, !dbg !34
  %114 = or disjoint i64 %113, -9223371899399045120, !dbg !34
  %115 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %62, float %63, float %64, float %65, float %66, float %67, float %68, float %69, float %70, float %71, float %72, float %73, float %74, float %75, float %76, float %77, float %78, float %79, float %80, float %81, float %82, float %83, float %84, float %85, float %86, float %87, float %88, float %89, float %90, float %91, float %92, float %93, i64 %110, i64 %114) #3, !dbg !34
  %116 = add nuw nsw i64 %108, -9223371899399045118, !dbg !34
  %117 = add nuw nsw i64 %116, %105, !dbg !34
  %118 = add nuw nsw i64 %113, -9223371899399045118, !dbg !34
  %119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 0, !dbg !34
  %120 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 1, !dbg !34
  %121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 2, !dbg !34
  %122 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 3, !dbg !34
  %123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 4, !dbg !34
  %124 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 5, !dbg !34
  %125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 6, !dbg !34
  %126 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 7, !dbg !34
  %127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 8, !dbg !34
  %128 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 9, !dbg !34
  %129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 10, !dbg !34
  %130 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 11, !dbg !34
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 12, !dbg !34
  %132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 13, !dbg !34
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 14, !dbg !34
  %134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 15, !dbg !34
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 16, !dbg !34
  %136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 17, !dbg !34
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 18, !dbg !34
  %138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 19, !dbg !34
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 20, !dbg !34
  %140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 21, !dbg !34
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 22, !dbg !34
  %142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 23, !dbg !34
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 24, !dbg !34
  %144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 25, !dbg !34
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 26, !dbg !34
  %146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 27, !dbg !34
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 28, !dbg !34
  %148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 29, !dbg !34
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 30, !dbg !34
  %150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %115, 31, !dbg !34
  %151 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %119, float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, i64 %117, i64 %118) #3, !dbg !34
  %152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 0, !dbg !34
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 1, !dbg !34
  %154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 2, !dbg !34
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 3, !dbg !34
  %156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 4, !dbg !34
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 5, !dbg !34
  %158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 6, !dbg !34
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 7, !dbg !34
  %160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 8, !dbg !34
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 9, !dbg !34
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 10, !dbg !34
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 11, !dbg !34
  %164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 12, !dbg !34
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 13, !dbg !34
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 14, !dbg !34
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 15, !dbg !34
  %168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 16, !dbg !34
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 17, !dbg !34
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 18, !dbg !34
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 19, !dbg !34
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 20, !dbg !34
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 21, !dbg !34
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 22, !dbg !34
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 23, !dbg !34
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 24, !dbg !34
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 25, !dbg !34
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 26, !dbg !34
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 27, !dbg !34
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 28, !dbg !34
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 29, !dbg !34
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 30, !dbg !34
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %151, 31, !dbg !34
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !34
  %184 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, float %163, float %164, float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, ptr addrspace(3) %100, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %101, i32 1, i32 32, i32 0, i32 0) #3, !dbg !34
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 0, !dbg !34
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 1, !dbg !34
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 2, !dbg !34
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 3, !dbg !34
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 4, !dbg !34
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 5, !dbg !34
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 6, !dbg !34
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 7, !dbg !34
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 8, !dbg !34
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 9, !dbg !34
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 10, !dbg !34
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 11, !dbg !34
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 12, !dbg !34
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 13, !dbg !34
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 14, !dbg !34
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 15, !dbg !34
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 16, !dbg !34
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 17, !dbg !34
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 18, !dbg !34
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 19, !dbg !34
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 20, !dbg !34
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 21, !dbg !34
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 22, !dbg !34
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 23, !dbg !34
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 24, !dbg !34
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 25, !dbg !34
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 26, !dbg !34
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 27, !dbg !34
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 28, !dbg !34
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 29, !dbg !34
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 30, !dbg !34
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %184, 31, !dbg !34
  %217 = getelementptr i8, ptr addrspace(1) %.pn3296, i64 64, !dbg !35
  %218 = getelementptr i8, ptr addrspace(1) %.pn1697, i64 64, !dbg !35
  %219 = getelementptr i8, ptr addrspace(1) %.pn6498, i64 64, !dbg !36
  %220 = getelementptr i8, ptr addrspace(1) %.pn4899, i64 64, !dbg !36
  %221 = add i32 %61, 1, !dbg !33
  %222 = icmp slt i32 %221, 2, !dbg !33
  %223 = select i1 %222, i32 %221, i32 0, !dbg !33
  %224 = shl i32 %223, 11, !dbg !31
  %225 = sext i32 %224 to i64, !dbg !31
  %226 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %225, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %227 = getelementptr i16, ptr addrspace(3) %226, i64 %50, !dbg !31
  %228 = getelementptr i16, ptr addrspace(3) %226, i64 %54, !dbg !31
  %229 = select i1 %94, i32 16, i32 0, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %227, ptr addrspace(1) %217, i32 %229, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %228, ptr addrspace(1) %218, i32 %229, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %230 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %225, !dbg !32
  %231 = getelementptr i16, ptr addrspace(3) %230, i64 %50, !dbg !32
  %232 = getelementptr i16, ptr addrspace(3) %230, i64 %54, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %231, ptr addrspace(1) %219, i32 %229, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %232, ptr addrspace(1) %220, i32 %229, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  br i1 %94, label %59, label %233, !dbg !33

233:                                              ; preds = %59
  %234 = and i32 %19, 56, !dbg !19
  %235 = or disjoint i32 %234, %23, !dbg !22
  %236 = lshr i32 %14, 3, !dbg !19
  %237 = and i32 %236, 7, !dbg !19
  %238 = lshr i32 %14, 3, !dbg !19
  %239 = and i32 %238, 8, !dbg !19
  %240 = or disjoint i32 %237, %239, !dbg !19
  %241 = or disjoint i32 %240, %13, !dbg !20
  %242 = or disjoint i32 %241, 48, !dbg !20
  %243 = or disjoint i32 %241, 32, !dbg !20
  %244 = or disjoint i32 %241, 16, !dbg !20
  %245 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216) #3, !dbg !33
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %246 = icmp slt i32 %241, 4096, !dbg !37
  %247 = icmp slt i32 %244, 4096, !dbg !37
  %248 = icmp slt i32 %243, 4096, !dbg !37
  %249 = icmp slt i32 %242, 4096, !dbg !37
  %250 = icmp slt i32 %235, 3072, !dbg !38
  %251 = and i1 %250, %246, !dbg !39
  %252 = and i1 %250, %247, !dbg !39
  %253 = and i1 %250, %248, !dbg !39
  %254 = and i1 %250, %249, !dbg !39
  %255 = mul i32 %241, 3072, !dbg !40
  %256 = mul i32 %244, 3072, !dbg !40
  %257 = mul i32 %243, 3072, !dbg !40
  %258 = mul i32 %242, 3072, !dbg !40
  %259 = add i32 %255, %235, !dbg !41
  %260 = add i32 %256, %235, !dbg !41
  %261 = add i32 %257, %235, !dbg !41
  %262 = add i32 %258, %235, !dbg !41
  %263 = sext i32 %259 to i64, !dbg !42
  %264 = getelementptr i16, ptr addrspace(1) %2, i64 %263, !dbg !42
  %265 = sext i32 %260 to i64, !dbg !42
  %266 = getelementptr i16, ptr addrspace(1) %2, i64 %265, !dbg !42
  %267 = sext i32 %261 to i64, !dbg !42
  %268 = getelementptr i16, ptr addrspace(1) %2, i64 %267, !dbg !42
  %269 = sext i32 %262 to i64, !dbg !42
  %270 = getelementptr i16, ptr addrspace(1) %2, i64 %269, !dbg !42
  %271 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 0, !dbg !43
  %272 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 1, !dbg !43
  %273 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 2, !dbg !43
  %274 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 3, !dbg !43
  %275 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 4, !dbg !43
  %276 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 5, !dbg !43
  %277 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 6, !dbg !43
  %278 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 7, !dbg !43
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 8, !dbg !43
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 9, !dbg !43
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 10, !dbg !43
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 11, !dbg !43
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 12, !dbg !43
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 13, !dbg !43
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 14, !dbg !43
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 15, !dbg !43
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 16, !dbg !43
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 17, !dbg !43
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 18, !dbg !43
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 19, !dbg !43
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 20, !dbg !43
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 21, !dbg !43
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 22, !dbg !43
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 23, !dbg !43
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 24, !dbg !43
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 25, !dbg !43
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 26, !dbg !43
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 27, !dbg !43
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 28, !dbg !43
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 29, !dbg !43
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 30, !dbg !43
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %245, 31, !dbg !43
  %303 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %271) #3, !dbg !43
  %304 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %272) #3, !dbg !43
  %305 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %273) #3, !dbg !43
  %306 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %274) #3, !dbg !43
  %307 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %275) #3, !dbg !43
  %308 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %276) #3, !dbg !43
  %309 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %277) #3, !dbg !43
  %310 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %278) #3, !dbg !43
  %311 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %279) #3, !dbg !43
  %312 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %280) #3, !dbg !43
  %313 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %281) #3, !dbg !43
  %314 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %282) #3, !dbg !43
  %315 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %283) #3, !dbg !43
  %316 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %284) #3, !dbg !43
  %317 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %285) #3, !dbg !43
  %318 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %286) #3, !dbg !43
  %319 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %287) #3, !dbg !43
  %320 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %288) #3, !dbg !43
  %321 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %289) #3, !dbg !43
  %322 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %290) #3, !dbg !43
  %323 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %291) #3, !dbg !43
  %324 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %292) #3, !dbg !43
  %325 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %293) #3, !dbg !43
  %326 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %294) #3, !dbg !43
  %327 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %295) #3, !dbg !43
  %328 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %296) #3, !dbg !43
  %329 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %297) #3, !dbg !43
  %330 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %298) #3, !dbg !43
  %331 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %299) #3, !dbg !43
  %332 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %300) #3, !dbg !43
  %333 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %301) #3, !dbg !43
  %334 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %302) #3, !dbg !43
  %335 = and i32 %15, 3, !dbg !43
  %336 = and i32 %236, 3, !dbg !43
  %337 = and i32 %14, 15, !dbg !43
  %338 = shl nuw nsw i32 %236, 2, !dbg !43
  %339 = and i32 %338, 8, !dbg !43
  %340 = mul nuw nsw i32 %337, 72, !dbg !43
  %341 = add nuw nsw i32 %339, %340, !dbg !43
  %342 = mul nuw nsw i32 %335, 1152, !dbg !43
  %343 = add nuw nsw i32 %341, %342, !dbg !43
  %344 = insertelement <2 x i16> poison, i16 %303, i64 0, !dbg !43
  %345 = insertelement <2 x i16> %344, i16 %304, i64 1, !dbg !43
  %346 = bitcast <2 x i16> %345 to i32, !dbg !43
  %347 = insertelement <2 x i16> poison, i16 %305, i64 0, !dbg !43
  %348 = insertelement <2 x i16> %347, i16 %306, i64 1, !dbg !43
  %349 = bitcast <2 x i16> %348 to i32, !dbg !43
  %350 = insertelement <2 x i16> poison, i16 %307, i64 0, !dbg !43
  %351 = insertelement <2 x i16> %350, i16 %308, i64 1, !dbg !43
  %352 = bitcast <2 x i16> %351 to i32, !dbg !43
  %353 = insertelement <2 x i16> poison, i16 %309, i64 0, !dbg !43
  %354 = insertelement <2 x i16> %353, i16 %310, i64 1, !dbg !43
  %355 = bitcast <2 x i16> %354 to i32, !dbg !43
  %356 = zext nneg i32 %343 to i64, !dbg !43
  %357 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %356, !dbg !43
  %358 = ptrtoint ptr addrspace(3) %357 to i64, !dbg !43
  %359 = trunc i64 %358 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %359, i32 %346, i32 %349, i32 %352, i32 %355) #3, !dbg !43
  %360 = insertelement <2 x i16> poison, i16 %311, i64 0, !dbg !43
  %361 = insertelement <2 x i16> %360, i16 %312, i64 1, !dbg !43
  %362 = bitcast <2 x i16> %361 to i32, !dbg !43
  %363 = insertelement <2 x i16> poison, i16 %313, i64 0, !dbg !43
  %364 = insertelement <2 x i16> %363, i16 %314, i64 1, !dbg !43
  %365 = bitcast <2 x i16> %364 to i32, !dbg !43
  %366 = insertelement <2 x i16> poison, i16 %315, i64 0, !dbg !43
  %367 = insertelement <2 x i16> %366, i16 %316, i64 1, !dbg !43
  %368 = bitcast <2 x i16> %367 to i32, !dbg !43
  %369 = insertelement <2 x i16> poison, i16 %317, i64 0, !dbg !43
  %370 = insertelement <2 x i16> %369, i16 %318, i64 1, !dbg !43
  %371 = bitcast <2 x i16> %370 to i32, !dbg !43
  %372 = getelementptr i8, ptr addrspace(3) %357, i64 32, !dbg !43
  %373 = ptrtoint ptr addrspace(3) %372 to i64, !dbg !43
  %374 = trunc i64 %373 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %374, i32 %362, i32 %365, i32 %368, i32 %371) #3, !dbg !43
  %375 = insertelement <2 x i16> poison, i16 %319, i64 0, !dbg !43
  %376 = insertelement <2 x i16> %375, i16 %320, i64 1, !dbg !43
  %377 = bitcast <2 x i16> %376 to i32, !dbg !43
  %378 = insertelement <2 x i16> poison, i16 %321, i64 0, !dbg !43
  %379 = insertelement <2 x i16> %378, i16 %322, i64 1, !dbg !43
  %380 = bitcast <2 x i16> %379 to i32, !dbg !43
  %381 = insertelement <2 x i16> poison, i16 %323, i64 0, !dbg !43
  %382 = insertelement <2 x i16> %381, i16 %324, i64 1, !dbg !43
  %383 = bitcast <2 x i16> %382 to i32, !dbg !43
  %384 = insertelement <2 x i16> poison, i16 %325, i64 0, !dbg !43
  %385 = insertelement <2 x i16> %384, i16 %326, i64 1, !dbg !43
  %386 = bitcast <2 x i16> %385 to i32, !dbg !43
  %387 = getelementptr i8, ptr addrspace(3) %357, i64 64, !dbg !43
  %388 = ptrtoint ptr addrspace(3) %387 to i64, !dbg !43
  %389 = trunc i64 %388 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %389, i32 %377, i32 %380, i32 %383, i32 %386) #3, !dbg !43
  %390 = insertelement <2 x i16> poison, i16 %327, i64 0, !dbg !43
  %391 = insertelement <2 x i16> %390, i16 %328, i64 1, !dbg !43
  %392 = bitcast <2 x i16> %391 to i32, !dbg !43
  %393 = insertelement <2 x i16> poison, i16 %329, i64 0, !dbg !43
  %394 = insertelement <2 x i16> %393, i16 %330, i64 1, !dbg !43
  %395 = bitcast <2 x i16> %394 to i32, !dbg !43
  %396 = insertelement <2 x i16> poison, i16 %331, i64 0, !dbg !43
  %397 = insertelement <2 x i16> %396, i16 %332, i64 1, !dbg !43
  %398 = bitcast <2 x i16> %397 to i32, !dbg !43
  %399 = insertelement <2 x i16> poison, i16 %333, i64 0, !dbg !43
  %400 = insertelement <2 x i16> %399, i16 %334, i64 1, !dbg !43
  %401 = bitcast <2 x i16> %400 to i32, !dbg !43
  %402 = getelementptr i8, ptr addrspace(3) %357, i64 96, !dbg !43
  %403 = ptrtoint ptr addrspace(3) %402 to i64, !dbg !43
  %404 = trunc i64 %403 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %404, i32 %392, i32 %395, i32 %398, i32 %401) #3, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %405 = shl nuw nsw i32 %335, 2, !dbg !43
  %406 = or disjoint i32 %405, %336, !dbg !43
  %407 = and i32 %19, 56, !dbg !43
  %408 = mul nuw nsw i32 %406, 72, !dbg !43
  %409 = add nuw nsw i32 %408, %407, !dbg !43
  %410 = zext nneg i32 %409 to i64, !dbg !43
  %411 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %410, !dbg !43
  %412 = getelementptr i8, ptr addrspace(3) %411, i64 2304, !dbg !43
  %413 = load <4 x i32>, ptr addrspace(3) %412, align 16, !dbg !43
  %414 = getelementptr i8, ptr addrspace(3) %411, i64 4608, !dbg !43
  %415 = load <4 x i32>, ptr addrspace(3) %414, align 16, !dbg !43
  %416 = getelementptr i8, ptr addrspace(3) %411, i64 6912, !dbg !43
  %417 = load <4 x i32>, ptr addrspace(3) %416, align 16, !dbg !43
  %.extract = load i32, ptr addrspace(3) %411, align 16, !dbg !43
  %418 = getelementptr inbounds i8, ptr addrspace(3) %411, i64 4, !dbg !43
  %.extract66 = load i32, ptr addrspace(3) %418, align 4, !dbg !43
  %419 = getelementptr inbounds i8, ptr addrspace(3) %411, i64 8, !dbg !43
  %.extract68 = load i32, ptr addrspace(3) %419, align 8, !dbg !43
  %420 = getelementptr inbounds i8, ptr addrspace(3) %411, i64 12, !dbg !43
  %.extract70 = load i32, ptr addrspace(3) %420, align 4, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract66, i32 %.extract68, i32 %.extract70, ptr addrspace(1) %264, i1 %251) #3, !dbg !43
  %.extract72 = extractelement <4 x i32> %413, i64 0, !dbg !43
  %.extract74 = extractelement <4 x i32> %413, i64 1, !dbg !43
  %.extract76 = extractelement <4 x i32> %413, i64 2, !dbg !43
  %.extract78 = extractelement <4 x i32> %413, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract72, i32 %.extract74, i32 %.extract76, i32 %.extract78, ptr addrspace(1) %266, i1 %252) #3, !dbg !43
  %.extract80 = extractelement <4 x i32> %415, i64 0, !dbg !43
  %.extract82 = extractelement <4 x i32> %415, i64 1, !dbg !43
  %.extract84 = extractelement <4 x i32> %415, i64 2, !dbg !43
  %.extract86 = extractelement <4 x i32> %415, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract80, i32 %.extract82, i32 %.extract84, i32 %.extract86, ptr addrspace(1) %268, i1 %253) #3, !dbg !43
  %.extract88 = extractelement <4 x i32> %417, i64 0, !dbg !43
  %.extract90 = extractelement <4 x i32> %417, i64 1, !dbg !43
  %.extract92 = extractelement <4 x i32> %417, i64 2, !dbg !43
  %.extract94 = extractelement <4 x i32> %417, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract88, i32 %.extract90, i32 %.extract92, i32 %.extract94, ptr addrspace(1) %270, i1 %254) #3, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ct6dtgajin3s2pjyvxwdyjfushf7zwf4c643yger4w5563haavg6.py", directory: "/opt/inductor_cache/t6")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 42, column: 24, scope: !7)
!11 = !DILocation(line: 48, column: 22, scope: !7)
!12 = !DILocation(line: 49, column: 41, scope: !7)
!13 = !DILocation(line: 49, column: 30, scope: !7)
!14 = !DILocation(line: 49, column: 50, scope: !7)
!15 = !DILocation(line: 50, column: 40, scope: !7)
!16 = !DILocation(line: 50, column: 34, scope: !7)
!17 = !DILocation(line: 51, column: 30, scope: !7)
!18 = !DILocation(line: 53, column: 17, scope: !7)
!19 = !DILocation(line: 53, column: 40, scope: !7)
!20 = !DILocation(line: 53, column: 27, scope: !7)
!21 = !DILocation(line: 54, column: 17, scope: !7)
!22 = !DILocation(line: 54, column: 27, scope: !7)
!23 = !DILocation(line: 56, column: 52, scope: !7)
!24 = !DILocation(line: 60, column: 52, scope: !7)
!25 = !DILocation(line: 64, column: 28, scope: !7)
!26 = !DILocation(line: 64, column: 40, scope: !7)
!27 = !DILocation(line: 64, column: 13, scope: !7)
!28 = !DILocation(line: 65, column: 54, scope: !7)
!29 = !DILocation(line: 65, column: 39, scope: !7)
!30 = !DILocation(line: 65, column: 13, scope: !7)
!31 = !DILocation(line: 70, column: 24, scope: !7)
!32 = !DILocation(line: 71, column: 24, scope: !7)
!33 = !DILocation(line: 68, column: 25, scope: !7)
!34 = !DILocation(line: 77, column: 25, scope: !7)
!35 = !DILocation(line: 78, column: 13, scope: !7)
!36 = !DILocation(line: 79, column: 13, scope: !7)
!37 = !DILocation(line: 86, column: 20, scope: !7)
!38 = !DILocation(line: 86, column: 34, scope: !7)
!39 = !DILocation(line: 86, column: 26, scope: !7)
!40 = !DILocation(line: 89, column: 27, scope: !7)
!41 = !DILocation(line: 89, column: 22, scope: !7)
!42 = !DILocation(line: 90, column: 25, scope: !7)
!43 = !DILocation(line: 90, column: 67, scope: !7)
!44 = !DILocation(line: 90, column: 4, scope: !7)
