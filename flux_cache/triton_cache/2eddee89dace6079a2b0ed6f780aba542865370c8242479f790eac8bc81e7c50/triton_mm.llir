; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %5
  %6 = sdiv i32 %.frozen, 8, !dbg !11
  %7 = shl nsw i32 %6, 3, !dbg !12
  %8 = sub i32 64, %7, !dbg !13
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 8), !dbg !14
  %10 = srem i32 %5, %9, !dbg !15
  %11 = add i32 %7, %10, !dbg !16
  %12 = mul i32 %6, 8
  %.decomposed = sub i32 %.frozen, %12
  %13 = sdiv i32 %.decomposed, %9, !dbg !17
  %14 = shl i32 %11, 6, !dbg !18
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %16 = lshr i32 %15, 5, !dbg !19
  %17 = lshr i32 %15, 3, !dbg !19
  %18 = and i32 %17, 15, !dbg !19
  %19 = or disjoint i32 %18, 16, !dbg !19
  %20 = or disjoint i32 %18, 32, !dbg !19
  %21 = or disjoint i32 %18, 48, !dbg !19
  %22 = shl i32 %15, 3, !dbg !19
  %23 = and i32 %22, 56, !dbg !19
  %24 = or disjoint i32 %14, %18, !dbg !20
  %25 = or disjoint i32 %14, %19, !dbg !20
  %26 = or disjoint i32 %14, %20, !dbg !20
  %27 = or disjoint i32 %14, %21, !dbg !20
  %28 = shl nsw i32 %13, 6, !dbg !21
  %29 = or disjoint i32 %28, %18, !dbg !22
  %30 = or disjoint i32 %28, %19, !dbg !22
  %31 = or disjoint i32 %28, %20, !dbg !22
  %32 = or disjoint i32 %28, %21, !dbg !22
  %33 = srem i32 %24, 4096, !dbg !23
  %34 = srem i32 %25, 4096, !dbg !23
  %35 = srem i32 %26, 4096, !dbg !23
  %36 = srem i32 %27, 4096, !dbg !23
  %37 = srem i32 %29, 64, !dbg !24
  %38 = srem i32 %30, 64, !dbg !24
  %39 = srem i32 %31, 64, !dbg !24
  %40 = srem i32 %32, 64, !dbg !24
  %41 = mul nsw i32 %33, 3072, !dbg !25
  %42 = mul nsw i32 %34, 3072, !dbg !25
  %43 = mul nsw i32 %35, 3072, !dbg !25
  %44 = mul nsw i32 %36, 3072, !dbg !25
  %45 = or disjoint i32 %41, %23, !dbg !26
  %46 = or disjoint i32 %42, %23, !dbg !26
  %47 = or disjoint i32 %43, %23, !dbg !26
  %48 = or disjoint i32 %44, %23, !dbg !26
  %49 = sext i32 %45 to i64, !dbg !27
  %50 = getelementptr i16, ptr addrspace(1) %1, i64 %49, !dbg !27
  %51 = sext i32 %46 to i64, !dbg !27
  %52 = getelementptr i16, ptr addrspace(1) %1, i64 %51, !dbg !27
  %53 = sext i32 %47 to i64, !dbg !27
  %54 = getelementptr i16, ptr addrspace(1) %1, i64 %53, !dbg !27
  %55 = sext i32 %48 to i64, !dbg !27
  %56 = getelementptr i16, ptr addrspace(1) %1, i64 %55, !dbg !27
  %57 = mul nsw i32 %37, 3072, !dbg !28
  %58 = mul nsw i32 %38, 3072, !dbg !28
  %59 = mul nsw i32 %39, 3072, !dbg !28
  %60 = mul nsw i32 %40, 3072, !dbg !28
  %61 = or disjoint i32 %57, %23, !dbg !29
  %62 = or disjoint i32 %58, %23, !dbg !29
  %63 = or disjoint i32 %59, %23, !dbg !29
  %64 = or disjoint i32 %60, %23, !dbg !29
  %65 = sext i32 %61 to i64, !dbg !30
  %66 = getelementptr i16, ptr addrspace(1) %2, i64 %65, !dbg !30
  %67 = sext i32 %62 to i64, !dbg !30
  %68 = getelementptr i16, ptr addrspace(1) %2, i64 %67, !dbg !30
  %69 = sext i32 %63 to i64, !dbg !30
  %70 = getelementptr i16, ptr addrspace(1) %2, i64 %69, !dbg !30
  %71 = sext i32 %64 to i64, !dbg !30
  %72 = getelementptr i16, ptr addrspace(1) %2, i64 %71, !dbg !30
  %73 = shl nuw nsw i32 %18, 6, !dbg !31
  %74 = xor i32 %22, %15, !dbg !31
  %75 = and i32 %74, 56, !dbg !31
  %76 = or disjoint i32 %73, %75, !dbg !31
  %77 = zext nneg i32 %76 to i64, !dbg !31
  %78 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %77, !dbg !31
  %79 = shl nuw nsw i32 %19, 6, !dbg !31
  %80 = or disjoint i32 %79, %75, !dbg !31
  %81 = zext nneg i32 %80 to i64, !dbg !31
  %82 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %81, !dbg !31
  %83 = shl nuw nsw i32 %20, 6, !dbg !31
  %84 = or disjoint i32 %83, %75, !dbg !31
  %85 = zext nneg i32 %84 to i64, !dbg !31
  %86 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %85, !dbg !31
  %87 = shl nuw nsw i32 %21, 6, !dbg !31
  %88 = or disjoint i32 %87, %75, !dbg !31
  %89 = zext nneg i32 %88 to i64, !dbg !31
  %90 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %89, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %78, ptr addrspace(1) %50, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %82, ptr addrspace(1) %52, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %86, ptr addrspace(1) %54, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %90, ptr addrspace(1) %56, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %91 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %77, !dbg !32
  %92 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %81, !dbg !32
  %93 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %85, !dbg !32
  %94 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %89, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %91, ptr addrspace(1) %66, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %92, ptr addrspace(1) %68, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %93, ptr addrspace(1) %70, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %94, ptr addrspace(1) %72, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %95 = getelementptr i8, ptr addrspace(1) %50, i64 128, !dbg !33
  %96 = getelementptr i8, ptr addrspace(1) %52, i64 128, !dbg !33
  %97 = getelementptr i8, ptr addrspace(1) %54, i64 128, !dbg !33
  %98 = getelementptr i8, ptr addrspace(1) %56, i64 128, !dbg !33
  %99 = getelementptr i8, ptr addrspace(1) %66, i64 128, !dbg !34
  %100 = getelementptr i8, ptr addrspace(1) %68, i64 128, !dbg !34
  %101 = getelementptr i8, ptr addrspace(1) %70, i64 128, !dbg !34
  %102 = getelementptr i8, ptr addrspace(1) %72, i64 128, !dbg !34
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %103 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %77, !dbg !31
  %104 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %81, !dbg !31
  %105 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %85, !dbg !31
  %106 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %89, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %103, ptr addrspace(1) %95, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %104, ptr addrspace(1) %96, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %105, ptr addrspace(1) %97, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %106, ptr addrspace(1) %98, i32 16, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %107 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %77, !dbg !32
  %108 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %81, !dbg !32
  %109 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %85, !dbg !32
  %110 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %89, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %107, ptr addrspace(1) %99, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %108, ptr addrspace(1) %100, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %109, ptr addrspace(1) %101, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %110, ptr addrspace(1) %102, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %111 = and i32 %16, 134217724
  br label %112, !dbg !35

112:                                              ; preds = %4, %112
  %113 = phi i32 [ -1, %4 ], [ %151, %112 ]
  %114 = phi i32 [ 1, %4 ], [ %353, %112 ]
  %.pn79150 = phi ptr addrspace(1) [ %102, %4 ], [ %350, %112 ]
  %.pn95149 = phi ptr addrspace(1) [ %101, %4 ], [ %349, %112 ]
  %.pn111148 = phi ptr addrspace(1) [ %100, %4 ], [ %348, %112 ]
  %.pn127147 = phi ptr addrspace(1) [ %99, %4 ], [ %347, %112 ]
  %.pn15146 = phi ptr addrspace(1) [ %98, %4 ], [ %346, %112 ]
  %.pn31145 = phi ptr addrspace(1) [ %97, %4 ], [ %345, %112 ]
  %.pn47144 = phi ptr addrspace(1) [ %96, %4 ], [ %344, %112 ]
  %.pn63143 = phi ptr addrspace(1) [ %95, %4 ], [ %343, %112 ]
  %115 = phi float [ 0.000000e+00, %4 ], [ %311, %112 ]
  %116 = phi float [ 0.000000e+00, %4 ], [ %312, %112 ]
  %117 = phi float [ 0.000000e+00, %4 ], [ %313, %112 ]
  %118 = phi float [ 0.000000e+00, %4 ], [ %314, %112 ]
  %119 = phi float [ 0.000000e+00, %4 ], [ %315, %112 ]
  %120 = phi float [ 0.000000e+00, %4 ], [ %316, %112 ]
  %121 = phi float [ 0.000000e+00, %4 ], [ %317, %112 ]
  %122 = phi float [ 0.000000e+00, %4 ], [ %318, %112 ]
  %123 = phi float [ 0.000000e+00, %4 ], [ %319, %112 ]
  %124 = phi float [ 0.000000e+00, %4 ], [ %320, %112 ]
  %125 = phi float [ 0.000000e+00, %4 ], [ %321, %112 ]
  %126 = phi float [ 0.000000e+00, %4 ], [ %322, %112 ]
  %127 = phi float [ 0.000000e+00, %4 ], [ %323, %112 ]
  %128 = phi float [ 0.000000e+00, %4 ], [ %324, %112 ]
  %129 = phi float [ 0.000000e+00, %4 ], [ %325, %112 ]
  %130 = phi float [ 0.000000e+00, %4 ], [ %326, %112 ]
  %131 = phi float [ 0.000000e+00, %4 ], [ %327, %112 ]
  %132 = phi float [ 0.000000e+00, %4 ], [ %328, %112 ]
  %133 = phi float [ 0.000000e+00, %4 ], [ %329, %112 ]
  %134 = phi float [ 0.000000e+00, %4 ], [ %330, %112 ]
  %135 = phi float [ 0.000000e+00, %4 ], [ %331, %112 ]
  %136 = phi float [ 0.000000e+00, %4 ], [ %332, %112 ]
  %137 = phi float [ 0.000000e+00, %4 ], [ %333, %112 ]
  %138 = phi float [ 0.000000e+00, %4 ], [ %334, %112 ]
  %139 = phi float [ 0.000000e+00, %4 ], [ %335, %112 ]
  %140 = phi float [ 0.000000e+00, %4 ], [ %336, %112 ]
  %141 = phi float [ 0.000000e+00, %4 ], [ %337, %112 ]
  %142 = phi float [ 0.000000e+00, %4 ], [ %338, %112 ]
  %143 = phi float [ 0.000000e+00, %4 ], [ %339, %112 ]
  %144 = phi float [ 0.000000e+00, %4 ], [ %340, %112 ]
  %145 = phi float [ 0.000000e+00, %4 ], [ %341, %112 ]
  %146 = phi float [ 0.000000e+00, %4 ], [ %342, %112 ]
  %147 = phi i32 [ 0, %4 ], [ %367, %112 ]
  %148 = icmp ult i32 %147, 2944, !dbg !35
  %149 = add i32 %113, 1, !dbg !35
  %150 = icmp slt i32 %149, 3, !dbg !35
  %151 = select i1 %150, i32 %149, i32 0, !dbg !35
  %152 = shl i32 %151, 12, !dbg !31
  %153 = sext i32 %152 to i64, !dbg !31
  %154 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %153, !dbg !31
  tail call void asm sideeffect "cp.async.wait_group 0x2;", ""() #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %155 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %153, !dbg !32
  %156 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %111, i32 0, i32 31), !dbg !36
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !36
  %157 = shl i32 %156, 7, !dbg !36
  %158 = and i32 %157, 384, !dbg !36
  %159 = zext nneg i32 %158 to i64, !dbg !36
  %160 = ptrtoint ptr addrspace(3) %154 to i64, !dbg !36
  %161 = lshr exact i64 %160, 4, !dbg !36
  %162 = and i64 %161, 16383, !dbg !36
  %163 = or disjoint i64 %162, 4611686293338849280, !dbg !36
  %164 = add nuw nsw i64 %163, %159, !dbg !36
  %165 = ptrtoint ptr addrspace(3) %155 to i64, !dbg !36
  %166 = lshr exact i64 %165, 4, !dbg !36
  %167 = and i64 %166, 16383, !dbg !36
  %168 = or disjoint i64 %167, 4611686293338849280, !dbg !36
  %169 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %115, float %116, float %117, float %118, float %119, float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, float %143, float %144, float %145, float %146, i64 %164, i64 %168) #3, !dbg !36
  %170 = add nuw nsw i64 %162, 4611686293338849282, !dbg !36
  %171 = add nuw nsw i64 %170, %159, !dbg !36
  %172 = add nuw nsw i64 %167, 4611686293338849282, !dbg !36
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 0, !dbg !36
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 1, !dbg !36
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 2, !dbg !36
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 3, !dbg !36
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 4, !dbg !36
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 5, !dbg !36
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 6, !dbg !36
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 7, !dbg !36
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 8, !dbg !36
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 9, !dbg !36
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 10, !dbg !36
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 11, !dbg !36
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 12, !dbg !36
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 13, !dbg !36
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 14, !dbg !36
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 15, !dbg !36
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 16, !dbg !36
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 17, !dbg !36
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 18, !dbg !36
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 19, !dbg !36
  %193 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 20, !dbg !36
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 21, !dbg !36
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 22, !dbg !36
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 23, !dbg !36
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 24, !dbg !36
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 25, !dbg !36
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 26, !dbg !36
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 27, !dbg !36
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 28, !dbg !36
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 29, !dbg !36
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 30, !dbg !36
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %169, 31, !dbg !36
  %205 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, float %193, float %194, float %195, float %196, float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, i64 %171, i64 %172) #3, !dbg !36
  %206 = add nuw nsw i64 %162, 4611686293338849284, !dbg !36
  %207 = add nuw nsw i64 %206, %159, !dbg !36
  %208 = add nuw nsw i64 %167, 4611686293338849284, !dbg !36
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 0, !dbg !36
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 1, !dbg !36
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 2, !dbg !36
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 3, !dbg !36
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 4, !dbg !36
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 5, !dbg !36
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 6, !dbg !36
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 7, !dbg !36
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 8, !dbg !36
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 9, !dbg !36
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 10, !dbg !36
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 11, !dbg !36
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 12, !dbg !36
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 13, !dbg !36
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 14, !dbg !36
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 15, !dbg !36
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 16, !dbg !36
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 17, !dbg !36
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 18, !dbg !36
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 19, !dbg !36
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 20, !dbg !36
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 21, !dbg !36
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 22, !dbg !36
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 23, !dbg !36
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 24, !dbg !36
  %234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 25, !dbg !36
  %235 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 26, !dbg !36
  %236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 27, !dbg !36
  %237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 28, !dbg !36
  %238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 29, !dbg !36
  %239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 30, !dbg !36
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %205, 31, !dbg !36
  %241 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233, float %234, float %235, float %236, float %237, float %238, float %239, float %240, i64 %207, i64 %208) #3, !dbg !36
  %242 = add nuw nsw i64 %162, 4611686293338849286, !dbg !36
  %243 = add nuw nsw i64 %242, %159, !dbg !36
  %244 = add nuw nsw i64 %167, 4611686293338849286, !dbg !36
  %245 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 0, !dbg !36
  %246 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 1, !dbg !36
  %247 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 2, !dbg !36
  %248 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 3, !dbg !36
  %249 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 4, !dbg !36
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 5, !dbg !36
  %251 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 6, !dbg !36
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 7, !dbg !36
  %253 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 8, !dbg !36
  %254 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 9, !dbg !36
  %255 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 10, !dbg !36
  %256 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 11, !dbg !36
  %257 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 12, !dbg !36
  %258 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 13, !dbg !36
  %259 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 14, !dbg !36
  %260 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 15, !dbg !36
  %261 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 16, !dbg !36
  %262 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 17, !dbg !36
  %263 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 18, !dbg !36
  %264 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 19, !dbg !36
  %265 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 20, !dbg !36
  %266 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 21, !dbg !36
  %267 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 22, !dbg !36
  %268 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 23, !dbg !36
  %269 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 24, !dbg !36
  %270 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 25, !dbg !36
  %271 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 26, !dbg !36
  %272 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 27, !dbg !36
  %273 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 28, !dbg !36
  %274 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 29, !dbg !36
  %275 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 30, !dbg !36
  %276 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %241, 31, !dbg !36
  %277 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %245, float %246, float %247, float %248, float %249, float %250, float %251, float %252, float %253, float %254, float %255, float %256, float %257, float %258, float %259, float %260, float %261, float %262, float %263, float %264, float %265, float %266, float %267, float %268, float %269, float %270, float %271, float %272, float %273, float %274, float %275, float %276, i64 %243, i64 %244) #3, !dbg !36
  %278 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 0, !dbg !36
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 1, !dbg !36
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 2, !dbg !36
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 3, !dbg !36
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 4, !dbg !36
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 5, !dbg !36
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 6, !dbg !36
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 7, !dbg !36
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 8, !dbg !36
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 9, !dbg !36
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 10, !dbg !36
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 11, !dbg !36
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 12, !dbg !36
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 13, !dbg !36
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 14, !dbg !36
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 15, !dbg !36
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 16, !dbg !36
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 17, !dbg !36
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 18, !dbg !36
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 19, !dbg !36
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 20, !dbg !36
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 21, !dbg !36
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 22, !dbg !36
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 23, !dbg !36
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 24, !dbg !36
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 25, !dbg !36
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 26, !dbg !36
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 27, !dbg !36
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 28, !dbg !36
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 29, !dbg !36
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 30, !dbg !36
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %277, 31, !dbg !36
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !36
  %310 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %278, float %279, float %280, float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, ptr addrspace(3) %154, i32 64, i32 1, i32 0, i32 0, ptr addrspace(3) %155, i32 1, i32 64, i32 0, i32 0) #3, !dbg !36
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 0, !dbg !36
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 1, !dbg !36
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 2, !dbg !36
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 3, !dbg !36
  %315 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 4, !dbg !36
  %316 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 5, !dbg !36
  %317 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 6, !dbg !36
  %318 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 7, !dbg !36
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 8, !dbg !36
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 9, !dbg !36
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 10, !dbg !36
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 11, !dbg !36
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 12, !dbg !36
  %324 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 13, !dbg !36
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 14, !dbg !36
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 15, !dbg !36
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 16, !dbg !36
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 17, !dbg !36
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 18, !dbg !36
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 19, !dbg !36
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 20, !dbg !36
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 21, !dbg !36
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 22, !dbg !36
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 23, !dbg !36
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 24, !dbg !36
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 25, !dbg !36
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 26, !dbg !36
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 27, !dbg !36
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 28, !dbg !36
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 29, !dbg !36
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 30, !dbg !36
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %310, 31, !dbg !36
  %343 = getelementptr i8, ptr addrspace(1) %.pn63143, i64 128, !dbg !33
  %344 = getelementptr i8, ptr addrspace(1) %.pn47144, i64 128, !dbg !33
  %345 = getelementptr i8, ptr addrspace(1) %.pn31145, i64 128, !dbg !33
  %346 = getelementptr i8, ptr addrspace(1) %.pn15146, i64 128, !dbg !33
  %347 = getelementptr i8, ptr addrspace(1) %.pn127147, i64 128, !dbg !34
  %348 = getelementptr i8, ptr addrspace(1) %.pn111148, i64 128, !dbg !34
  %349 = getelementptr i8, ptr addrspace(1) %.pn95149, i64 128, !dbg !34
  %350 = getelementptr i8, ptr addrspace(1) %.pn79150, i64 128, !dbg !34
  %351 = add i32 %114, 1, !dbg !35
  %352 = icmp slt i32 %351, 3, !dbg !35
  %353 = select i1 %352, i32 %351, i32 0, !dbg !35
  %354 = shl i32 %353, 12, !dbg !31
  %355 = sext i32 %354 to i64, !dbg !31
  %356 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %355, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %357 = getelementptr i16, ptr addrspace(3) %356, i64 %77, !dbg !31
  %358 = getelementptr i16, ptr addrspace(3) %356, i64 %81, !dbg !31
  %359 = getelementptr i16, ptr addrspace(3) %356, i64 %85, !dbg !31
  %360 = getelementptr i16, ptr addrspace(3) %356, i64 %89, !dbg !31
  %361 = select i1 %148, i32 16, i32 0, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %357, ptr addrspace(1) %343, i32 %361, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %358, ptr addrspace(1) %344, i32 %361, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %359, ptr addrspace(1) %345, i32 %361, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %360, ptr addrspace(1) %346, i32 %361, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %362 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %355, !dbg !32
  %363 = getelementptr i16, ptr addrspace(3) %362, i64 %77, !dbg !32
  %364 = getelementptr i16, ptr addrspace(3) %362, i64 %81, !dbg !32
  %365 = getelementptr i16, ptr addrspace(3) %362, i64 %85, !dbg !32
  %366 = getelementptr i16, ptr addrspace(3) %362, i64 %89, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %363, ptr addrspace(1) %347, i32 %361, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %364, ptr addrspace(1) %348, i32 %361, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %365, ptr addrspace(1) %349, i32 %361, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %366, ptr addrspace(1) %350, i32 %361, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %367 = add nuw nsw i32 %147, 64, !dbg !35
  %368 = icmp ult i32 %147, 3008, !dbg !35
  br i1 %368, label %112, label %369, !dbg !35

369:                                              ; preds = %112
  %370 = or disjoint i32 %28, %23, !dbg !22
  %371 = and i32 %15, 31, !dbg !19
  %372 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %311, float %312, float %313, float %314, float %315, float %316, float %317, float %318, float %319, float %320, float %321, float %322, float %323, float %324, float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, float %340, float %341, float %342) #3, !dbg !35
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 0, !dbg !35
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 1, !dbg !35
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 2, !dbg !35
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 3, !dbg !35
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 4, !dbg !35
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 5, !dbg !35
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 6, !dbg !35
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 7, !dbg !35
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 8, !dbg !35
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 9, !dbg !35
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 10, !dbg !35
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 11, !dbg !35
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 12, !dbg !35
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 13, !dbg !35
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 14, !dbg !35
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 15, !dbg !35
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 16, !dbg !35
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 17, !dbg !35
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 18, !dbg !35
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 19, !dbg !35
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 20, !dbg !35
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 21, !dbg !35
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 22, !dbg !35
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 23, !dbg !35
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 24, !dbg !35
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 25, !dbg !35
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 26, !dbg !35
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 27, !dbg !35
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 28, !dbg !35
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 29, !dbg !35
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 30, !dbg !35
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %372, 31, !dbg !35
  %405 = and i32 %16, 3, !dbg !35
  %406 = lshr i32 %371, 2, !dbg !35
  %407 = shl i32 %15, 1, !dbg !35
  %408 = and i32 %407, 6, !dbg !35
  %409 = shl nuw nsw i32 %405, 4, !dbg !35
  %410 = or disjoint i32 %409, %406, !dbg !35
  %411 = mul nuw nsw i32 %410, 72, !dbg !35
  %412 = or disjoint i32 %411, %408, !dbg !35
  %413 = zext nneg i32 %412 to i64, !dbg !35
  %414 = getelementptr float, ptr addrspace(3) @global_smem, i64 %413, !dbg !35
  %415 = insertelement <2 x float> poison, float %373, i64 0, !dbg !35
  %416 = insertelement <2 x float> %415, float %374, i64 1, !dbg !35
  store <2 x float> %416, ptr addrspace(3) %414, align 8, !dbg !35
  %417 = add nuw nsw i32 %411, 576, !dbg !35
  %418 = or disjoint i32 %417, %408, !dbg !35
  %419 = zext nneg i32 %418 to i64, !dbg !35
  %420 = getelementptr float, ptr addrspace(3) @global_smem, i64 %419, !dbg !35
  %421 = insertelement <2 x float> poison, float %375, i64 0, !dbg !35
  %422 = insertelement <2 x float> %421, float %376, i64 1, !dbg !35
  store <2 x float> %422, ptr addrspace(3) %420, align 8, !dbg !35
  %423 = or disjoint i32 %408, 8, !dbg !35
  %424 = add nuw nsw i32 %411, %423, !dbg !35
  %425 = zext nneg i32 %424 to i64, !dbg !35
  %426 = getelementptr float, ptr addrspace(3) @global_smem, i64 %425, !dbg !35
  %427 = insertelement <2 x float> poison, float %377, i64 0, !dbg !35
  %428 = insertelement <2 x float> %427, float %378, i64 1, !dbg !35
  store <2 x float> %428, ptr addrspace(3) %426, align 8, !dbg !35
  %429 = add nuw nsw i32 %417, %423, !dbg !35
  %430 = zext nneg i32 %429 to i64, !dbg !35
  %431 = getelementptr float, ptr addrspace(3) @global_smem, i64 %430, !dbg !35
  %432 = insertelement <2 x float> poison, float %379, i64 0, !dbg !35
  %433 = insertelement <2 x float> %432, float %380, i64 1, !dbg !35
  store <2 x float> %433, ptr addrspace(3) %431, align 8, !dbg !35
  %434 = or disjoint i32 %408, 16, !dbg !35
  %435 = add nuw nsw i32 %411, %434, !dbg !35
  %436 = zext nneg i32 %435 to i64, !dbg !35
  %437 = getelementptr float, ptr addrspace(3) @global_smem, i64 %436, !dbg !35
  %438 = insertelement <2 x float> poison, float %381, i64 0, !dbg !35
  %439 = insertelement <2 x float> %438, float %382, i64 1, !dbg !35
  store <2 x float> %439, ptr addrspace(3) %437, align 8, !dbg !35
  %440 = add nuw nsw i32 %417, %434, !dbg !35
  %441 = zext nneg i32 %440 to i64, !dbg !35
  %442 = getelementptr float, ptr addrspace(3) @global_smem, i64 %441, !dbg !35
  %443 = insertelement <2 x float> poison, float %383, i64 0, !dbg !35
  %444 = insertelement <2 x float> %443, float %384, i64 1, !dbg !35
  store <2 x float> %444, ptr addrspace(3) %442, align 8, !dbg !35
  %445 = or disjoint i32 %408, 24, !dbg !35
  %446 = add nuw nsw i32 %411, %445, !dbg !35
  %447 = zext nneg i32 %446 to i64, !dbg !35
  %448 = getelementptr float, ptr addrspace(3) @global_smem, i64 %447, !dbg !35
  %449 = insertelement <2 x float> poison, float %385, i64 0, !dbg !35
  %450 = insertelement <2 x float> %449, float %386, i64 1, !dbg !35
  store <2 x float> %450, ptr addrspace(3) %448, align 8, !dbg !35
  %451 = add nuw nsw i32 %417, %445, !dbg !35
  %452 = zext nneg i32 %451 to i64, !dbg !35
  %453 = getelementptr float, ptr addrspace(3) @global_smem, i64 %452, !dbg !35
  %454 = insertelement <2 x float> poison, float %387, i64 0, !dbg !35
  %455 = insertelement <2 x float> %454, float %388, i64 1, !dbg !35
  store <2 x float> %455, ptr addrspace(3) %453, align 8, !dbg !35
  %456 = or disjoint i32 %408, 32, !dbg !35
  %457 = add nuw nsw i32 %411, %456, !dbg !35
  %458 = zext nneg i32 %457 to i64, !dbg !35
  %459 = getelementptr float, ptr addrspace(3) @global_smem, i64 %458, !dbg !35
  %460 = insertelement <2 x float> poison, float %389, i64 0, !dbg !35
  %461 = insertelement <2 x float> %460, float %390, i64 1, !dbg !35
  store <2 x float> %461, ptr addrspace(3) %459, align 8, !dbg !35
  %462 = add nuw nsw i32 %417, %456, !dbg !35
  %463 = zext nneg i32 %462 to i64, !dbg !35
  %464 = getelementptr float, ptr addrspace(3) @global_smem, i64 %463, !dbg !35
  %465 = insertelement <2 x float> poison, float %391, i64 0, !dbg !35
  %466 = insertelement <2 x float> %465, float %392, i64 1, !dbg !35
  store <2 x float> %466, ptr addrspace(3) %464, align 8, !dbg !35
  %467 = or disjoint i32 %408, 40, !dbg !35
  %468 = add nuw nsw i32 %411, %467, !dbg !35
  %469 = zext nneg i32 %468 to i64, !dbg !35
  %470 = getelementptr float, ptr addrspace(3) @global_smem, i64 %469, !dbg !35
  %471 = insertelement <2 x float> poison, float %393, i64 0, !dbg !35
  %472 = insertelement <2 x float> %471, float %394, i64 1, !dbg !35
  store <2 x float> %472, ptr addrspace(3) %470, align 8, !dbg !35
  %473 = add nuw nsw i32 %417, %467, !dbg !35
  %474 = zext nneg i32 %473 to i64, !dbg !35
  %475 = getelementptr float, ptr addrspace(3) @global_smem, i64 %474, !dbg !35
  %476 = insertelement <2 x float> poison, float %395, i64 0, !dbg !35
  %477 = insertelement <2 x float> %476, float %396, i64 1, !dbg !35
  store <2 x float> %477, ptr addrspace(3) %475, align 8, !dbg !35
  %478 = or disjoint i32 %408, 48, !dbg !35
  %479 = add nuw nsw i32 %411, %478, !dbg !35
  %480 = zext nneg i32 %479 to i64, !dbg !35
  %481 = getelementptr float, ptr addrspace(3) @global_smem, i64 %480, !dbg !35
  %482 = insertelement <2 x float> poison, float %397, i64 0, !dbg !35
  %483 = insertelement <2 x float> %482, float %398, i64 1, !dbg !35
  store <2 x float> %483, ptr addrspace(3) %481, align 8, !dbg !35
  %484 = add nuw nsw i32 %417, %478, !dbg !35
  %485 = zext nneg i32 %484 to i64, !dbg !35
  %486 = getelementptr float, ptr addrspace(3) @global_smem, i64 %485, !dbg !35
  %487 = insertelement <2 x float> poison, float %399, i64 0, !dbg !35
  %488 = insertelement <2 x float> %487, float %400, i64 1, !dbg !35
  store <2 x float> %488, ptr addrspace(3) %486, align 8, !dbg !35
  %489 = or disjoint i32 %408, 56, !dbg !35
  %490 = add nuw nsw i32 %411, %489, !dbg !35
  %491 = zext nneg i32 %490 to i64, !dbg !35
  %492 = getelementptr float, ptr addrspace(3) @global_smem, i64 %491, !dbg !35
  %493 = insertelement <2 x float> poison, float %401, i64 0, !dbg !35
  %494 = insertelement <2 x float> %493, float %402, i64 1, !dbg !35
  store <2 x float> %494, ptr addrspace(3) %492, align 8, !dbg !35
  %495 = add nuw nsw i32 %417, %489, !dbg !35
  %496 = zext nneg i32 %495 to i64, !dbg !35
  %497 = getelementptr float, ptr addrspace(3) @global_smem, i64 %496, !dbg !35
  %498 = insertelement <2 x float> poison, float %403, i64 0, !dbg !35
  %499 = insertelement <2 x float> %498, float %404, i64 1, !dbg !35
  store <2 x float> %499, ptr addrspace(3) %497, align 8, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %500 = lshr i32 %371, 3, !dbg !35
  %501 = shl nuw nsw i32 %405, 2, !dbg !35
  %502 = or disjoint i32 %501, %500, !dbg !35
  %503 = mul nuw nsw i32 %502, 72, !dbg !35
  %504 = add nuw nsw i32 %503, %23, !dbg !35
  %505 = zext nneg i32 %504 to i64, !dbg !35
  %506 = getelementptr float, ptr addrspace(3) @global_smem, i64 %505, !dbg !35
  %507 = load float, ptr addrspace(3) %506, align 32, !dbg !35
  %508 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 4, !dbg !35
  %509 = load float, ptr addrspace(3) %508, align 4, !dbg !35
  %510 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 8, !dbg !35
  %511 = load float, ptr addrspace(3) %510, align 8, !dbg !35
  %512 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 12, !dbg !35
  %513 = load float, ptr addrspace(3) %512, align 4, !dbg !35
  %514 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 16, !dbg !35
  %515 = load float, ptr addrspace(3) %514, align 16, !dbg !35
  %516 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 20, !dbg !35
  %517 = load float, ptr addrspace(3) %516, align 4, !dbg !35
  %518 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 24, !dbg !35
  %519 = load float, ptr addrspace(3) %518, align 8, !dbg !35
  %520 = getelementptr inbounds i8, ptr addrspace(3) %506, i64 28, !dbg !35
  %521 = load float, ptr addrspace(3) %520, align 4, !dbg !35
  %522 = getelementptr i8, ptr addrspace(3) %506, i64 4608, !dbg !35
  %523 = load float, ptr addrspace(3) %522, align 32, !dbg !35
  %524 = getelementptr i8, ptr addrspace(3) %506, i64 4612, !dbg !35
  %525 = load float, ptr addrspace(3) %524, align 4, !dbg !35
  %526 = getelementptr i8, ptr addrspace(3) %506, i64 4616, !dbg !35
  %527 = load float, ptr addrspace(3) %526, align 8, !dbg !35
  %528 = getelementptr i8, ptr addrspace(3) %506, i64 4620, !dbg !35
  %529 = load float, ptr addrspace(3) %528, align 4, !dbg !35
  %530 = getelementptr i8, ptr addrspace(3) %506, i64 4624, !dbg !35
  %531 = load float, ptr addrspace(3) %530, align 16, !dbg !35
  %532 = getelementptr i8, ptr addrspace(3) %506, i64 4628, !dbg !35
  %533 = load float, ptr addrspace(3) %532, align 4, !dbg !35
  %534 = getelementptr i8, ptr addrspace(3) %506, i64 4632, !dbg !35
  %535 = load float, ptr addrspace(3) %534, align 8, !dbg !35
  %536 = getelementptr i8, ptr addrspace(3) %506, i64 4636, !dbg !35
  %537 = load float, ptr addrspace(3) %536, align 4, !dbg !35
  %538 = getelementptr i8, ptr addrspace(3) %506, i64 9216, !dbg !35
  %539 = load float, ptr addrspace(3) %538, align 32, !dbg !35
  %540 = getelementptr i8, ptr addrspace(3) %506, i64 9220, !dbg !35
  %541 = load float, ptr addrspace(3) %540, align 4, !dbg !35
  %542 = getelementptr i8, ptr addrspace(3) %506, i64 9224, !dbg !35
  %543 = load float, ptr addrspace(3) %542, align 8, !dbg !35
  %544 = getelementptr i8, ptr addrspace(3) %506, i64 9228, !dbg !35
  %545 = load float, ptr addrspace(3) %544, align 4, !dbg !35
  %546 = getelementptr i8, ptr addrspace(3) %506, i64 9232, !dbg !35
  %547 = load float, ptr addrspace(3) %546, align 16, !dbg !35
  %548 = getelementptr i8, ptr addrspace(3) %506, i64 9236, !dbg !35
  %549 = load float, ptr addrspace(3) %548, align 4, !dbg !35
  %550 = getelementptr i8, ptr addrspace(3) %506, i64 9240, !dbg !35
  %551 = load float, ptr addrspace(3) %550, align 8, !dbg !35
  %552 = getelementptr i8, ptr addrspace(3) %506, i64 9244, !dbg !35
  %553 = load float, ptr addrspace(3) %552, align 4, !dbg !35
  %554 = getelementptr i8, ptr addrspace(3) %506, i64 13824, !dbg !35
  %555 = load float, ptr addrspace(3) %554, align 32, !dbg !35
  %556 = getelementptr i8, ptr addrspace(3) %506, i64 13828, !dbg !35
  %557 = load float, ptr addrspace(3) %556, align 4, !dbg !35
  %558 = getelementptr i8, ptr addrspace(3) %506, i64 13832, !dbg !35
  %559 = load float, ptr addrspace(3) %558, align 8, !dbg !35
  %560 = getelementptr i8, ptr addrspace(3) %506, i64 13836, !dbg !35
  %561 = load float, ptr addrspace(3) %560, align 4, !dbg !35
  %562 = getelementptr i8, ptr addrspace(3) %506, i64 13840, !dbg !35
  %563 = load float, ptr addrspace(3) %562, align 16, !dbg !35
  %564 = getelementptr i8, ptr addrspace(3) %506, i64 13844, !dbg !35
  %565 = load float, ptr addrspace(3) %564, align 4, !dbg !35
  %566 = getelementptr i8, ptr addrspace(3) %506, i64 13848, !dbg !35
  %567 = load float, ptr addrspace(3) %566, align 8, !dbg !35
  %568 = getelementptr i8, ptr addrspace(3) %506, i64 13852, !dbg !35
  %569 = load float, ptr addrspace(3) %568, align 4, !dbg !35
  %570 = icmp slt i32 %24, 4096, !dbg !37
  %571 = icmp slt i32 %25, 4096, !dbg !37
  %572 = icmp slt i32 %26, 4096, !dbg !37
  %573 = icmp slt i32 %27, 4096, !dbg !37
  %574 = icmp slt i32 %370, 64, !dbg !38
  %575 = and i1 %574, %570, !dbg !39
  %576 = and i1 %574, %571, !dbg !39
  %577 = and i1 %574, %572, !dbg !39
  %578 = and i1 %574, %573, !dbg !39
  %579 = shl i32 %24, 6, !dbg !40
  %580 = shl i32 %25, 6, !dbg !40
  %581 = shl i32 %26, 6, !dbg !40
  %582 = shl i32 %27, 6, !dbg !40
  %583 = add i32 %579, %370, !dbg !41
  %584 = add i32 %580, %370, !dbg !41
  %585 = add i32 %581, %370, !dbg !41
  %586 = add i32 %582, %370, !dbg !41
  %587 = sext i32 %370 to i64, !dbg !42
  %588 = getelementptr i16, ptr addrspace(1) %0, i64 %587, !dbg !42
  %589 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %588, i1 %575) #3, !dbg !43
  %590 = extractvalue { i32, i32, i32, i32 } %589, 0, !dbg !43
  %591 = extractvalue { i32, i32, i32, i32 } %589, 1, !dbg !43
  %592 = extractvalue { i32, i32, i32, i32 } %589, 2, !dbg !43
  %593 = extractvalue { i32, i32, i32, i32 } %589, 3, !dbg !43
  %594 = trunc i32 %590 to i16, !dbg !43
  %extelt.offset = lshr i32 %590, 16, !dbg !43
  %595 = trunc nuw i32 %extelt.offset to i16, !dbg !43
  %596 = trunc i32 %591 to i16, !dbg !43
  %extelt.offset128 = lshr i32 %591, 16, !dbg !43
  %597 = trunc nuw i32 %extelt.offset128 to i16, !dbg !43
  %598 = trunc i32 %592 to i16, !dbg !43
  %extelt.offset129 = lshr i32 %592, 16, !dbg !43
  %599 = trunc nuw i32 %extelt.offset129 to i16, !dbg !43
  %600 = trunc i32 %593 to i16, !dbg !43
  %extelt.offset130 = lshr i32 %593, 16, !dbg !43
  %601 = trunc nuw i32 %extelt.offset130 to i16, !dbg !43
  %602 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %588, i1 %576) #3, !dbg !43
  %603 = extractvalue { i32, i32, i32, i32 } %602, 0, !dbg !43
  %604 = extractvalue { i32, i32, i32, i32 } %602, 1, !dbg !43
  %605 = extractvalue { i32, i32, i32, i32 } %602, 2, !dbg !43
  %606 = extractvalue { i32, i32, i32, i32 } %602, 3, !dbg !43
  %607 = trunc i32 %603 to i16, !dbg !43
  %extelt.offset131 = lshr i32 %603, 16, !dbg !43
  %608 = trunc nuw i32 %extelt.offset131 to i16, !dbg !43
  %609 = trunc i32 %604 to i16, !dbg !43
  %extelt.offset132 = lshr i32 %604, 16, !dbg !43
  %610 = trunc nuw i32 %extelt.offset132 to i16, !dbg !43
  %611 = trunc i32 %605 to i16, !dbg !43
  %extelt.offset133 = lshr i32 %605, 16, !dbg !43
  %612 = trunc nuw i32 %extelt.offset133 to i16, !dbg !43
  %613 = trunc i32 %606 to i16, !dbg !43
  %extelt.offset134 = lshr i32 %606, 16, !dbg !43
  %614 = trunc nuw i32 %extelt.offset134 to i16, !dbg !43
  %615 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %588, i1 %577) #3, !dbg !43
  %616 = extractvalue { i32, i32, i32, i32 } %615, 0, !dbg !43
  %617 = extractvalue { i32, i32, i32, i32 } %615, 1, !dbg !43
  %618 = extractvalue { i32, i32, i32, i32 } %615, 2, !dbg !43
  %619 = extractvalue { i32, i32, i32, i32 } %615, 3, !dbg !43
  %620 = trunc i32 %616 to i16, !dbg !43
  %extelt.offset135 = lshr i32 %616, 16, !dbg !43
  %621 = trunc nuw i32 %extelt.offset135 to i16, !dbg !43
  %622 = trunc i32 %617 to i16, !dbg !43
  %extelt.offset136 = lshr i32 %617, 16, !dbg !43
  %623 = trunc nuw i32 %extelt.offset136 to i16, !dbg !43
  %624 = trunc i32 %618 to i16, !dbg !43
  %extelt.offset137 = lshr i32 %618, 16, !dbg !43
  %625 = trunc nuw i32 %extelt.offset137 to i16, !dbg !43
  %626 = trunc i32 %619 to i16, !dbg !43
  %extelt.offset138 = lshr i32 %619, 16, !dbg !43
  %627 = trunc nuw i32 %extelt.offset138 to i16, !dbg !43
  %628 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %588, i1 %578) #3, !dbg !43
  %629 = extractvalue { i32, i32, i32, i32 } %628, 0, !dbg !43
  %630 = extractvalue { i32, i32, i32, i32 } %628, 1, !dbg !43
  %631 = extractvalue { i32, i32, i32, i32 } %628, 2, !dbg !43
  %632 = extractvalue { i32, i32, i32, i32 } %628, 3, !dbg !43
  %633 = trunc i32 %629 to i16, !dbg !43
  %extelt.offset139 = lshr i32 %629, 16, !dbg !43
  %634 = trunc nuw i32 %extelt.offset139 to i16, !dbg !43
  %635 = trunc i32 %630 to i16, !dbg !43
  %extelt.offset140 = lshr i32 %630, 16, !dbg !43
  %636 = trunc nuw i32 %extelt.offset140 to i16, !dbg !43
  %637 = trunc i32 %631 to i16, !dbg !43
  %extelt.offset141 = lshr i32 %631, 16, !dbg !43
  %638 = trunc nuw i32 %extelt.offset141 to i16, !dbg !43
  %639 = trunc i32 %632 to i16, !dbg !43
  %extelt.offset142 = lshr i32 %632, 16, !dbg !43
  %640 = trunc nuw i32 %extelt.offset142 to i16, !dbg !43
  %641 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %594) #3, !dbg !44
  %642 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %595) #3, !dbg !44
  %643 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %596) #3, !dbg !44
  %644 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %597) #3, !dbg !44
  %645 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %598) #3, !dbg !44
  %646 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %599) #3, !dbg !44
  %647 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %600) #3, !dbg !44
  %648 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %601) #3, !dbg !44
  %649 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %607) #3, !dbg !44
  %650 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %608) #3, !dbg !44
  %651 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %609) #3, !dbg !44
  %652 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %610) #3, !dbg !44
  %653 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %611) #3, !dbg !44
  %654 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %612) #3, !dbg !44
  %655 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %613) #3, !dbg !44
  %656 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %614) #3, !dbg !44
  %657 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %620) #3, !dbg !44
  %658 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %621) #3, !dbg !44
  %659 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %622) #3, !dbg !44
  %660 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %623) #3, !dbg !44
  %661 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %624) #3, !dbg !44
  %662 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %625) #3, !dbg !44
  %663 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %626) #3, !dbg !44
  %664 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %627) #3, !dbg !44
  %665 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %633) #3, !dbg !44
  %666 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %634) #3, !dbg !44
  %667 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %635) #3, !dbg !44
  %668 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %636) #3, !dbg !44
  %669 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %637) #3, !dbg !44
  %670 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %638) #3, !dbg !44
  %671 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %639) #3, !dbg !44
  %672 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %640) #3, !dbg !44
  %673 = fadd float %507, %641, !dbg !45
  %674 = fadd float %509, %642, !dbg !45
  %675 = fadd float %511, %643, !dbg !45
  %676 = fadd float %513, %644, !dbg !45
  %677 = fadd float %515, %645, !dbg !45
  %678 = fadd float %517, %646, !dbg !45
  %679 = fadd float %519, %647, !dbg !45
  %680 = fadd float %521, %648, !dbg !45
  %681 = fadd float %523, %649, !dbg !45
  %682 = fadd float %525, %650, !dbg !45
  %683 = fadd float %527, %651, !dbg !45
  %684 = fadd float %529, %652, !dbg !45
  %685 = fadd float %531, %653, !dbg !45
  %686 = fadd float %533, %654, !dbg !45
  %687 = fadd float %535, %655, !dbg !45
  %688 = fadd float %537, %656, !dbg !45
  %689 = fadd float %539, %657, !dbg !45
  %690 = fadd float %541, %658, !dbg !45
  %691 = fadd float %543, %659, !dbg !45
  %692 = fadd float %545, %660, !dbg !45
  %693 = fadd float %547, %661, !dbg !45
  %694 = fadd float %549, %662, !dbg !45
  %695 = fadd float %551, %663, !dbg !45
  %696 = fadd float %553, %664, !dbg !45
  %697 = fadd float %555, %665, !dbg !45
  %698 = fadd float %557, %666, !dbg !45
  %699 = fadd float %559, %667, !dbg !45
  %700 = fadd float %561, %668, !dbg !45
  %701 = fadd float %563, %669, !dbg !45
  %702 = fadd float %565, %670, !dbg !45
  %703 = fadd float %567, %671, !dbg !45
  %704 = fadd float %569, %672, !dbg !45
  %705 = sext i32 %583 to i64, !dbg !46
  %706 = getelementptr i16, ptr addrspace(1) %3, i64 %705, !dbg !46
  %707 = sext i32 %584 to i64, !dbg !46
  %708 = getelementptr i16, ptr addrspace(1) %3, i64 %707, !dbg !46
  %709 = sext i32 %585 to i64, !dbg !46
  %710 = getelementptr i16, ptr addrspace(1) %3, i64 %709, !dbg !46
  %711 = sext i32 %586 to i64, !dbg !46
  %712 = getelementptr i16, ptr addrspace(1) %3, i64 %711, !dbg !46
  %713 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %673) #3, !dbg !47
  %714 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %674) #3, !dbg !47
  %715 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %675) #3, !dbg !47
  %716 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %676) #3, !dbg !47
  %717 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %677) #3, !dbg !47
  %718 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %678) #3, !dbg !47
  %719 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %679) #3, !dbg !47
  %720 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %680) #3, !dbg !47
  %721 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %681) #3, !dbg !47
  %722 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %682) #3, !dbg !47
  %723 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %683) #3, !dbg !47
  %724 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %684) #3, !dbg !47
  %725 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %685) #3, !dbg !47
  %726 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %686) #3, !dbg !47
  %727 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %687) #3, !dbg !47
  %728 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %688) #3, !dbg !47
  %729 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %689) #3, !dbg !47
  %730 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %690) #3, !dbg !47
  %731 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %691) #3, !dbg !47
  %732 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %692) #3, !dbg !47
  %733 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %693) #3, !dbg !47
  %734 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %694) #3, !dbg !47
  %735 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %695) #3, !dbg !47
  %736 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %696) #3, !dbg !47
  %737 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %697) #3, !dbg !47
  %738 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %698) #3, !dbg !47
  %739 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %699) #3, !dbg !47
  %740 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %700) #3, !dbg !47
  %741 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %701) #3, !dbg !47
  %742 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %702) #3, !dbg !47
  %743 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %703) #3, !dbg !47
  %744 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %704) #3, !dbg !47
  %745 = insertelement <2 x i16> poison, i16 %713, i64 0, !dbg !47
  %746 = insertelement <2 x i16> %745, i16 %714, i64 1, !dbg !47
  %747 = bitcast <2 x i16> %746 to i32, !dbg !47
  %748 = insertelement <2 x i16> poison, i16 %715, i64 0, !dbg !47
  %749 = insertelement <2 x i16> %748, i16 %716, i64 1, !dbg !47
  %750 = bitcast <2 x i16> %749 to i32, !dbg !47
  %751 = insertelement <2 x i16> poison, i16 %717, i64 0, !dbg !47
  %752 = insertelement <2 x i16> %751, i16 %718, i64 1, !dbg !47
  %753 = bitcast <2 x i16> %752 to i32, !dbg !47
  %754 = insertelement <2 x i16> poison, i16 %719, i64 0, !dbg !47
  %755 = insertelement <2 x i16> %754, i16 %720, i64 1, !dbg !47
  %756 = bitcast <2 x i16> %755 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %747, i32 %750, i32 %753, i32 %756, ptr addrspace(1) %706, i1 %575) #3, !dbg !47
  %757 = insertelement <2 x i16> poison, i16 %721, i64 0, !dbg !47
  %758 = insertelement <2 x i16> %757, i16 %722, i64 1, !dbg !47
  %759 = bitcast <2 x i16> %758 to i32, !dbg !47
  %760 = insertelement <2 x i16> poison, i16 %723, i64 0, !dbg !47
  %761 = insertelement <2 x i16> %760, i16 %724, i64 1, !dbg !47
  %762 = bitcast <2 x i16> %761 to i32, !dbg !47
  %763 = insertelement <2 x i16> poison, i16 %725, i64 0, !dbg !47
  %764 = insertelement <2 x i16> %763, i16 %726, i64 1, !dbg !47
  %765 = bitcast <2 x i16> %764 to i32, !dbg !47
  %766 = insertelement <2 x i16> poison, i16 %727, i64 0, !dbg !47
  %767 = insertelement <2 x i16> %766, i16 %728, i64 1, !dbg !47
  %768 = bitcast <2 x i16> %767 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %759, i32 %762, i32 %765, i32 %768, ptr addrspace(1) %708, i1 %576) #3, !dbg !47
  %769 = insertelement <2 x i16> poison, i16 %729, i64 0, !dbg !47
  %770 = insertelement <2 x i16> %769, i16 %730, i64 1, !dbg !47
  %771 = bitcast <2 x i16> %770 to i32, !dbg !47
  %772 = insertelement <2 x i16> poison, i16 %731, i64 0, !dbg !47
  %773 = insertelement <2 x i16> %772, i16 %732, i64 1, !dbg !47
  %774 = bitcast <2 x i16> %773 to i32, !dbg !47
  %775 = insertelement <2 x i16> poison, i16 %733, i64 0, !dbg !47
  %776 = insertelement <2 x i16> %775, i16 %734, i64 1, !dbg !47
  %777 = bitcast <2 x i16> %776 to i32, !dbg !47
  %778 = insertelement <2 x i16> poison, i16 %735, i64 0, !dbg !47
  %779 = insertelement <2 x i16> %778, i16 %736, i64 1, !dbg !47
  %780 = bitcast <2 x i16> %779 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %771, i32 %774, i32 %777, i32 %780, ptr addrspace(1) %710, i1 %577) #3, !dbg !47
  %781 = insertelement <2 x i16> poison, i16 %737, i64 0, !dbg !47
  %782 = insertelement <2 x i16> %781, i16 %738, i64 1, !dbg !47
  %783 = bitcast <2 x i16> %782 to i32, !dbg !47
  %784 = insertelement <2 x i16> poison, i16 %739, i64 0, !dbg !47
  %785 = insertelement <2 x i16> %784, i16 %740, i64 1, !dbg !47
  %786 = bitcast <2 x i16> %785 to i32, !dbg !47
  %787 = insertelement <2 x i16> poison, i16 %741, i64 0, !dbg !47
  %788 = insertelement <2 x i16> %787, i16 %742, i64 1, !dbg !47
  %789 = bitcast <2 x i16> %788 to i32, !dbg !47
  %790 = insertelement <2 x i16> poison, i16 %743, i64 0, !dbg !47
  %791 = insertelement <2 x i16> %790, i16 %744, i64 1, !dbg !47
  %792 = bitcast <2 x i16> %791 to i32, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %783, i32 %786, i32 %789, i32 %792, ptr addrspace(1) %712, i1 %578) #3, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyrstlo76ixlvbccefxbkmbod6ygyuyemu64hoh35jsk5vqq4rcz.py", directory: "/opt/inductor_cache/yr")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 42, column: 24, scope: !7)
!11 = !DILocation(line: 48, column: 22, scope: !7)
!12 = !DILocation(line: 49, column: 41, scope: !7)
!13 = !DILocation(line: 49, column: 30, scope: !7)
!14 = !DILocation(line: 49, column: 50, scope: !7)
!15 = !DILocation(line: 50, column: 40, scope: !7)
!16 = !DILocation(line: 50, column: 34, scope: !7)
!17 = !DILocation(line: 51, column: 30, scope: !7)
!18 = !DILocation(line: 53, column: 17, scope: !7)
!19 = !DILocation(line: 53, column: 40, scope: !7)
!20 = !DILocation(line: 53, column: 27, scope: !7)
!21 = !DILocation(line: 54, column: 17, scope: !7)
!22 = !DILocation(line: 54, column: 27, scope: !7)
!23 = !DILocation(line: 56, column: 52, scope: !7)
!24 = !DILocation(line: 60, column: 52, scope: !7)
!25 = !DILocation(line: 64, column: 28, scope: !7)
!26 = !DILocation(line: 64, column: 40, scope: !7)
!27 = !DILocation(line: 64, column: 13, scope: !7)
!28 = !DILocation(line: 65, column: 54, scope: !7)
!29 = !DILocation(line: 65, column: 39, scope: !7)
!30 = !DILocation(line: 65, column: 13, scope: !7)
!31 = !DILocation(line: 70, column: 24, scope: !7)
!32 = !DILocation(line: 71, column: 24, scope: !7)
!33 = !DILocation(line: 78, column: 13, scope: !7)
!34 = !DILocation(line: 79, column: 13, scope: !7)
!35 = !DILocation(line: 68, column: 25, scope: !7)
!36 = !DILocation(line: 77, column: 25, scope: !7)
!37 = !DILocation(line: 86, column: 20, scope: !7)
!38 = !DILocation(line: 86, column: 34, scope: !7)
!39 = !DILocation(line: 86, column: 26, scope: !7)
!40 = !DILocation(line: 89, column: 25, scope: !7)
!41 = !DILocation(line: 89, column: 22, scope: !7)
!42 = !DILocation(line: 90, column: 30, scope: !7)
!43 = !DILocation(line: 90, column: 66, scope: !7)
!44 = !DILocation(line: 90, column: 105, scope: !7)
!45 = !DILocation(line: 91, column: 17, scope: !7)
!46 = !DILocation(line: 92, column: 25, scope: !7)
!47 = !DILocation(line: 92, column: 68, scope: !7)
!48 = !DILocation(line: 92, column: 4, scope: !7)
