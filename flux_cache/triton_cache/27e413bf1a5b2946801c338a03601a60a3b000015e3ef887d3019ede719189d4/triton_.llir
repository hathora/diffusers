; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 3072, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr i16, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %11) #1, !dbg !16
  %15 = trunc i32 %14 to i16, !dbg !16
  %extelt.offset = lshr i32 %14, 16, !dbg !16
  %16 = trunc nuw i32 %extelt.offset to i16, !dbg !16
  %17 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %15) #1, !dbg !17
  %18 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %16) #1, !dbg !17
  %19 = fsub float 0.000000e+00, %17, !dbg !18
  %20 = fsub float 0.000000e+00, %18, !dbg !18
  %21 = fmul float %19, 0x3FF7154760000000, !dbg !22
  %22 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %21) #1, !dbg !22
  %23 = fmul float %20, 0x3FF7154760000000, !dbg !22
  %24 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %23) #1, !dbg !22
  %25 = fadd float %22, 1.000000e+00, !dbg !23
  %26 = fadd float %24, 1.000000e+00, !dbg !23
  %27 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %25) #1, !dbg !24
  %28 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %26) #1, !dbg !24
  %29 = fmul float %17, %27, !dbg !25
  %30 = fmul float %18, %28, !dbg !25
  %31 = getelementptr i16, ptr addrspace(1) %1, i64 %12, !dbg !26
  %32 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %29) #1, !dbg !27
  %33 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %30) #1, !dbg !27
  %34 = insertelement <2 x i16> poison, i16 %32, i64 0, !dbg !27
  %35 = insertelement <2 x i16> %34, i16 %33, i64 1, !dbg !27
  %36 = bitcast <2 x i16> %35 to i32, !dbg !27
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %36, ptr addrspace(1) %31, i1 %11) #1, !dbg !27
  %37 = getelementptr i16, ptr addrspace(1) %2, i64 %12, !dbg !28
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %36, ptr addrspace(1) %37, i1 %11) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cx7ptmw64s3yncbbl35uhpmzjabecc6qdtsheo7gluot3bigi7e3.py", directory: "/opt/inductor_cache/x7")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 28, scope: !7)
!11 = !DILocation(line: 20, column: 33, scope: !7)
!12 = !DILocation(line: 21, column: 36, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 22, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 30, scope: !7)
!16 = !DILocation(line: 24, column: 35, scope: !7)
!17 = !DILocation(line: 24, column: 45, scope: !7)
!18 = !DILocation(line: 51, column: 30, scope: !19, inlinedAt: !21)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !20, discriminator: 0)
!20 = !DIFile(filename: "standard.py", directory: "/usr/local/lib/python3.10/site-packages/triton/language")
!21 = !DILocation(line: 26, column: 22, scope: !7)
!22 = !DILocation(line: 51, column: 29, scope: !19, inlinedAt: !21)
!23 = !DILocation(line: 51, column: 20, scope: !19, inlinedAt: !21)
!24 = !DILocation(line: 51, column: 16, scope: !19, inlinedAt: !21)
!25 = !DILocation(line: 27, column: 18, scope: !7)
!26 = !DILocation(line: 29, column: 25, scope: !7)
!27 = !DILocation(line: 29, column: 36, scope: !7)
!28 = !DILocation(line: 30, column: 25, scope: !7)
!29 = !DILocation(line: 30, column: 36, scope: !7)
!30 = !DILocation(line: 30, column: 4, scope: !7)
