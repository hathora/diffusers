; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = add i32 %5, %4, !dbg !10
  %8 = mul i32 %7, 3072, !dbg !11
  %9 = icmp eq i32 %8, 0, !dbg !12
  br i1 %9, label %common.ret, label %10, !dbg !12

common.ret:                                       ; preds = %6, %427
  ret void, !dbg !13

10:                                               ; preds = %6
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !14
  %12 = add i32 %7, 127, !dbg !15
  %13 = sdiv i32 %12, 128, !dbg !16
  %.frozen = freeze i32 %11
  %14 = sdiv i32 %.frozen, 384, !dbg !17
  %15 = shl nsw i32 %14, 3, !dbg !18
  %16 = sub nsw i32 %13, %15, !dbg !19
  %17 = tail call i32 @llvm.smin.i32(i32 %16, i32 8), !dbg !20
  %18 = srem i32 %11, %17, !dbg !21
  %19 = add nsw i32 %15, %18, !dbg !22
  %20 = mul i32 %14, 384
  %.decomposed = sub i32 %.frozen, %20
  %21 = sdiv i32 %.decomposed, %17, !dbg !23
  %22 = shl i32 %19, 7, !dbg !24
  %23 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !25
  %24 = lshr i32 %23, 5, !dbg !25
  %25 = lshr i32 %23, 2, !dbg !25
  %26 = and i32 %25, 31, !dbg !25
  %27 = or disjoint i32 %26, 32, !dbg !25
  %28 = or disjoint i32 %26, 64, !dbg !25
  %29 = or disjoint i32 %26, 96, !dbg !25
  %30 = lshr i32 %23, 3, !dbg !25
  %31 = and i32 %30, 7, !dbg !25
  %32 = lshr i32 %23, 3, !dbg !25
  %33 = and i32 %32, 8, !dbg !25
  %34 = or disjoint i32 %31, %33, !dbg !25
  %35 = or disjoint i32 %22, %26, !dbg !26
  %36 = or disjoint i32 %22, %27, !dbg !26
  %37 = or disjoint i32 %22, %28, !dbg !26
  %38 = or disjoint i32 %22, %29, !dbg !26
  %39 = or disjoint i32 %22, %34, !dbg !25
  %40 = shl nsw i32 %21, 6, !dbg !27
  %41 = shl i32 %23, 3, !dbg !28
  %42 = and i32 %41, 24, !dbg !28
  %43 = or disjoint i32 %40, %26, !dbg !29
  %44 = or disjoint i32 %40, %27, !dbg !29
  %45 = srem i32 %35, %7, !dbg !30
  %46 = srem i32 %36, %7, !dbg !30
  %47 = srem i32 %37, %7, !dbg !30
  %48 = srem i32 %38, %7, !dbg !30
  %49 = srem i32 %43, 3072, !dbg !31
  %50 = srem i32 %44, 3072, !dbg !31
  %51 = mul i32 %45, 3072, !dbg !32
  %52 = mul i32 %46, 3072, !dbg !32
  %53 = mul i32 %47, 3072, !dbg !32
  %54 = mul i32 %48, 3072, !dbg !32
  %55 = or disjoint i32 %51, %42, !dbg !33
  %56 = or disjoint i32 %52, %42, !dbg !33
  %57 = or disjoint i32 %53, %42, !dbg !33
  %58 = or disjoint i32 %54, %42, !dbg !33
  %59 = sext i32 %55 to i64, !dbg !34
  %60 = getelementptr i16, ptr addrspace(1) %1, i64 %59, !dbg !34
  %61 = sext i32 %56 to i64, !dbg !34
  %62 = getelementptr i16, ptr addrspace(1) %1, i64 %61, !dbg !34
  %63 = sext i32 %57 to i64, !dbg !34
  %64 = getelementptr i16, ptr addrspace(1) %1, i64 %63, !dbg !34
  %65 = sext i32 %58 to i64, !dbg !34
  %66 = getelementptr i16, ptr addrspace(1) %1, i64 %65, !dbg !34
  %67 = mul nsw i32 %49, 3072, !dbg !35
  %68 = mul nsw i32 %50, 3072, !dbg !35
  %69 = or disjoint i32 %67, %42, !dbg !36
  %70 = or disjoint i32 %68, %42, !dbg !36
  %71 = sext i32 %69 to i64, !dbg !37
  %72 = getelementptr i16, ptr addrspace(1) %2, i64 %71, !dbg !37
  %73 = sext i32 %70 to i64, !dbg !37
  %74 = getelementptr i16, ptr addrspace(1) %2, i64 %73, !dbg !37
  %75 = shl nuw nsw i32 %26, 5, !dbg !38
  %76 = xor i32 %41, %23, !dbg !38
  %77 = and i32 %76, 24, !dbg !38
  %78 = or disjoint i32 %75, %77, !dbg !38
  %79 = zext nneg i32 %78 to i64, !dbg !38
  %80 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %79, !dbg !38
  %81 = shl nuw nsw i32 %27, 5, !dbg !38
  %82 = or disjoint i32 %81, %77, !dbg !38
  %83 = zext nneg i32 %82 to i64, !dbg !38
  %84 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %83, !dbg !38
  %85 = shl nuw nsw i32 %28, 5, !dbg !38
  %86 = or disjoint i32 %85, %77, !dbg !38
  %87 = zext nneg i32 %86 to i64, !dbg !38
  %88 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %87, !dbg !38
  %89 = shl nuw nsw i32 %29, 5, !dbg !38
  %90 = or disjoint i32 %89, %77, !dbg !38
  %91 = zext nneg i32 %90 to i64, !dbg !38
  %92 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %91, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %80, ptr addrspace(1) %60, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %84, ptr addrspace(1) %62, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %88, ptr addrspace(1) %64, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %92, ptr addrspace(1) %66, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %93 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %79, !dbg !39
  %94 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %83, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %93, ptr addrspace(1) %72, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %94, ptr addrspace(1) %74, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %95 = getelementptr i8, ptr addrspace(1) %60, i64 64, !dbg !40
  %96 = getelementptr i8, ptr addrspace(1) %62, i64 64, !dbg !40
  %97 = getelementptr i8, ptr addrspace(1) %64, i64 64, !dbg !40
  %98 = getelementptr i8, ptr addrspace(1) %66, i64 64, !dbg !40
  %99 = getelementptr i8, ptr addrspace(1) %72, i64 64, !dbg !41
  %100 = getelementptr i8, ptr addrspace(1) %74, i64 64, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %101 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %79, !dbg !38
  %102 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %83, !dbg !38
  %103 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %87, !dbg !38
  %104 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %91, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %101, ptr addrspace(1) %95, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %102, ptr addrspace(1) %96, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %103, ptr addrspace(1) %97, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %104, ptr addrspace(1) %98, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %105 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 28672), i64 %79, !dbg !39
  %106 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 28672), i64 %83, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %105, ptr addrspace(1) %99, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %106, ptr addrspace(1) %100, i32 16, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %107 = and i32 %24, 134217724
  br label %108, !dbg !42

108:                                              ; preds = %10, %108
  %109 = phi i32 [ -1, %10 ], [ %179, %108 ]
  %110 = phi i32 [ 1, %10 ], [ %411, %108 ]
  %.pn80134 = phi ptr addrspace(1) [ %100, %10 ], [ %408, %108 ]
  %.pn96133 = phi ptr addrspace(1) [ %99, %10 ], [ %407, %108 ]
  %.pn16132 = phi ptr addrspace(1) [ %98, %10 ], [ %406, %108 ]
  %.pn32131 = phi ptr addrspace(1) [ %97, %10 ], [ %405, %108 ]
  %.pn48130 = phi ptr addrspace(1) [ %96, %10 ], [ %404, %108 ]
  %.pn64129 = phi ptr addrspace(1) [ %95, %10 ], [ %403, %108 ]
  %111 = phi float [ 0.000000e+00, %10 ], [ %339, %108 ]
  %112 = phi float [ 0.000000e+00, %10 ], [ %340, %108 ]
  %113 = phi float [ 0.000000e+00, %10 ], [ %341, %108 ]
  %114 = phi float [ 0.000000e+00, %10 ], [ %342, %108 ]
  %115 = phi float [ 0.000000e+00, %10 ], [ %343, %108 ]
  %116 = phi float [ 0.000000e+00, %10 ], [ %344, %108 ]
  %117 = phi float [ 0.000000e+00, %10 ], [ %345, %108 ]
  %118 = phi float [ 0.000000e+00, %10 ], [ %346, %108 ]
  %119 = phi float [ 0.000000e+00, %10 ], [ %347, %108 ]
  %120 = phi float [ 0.000000e+00, %10 ], [ %348, %108 ]
  %121 = phi float [ 0.000000e+00, %10 ], [ %349, %108 ]
  %122 = phi float [ 0.000000e+00, %10 ], [ %350, %108 ]
  %123 = phi float [ 0.000000e+00, %10 ], [ %351, %108 ]
  %124 = phi float [ 0.000000e+00, %10 ], [ %352, %108 ]
  %125 = phi float [ 0.000000e+00, %10 ], [ %353, %108 ]
  %126 = phi float [ 0.000000e+00, %10 ], [ %354, %108 ]
  %127 = phi float [ 0.000000e+00, %10 ], [ %355, %108 ]
  %128 = phi float [ 0.000000e+00, %10 ], [ %356, %108 ]
  %129 = phi float [ 0.000000e+00, %10 ], [ %357, %108 ]
  %130 = phi float [ 0.000000e+00, %10 ], [ %358, %108 ]
  %131 = phi float [ 0.000000e+00, %10 ], [ %359, %108 ]
  %132 = phi float [ 0.000000e+00, %10 ], [ %360, %108 ]
  %133 = phi float [ 0.000000e+00, %10 ], [ %361, %108 ]
  %134 = phi float [ 0.000000e+00, %10 ], [ %362, %108 ]
  %135 = phi float [ 0.000000e+00, %10 ], [ %363, %108 ]
  %136 = phi float [ 0.000000e+00, %10 ], [ %364, %108 ]
  %137 = phi float [ 0.000000e+00, %10 ], [ %365, %108 ]
  %138 = phi float [ 0.000000e+00, %10 ], [ %366, %108 ]
  %139 = phi float [ 0.000000e+00, %10 ], [ %367, %108 ]
  %140 = phi float [ 0.000000e+00, %10 ], [ %368, %108 ]
  %141 = phi float [ 0.000000e+00, %10 ], [ %369, %108 ]
  %142 = phi float [ 0.000000e+00, %10 ], [ %370, %108 ]
  %143 = phi float [ 0.000000e+00, %10 ], [ %371, %108 ]
  %144 = phi float [ 0.000000e+00, %10 ], [ %372, %108 ]
  %145 = phi float [ 0.000000e+00, %10 ], [ %373, %108 ]
  %146 = phi float [ 0.000000e+00, %10 ], [ %374, %108 ]
  %147 = phi float [ 0.000000e+00, %10 ], [ %375, %108 ]
  %148 = phi float [ 0.000000e+00, %10 ], [ %376, %108 ]
  %149 = phi float [ 0.000000e+00, %10 ], [ %377, %108 ]
  %150 = phi float [ 0.000000e+00, %10 ], [ %378, %108 ]
  %151 = phi float [ 0.000000e+00, %10 ], [ %379, %108 ]
  %152 = phi float [ 0.000000e+00, %10 ], [ %380, %108 ]
  %153 = phi float [ 0.000000e+00, %10 ], [ %381, %108 ]
  %154 = phi float [ 0.000000e+00, %10 ], [ %382, %108 ]
  %155 = phi float [ 0.000000e+00, %10 ], [ %383, %108 ]
  %156 = phi float [ 0.000000e+00, %10 ], [ %384, %108 ]
  %157 = phi float [ 0.000000e+00, %10 ], [ %385, %108 ]
  %158 = phi float [ 0.000000e+00, %10 ], [ %386, %108 ]
  %159 = phi float [ 0.000000e+00, %10 ], [ %387, %108 ]
  %160 = phi float [ 0.000000e+00, %10 ], [ %388, %108 ]
  %161 = phi float [ 0.000000e+00, %10 ], [ %389, %108 ]
  %162 = phi float [ 0.000000e+00, %10 ], [ %390, %108 ]
  %163 = phi float [ 0.000000e+00, %10 ], [ %391, %108 ]
  %164 = phi float [ 0.000000e+00, %10 ], [ %392, %108 ]
  %165 = phi float [ 0.000000e+00, %10 ], [ %393, %108 ]
  %166 = phi float [ 0.000000e+00, %10 ], [ %394, %108 ]
  %167 = phi float [ 0.000000e+00, %10 ], [ %395, %108 ]
  %168 = phi float [ 0.000000e+00, %10 ], [ %396, %108 ]
  %169 = phi float [ 0.000000e+00, %10 ], [ %397, %108 ]
  %170 = phi float [ 0.000000e+00, %10 ], [ %398, %108 ]
  %171 = phi float [ 0.000000e+00, %10 ], [ %399, %108 ]
  %172 = phi float [ 0.000000e+00, %10 ], [ %400, %108 ]
  %173 = phi float [ 0.000000e+00, %10 ], [ %401, %108 ]
  %174 = phi float [ 0.000000e+00, %10 ], [ %402, %108 ]
  %175 = phi i32 [ 0, %10 ], [ %425, %108 ]
  %176 = icmp ult i32 %175, 3008, !dbg !42
  %177 = add i32 %109, 1, !dbg !42
  %178 = icmp slt i32 %177, 3, !dbg !42
  %179 = select i1 %178, i32 %177, i32 0, !dbg !42
  %180 = shl i32 %179, 12, !dbg !38
  %181 = sext i32 %180 to i64, !dbg !38
  %182 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %181, !dbg !38
  tail call void asm sideeffect "cp.async.wait_group 0x2;", ""() #3, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %183 = shl i32 %179, 11, !dbg !39
  %184 = sext i32 %183 to i64, !dbg !39
  %185 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %184, !dbg !39
  %186 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %107, i32 0, i32 31), !dbg !43
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !43
  %187 = shl i32 %186, 6, !dbg !43
  %188 = and i32 %187, 192, !dbg !43
  %189 = zext nneg i32 %188 to i64, !dbg !43
  %190 = ptrtoint ptr addrspace(3) %182 to i64, !dbg !43
  %191 = lshr exact i64 %190, 4, !dbg !43
  %192 = and i64 %191, 16383, !dbg !43
  %193 = or disjoint i64 %192, -9223371899382267904, !dbg !43
  %194 = add nuw nsw i64 %193, %189, !dbg !43
  %195 = ptrtoint ptr addrspace(3) %185 to i64, !dbg !43
  %196 = lshr exact i64 %195, 4, !dbg !43
  %197 = and i64 %196, 16383, !dbg !43
  %198 = or disjoint i64 %197, -9223371899399045120, !dbg !43
  %199 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %111, float %112, float %113, float %114, float %115, float %116, float %117, float %118, float %119, float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, float %133, float %134, float %135, float %136, float %137, float %138, float %139, float %140, float %141, float %142, i64 %194, i64 %198) #3, !dbg !43
  %200 = add nuw nsw i64 %192, -9223371899382267902, !dbg !43
  %201 = add nuw nsw i64 %200, %189, !dbg !43
  %202 = add nuw nsw i64 %197, -9223371899399045118, !dbg !43
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 0, !dbg !43
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 1, !dbg !43
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 2, !dbg !43
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 3, !dbg !43
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 4, !dbg !43
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 5, !dbg !43
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 6, !dbg !43
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 7, !dbg !43
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 8, !dbg !43
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 9, !dbg !43
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 10, !dbg !43
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 11, !dbg !43
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 12, !dbg !43
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 13, !dbg !43
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 14, !dbg !43
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 15, !dbg !43
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 16, !dbg !43
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 17, !dbg !43
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 18, !dbg !43
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 19, !dbg !43
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 20, !dbg !43
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 21, !dbg !43
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 22, !dbg !43
  %226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 23, !dbg !43
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 24, !dbg !43
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 25, !dbg !43
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 26, !dbg !43
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 27, !dbg !43
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 28, !dbg !43
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 29, !dbg !43
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 30, !dbg !43
  %234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %199, 31, !dbg !43
  %235 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233, float %234, i64 %201, i64 %202) #3, !dbg !43
  %236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 0, !dbg !43
  %237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 1, !dbg !43
  %238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 2, !dbg !43
  %239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 3, !dbg !43
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 4, !dbg !43
  %241 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 5, !dbg !43
  %242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 6, !dbg !43
  %243 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 7, !dbg !43
  %244 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 8, !dbg !43
  %245 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 9, !dbg !43
  %246 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 10, !dbg !43
  %247 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 11, !dbg !43
  %248 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 12, !dbg !43
  %249 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 13, !dbg !43
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 14, !dbg !43
  %251 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 15, !dbg !43
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 16, !dbg !43
  %253 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 17, !dbg !43
  %254 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 18, !dbg !43
  %255 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 19, !dbg !43
  %256 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 20, !dbg !43
  %257 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 21, !dbg !43
  %258 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 22, !dbg !43
  %259 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 23, !dbg !43
  %260 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 24, !dbg !43
  %261 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 25, !dbg !43
  %262 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 26, !dbg !43
  %263 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 27, !dbg !43
  %264 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 28, !dbg !43
  %265 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 29, !dbg !43
  %266 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 30, !dbg !43
  %267 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %235, 31, !dbg !43
  %268 = add nuw nsw i64 %192, -9223371899382267648, !dbg !43
  %269 = add nuw nsw i64 %268, %189, !dbg !43
  %270 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %143, float %144, float %145, float %146, float %147, float %148, float %149, float %150, float %151, float %152, float %153, float %154, float %155, float %156, float %157, float %158, float %159, float %160, float %161, float %162, float %163, float %164, float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, i64 %269, i64 %198) #3, !dbg !43
  %271 = add nuw nsw i64 %192, -9223371899382267646, !dbg !43
  %272 = add nuw nsw i64 %271, %189, !dbg !43
  %273 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 0, !dbg !43
  %274 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 1, !dbg !43
  %275 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 2, !dbg !43
  %276 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 3, !dbg !43
  %277 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 4, !dbg !43
  %278 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 5, !dbg !43
  %279 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 6, !dbg !43
  %280 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 7, !dbg !43
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 8, !dbg !43
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 9, !dbg !43
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 10, !dbg !43
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 11, !dbg !43
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 12, !dbg !43
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 13, !dbg !43
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 14, !dbg !43
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 15, !dbg !43
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 16, !dbg !43
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 17, !dbg !43
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 18, !dbg !43
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 19, !dbg !43
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 20, !dbg !43
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 21, !dbg !43
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 22, !dbg !43
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 23, !dbg !43
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 24, !dbg !43
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 25, !dbg !43
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 26, !dbg !43
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 27, !dbg !43
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 28, !dbg !43
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 29, !dbg !43
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 30, !dbg !43
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 31, !dbg !43
  %305 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, 1, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l"(float %273, float %274, float %275, float %276, float %277, float %278, float %279, float %280, float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, i64 %272, i64 %202) #3, !dbg !43
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 0, !dbg !43
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 1, !dbg !43
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 2, !dbg !43
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 3, !dbg !43
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 4, !dbg !43
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 5, !dbg !43
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 6, !dbg !43
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 7, !dbg !43
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 8, !dbg !43
  %315 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 9, !dbg !43
  %316 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 10, !dbg !43
  %317 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 11, !dbg !43
  %318 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 12, !dbg !43
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 13, !dbg !43
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 14, !dbg !43
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 15, !dbg !43
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 16, !dbg !43
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 17, !dbg !43
  %324 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 18, !dbg !43
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 19, !dbg !43
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 20, !dbg !43
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 21, !dbg !43
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 22, !dbg !43
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 23, !dbg !43
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 24, !dbg !43
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 25, !dbg !43
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 26, !dbg !43
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 27, !dbg !43
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 28, !dbg !43
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 29, !dbg !43
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 30, !dbg !43
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %305, 31, !dbg !43
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !43
  %338 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71,$72,$73\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73"(float %236, float %237, float %238, float %239, float %240, float %241, float %242, float %243, float %244, float %245, float %246, float %247, float %248, float %249, float %250, float %251, float %252, float %253, float %254, float %255, float %256, float %257, float %258, float %259, float %260, float %261, float %262, float %263, float %264, float %265, float %266, float %267, float %306, float %307, float %308, float %309, float %310, float %311, float %312, float %313, float %314, float %315, float %316, float %317, float %318, float %319, float %320, float %321, float %322, float %323, float %324, float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, ptr addrspace(3) %182, i32 32, i32 1, i32 0, i32 0, ptr addrspace(3) %185, i32 1, i32 32, i32 0, i32 0) #3, !dbg !43
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 0, !dbg !43
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 1, !dbg !43
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 2, !dbg !43
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 3, !dbg !43
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 4, !dbg !43
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 5, !dbg !43
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 6, !dbg !43
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 7, !dbg !43
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 8, !dbg !43
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 9, !dbg !43
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 10, !dbg !43
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 11, !dbg !43
  %351 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 12, !dbg !43
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 13, !dbg !43
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 14, !dbg !43
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 15, !dbg !43
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 16, !dbg !43
  %356 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 17, !dbg !43
  %357 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 18, !dbg !43
  %358 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 19, !dbg !43
  %359 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 20, !dbg !43
  %360 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 21, !dbg !43
  %361 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 22, !dbg !43
  %362 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 23, !dbg !43
  %363 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 24, !dbg !43
  %364 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 25, !dbg !43
  %365 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 26, !dbg !43
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 27, !dbg !43
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 28, !dbg !43
  %368 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 29, !dbg !43
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 30, !dbg !43
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 31, !dbg !43
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 32, !dbg !43
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 33, !dbg !43
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 34, !dbg !43
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 35, !dbg !43
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 36, !dbg !43
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 37, !dbg !43
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 38, !dbg !43
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 39, !dbg !43
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 40, !dbg !43
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 41, !dbg !43
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 42, !dbg !43
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 43, !dbg !43
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 44, !dbg !43
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 45, !dbg !43
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 46, !dbg !43
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 47, !dbg !43
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 48, !dbg !43
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 49, !dbg !43
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 50, !dbg !43
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 51, !dbg !43
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 52, !dbg !43
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 53, !dbg !43
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 54, !dbg !43
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 55, !dbg !43
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 56, !dbg !43
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 57, !dbg !43
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 58, !dbg !43
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 59, !dbg !43
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 60, !dbg !43
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 61, !dbg !43
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 62, !dbg !43
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %338, 63, !dbg !43
  %403 = getelementptr i8, ptr addrspace(1) %.pn64129, i64 64, !dbg !40
  %404 = getelementptr i8, ptr addrspace(1) %.pn48130, i64 64, !dbg !40
  %405 = getelementptr i8, ptr addrspace(1) %.pn32131, i64 64, !dbg !40
  %406 = getelementptr i8, ptr addrspace(1) %.pn16132, i64 64, !dbg !40
  %407 = getelementptr i8, ptr addrspace(1) %.pn96133, i64 64, !dbg !41
  %408 = getelementptr i8, ptr addrspace(1) %.pn80134, i64 64, !dbg !41
  %409 = add i32 %110, 1, !dbg !42
  %410 = icmp slt i32 %409, 3, !dbg !42
  %411 = select i1 %410, i32 %409, i32 0, !dbg !42
  %412 = shl i32 %411, 12, !dbg !38
  %413 = sext i32 %412 to i64, !dbg !38
  %414 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %413, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %415 = getelementptr i16, ptr addrspace(3) %414, i64 %79, !dbg !38
  %416 = getelementptr i16, ptr addrspace(3) %414, i64 %83, !dbg !38
  %417 = getelementptr i16, ptr addrspace(3) %414, i64 %87, !dbg !38
  %418 = getelementptr i16, ptr addrspace(3) %414, i64 %91, !dbg !38
  %419 = select i1 %176, i32 16, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %415, ptr addrspace(1) %403, i32 %419, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %416, ptr addrspace(1) %404, i32 %419, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %417, ptr addrspace(1) %405, i32 %419, i1 true) #3, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %418, ptr addrspace(1) %406, i32 %419, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %420 = shl i32 %411, 11, !dbg !39
  %421 = sext i32 %420 to i64, !dbg !39
  %422 = getelementptr i16, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %421, !dbg !39
  %423 = getelementptr i16, ptr addrspace(3) %422, i64 %79, !dbg !39
  %424 = getelementptr i16, ptr addrspace(3) %422, i64 %83, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %423, ptr addrspace(1) %407, i32 %419, i1 true) #3, !dbg !39
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %424, ptr addrspace(1) %408, i32 %419, i1 true) #3, !dbg !39
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !39
  %425 = add nuw nsw i32 %175, 32, !dbg !42
  %426 = icmp ult i32 %175, 3040, !dbg !42
  br i1 %426, label %108, label %427, !dbg !42

427:                                              ; preds = %108
  %428 = and i32 %23, 31, !dbg !25
  %429 = or disjoint i32 %39, 16, !dbg !26
  %430 = or disjoint i32 %39, 32, !dbg !26
  %431 = or disjoint i32 %39, 48, !dbg !26
  %432 = or disjoint i32 %39, 64, !dbg !26
  %433 = or disjoint i32 %39, 80, !dbg !26
  %434 = or disjoint i32 %39, 96, !dbg !26
  %435 = or disjoint i32 %39, 112, !dbg !26
  %436 = and i32 %41, 56, !dbg !28
  %437 = or disjoint i32 %436, %40, !dbg !29
  %438 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"(float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, float %351, float %352, float %353, float %354, float %355, float %356, float %357, float %358, float %359, float %360, float %361, float %362, float %363, float %364, float %365, float %366, float %367, float %368, float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388, float %389, float %390, float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, float %399, float %400, float %401, float %402) #3, !dbg !42
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 0, !dbg !42
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 1, !dbg !42
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 2, !dbg !42
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 3, !dbg !42
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 4, !dbg !42
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 5, !dbg !42
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 6, !dbg !42
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 7, !dbg !42
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 8, !dbg !42
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 9, !dbg !42
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 10, !dbg !42
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 11, !dbg !42
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 12, !dbg !42
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 13, !dbg !42
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 14, !dbg !42
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 15, !dbg !42
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 16, !dbg !42
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 17, !dbg !42
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 18, !dbg !42
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 19, !dbg !42
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 20, !dbg !42
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 21, !dbg !42
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 22, !dbg !42
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 23, !dbg !42
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 24, !dbg !42
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 25, !dbg !42
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 26, !dbg !42
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 27, !dbg !42
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 28, !dbg !42
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 29, !dbg !42
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 30, !dbg !42
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 31, !dbg !42
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 32, !dbg !42
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 33, !dbg !42
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 34, !dbg !42
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 35, !dbg !42
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 36, !dbg !42
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 37, !dbg !42
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 38, !dbg !42
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 39, !dbg !42
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 40, !dbg !42
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 41, !dbg !42
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 42, !dbg !42
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 43, !dbg !42
  %483 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 44, !dbg !42
  %484 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 45, !dbg !42
  %485 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 46, !dbg !42
  %486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 47, !dbg !42
  %487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 48, !dbg !42
  %488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 49, !dbg !42
  %489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 50, !dbg !42
  %490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 51, !dbg !42
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 52, !dbg !42
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 53, !dbg !42
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 54, !dbg !42
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 55, !dbg !42
  %495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 56, !dbg !42
  %496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 57, !dbg !42
  %497 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 58, !dbg !42
  %498 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 59, !dbg !42
  %499 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 60, !dbg !42
  %500 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 61, !dbg !42
  %501 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 62, !dbg !42
  %502 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %438, 63, !dbg !42
  %503 = and i32 %24, 3, !dbg !42
  %504 = lshr i32 %428, 2, !dbg !42
  %505 = shl i32 %23, 1, !dbg !42
  %506 = and i32 %505, 6, !dbg !42
  %507 = shl nuw nsw i32 %503, 4, !dbg !42
  %508 = or disjoint i32 %507, %504, !dbg !42
  %509 = mul nuw nsw i32 %508, 72, !dbg !42
  %510 = or disjoint i32 %509, %506, !dbg !42
  %511 = zext nneg i32 %510 to i64, !dbg !42
  %512 = getelementptr float, ptr addrspace(3) @global_smem, i64 %511, !dbg !42
  %513 = insertelement <2 x float> poison, float %439, i64 0, !dbg !42
  %514 = insertelement <2 x float> %513, float %440, i64 1, !dbg !42
  store <2 x float> %514, ptr addrspace(3) %512, align 8, !dbg !42
  %515 = add nuw nsw i32 %509, 576, !dbg !42
  %516 = or disjoint i32 %515, %506, !dbg !42
  %517 = zext nneg i32 %516 to i64, !dbg !42
  %518 = getelementptr float, ptr addrspace(3) @global_smem, i64 %517, !dbg !42
  %519 = insertelement <2 x float> poison, float %441, i64 0, !dbg !42
  %520 = insertelement <2 x float> %519, float %442, i64 1, !dbg !42
  store <2 x float> %520, ptr addrspace(3) %518, align 8, !dbg !42
  %521 = or disjoint i32 %506, 8, !dbg !42
  %522 = add nuw nsw i32 %509, %521, !dbg !42
  %523 = zext nneg i32 %522 to i64, !dbg !42
  %524 = getelementptr float, ptr addrspace(3) @global_smem, i64 %523, !dbg !42
  %525 = insertelement <2 x float> poison, float %443, i64 0, !dbg !42
  %526 = insertelement <2 x float> %525, float %444, i64 1, !dbg !42
  store <2 x float> %526, ptr addrspace(3) %524, align 8, !dbg !42
  %527 = add nuw nsw i32 %515, %521, !dbg !42
  %528 = zext nneg i32 %527 to i64, !dbg !42
  %529 = getelementptr float, ptr addrspace(3) @global_smem, i64 %528, !dbg !42
  %530 = insertelement <2 x float> poison, float %445, i64 0, !dbg !42
  %531 = insertelement <2 x float> %530, float %446, i64 1, !dbg !42
  store <2 x float> %531, ptr addrspace(3) %529, align 8, !dbg !42
  %532 = or disjoint i32 %506, 16, !dbg !42
  %533 = add nuw nsw i32 %509, %532, !dbg !42
  %534 = zext nneg i32 %533 to i64, !dbg !42
  %535 = getelementptr float, ptr addrspace(3) @global_smem, i64 %534, !dbg !42
  %536 = insertelement <2 x float> poison, float %447, i64 0, !dbg !42
  %537 = insertelement <2 x float> %536, float %448, i64 1, !dbg !42
  store <2 x float> %537, ptr addrspace(3) %535, align 8, !dbg !42
  %538 = add nuw nsw i32 %515, %532, !dbg !42
  %539 = zext nneg i32 %538 to i64, !dbg !42
  %540 = getelementptr float, ptr addrspace(3) @global_smem, i64 %539, !dbg !42
  %541 = insertelement <2 x float> poison, float %449, i64 0, !dbg !42
  %542 = insertelement <2 x float> %541, float %450, i64 1, !dbg !42
  store <2 x float> %542, ptr addrspace(3) %540, align 8, !dbg !42
  %543 = or disjoint i32 %506, 24, !dbg !42
  %544 = add nuw nsw i32 %509, %543, !dbg !42
  %545 = zext nneg i32 %544 to i64, !dbg !42
  %546 = getelementptr float, ptr addrspace(3) @global_smem, i64 %545, !dbg !42
  %547 = insertelement <2 x float> poison, float %451, i64 0, !dbg !42
  %548 = insertelement <2 x float> %547, float %452, i64 1, !dbg !42
  store <2 x float> %548, ptr addrspace(3) %546, align 8, !dbg !42
  %549 = add nuw nsw i32 %515, %543, !dbg !42
  %550 = zext nneg i32 %549 to i64, !dbg !42
  %551 = getelementptr float, ptr addrspace(3) @global_smem, i64 %550, !dbg !42
  %552 = insertelement <2 x float> poison, float %453, i64 0, !dbg !42
  %553 = insertelement <2 x float> %552, float %454, i64 1, !dbg !42
  store <2 x float> %553, ptr addrspace(3) %551, align 8, !dbg !42
  %554 = or disjoint i32 %506, 32, !dbg !42
  %555 = add nuw nsw i32 %509, %554, !dbg !42
  %556 = zext nneg i32 %555 to i64, !dbg !42
  %557 = getelementptr float, ptr addrspace(3) @global_smem, i64 %556, !dbg !42
  %558 = insertelement <2 x float> poison, float %455, i64 0, !dbg !42
  %559 = insertelement <2 x float> %558, float %456, i64 1, !dbg !42
  store <2 x float> %559, ptr addrspace(3) %557, align 8, !dbg !42
  %560 = add nuw nsw i32 %515, %554, !dbg !42
  %561 = zext nneg i32 %560 to i64, !dbg !42
  %562 = getelementptr float, ptr addrspace(3) @global_smem, i64 %561, !dbg !42
  %563 = insertelement <2 x float> poison, float %457, i64 0, !dbg !42
  %564 = insertelement <2 x float> %563, float %458, i64 1, !dbg !42
  store <2 x float> %564, ptr addrspace(3) %562, align 8, !dbg !42
  %565 = or disjoint i32 %506, 40, !dbg !42
  %566 = add nuw nsw i32 %509, %565, !dbg !42
  %567 = zext nneg i32 %566 to i64, !dbg !42
  %568 = getelementptr float, ptr addrspace(3) @global_smem, i64 %567, !dbg !42
  %569 = insertelement <2 x float> poison, float %459, i64 0, !dbg !42
  %570 = insertelement <2 x float> %569, float %460, i64 1, !dbg !42
  store <2 x float> %570, ptr addrspace(3) %568, align 8, !dbg !42
  %571 = add nuw nsw i32 %515, %565, !dbg !42
  %572 = zext nneg i32 %571 to i64, !dbg !42
  %573 = getelementptr float, ptr addrspace(3) @global_smem, i64 %572, !dbg !42
  %574 = insertelement <2 x float> poison, float %461, i64 0, !dbg !42
  %575 = insertelement <2 x float> %574, float %462, i64 1, !dbg !42
  store <2 x float> %575, ptr addrspace(3) %573, align 8, !dbg !42
  %576 = or disjoint i32 %506, 48, !dbg !42
  %577 = add nuw nsw i32 %509, %576, !dbg !42
  %578 = zext nneg i32 %577 to i64, !dbg !42
  %579 = getelementptr float, ptr addrspace(3) @global_smem, i64 %578, !dbg !42
  %580 = insertelement <2 x float> poison, float %463, i64 0, !dbg !42
  %581 = insertelement <2 x float> %580, float %464, i64 1, !dbg !42
  store <2 x float> %581, ptr addrspace(3) %579, align 8, !dbg !42
  %582 = add nuw nsw i32 %515, %576, !dbg !42
  %583 = zext nneg i32 %582 to i64, !dbg !42
  %584 = getelementptr float, ptr addrspace(3) @global_smem, i64 %583, !dbg !42
  %585 = insertelement <2 x float> poison, float %465, i64 0, !dbg !42
  %586 = insertelement <2 x float> %585, float %466, i64 1, !dbg !42
  store <2 x float> %586, ptr addrspace(3) %584, align 8, !dbg !42
  %587 = or disjoint i32 %506, 56, !dbg !42
  %588 = add nuw nsw i32 %509, %587, !dbg !42
  %589 = zext nneg i32 %588 to i64, !dbg !42
  %590 = getelementptr float, ptr addrspace(3) @global_smem, i64 %589, !dbg !42
  %591 = insertelement <2 x float> poison, float %467, i64 0, !dbg !42
  %592 = insertelement <2 x float> %591, float %468, i64 1, !dbg !42
  store <2 x float> %592, ptr addrspace(3) %590, align 8, !dbg !42
  %593 = add nuw nsw i32 %515, %587, !dbg !42
  %594 = zext nneg i32 %593 to i64, !dbg !42
  %595 = getelementptr float, ptr addrspace(3) @global_smem, i64 %594, !dbg !42
  %596 = insertelement <2 x float> poison, float %469, i64 0, !dbg !42
  %597 = insertelement <2 x float> %596, float %470, i64 1, !dbg !42
  store <2 x float> %597, ptr addrspace(3) %595, align 8, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %598 = lshr i32 %428, 3, !dbg !42
  %599 = shl nuw nsw i32 %503, 2, !dbg !42
  %600 = or disjoint i32 %599, %598, !dbg !42
  %601 = and i32 %41, 56, !dbg !42
  %602 = mul nuw nsw i32 %600, 72, !dbg !42
  %603 = add nuw nsw i32 %602, %601, !dbg !42
  %604 = zext nneg i32 %603 to i64, !dbg !42
  %605 = getelementptr float, ptr addrspace(3) @global_smem, i64 %604, !dbg !42
  %606 = load float, ptr addrspace(3) %605, align 32, !dbg !42
  %607 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 4, !dbg !42
  %608 = load float, ptr addrspace(3) %607, align 4, !dbg !42
  %609 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 8, !dbg !42
  %610 = load float, ptr addrspace(3) %609, align 8, !dbg !42
  %611 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 12, !dbg !42
  %612 = load float, ptr addrspace(3) %611, align 4, !dbg !42
  %613 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 16, !dbg !42
  %614 = load float, ptr addrspace(3) %613, align 16, !dbg !42
  %615 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 20, !dbg !42
  %616 = load float, ptr addrspace(3) %615, align 4, !dbg !42
  %617 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 24, !dbg !42
  %618 = load float, ptr addrspace(3) %617, align 8, !dbg !42
  %619 = getelementptr inbounds i8, ptr addrspace(3) %605, i64 28, !dbg !42
  %620 = load float, ptr addrspace(3) %619, align 4, !dbg !42
  %621 = getelementptr i8, ptr addrspace(3) %605, i64 4608, !dbg !42
  %622 = load float, ptr addrspace(3) %621, align 32, !dbg !42
  %623 = getelementptr i8, ptr addrspace(3) %605, i64 4612, !dbg !42
  %624 = load float, ptr addrspace(3) %623, align 4, !dbg !42
  %625 = getelementptr i8, ptr addrspace(3) %605, i64 4616, !dbg !42
  %626 = load float, ptr addrspace(3) %625, align 8, !dbg !42
  %627 = getelementptr i8, ptr addrspace(3) %605, i64 4620, !dbg !42
  %628 = load float, ptr addrspace(3) %627, align 4, !dbg !42
  %629 = getelementptr i8, ptr addrspace(3) %605, i64 4624, !dbg !42
  %630 = load float, ptr addrspace(3) %629, align 16, !dbg !42
  %631 = getelementptr i8, ptr addrspace(3) %605, i64 4628, !dbg !42
  %632 = load float, ptr addrspace(3) %631, align 4, !dbg !42
  %633 = getelementptr i8, ptr addrspace(3) %605, i64 4632, !dbg !42
  %634 = load float, ptr addrspace(3) %633, align 8, !dbg !42
  %635 = getelementptr i8, ptr addrspace(3) %605, i64 4636, !dbg !42
  %636 = load float, ptr addrspace(3) %635, align 4, !dbg !42
  %637 = getelementptr i8, ptr addrspace(3) %605, i64 9216, !dbg !42
  %638 = load float, ptr addrspace(3) %637, align 32, !dbg !42
  %639 = getelementptr i8, ptr addrspace(3) %605, i64 9220, !dbg !42
  %640 = load float, ptr addrspace(3) %639, align 4, !dbg !42
  %641 = getelementptr i8, ptr addrspace(3) %605, i64 9224, !dbg !42
  %642 = load float, ptr addrspace(3) %641, align 8, !dbg !42
  %643 = getelementptr i8, ptr addrspace(3) %605, i64 9228, !dbg !42
  %644 = load float, ptr addrspace(3) %643, align 4, !dbg !42
  %645 = getelementptr i8, ptr addrspace(3) %605, i64 9232, !dbg !42
  %646 = load float, ptr addrspace(3) %645, align 16, !dbg !42
  %647 = getelementptr i8, ptr addrspace(3) %605, i64 9236, !dbg !42
  %648 = load float, ptr addrspace(3) %647, align 4, !dbg !42
  %649 = getelementptr i8, ptr addrspace(3) %605, i64 9240, !dbg !42
  %650 = load float, ptr addrspace(3) %649, align 8, !dbg !42
  %651 = getelementptr i8, ptr addrspace(3) %605, i64 9244, !dbg !42
  %652 = load float, ptr addrspace(3) %651, align 4, !dbg !42
  %653 = getelementptr i8, ptr addrspace(3) %605, i64 13824, !dbg !42
  %654 = load float, ptr addrspace(3) %653, align 32, !dbg !42
  %655 = getelementptr i8, ptr addrspace(3) %605, i64 13828, !dbg !42
  %656 = load float, ptr addrspace(3) %655, align 4, !dbg !42
  %657 = getelementptr i8, ptr addrspace(3) %605, i64 13832, !dbg !42
  %658 = load float, ptr addrspace(3) %657, align 8, !dbg !42
  %659 = getelementptr i8, ptr addrspace(3) %605, i64 13836, !dbg !42
  %660 = load float, ptr addrspace(3) %659, align 4, !dbg !42
  %661 = getelementptr i8, ptr addrspace(3) %605, i64 13840, !dbg !42
  %662 = load float, ptr addrspace(3) %661, align 16, !dbg !42
  %663 = getelementptr i8, ptr addrspace(3) %605, i64 13844, !dbg !42
  %664 = load float, ptr addrspace(3) %663, align 4, !dbg !42
  %665 = getelementptr i8, ptr addrspace(3) %605, i64 13848, !dbg !42
  %666 = load float, ptr addrspace(3) %665, align 8, !dbg !42
  %667 = getelementptr i8, ptr addrspace(3) %605, i64 13852, !dbg !42
  %668 = load float, ptr addrspace(3) %667, align 4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %669 = insertelement <2 x float> poison, float %471, i64 0, !dbg !42
  %670 = insertelement <2 x float> %669, float %472, i64 1, !dbg !42
  store <2 x float> %670, ptr addrspace(3) %512, align 8, !dbg !42
  %671 = insertelement <2 x float> poison, float %473, i64 0, !dbg !42
  %672 = insertelement <2 x float> %671, float %474, i64 1, !dbg !42
  store <2 x float> %672, ptr addrspace(3) %518, align 8, !dbg !42
  %673 = insertelement <2 x float> poison, float %475, i64 0, !dbg !42
  %674 = insertelement <2 x float> %673, float %476, i64 1, !dbg !42
  store <2 x float> %674, ptr addrspace(3) %524, align 8, !dbg !42
  %675 = insertelement <2 x float> poison, float %477, i64 0, !dbg !42
  %676 = insertelement <2 x float> %675, float %478, i64 1, !dbg !42
  store <2 x float> %676, ptr addrspace(3) %529, align 8, !dbg !42
  %677 = insertelement <2 x float> poison, float %479, i64 0, !dbg !42
  %678 = insertelement <2 x float> %677, float %480, i64 1, !dbg !42
  store <2 x float> %678, ptr addrspace(3) %535, align 8, !dbg !42
  %679 = insertelement <2 x float> poison, float %481, i64 0, !dbg !42
  %680 = insertelement <2 x float> %679, float %482, i64 1, !dbg !42
  store <2 x float> %680, ptr addrspace(3) %540, align 8, !dbg !42
  %681 = insertelement <2 x float> poison, float %483, i64 0, !dbg !42
  %682 = insertelement <2 x float> %681, float %484, i64 1, !dbg !42
  store <2 x float> %682, ptr addrspace(3) %546, align 8, !dbg !42
  %683 = insertelement <2 x float> poison, float %485, i64 0, !dbg !42
  %684 = insertelement <2 x float> %683, float %486, i64 1, !dbg !42
  store <2 x float> %684, ptr addrspace(3) %551, align 8, !dbg !42
  %685 = insertelement <2 x float> poison, float %487, i64 0, !dbg !42
  %686 = insertelement <2 x float> %685, float %488, i64 1, !dbg !42
  store <2 x float> %686, ptr addrspace(3) %557, align 8, !dbg !42
  %687 = insertelement <2 x float> poison, float %489, i64 0, !dbg !42
  %688 = insertelement <2 x float> %687, float %490, i64 1, !dbg !42
  store <2 x float> %688, ptr addrspace(3) %562, align 8, !dbg !42
  %689 = insertelement <2 x float> poison, float %491, i64 0, !dbg !42
  %690 = insertelement <2 x float> %689, float %492, i64 1, !dbg !42
  store <2 x float> %690, ptr addrspace(3) %568, align 8, !dbg !42
  %691 = insertelement <2 x float> poison, float %493, i64 0, !dbg !42
  %692 = insertelement <2 x float> %691, float %494, i64 1, !dbg !42
  store <2 x float> %692, ptr addrspace(3) %573, align 8, !dbg !42
  %693 = insertelement <2 x float> poison, float %495, i64 0, !dbg !42
  %694 = insertelement <2 x float> %693, float %496, i64 1, !dbg !42
  store <2 x float> %694, ptr addrspace(3) %579, align 8, !dbg !42
  %695 = insertelement <2 x float> poison, float %497, i64 0, !dbg !42
  %696 = insertelement <2 x float> %695, float %498, i64 1, !dbg !42
  store <2 x float> %696, ptr addrspace(3) %584, align 8, !dbg !42
  %697 = insertelement <2 x float> poison, float %499, i64 0, !dbg !42
  %698 = insertelement <2 x float> %697, float %500, i64 1, !dbg !42
  store <2 x float> %698, ptr addrspace(3) %590, align 8, !dbg !42
  %699 = insertelement <2 x float> poison, float %501, i64 0, !dbg !42
  %700 = insertelement <2 x float> %699, float %502, i64 1, !dbg !42
  store <2 x float> %700, ptr addrspace(3) %595, align 8, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %701 = load float, ptr addrspace(3) %605, align 32, !dbg !42
  %702 = load float, ptr addrspace(3) %607, align 4, !dbg !42
  %703 = load float, ptr addrspace(3) %609, align 8, !dbg !42
  %704 = load float, ptr addrspace(3) %611, align 4, !dbg !42
  %705 = load float, ptr addrspace(3) %613, align 16, !dbg !42
  %706 = load float, ptr addrspace(3) %615, align 4, !dbg !42
  %707 = load float, ptr addrspace(3) %617, align 8, !dbg !42
  %708 = load float, ptr addrspace(3) %619, align 4, !dbg !42
  %709 = load float, ptr addrspace(3) %621, align 32, !dbg !42
  %710 = load float, ptr addrspace(3) %623, align 4, !dbg !42
  %711 = load float, ptr addrspace(3) %625, align 8, !dbg !42
  %712 = load float, ptr addrspace(3) %627, align 4, !dbg !42
  %713 = load float, ptr addrspace(3) %629, align 16, !dbg !42
  %714 = load float, ptr addrspace(3) %631, align 4, !dbg !42
  %715 = load float, ptr addrspace(3) %633, align 8, !dbg !42
  %716 = load float, ptr addrspace(3) %635, align 4, !dbg !42
  %717 = load float, ptr addrspace(3) %637, align 32, !dbg !42
  %718 = load float, ptr addrspace(3) %639, align 4, !dbg !42
  %719 = load float, ptr addrspace(3) %641, align 8, !dbg !42
  %720 = load float, ptr addrspace(3) %643, align 4, !dbg !42
  %721 = load float, ptr addrspace(3) %645, align 16, !dbg !42
  %722 = load float, ptr addrspace(3) %647, align 4, !dbg !42
  %723 = load float, ptr addrspace(3) %649, align 8, !dbg !42
  %724 = load float, ptr addrspace(3) %651, align 4, !dbg !42
  %725 = load float, ptr addrspace(3) %653, align 32, !dbg !42
  %726 = load float, ptr addrspace(3) %655, align 4, !dbg !42
  %727 = load float, ptr addrspace(3) %657, align 8, !dbg !42
  %728 = load float, ptr addrspace(3) %659, align 4, !dbg !42
  %729 = load float, ptr addrspace(3) %661, align 16, !dbg !42
  %730 = load float, ptr addrspace(3) %663, align 4, !dbg !42
  %731 = load float, ptr addrspace(3) %665, align 8, !dbg !42
  %732 = load float, ptr addrspace(3) %667, align 4, !dbg !42
  %733 = icmp slt i32 %39, %7, !dbg !44
  %734 = icmp slt i32 %429, %7, !dbg !44
  %735 = icmp slt i32 %430, %7, !dbg !44
  %736 = icmp slt i32 %431, %7, !dbg !44
  %737 = icmp slt i32 %432, %7, !dbg !44
  %738 = icmp slt i32 %433, %7, !dbg !44
  %739 = icmp slt i32 %434, %7, !dbg !44
  %740 = icmp slt i32 %435, %7, !dbg !44
  %741 = icmp slt i32 %437, 3072, !dbg !45
  %742 = and i1 %741, %733, !dbg !46
  %743 = and i1 %734, %741, !dbg !46
  %744 = and i1 %735, %741, !dbg !46
  %745 = and i1 %736, %741, !dbg !46
  %746 = and i1 %737, %741, !dbg !46
  %747 = and i1 %738, %741, !dbg !46
  %748 = and i1 %739, %741, !dbg !46
  %749 = and i1 %740, %741, !dbg !46
  %750 = mul i32 %39, 3072, !dbg !47
  %751 = mul i32 %429, 3072, !dbg !47
  %752 = mul i32 %430, 3072, !dbg !47
  %753 = mul i32 %431, 3072, !dbg !47
  %754 = mul i32 %432, 3072, !dbg !47
  %755 = mul i32 %433, 3072, !dbg !47
  %756 = mul i32 %434, 3072, !dbg !47
  %757 = mul i32 %435, 3072, !dbg !47
  %758 = add i32 %750, %437, !dbg !48
  %759 = add i32 %437, %751, !dbg !48
  %760 = add i32 %437, %752, !dbg !48
  %761 = add i32 %437, %753, !dbg !48
  %762 = add i32 %437, %754, !dbg !48
  %763 = add i32 %437, %755, !dbg !48
  %764 = add i32 %437, %756, !dbg !48
  %765 = add i32 %437, %757, !dbg !48
  %766 = sext i32 %437 to i64, !dbg !49
  %767 = getelementptr i16, ptr addrspace(1) %0, i64 %766, !dbg !49
  %768 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %742) #3, !dbg !50
  %769 = extractvalue { i32, i32, i32, i32 } %768, 0, !dbg !50
  %770 = extractvalue { i32, i32, i32, i32 } %768, 1, !dbg !50
  %771 = extractvalue { i32, i32, i32, i32 } %768, 2, !dbg !50
  %772 = extractvalue { i32, i32, i32, i32 } %768, 3, !dbg !50
  %773 = trunc i32 %769 to i16, !dbg !50
  %extelt.offset = lshr i32 %769, 16, !dbg !50
  %774 = trunc nuw i32 %extelt.offset to i16, !dbg !50
  %775 = trunc i32 %770 to i16, !dbg !50
  %extelt.offset97 = lshr i32 %770, 16, !dbg !50
  %776 = trunc nuw i32 %extelt.offset97 to i16, !dbg !50
  %777 = trunc i32 %771 to i16, !dbg !50
  %extelt.offset98 = lshr i32 %771, 16, !dbg !50
  %778 = trunc nuw i32 %extelt.offset98 to i16, !dbg !50
  %779 = trunc i32 %772 to i16, !dbg !50
  %extelt.offset99 = lshr i32 %772, 16, !dbg !50
  %780 = trunc nuw i32 %extelt.offset99 to i16, !dbg !50
  %781 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %743) #3, !dbg !50
  %782 = extractvalue { i32, i32, i32, i32 } %781, 0, !dbg !50
  %783 = extractvalue { i32, i32, i32, i32 } %781, 1, !dbg !50
  %784 = extractvalue { i32, i32, i32, i32 } %781, 2, !dbg !50
  %785 = extractvalue { i32, i32, i32, i32 } %781, 3, !dbg !50
  %786 = trunc i32 %782 to i16, !dbg !50
  %extelt.offset100 = lshr i32 %782, 16, !dbg !50
  %787 = trunc nuw i32 %extelt.offset100 to i16, !dbg !50
  %788 = trunc i32 %783 to i16, !dbg !50
  %extelt.offset101 = lshr i32 %783, 16, !dbg !50
  %789 = trunc nuw i32 %extelt.offset101 to i16, !dbg !50
  %790 = trunc i32 %784 to i16, !dbg !50
  %extelt.offset102 = lshr i32 %784, 16, !dbg !50
  %791 = trunc nuw i32 %extelt.offset102 to i16, !dbg !50
  %792 = trunc i32 %785 to i16, !dbg !50
  %extelt.offset103 = lshr i32 %785, 16, !dbg !50
  %793 = trunc nuw i32 %extelt.offset103 to i16, !dbg !50
  %794 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %744) #3, !dbg !50
  %795 = extractvalue { i32, i32, i32, i32 } %794, 0, !dbg !50
  %796 = extractvalue { i32, i32, i32, i32 } %794, 1, !dbg !50
  %797 = extractvalue { i32, i32, i32, i32 } %794, 2, !dbg !50
  %798 = extractvalue { i32, i32, i32, i32 } %794, 3, !dbg !50
  %799 = trunc i32 %795 to i16, !dbg !50
  %extelt.offset104 = lshr i32 %795, 16, !dbg !50
  %800 = trunc nuw i32 %extelt.offset104 to i16, !dbg !50
  %801 = trunc i32 %796 to i16, !dbg !50
  %extelt.offset105 = lshr i32 %796, 16, !dbg !50
  %802 = trunc nuw i32 %extelt.offset105 to i16, !dbg !50
  %803 = trunc i32 %797 to i16, !dbg !50
  %extelt.offset106 = lshr i32 %797, 16, !dbg !50
  %804 = trunc nuw i32 %extelt.offset106 to i16, !dbg !50
  %805 = trunc i32 %798 to i16, !dbg !50
  %extelt.offset107 = lshr i32 %798, 16, !dbg !50
  %806 = trunc nuw i32 %extelt.offset107 to i16, !dbg !50
  %807 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %745) #3, !dbg !50
  %808 = extractvalue { i32, i32, i32, i32 } %807, 0, !dbg !50
  %809 = extractvalue { i32, i32, i32, i32 } %807, 1, !dbg !50
  %810 = extractvalue { i32, i32, i32, i32 } %807, 2, !dbg !50
  %811 = extractvalue { i32, i32, i32, i32 } %807, 3, !dbg !50
  %812 = trunc i32 %808 to i16, !dbg !50
  %extelt.offset108 = lshr i32 %808, 16, !dbg !50
  %813 = trunc nuw i32 %extelt.offset108 to i16, !dbg !50
  %814 = trunc i32 %809 to i16, !dbg !50
  %extelt.offset109 = lshr i32 %809, 16, !dbg !50
  %815 = trunc nuw i32 %extelt.offset109 to i16, !dbg !50
  %816 = trunc i32 %810 to i16, !dbg !50
  %extelt.offset110 = lshr i32 %810, 16, !dbg !50
  %817 = trunc nuw i32 %extelt.offset110 to i16, !dbg !50
  %818 = trunc i32 %811 to i16, !dbg !50
  %extelt.offset111 = lshr i32 %811, 16, !dbg !50
  %819 = trunc nuw i32 %extelt.offset111 to i16, !dbg !50
  %820 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %746) #3, !dbg !50
  %821 = extractvalue { i32, i32, i32, i32 } %820, 0, !dbg !50
  %822 = extractvalue { i32, i32, i32, i32 } %820, 1, !dbg !50
  %823 = extractvalue { i32, i32, i32, i32 } %820, 2, !dbg !50
  %824 = extractvalue { i32, i32, i32, i32 } %820, 3, !dbg !50
  %825 = trunc i32 %821 to i16, !dbg !50
  %extelt.offset112 = lshr i32 %821, 16, !dbg !50
  %826 = trunc nuw i32 %extelt.offset112 to i16, !dbg !50
  %827 = trunc i32 %822 to i16, !dbg !50
  %extelt.offset113 = lshr i32 %822, 16, !dbg !50
  %828 = trunc nuw i32 %extelt.offset113 to i16, !dbg !50
  %829 = trunc i32 %823 to i16, !dbg !50
  %extelt.offset114 = lshr i32 %823, 16, !dbg !50
  %830 = trunc nuw i32 %extelt.offset114 to i16, !dbg !50
  %831 = trunc i32 %824 to i16, !dbg !50
  %extelt.offset115 = lshr i32 %824, 16, !dbg !50
  %832 = trunc nuw i32 %extelt.offset115 to i16, !dbg !50
  %833 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %747) #3, !dbg !50
  %834 = extractvalue { i32, i32, i32, i32 } %833, 0, !dbg !50
  %835 = extractvalue { i32, i32, i32, i32 } %833, 1, !dbg !50
  %836 = extractvalue { i32, i32, i32, i32 } %833, 2, !dbg !50
  %837 = extractvalue { i32, i32, i32, i32 } %833, 3, !dbg !50
  %838 = trunc i32 %834 to i16, !dbg !50
  %extelt.offset116 = lshr i32 %834, 16, !dbg !50
  %839 = trunc nuw i32 %extelt.offset116 to i16, !dbg !50
  %840 = trunc i32 %835 to i16, !dbg !50
  %extelt.offset117 = lshr i32 %835, 16, !dbg !50
  %841 = trunc nuw i32 %extelt.offset117 to i16, !dbg !50
  %842 = trunc i32 %836 to i16, !dbg !50
  %extelt.offset118 = lshr i32 %836, 16, !dbg !50
  %843 = trunc nuw i32 %extelt.offset118 to i16, !dbg !50
  %844 = trunc i32 %837 to i16, !dbg !50
  %extelt.offset119 = lshr i32 %837, 16, !dbg !50
  %845 = trunc nuw i32 %extelt.offset119 to i16, !dbg !50
  %846 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %748) #3, !dbg !50
  %847 = extractvalue { i32, i32, i32, i32 } %846, 0, !dbg !50
  %848 = extractvalue { i32, i32, i32, i32 } %846, 1, !dbg !50
  %849 = extractvalue { i32, i32, i32, i32 } %846, 2, !dbg !50
  %850 = extractvalue { i32, i32, i32, i32 } %846, 3, !dbg !50
  %851 = trunc i32 %847 to i16, !dbg !50
  %extelt.offset120 = lshr i32 %847, 16, !dbg !50
  %852 = trunc nuw i32 %extelt.offset120 to i16, !dbg !50
  %853 = trunc i32 %848 to i16, !dbg !50
  %extelt.offset121 = lshr i32 %848, 16, !dbg !50
  %854 = trunc nuw i32 %extelt.offset121 to i16, !dbg !50
  %855 = trunc i32 %849 to i16, !dbg !50
  %extelt.offset122 = lshr i32 %849, 16, !dbg !50
  %856 = trunc nuw i32 %extelt.offset122 to i16, !dbg !50
  %857 = trunc i32 %850 to i16, !dbg !50
  %extelt.offset123 = lshr i32 %850, 16, !dbg !50
  %858 = trunc nuw i32 %extelt.offset123 to i16, !dbg !50
  %859 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %767, i1 %749) #3, !dbg !50
  %860 = extractvalue { i32, i32, i32, i32 } %859, 0, !dbg !50
  %861 = extractvalue { i32, i32, i32, i32 } %859, 1, !dbg !50
  %862 = extractvalue { i32, i32, i32, i32 } %859, 2, !dbg !50
  %863 = extractvalue { i32, i32, i32, i32 } %859, 3, !dbg !50
  %864 = trunc i32 %860 to i16, !dbg !50
  %extelt.offset124 = lshr i32 %860, 16, !dbg !50
  %865 = trunc nuw i32 %extelt.offset124 to i16, !dbg !50
  %866 = trunc i32 %861 to i16, !dbg !50
  %extelt.offset125 = lshr i32 %861, 16, !dbg !50
  %867 = trunc nuw i32 %extelt.offset125 to i16, !dbg !50
  %868 = trunc i32 %862 to i16, !dbg !50
  %extelt.offset126 = lshr i32 %862, 16, !dbg !50
  %869 = trunc nuw i32 %extelt.offset126 to i16, !dbg !50
  %870 = trunc i32 %863 to i16, !dbg !50
  %extelt.offset127 = lshr i32 %863, 16, !dbg !50
  %871 = trunc nuw i32 %extelt.offset127 to i16, !dbg !50
  %872 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %773) #3, !dbg !51
  %873 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %774) #3, !dbg !51
  %874 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %775) #3, !dbg !51
  %875 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %776) #3, !dbg !51
  %876 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %777) #3, !dbg !51
  %877 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %778) #3, !dbg !51
  %878 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %779) #3, !dbg !51
  %879 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %780) #3, !dbg !51
  %880 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %786) #3, !dbg !51
  %881 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %787) #3, !dbg !51
  %882 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %788) #3, !dbg !51
  %883 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %789) #3, !dbg !51
  %884 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %790) #3, !dbg !51
  %885 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %791) #3, !dbg !51
  %886 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %792) #3, !dbg !51
  %887 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %793) #3, !dbg !51
  %888 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %799) #3, !dbg !51
  %889 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %800) #3, !dbg !51
  %890 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %801) #3, !dbg !51
  %891 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %802) #3, !dbg !51
  %892 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %803) #3, !dbg !51
  %893 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %804) #3, !dbg !51
  %894 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %805) #3, !dbg !51
  %895 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %806) #3, !dbg !51
  %896 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %812) #3, !dbg !51
  %897 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %813) #3, !dbg !51
  %898 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %814) #3, !dbg !51
  %899 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %815) #3, !dbg !51
  %900 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %816) #3, !dbg !51
  %901 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %817) #3, !dbg !51
  %902 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %818) #3, !dbg !51
  %903 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %819) #3, !dbg !51
  %904 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %825) #3, !dbg !51
  %905 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %826) #3, !dbg !51
  %906 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %827) #3, !dbg !51
  %907 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %828) #3, !dbg !51
  %908 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %829) #3, !dbg !51
  %909 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %830) #3, !dbg !51
  %910 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %831) #3, !dbg !51
  %911 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %832) #3, !dbg !51
  %912 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %838) #3, !dbg !51
  %913 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %839) #3, !dbg !51
  %914 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %840) #3, !dbg !51
  %915 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %841) #3, !dbg !51
  %916 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %842) #3, !dbg !51
  %917 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %843) #3, !dbg !51
  %918 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %844) #3, !dbg !51
  %919 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %845) #3, !dbg !51
  %920 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %851) #3, !dbg !51
  %921 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %852) #3, !dbg !51
  %922 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %853) #3, !dbg !51
  %923 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %854) #3, !dbg !51
  %924 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %855) #3, !dbg !51
  %925 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %856) #3, !dbg !51
  %926 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %857) #3, !dbg !51
  %927 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %858) #3, !dbg !51
  %928 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %864) #3, !dbg !51
  %929 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %865) #3, !dbg !51
  %930 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %866) #3, !dbg !51
  %931 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %867) #3, !dbg !51
  %932 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %868) #3, !dbg !51
  %933 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %869) #3, !dbg !51
  %934 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %870) #3, !dbg !51
  %935 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %871) #3, !dbg !51
  %936 = fadd float %606, %872, !dbg !52
  %937 = fadd float %608, %873, !dbg !52
  %938 = fadd float %610, %874, !dbg !52
  %939 = fadd float %612, %875, !dbg !52
  %940 = fadd float %614, %876, !dbg !52
  %941 = fadd float %616, %877, !dbg !52
  %942 = fadd float %618, %878, !dbg !52
  %943 = fadd float %620, %879, !dbg !52
  %944 = fadd float %622, %880, !dbg !52
  %945 = fadd float %624, %881, !dbg !52
  %946 = fadd float %626, %882, !dbg !52
  %947 = fadd float %628, %883, !dbg !52
  %948 = fadd float %630, %884, !dbg !52
  %949 = fadd float %632, %885, !dbg !52
  %950 = fadd float %634, %886, !dbg !52
  %951 = fadd float %636, %887, !dbg !52
  %952 = fadd float %638, %888, !dbg !52
  %953 = fadd float %640, %889, !dbg !52
  %954 = fadd float %642, %890, !dbg !52
  %955 = fadd float %644, %891, !dbg !52
  %956 = fadd float %646, %892, !dbg !52
  %957 = fadd float %648, %893, !dbg !52
  %958 = fadd float %650, %894, !dbg !52
  %959 = fadd float %652, %895, !dbg !52
  %960 = fadd float %654, %896, !dbg !52
  %961 = fadd float %656, %897, !dbg !52
  %962 = fadd float %658, %898, !dbg !52
  %963 = fadd float %660, %899, !dbg !52
  %964 = fadd float %662, %900, !dbg !52
  %965 = fadd float %664, %901, !dbg !52
  %966 = fadd float %666, %902, !dbg !52
  %967 = fadd float %668, %903, !dbg !52
  %968 = fadd float %701, %904, !dbg !52
  %969 = fadd float %702, %905, !dbg !52
  %970 = fadd float %703, %906, !dbg !52
  %971 = fadd float %704, %907, !dbg !52
  %972 = fadd float %705, %908, !dbg !52
  %973 = fadd float %706, %909, !dbg !52
  %974 = fadd float %707, %910, !dbg !52
  %975 = fadd float %708, %911, !dbg !52
  %976 = fadd float %709, %912, !dbg !52
  %977 = fadd float %710, %913, !dbg !52
  %978 = fadd float %711, %914, !dbg !52
  %979 = fadd float %712, %915, !dbg !52
  %980 = fadd float %713, %916, !dbg !52
  %981 = fadd float %714, %917, !dbg !52
  %982 = fadd float %715, %918, !dbg !52
  %983 = fadd float %716, %919, !dbg !52
  %984 = fadd float %717, %920, !dbg !52
  %985 = fadd float %718, %921, !dbg !52
  %986 = fadd float %719, %922, !dbg !52
  %987 = fadd float %720, %923, !dbg !52
  %988 = fadd float %721, %924, !dbg !52
  %989 = fadd float %722, %925, !dbg !52
  %990 = fadd float %723, %926, !dbg !52
  %991 = fadd float %724, %927, !dbg !52
  %992 = fadd float %725, %928, !dbg !52
  %993 = fadd float %726, %929, !dbg !52
  %994 = fadd float %727, %930, !dbg !52
  %995 = fadd float %728, %931, !dbg !52
  %996 = fadd float %729, %932, !dbg !52
  %997 = fadd float %730, %933, !dbg !52
  %998 = fadd float %731, %934, !dbg !52
  %999 = fadd float %732, %935, !dbg !52
  %1000 = sext i32 %758 to i64, !dbg !53
  %1001 = getelementptr i16, ptr addrspace(1) %3, i64 %1000, !dbg !53
  %1002 = sext i32 %759 to i64, !dbg !53
  %1003 = getelementptr i16, ptr addrspace(1) %3, i64 %1002, !dbg !53
  %1004 = sext i32 %760 to i64, !dbg !53
  %1005 = getelementptr i16, ptr addrspace(1) %3, i64 %1004, !dbg !53
  %1006 = sext i32 %761 to i64, !dbg !53
  %1007 = getelementptr i16, ptr addrspace(1) %3, i64 %1006, !dbg !53
  %1008 = sext i32 %762 to i64, !dbg !53
  %1009 = getelementptr i16, ptr addrspace(1) %3, i64 %1008, !dbg !53
  %1010 = sext i32 %763 to i64, !dbg !53
  %1011 = getelementptr i16, ptr addrspace(1) %3, i64 %1010, !dbg !53
  %1012 = sext i32 %764 to i64, !dbg !53
  %1013 = getelementptr i16, ptr addrspace(1) %3, i64 %1012, !dbg !53
  %1014 = sext i32 %765 to i64, !dbg !53
  %1015 = getelementptr i16, ptr addrspace(1) %3, i64 %1014, !dbg !53
  %1016 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %936) #3, !dbg !54
  %1017 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %937) #3, !dbg !54
  %1018 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %938) #3, !dbg !54
  %1019 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %939) #3, !dbg !54
  %1020 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %940) #3, !dbg !54
  %1021 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %941) #3, !dbg !54
  %1022 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %942) #3, !dbg !54
  %1023 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %943) #3, !dbg !54
  %1024 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %944) #3, !dbg !54
  %1025 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %945) #3, !dbg !54
  %1026 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %946) #3, !dbg !54
  %1027 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %947) #3, !dbg !54
  %1028 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %948) #3, !dbg !54
  %1029 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %949) #3, !dbg !54
  %1030 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %950) #3, !dbg !54
  %1031 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %951) #3, !dbg !54
  %1032 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %952) #3, !dbg !54
  %1033 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %953) #3, !dbg !54
  %1034 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %954) #3, !dbg !54
  %1035 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %955) #3, !dbg !54
  %1036 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %956) #3, !dbg !54
  %1037 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %957) #3, !dbg !54
  %1038 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %958) #3, !dbg !54
  %1039 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %959) #3, !dbg !54
  %1040 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %960) #3, !dbg !54
  %1041 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %961) #3, !dbg !54
  %1042 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %962) #3, !dbg !54
  %1043 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %963) #3, !dbg !54
  %1044 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %964) #3, !dbg !54
  %1045 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %965) #3, !dbg !54
  %1046 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %966) #3, !dbg !54
  %1047 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %967) #3, !dbg !54
  %1048 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %968) #3, !dbg !54
  %1049 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %969) #3, !dbg !54
  %1050 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %970) #3, !dbg !54
  %1051 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %971) #3, !dbg !54
  %1052 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %972) #3, !dbg !54
  %1053 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %973) #3, !dbg !54
  %1054 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %974) #3, !dbg !54
  %1055 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %975) #3, !dbg !54
  %1056 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %976) #3, !dbg !54
  %1057 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %977) #3, !dbg !54
  %1058 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %978) #3, !dbg !54
  %1059 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %979) #3, !dbg !54
  %1060 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %980) #3, !dbg !54
  %1061 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %981) #3, !dbg !54
  %1062 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %982) #3, !dbg !54
  %1063 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %983) #3, !dbg !54
  %1064 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %984) #3, !dbg !54
  %1065 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %985) #3, !dbg !54
  %1066 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %986) #3, !dbg !54
  %1067 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %987) #3, !dbg !54
  %1068 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %988) #3, !dbg !54
  %1069 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %989) #3, !dbg !54
  %1070 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %990) #3, !dbg !54
  %1071 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %991) #3, !dbg !54
  %1072 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %992) #3, !dbg !54
  %1073 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %993) #3, !dbg !54
  %1074 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %994) #3, !dbg !54
  %1075 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %995) #3, !dbg !54
  %1076 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %996) #3, !dbg !54
  %1077 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %997) #3, !dbg !54
  %1078 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %998) #3, !dbg !54
  %1079 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %999) #3, !dbg !54
  %1080 = insertelement <2 x i16> poison, i16 %1016, i64 0, !dbg !54
  %1081 = insertelement <2 x i16> %1080, i16 %1017, i64 1, !dbg !54
  %1082 = bitcast <2 x i16> %1081 to i32, !dbg !54
  %1083 = insertelement <2 x i16> poison, i16 %1018, i64 0, !dbg !54
  %1084 = insertelement <2 x i16> %1083, i16 %1019, i64 1, !dbg !54
  %1085 = bitcast <2 x i16> %1084 to i32, !dbg !54
  %1086 = insertelement <2 x i16> poison, i16 %1020, i64 0, !dbg !54
  %1087 = insertelement <2 x i16> %1086, i16 %1021, i64 1, !dbg !54
  %1088 = bitcast <2 x i16> %1087 to i32, !dbg !54
  %1089 = insertelement <2 x i16> poison, i16 %1022, i64 0, !dbg !54
  %1090 = insertelement <2 x i16> %1089, i16 %1023, i64 1, !dbg !54
  %1091 = bitcast <2 x i16> %1090 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1082, i32 %1085, i32 %1088, i32 %1091, ptr addrspace(1) %1001, i1 %742) #3, !dbg !54
  %1092 = insertelement <2 x i16> poison, i16 %1024, i64 0, !dbg !54
  %1093 = insertelement <2 x i16> %1092, i16 %1025, i64 1, !dbg !54
  %1094 = bitcast <2 x i16> %1093 to i32, !dbg !54
  %1095 = insertelement <2 x i16> poison, i16 %1026, i64 0, !dbg !54
  %1096 = insertelement <2 x i16> %1095, i16 %1027, i64 1, !dbg !54
  %1097 = bitcast <2 x i16> %1096 to i32, !dbg !54
  %1098 = insertelement <2 x i16> poison, i16 %1028, i64 0, !dbg !54
  %1099 = insertelement <2 x i16> %1098, i16 %1029, i64 1, !dbg !54
  %1100 = bitcast <2 x i16> %1099 to i32, !dbg !54
  %1101 = insertelement <2 x i16> poison, i16 %1030, i64 0, !dbg !54
  %1102 = insertelement <2 x i16> %1101, i16 %1031, i64 1, !dbg !54
  %1103 = bitcast <2 x i16> %1102 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1094, i32 %1097, i32 %1100, i32 %1103, ptr addrspace(1) %1003, i1 %743) #3, !dbg !54
  %1104 = insertelement <2 x i16> poison, i16 %1032, i64 0, !dbg !54
  %1105 = insertelement <2 x i16> %1104, i16 %1033, i64 1, !dbg !54
  %1106 = bitcast <2 x i16> %1105 to i32, !dbg !54
  %1107 = insertelement <2 x i16> poison, i16 %1034, i64 0, !dbg !54
  %1108 = insertelement <2 x i16> %1107, i16 %1035, i64 1, !dbg !54
  %1109 = bitcast <2 x i16> %1108 to i32, !dbg !54
  %1110 = insertelement <2 x i16> poison, i16 %1036, i64 0, !dbg !54
  %1111 = insertelement <2 x i16> %1110, i16 %1037, i64 1, !dbg !54
  %1112 = bitcast <2 x i16> %1111 to i32, !dbg !54
  %1113 = insertelement <2 x i16> poison, i16 %1038, i64 0, !dbg !54
  %1114 = insertelement <2 x i16> %1113, i16 %1039, i64 1, !dbg !54
  %1115 = bitcast <2 x i16> %1114 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1106, i32 %1109, i32 %1112, i32 %1115, ptr addrspace(1) %1005, i1 %744) #3, !dbg !54
  %1116 = insertelement <2 x i16> poison, i16 %1040, i64 0, !dbg !54
  %1117 = insertelement <2 x i16> %1116, i16 %1041, i64 1, !dbg !54
  %1118 = bitcast <2 x i16> %1117 to i32, !dbg !54
  %1119 = insertelement <2 x i16> poison, i16 %1042, i64 0, !dbg !54
  %1120 = insertelement <2 x i16> %1119, i16 %1043, i64 1, !dbg !54
  %1121 = bitcast <2 x i16> %1120 to i32, !dbg !54
  %1122 = insertelement <2 x i16> poison, i16 %1044, i64 0, !dbg !54
  %1123 = insertelement <2 x i16> %1122, i16 %1045, i64 1, !dbg !54
  %1124 = bitcast <2 x i16> %1123 to i32, !dbg !54
  %1125 = insertelement <2 x i16> poison, i16 %1046, i64 0, !dbg !54
  %1126 = insertelement <2 x i16> %1125, i16 %1047, i64 1, !dbg !54
  %1127 = bitcast <2 x i16> %1126 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1118, i32 %1121, i32 %1124, i32 %1127, ptr addrspace(1) %1007, i1 %745) #3, !dbg !54
  %1128 = insertelement <2 x i16> poison, i16 %1048, i64 0, !dbg !54
  %1129 = insertelement <2 x i16> %1128, i16 %1049, i64 1, !dbg !54
  %1130 = bitcast <2 x i16> %1129 to i32, !dbg !54
  %1131 = insertelement <2 x i16> poison, i16 %1050, i64 0, !dbg !54
  %1132 = insertelement <2 x i16> %1131, i16 %1051, i64 1, !dbg !54
  %1133 = bitcast <2 x i16> %1132 to i32, !dbg !54
  %1134 = insertelement <2 x i16> poison, i16 %1052, i64 0, !dbg !54
  %1135 = insertelement <2 x i16> %1134, i16 %1053, i64 1, !dbg !54
  %1136 = bitcast <2 x i16> %1135 to i32, !dbg !54
  %1137 = insertelement <2 x i16> poison, i16 %1054, i64 0, !dbg !54
  %1138 = insertelement <2 x i16> %1137, i16 %1055, i64 1, !dbg !54
  %1139 = bitcast <2 x i16> %1138 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1130, i32 %1133, i32 %1136, i32 %1139, ptr addrspace(1) %1009, i1 %746) #3, !dbg !54
  %1140 = insertelement <2 x i16> poison, i16 %1056, i64 0, !dbg !54
  %1141 = insertelement <2 x i16> %1140, i16 %1057, i64 1, !dbg !54
  %1142 = bitcast <2 x i16> %1141 to i32, !dbg !54
  %1143 = insertelement <2 x i16> poison, i16 %1058, i64 0, !dbg !54
  %1144 = insertelement <2 x i16> %1143, i16 %1059, i64 1, !dbg !54
  %1145 = bitcast <2 x i16> %1144 to i32, !dbg !54
  %1146 = insertelement <2 x i16> poison, i16 %1060, i64 0, !dbg !54
  %1147 = insertelement <2 x i16> %1146, i16 %1061, i64 1, !dbg !54
  %1148 = bitcast <2 x i16> %1147 to i32, !dbg !54
  %1149 = insertelement <2 x i16> poison, i16 %1062, i64 0, !dbg !54
  %1150 = insertelement <2 x i16> %1149, i16 %1063, i64 1, !dbg !54
  %1151 = bitcast <2 x i16> %1150 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1142, i32 %1145, i32 %1148, i32 %1151, ptr addrspace(1) %1011, i1 %747) #3, !dbg !54
  %1152 = insertelement <2 x i16> poison, i16 %1064, i64 0, !dbg !54
  %1153 = insertelement <2 x i16> %1152, i16 %1065, i64 1, !dbg !54
  %1154 = bitcast <2 x i16> %1153 to i32, !dbg !54
  %1155 = insertelement <2 x i16> poison, i16 %1066, i64 0, !dbg !54
  %1156 = insertelement <2 x i16> %1155, i16 %1067, i64 1, !dbg !54
  %1157 = bitcast <2 x i16> %1156 to i32, !dbg !54
  %1158 = insertelement <2 x i16> poison, i16 %1068, i64 0, !dbg !54
  %1159 = insertelement <2 x i16> %1158, i16 %1069, i64 1, !dbg !54
  %1160 = bitcast <2 x i16> %1159 to i32, !dbg !54
  %1161 = insertelement <2 x i16> poison, i16 %1070, i64 0, !dbg !54
  %1162 = insertelement <2 x i16> %1161, i16 %1071, i64 1, !dbg !54
  %1163 = bitcast <2 x i16> %1162 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1154, i32 %1157, i32 %1160, i32 %1163, ptr addrspace(1) %1013, i1 %748) #3, !dbg !54
  %1164 = insertelement <2 x i16> poison, i16 %1072, i64 0, !dbg !54
  %1165 = insertelement <2 x i16> %1164, i16 %1073, i64 1, !dbg !54
  %1166 = bitcast <2 x i16> %1165 to i32, !dbg !54
  %1167 = insertelement <2 x i16> poison, i16 %1074, i64 0, !dbg !54
  %1168 = insertelement <2 x i16> %1167, i16 %1075, i64 1, !dbg !54
  %1169 = bitcast <2 x i16> %1168 to i32, !dbg !54
  %1170 = insertelement <2 x i16> poison, i16 %1076, i64 0, !dbg !54
  %1171 = insertelement <2 x i16> %1170, i16 %1077, i64 1, !dbg !54
  %1172 = bitcast <2 x i16> %1171 to i32, !dbg !54
  %1173 = insertelement <2 x i16> poison, i16 %1078, i64 0, !dbg !54
  %1174 = insertelement <2 x i16> %1173, i16 %1079, i64 1, !dbg !54
  %1175 = bitcast <2 x i16> %1174 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1166, i32 %1169, i32 %1172, i32 %1175, ptr addrspace(1) %1015, i1 %749) #3, !dbg !54
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chyyjgw622k7xle7ksgjutgp5maf67hkavt5vt7k4nst4fzj6gya.py", directory: "/opt/inductor_cache/hy")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 30, column: 14, scope: !7)
!11 = !DILocation(line: 33, column: 11, scope: !7)
!12 = !DILocation(line: 33, column: 16, scope: !7)
!13 = !DILocation(line: 0, scope: !7)
!14 = !DILocation(line: 42, column: 24, scope: !7)
!15 = !DILocation(line: 43, column: 28, scope: !7)
!16 = !DILocation(line: 43, column: 34, scope: !7)
!17 = !DILocation(line: 48, column: 22, scope: !7)
!18 = !DILocation(line: 49, column: 41, scope: !7)
!19 = !DILocation(line: 49, column: 30, scope: !7)
!20 = !DILocation(line: 49, column: 50, scope: !7)
!21 = !DILocation(line: 50, column: 40, scope: !7)
!22 = !DILocation(line: 50, column: 34, scope: !7)
!23 = !DILocation(line: 51, column: 30, scope: !7)
!24 = !DILocation(line: 53, column: 17, scope: !7)
!25 = !DILocation(line: 53, column: 40, scope: !7)
!26 = !DILocation(line: 53, column: 27, scope: !7)
!27 = !DILocation(line: 54, column: 17, scope: !7)
!28 = !DILocation(line: 54, column: 40, scope: !7)
!29 = !DILocation(line: 54, column: 27, scope: !7)
!30 = !DILocation(line: 56, column: 52, scope: !7)
!31 = !DILocation(line: 60, column: 52, scope: !7)
!32 = !DILocation(line: 64, column: 28, scope: !7)
!33 = !DILocation(line: 64, column: 40, scope: !7)
!34 = !DILocation(line: 64, column: 13, scope: !7)
!35 = !DILocation(line: 65, column: 54, scope: !7)
!36 = !DILocation(line: 65, column: 39, scope: !7)
!37 = !DILocation(line: 65, column: 13, scope: !7)
!38 = !DILocation(line: 70, column: 24, scope: !7)
!39 = !DILocation(line: 71, column: 24, scope: !7)
!40 = !DILocation(line: 78, column: 13, scope: !7)
!41 = !DILocation(line: 79, column: 13, scope: !7)
!42 = !DILocation(line: 68, column: 25, scope: !7)
!43 = !DILocation(line: 77, column: 25, scope: !7)
!44 = !DILocation(line: 86, column: 20, scope: !7)
!45 = !DILocation(line: 86, column: 34, scope: !7)
!46 = !DILocation(line: 86, column: 26, scope: !7)
!47 = !DILocation(line: 89, column: 27, scope: !7)
!48 = !DILocation(line: 89, column: 22, scope: !7)
!49 = !DILocation(line: 90, column: 30, scope: !7)
!50 = !DILocation(line: 90, column: 66, scope: !7)
!51 = !DILocation(line: 90, column: 105, scope: !7)
!52 = !DILocation(line: 91, column: 17, scope: !7)
!53 = !DILocation(line: 92, column: 25, scope: !7)
!54 = !DILocation(line: 92, column: 68, scope: !7)
