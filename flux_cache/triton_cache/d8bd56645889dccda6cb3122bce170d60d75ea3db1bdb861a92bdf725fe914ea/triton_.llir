; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 9, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 510, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, %6, !dbg !14
  %.frozen = freeze i32 %13
  %15 = sdiv i32 %.frozen, 3072, !dbg !15
  %16 = mul i32 %15, 3072
  %.decomposed = sub i32 %.frozen, %16
  %17 = add nsw i32 %.decomposed, 6144, !dbg !16
  %18 = zext nneg i32 %17 to i64, !dbg !17
  %19 = getelementptr i16, ptr addrspace(1) %2, i64 %18, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %14) #1, !dbg !18
  %21 = trunc i32 %20 to i16, !dbg !18
  %extelt.offset = lshr i32 %20, 16, !dbg !18
  %22 = trunc nuw i32 %extelt.offset to i16, !dbg !18
  %23 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #1, !dbg !19
  %24 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #1, !dbg !19
  %25 = getelementptr i16, ptr addrspace(1) %3, i64 %18, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #1, !dbg !21
  %27 = trunc i32 %26 to i16, !dbg !21
  %extelt.offset1 = lshr i32 %26, 16, !dbg !21
  %28 = trunc nuw i32 %extelt.offset1 to i16, !dbg !21
  %29 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %27) #1, !dbg !22
  %30 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %28) #1, !dbg !22
  %31 = sext i32 %13 to i64, !dbg !23
  %32 = getelementptr i16, ptr addrspace(1) %0, i64 %31, !dbg !23
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %14) #1, !dbg !24
  %34 = trunc i32 %33 to i16, !dbg !24
  %extelt.offset2 = lshr i32 %33, 16, !dbg !24
  %35 = trunc nuw i32 %extelt.offset2 to i16, !dbg !24
  %36 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %34) #1, !dbg !25
  %37 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %35) #1, !dbg !25
  %38 = sext i32 %.decomposed to i64, !dbg !26
  %39 = getelementptr i16, ptr addrspace(1) %4, i64 %38, !dbg !26
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %14) #1, !dbg !27
  %41 = trunc i32 %40 to i16, !dbg !27
  %extelt.offset3 = lshr i32 %40, 16, !dbg !27
  %42 = trunc nuw i32 %extelt.offset3 to i16, !dbg !27
  %43 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %41) #1, !dbg !28
  %44 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %42) #1, !dbg !28
  %45 = icmp slt i32 %15, %5, !dbg !29
  %46 = mul nsw i32 %15, 3072, !dbg !30
  %47 = add i32 %46, %.decomposed, !dbg !31
  %48 = sext i32 %47 to i64, !dbg !32
  %49 = getelementptr i16, ptr addrspace(1) %1, i64 %48, !dbg !32
  %50 = and i1 %14, %45, !dbg !33
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %50, i32 0, i1 %50) #1, !dbg !34
  %52 = trunc i32 %51 to i16, !dbg !34
  %extelt.offset4 = lshr i32 %51, 16, !dbg !34
  %53 = trunc nuw i32 %extelt.offset4 to i16, !dbg !34
  %54 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %52) #1, !dbg !35
  %55 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %53) #1, !dbg !35
  %56 = icmp sge i32 %15, %5, !dbg !36
  %57 = and i1 %14, %56, !dbg !37
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %57, i32 0, i1 %57) #1, !dbg !38
  %59 = trunc i32 %58 to i16, !dbg !38
  %extelt.offset5 = lshr i32 %58, 16, !dbg !38
  %60 = trunc nuw i32 %extelt.offset5 to i16, !dbg !38
  %61 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %59) #1, !dbg !39
  %62 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %60) #1, !dbg !39
  %63 = select i1 %45, float %54, float %61, !dbg !40
  %64 = select i1 %45, float %55, float %62, !dbg !40
  %65 = fadd float %23, %29, !dbg !41
  %66 = fadd float %24, %30, !dbg !41
  %67 = fadd float %36, %43, !dbg !42
  %68 = fadd float %37, %44, !dbg !42
  %69 = fmul float %65, %67, !dbg !43
  %70 = fmul float %66, %68, !dbg !43
  %71 = fadd float %69, %63, !dbg !44
  %72 = fadd float %70, %64, !dbg !44
  %73 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %71) #1, !dbg !45
  %74 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %72) #1, !dbg !45
  %75 = insertelement <2 x i16> poison, i16 %73, i64 0, !dbg !45
  %76 = insertelement <2 x i16> %75, i16 %74, i64 1, !dbg !45
  %77 = bitcast <2 x i16> %76 to i32, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %77, ptr addrspace(1) %32, i1 %14) #1, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4fcp2t5bzic3pefy3wdpvt4eyf5cpgopiw3oz4z2kjzhoestyb5.py", directory: "/opt/inductor_cache/4f")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 21, column: 21, scope: !7)
!15 = !DILocation(line: 22, column: 20, scope: !7)
!16 = !DILocation(line: 25, column: 38, scope: !7)
!17 = !DILocation(line: 25, column: 31, scope: !7)
!18 = !DILocation(line: 25, column: 43, scope: !7)
!19 = !DILocation(line: 25, column: 83, scope: !7)
!20 = !DILocation(line: 26, column: 31, scope: !7)
!21 = !DILocation(line: 26, column: 43, scope: !7)
!22 = !DILocation(line: 26, column: 83, scope: !7)
!23 = !DILocation(line: 27, column: 35, scope: !7)
!24 = !DILocation(line: 27, column: 40, scope: !7)
!25 = !DILocation(line: 27, column: 50, scope: !7)
!26 = !DILocation(line: 28, column: 31, scope: !7)
!27 = !DILocation(line: 28, column: 36, scope: !7)
!28 = !DILocation(line: 28, column: 76, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 34, column: 41, scope: !7)
!31 = !DILocation(line: 34, column: 36, scope: !7)
!32 = !DILocation(line: 34, column: 30, scope: !7)
!33 = !DILocation(line: 34, column: 54, scope: !7)
!34 = !DILocation(line: 34, column: 47, scope: !7)
!35 = !DILocation(line: 34, column: 75, scope: !7)
!36 = !DILocation(line: 35, column: 19, scope: !7)
!37 = !DILocation(line: 38, column: 82, scope: !7)
!38 = !DILocation(line: 38, column: 75, scope: !7)
!39 = !DILocation(line: 38, column: 103, scope: !7)
!40 = !DILocation(line: 39, column: 33, scope: !7)
!41 = !DILocation(line: 40, column: 20, scope: !7)
!42 = !DILocation(line: 41, column: 20, scope: !7)
!43 = !DILocation(line: 42, column: 20, scope: !7)
!44 = !DILocation(line: 43, column: 20, scope: !7)
!45 = !DILocation(line: 44, column: 40, scope: !7)
!46 = !DILocation(line: 44, column: 4, scope: !7)
