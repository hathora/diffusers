//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_1[12] = {95, 95, 67, 85, 68, 65, 95, 65, 82, 67, 72};
.global .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.global .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5,
	.param .u32 triton__param_6
)
.maxntid 128, 1, 1
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<339>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<501>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<143>;
	.reg .f64 	%fd<831>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r104, [triton__param_6];
	ld.param.u32 	%r103, [triton__param_5];
	ld.param.u64 	%rd23, [triton__param_0];
	ld.param.u64 	%rd24, [triton__param_1];
	ld.param.u32 	%r122, [triton__param_4];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r105, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r123, %r105, 10;
	.loc	1 20 36
	mov.u32 	%r124, %tid.x;
	shl.b32 	%r125, %r124, 2;
	and.b32  	%r126, %r125, 508;
	and.b32  	%r127, %r125, 12;
	.loc	1 20 23
	or.b32  	%r17, %r123, %r126;
	or.b32  	%r128, %r123, %r127;
	or.b32  	%r129, %r128, 1;
	or.b32  	%r130, %r128, 2;
	or.b32  	%r131, %r128, 3;
	or.b32  	%r18, %r17, 512;
	.loc	1 21 21
	setp.lt.s32 	%p317, %r17, %r104;
	setp.lt.s32 	%p318, %r18, %r104;
	.loc	1 22 20
	shr.s32 	%r133, %r17, 31;
	shr.u32 	%r134, %r133, 28;
	add.s32 	%r135, %r17, %r134;
	shr.s32 	%r19, %r135, 4;
	bfe.s32 	%r136, %r105, 21, 1;
	.loc	1 23 18
	shr.u32 	%r137, %r136, 28;
	.loc	1 22 20
	add.s32 	%r138, %r18, %r137;
	shr.s32 	%r20, %r138, 4;
	and.b32  	%r139, %r135, -16;
	sub.s32 	%r21, %r17, %r139;
	.loc	1 23 18
	add.s32 	%r140, %r129, %r137;
	and.b32  	%r141, %r140, 64528;
	sub.s32 	%r142, %r129, %r141;
	add.s32 	%r143, %r130, %r137;
	and.b32  	%r144, %r143, 16;
	sub.s32 	%r145, %r130, %r144;
	add.s32 	%r146, %r131, %r137;
	and.b32  	%r147, %r146, 64528;
	sub.s32 	%r148, %r131, %r147;
	.loc	1 28 18
	setp.lt.s32 	%p67, %r19, %r122;
	setp.lt.s32 	%p68, %r20, %r122;
	.loc	1 29 32
	mul.lo.s32 	%r149, %r19, 3;
	mul.lo.s32 	%r150, %r20, 3;
	.loc	1 29 30
	mul.wide.s32 	%rd41, %r149, 2;
	add.s64 	%rd7, %rd23, %rd41;
	mul.wide.s32 	%rd42, %r150, 2;
	add.s64 	%rd11, %rd23, %rd42;
	.loc	1 29 44
	and.pred  	%p33, %p317, %p67;
	and.pred  	%p41, %p318, %p68;
	mov.u16 	%rs2, 0;
	.loc	1 29 37
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p33 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd7 + 0 ];
	@!%p33 mov.u16 %rs1, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p33 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd7 + 0 ];
	@!%p33 mov.u16 %rs3, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs5, 0x0;
	@%p33 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd7 + 0 ];
	@!%p33 mov.u16 %rs5, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p33 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd7 + 0 ];
	@!%p33 mov.u16 %rs7, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs9, 0x0;
	@%p41 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd11 + 0 ];
	@!%p41 mov.u16 %rs9, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs11, 0x0;
	@%p41 ld.global.L1::evict_last.b16 { %rs11 }, [ %rd11 + 0 ];
	@!%p41 mov.u16 %rs11, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs13, 0x0;
	@%p41 ld.global.L1::evict_last.b16 { %rs13 }, [ %rd11 + 0 ];
	@!%p41 mov.u16 %rs13, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p41 ld.global.L1::evict_last.b16 { %rs15 }, [ %rd11 + 0 ];
	@!%p41 mov.u16 %rs15, %rs2;
	// end inline asm
	.loc	1 30 19
	setp.ge.s32 	%p69, %r19, %r122;
	setp.ge.s32 	%p70, %r20, %r122;
	.loc	1 33 39
	sub.s32 	%r151, %r19, %r122;
	sub.s32 	%r152, %r20, %r122;
	.loc	1 33 33
	mul.lo.s32 	%r153, %r151, 3;
	mul.lo.s32 	%r154, %r152, 3;
	.loc	1 33 30
	mul.wide.s32 	%rd43, %r153, 2;
	add.s64 	%rd15, %rd24, %rd43;
	mul.wide.s32 	%rd44, %r154, 2;
	add.s64 	%rd19, %rd24, %rd44;
	.loc	1 33 59
	and.pred  	%p49, %p317, %p69;
	and.pred  	%p57, %p318, %p70;
	.loc	1 33 52
	// begin inline asm
	mov.u16 %rs25, 0x0;
	@%p49 ld.global.L1::evict_last.b16 { %rs25 }, [ %rd15 + 0 ];
	@!%p49 mov.u16 %rs25, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs27, 0x0;
	@%p49 ld.global.L1::evict_last.b16 { %rs27 }, [ %rd15 + 0 ];
	@!%p49 mov.u16 %rs27, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs29, 0x0;
	@%p49 ld.global.L1::evict_last.b16 { %rs29 }, [ %rd15 + 0 ];
	@!%p49 mov.u16 %rs29, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs31, 0x0;
	@%p49 ld.global.L1::evict_last.b16 { %rs31 }, [ %rd15 + 0 ];
	@!%p49 mov.u16 %rs31, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs33, 0x0;
	@%p57 ld.global.L1::evict_last.b16 { %rs33 }, [ %rd19 + 0 ];
	@!%p57 mov.u16 %rs33, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs35, 0x0;
	@%p57 ld.global.L1::evict_last.b16 { %rs35 }, [ %rd19 + 0 ];
	@!%p57 mov.u16 %rs35, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs37, 0x0;
	@%p57 ld.global.L1::evict_last.b16 { %rs37 }, [ %rd19 + 0 ];
	@!%p57 mov.u16 %rs37, %rs2;
	// end inline asm
	// begin inline asm
	mov.u16 %rs39, 0x0;
	@%p57 ld.global.L1::evict_last.b16 { %rs39 }, [ %rd19 + 0 ];
	@!%p57 mov.u16 %rs39, %rs2;
	// end inline asm
	.loc	1 37 37
	cvt.rn.f64.s32 	%fd9, %r103;
	.loc	1 39 21
	cvt.s8.s32 	%rs49, %r21;
	shr.s16 	%rs50, %rs49, 1;
	cvt.u16.u32 	%rs51, %r142;
	and.b16  	%rs52, %rs51, 128;
	shr.u16 	%rs53, %rs52, 7;
	add.s16 	%rs54, %rs51, %rs53;
	cvt.s16.s8 	%rs55, %rs54;
	shr.s16 	%rs56, %rs55, 1;
	cvt.s8.s32 	%rs57, %r145;
	shr.s16 	%rs58, %rs57, 1;
	cvt.u16.u32 	%rs59, %r148;
	and.b16  	%rs60, %rs59, 128;
	shr.u16 	%rs61, %rs60, 7;
	add.s16 	%rs62, %rs59, %rs61;
	.loc	1 39 15
	mul.wide.s16 	%r155, %rs50, 2;
	mul.wide.s16 	%r156, %rs56, 2;
	.loc	1 40 21
	cvt.rn.f64.s32 	%fd177, %r155;
	cvt.rn.f64.s32 	%fd178, %r156;
	.loc	1 42 20
	mul.f64 	%fd10, %fd177, 0d3FB0000000000000;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd9;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd10;
	}
	bfe.u32 	%r159, %r23, 20, 11;
	add.s32 	%r160, %r159, -1012;
	mov.b64 	%rd45, %fd10;
	shl.b64 	%rd1, %rd45, %r160;
	setp.eq.s64 	%p335, %rd1, -9223372036854775808;
	abs.f64 	%fd14, %fd9;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd10;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd181, [retval0+0];
	} // callseq 0
	setp.ne.s32 	%p71, %r103, 0;
	setp.lt.s32 	%p323, %r22, 0;
	cvt.rzi.f64.f64 	%fd767, %fd10;
	@%p71 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	setp.eq.s64 	%p73, %rd1, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r161, %temp}, %fd181;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r162}, %fd181;
	}
	xor.b32  	%r163, %r162, -2147483648;
	mov.b64 	%fd182, {%r161, %r163};
	selp.f64 	%fd183, %fd182, %fd181, %p73;
	selp.f64 	%fd184, %fd183, %fd181, %p323;
	setp.neu.f64 	%p74, %fd767, %fd10;
	selp.f64 	%fd186, 0dFFF8000000000000, %fd184, %p74;
	selp.f64 	%fd791, %fd186, %fd184, %p323;
	mov.pred 	%p331, %p335;
	bra.uni 	$L__BB0_3;
$L__BB0_1:
	setp.eq.s64 	%p75, %rd1, -9223372036854775808;
	abs.f64 	%fd187, %fd10;
	setp.neu.f64 	%p76, %fd187, 0d3FE0000000000000;
	and.pred  	%p331, %p76, %p75;
	selp.b32 	%r164, %r22, 0, %p331;
	setp.lt.s32 	%p77, %r23, 0;
	or.b32  	%r165, %r164, 2146435072;
	selp.b32 	%r166, %r165, %r164, %p77;
	mov.b32 	%r167, 0;
	mov.b64 	%fd791, {%r167, %r166};
$L__BB0_3:
	.loc	1 0 33
	cvt.s16.s8 	%rs63, %rs62;
	mul.wide.s16 	%r157, %rs58, 2;
	mul.f64 	%fd11, %fd178, 0d3FB0000000000000;
	.loc	1 43 33
	add.f64 	%fd19, %fd10, %fd9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r168}, %fd19;
	}
	and.b32  	%r24, %r168, 2146435072;
	setp.ne.s32 	%p78, %r24, 2146435072;
	setp.nan.f64 	%p330, %fd14, %fd14;
	mov.f64 	%fd792, %fd791;
	@%p78 bra 	$L__BB0_10;
	.loc	1 0 33
	mov.f64 	%fd792, %fd19;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_10;
	abs.f64 	%fd188, %fd10;
	setp.nan.f64 	%p80, %fd188, %fd188;
	mov.f64 	%fd792, %fd19;
	@%p80 bra 	$L__BB0_10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r169, %temp}, %fd10;
	}
	and.b32  	%r25, %r23, 2147483647;
	setp.eq.s32 	%p81, %r25, 2146435072;
	setp.eq.s32 	%p82, %r169, 0;
	and.pred  	%p83, %p81, %p82;
	@!%p83 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_7:
	setp.gt.f64 	%p90, %fd14, 0d3FF0000000000000;
	selp.b32 	%r178, 2146435072, 0, %p90;
	setp.lt.s32 	%p91, %r23, 0;
	xor.b32  	%r179, %r178, 2146435072;
	selp.b32 	%r180, %r179, %r178, %p91;
	setp.eq.s32 	%p92, %r103, -1;
	selp.b32 	%r181, 1072693248, %r180, %p92;
	mov.b32 	%r182, 0;
	mov.b64 	%fd792, {%r182, %r181};
	bra.uni 	$L__BB0_10;
$L__BB0_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r170, %temp}, %fd9;
	}
	and.b32  	%r171, %r22, 2147483647;
	setp.eq.s32 	%p84, %r171, 2146435072;
	setp.eq.s32 	%p85, %r170, 0;
	and.pred  	%p86, %p84, %p85;
	mov.f64 	%fd792, %fd791;
	@!%p86 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:
	setp.lt.s32 	%p88, %r23, 0;
	selp.b32 	%r172, 0, 2146435072, %p88;
	setp.ne.s32 	%p89, %r25, 1071644672;
	or.b32  	%r173, %r172, -2147483648;
	selp.b32 	%r174, %r173, %r172, %p89;
	selp.b32 	%r175, %r174, %r172, %p331;
	selp.b32 	%r176, %r175, %r172, %p323;
	mov.b32 	%r177, 0;
	mov.b64 	%fd792, {%r177, %r176};
$L__BB0_10:
	.loc	1 0 33
	shr.s16 	%rs64, %rs63, 1;
	cvt.rn.f64.s32 	%fd179, %r157;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd11;
	}
	bfe.u32 	%r183, %r26, 20, 11;
	add.s32 	%r184, %r183, -1012;
	mov.b64 	%rd46, %fd11;
	shl.b64 	%rd2, %rd46, %r184;
	setp.eq.s64 	%p336, %rd2, -9223372036854775808;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd189, [retval0+0];
	} // callseq 1
	cvt.rzi.f64.f64 	%fd768, %fd11;
	@%p71 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_11;
$L__BB0_12:
	setp.eq.s64 	%p96, %rd2, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r185, %temp}, %fd189;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r186}, %fd189;
	}
	xor.b32  	%r187, %r186, -2147483648;
	mov.b64 	%fd190, {%r185, %r187};
	selp.f64 	%fd191, %fd190, %fd189, %p96;
	selp.f64 	%fd192, %fd191, %fd189, %p323;
	setp.neu.f64 	%p98, %fd768, %fd11;
	selp.f64 	%fd194, 0dFFF8000000000000, %fd192, %p98;
	selp.f64 	%fd793, %fd194, %fd192, %p323;
	mov.pred 	%p332, %p336;
	bra.uni 	$L__BB0_13;
$L__BB0_11:
	setp.eq.s64 	%p99, %rd2, -9223372036854775808;
	abs.f64 	%fd195, %fd11;
	setp.neu.f64 	%p100, %fd195, 0d3FE0000000000000;
	and.pred  	%p332, %p100, %p99;
	selp.b32 	%r188, %r22, 0, %p332;
	setp.lt.s32 	%p101, %r26, 0;
	or.b32  	%r189, %r188, 2146435072;
	selp.b32 	%r190, %r189, %r188, %p101;
	mov.b32 	%r191, 0;
	mov.b64 	%fd793, {%r191, %r190};
$L__BB0_13:
	.loc	1 0 33
	mul.wide.s16 	%r158, %rs64, 2;
	mul.f64 	%fd12, %fd179, 0d3FB0000000000000;
	.loc	1 43 33
	add.f64 	%fd28, %fd11, %fd9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r192}, %fd28;
	}
	and.b32  	%r27, %r192, 2146435072;
	setp.ne.s32 	%p102, %r27, 2146435072;
	mov.f64 	%fd794, %fd793;
	@%p102 bra 	$L__BB0_20;
	.loc	1 0 33
	mov.f64 	%fd794, %fd28;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_20;
	abs.f64 	%fd196, %fd11;
	setp.nan.f64 	%p104, %fd196, %fd196;
	mov.f64 	%fd794, %fd28;
	@%p104 bra 	$L__BB0_20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r193, %temp}, %fd11;
	}
	and.b32  	%r28, %r26, 2147483647;
	setp.eq.s32 	%p105, %r28, 2146435072;
	setp.eq.s32 	%p106, %r193, 0;
	and.pred  	%p107, %p105, %p106;
	@!%p107 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;
$L__BB0_17:
	setp.gt.f64 	%p114, %fd14, 0d3FF0000000000000;
	selp.b32 	%r202, 2146435072, 0, %p114;
	setp.lt.s32 	%p115, %r26, 0;
	xor.b32  	%r203, %r202, 2146435072;
	selp.b32 	%r204, %r203, %r202, %p115;
	setp.eq.s32 	%p116, %r103, -1;
	selp.b32 	%r205, 1072693248, %r204, %p116;
	mov.b32 	%r206, 0;
	mov.b64 	%fd794, {%r206, %r205};
	bra.uni 	$L__BB0_20;
$L__BB0_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r194, %temp}, %fd9;
	}
	and.b32  	%r195, %r22, 2147483647;
	setp.eq.s32 	%p108, %r195, 2146435072;
	setp.eq.s32 	%p109, %r194, 0;
	and.pred  	%p110, %p108, %p109;
	mov.f64 	%fd794, %fd793;
	@!%p110 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;
$L__BB0_19:
	setp.lt.s32 	%p112, %r26, 0;
	selp.b32 	%r196, 0, 2146435072, %p112;
	setp.ne.s32 	%p113, %r28, 1071644672;
	or.b32  	%r197, %r196, -2147483648;
	selp.b32 	%r198, %r197, %r196, %p113;
	selp.b32 	%r199, %r198, %r196, %p332;
	selp.b32 	%r200, %r199, %r196, %p323;
	mov.b32 	%r201, 0;
	mov.b64 	%fd794, {%r201, %r200};
$L__BB0_20:
	.loc	1 0 33
	cvt.rn.f64.s32 	%fd180, %r158;
	.loc	1 43 33
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd12;
	}
	bfe.u32 	%r207, %r29, 20, 11;
	add.s32 	%r208, %r207, -1012;
	mov.b64 	%rd47, %fd12;
	shl.b64 	%rd3, %rd47, %r208;
	setp.eq.s64 	%p337, %rd3, -9223372036854775808;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd197, [retval0+0];
	} // callseq 2
	cvt.rzi.f64.f64 	%fd769, %fd12;
	@%p71 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;
$L__BB0_22:
	setp.eq.s64 	%p120, %rd3, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r209, %temp}, %fd197;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r210}, %fd197;
	}
	xor.b32  	%r211, %r210, -2147483648;
	mov.b64 	%fd198, {%r209, %r211};
	selp.f64 	%fd199, %fd198, %fd197, %p120;
	selp.f64 	%fd200, %fd199, %fd197, %p323;
	setp.neu.f64 	%p122, %fd769, %fd12;
	selp.f64 	%fd202, 0dFFF8000000000000, %fd200, %p122;
	selp.f64 	%fd795, %fd202, %fd200, %p323;
	mov.pred 	%p333, %p337;
	bra.uni 	$L__BB0_23;
$L__BB0_21:
	setp.eq.s64 	%p123, %rd3, -9223372036854775808;
	abs.f64 	%fd203, %fd12;
	setp.neu.f64 	%p124, %fd203, 0d3FE0000000000000;
	and.pred  	%p333, %p124, %p123;
	selp.b32 	%r212, %r22, 0, %p333;
	setp.lt.s32 	%p125, %r29, 0;
	or.b32  	%r213, %r212, 2146435072;
	selp.b32 	%r214, %r213, %r212, %p125;
	mov.b32 	%r215, 0;
	mov.b64 	%fd795, {%r215, %r214};
$L__BB0_23:
	.loc	1 0 33
	mul.f64 	%fd13, %fd180, 0d3FB0000000000000;
	.loc	1 43 33
	add.f64 	%fd37, %fd12, %fd9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r216}, %fd37;
	}
	and.b32  	%r30, %r216, 2146435072;
	setp.ne.s32 	%p126, %r30, 2146435072;
	mov.f64 	%fd796, %fd795;
	@%p126 bra 	$L__BB0_30;
	.loc	1 0 33
	mov.f64 	%fd796, %fd37;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_30;
	abs.f64 	%fd204, %fd12;
	setp.nan.f64 	%p128, %fd204, %fd204;
	mov.f64 	%fd796, %fd37;
	@%p128 bra 	$L__BB0_30;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r217, %temp}, %fd12;
	}
	and.b32  	%r31, %r29, 2147483647;
	setp.eq.s32 	%p129, %r31, 2146435072;
	setp.eq.s32 	%p130, %r217, 0;
	and.pred  	%p131, %p129, %p130;
	@!%p131 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_27;
$L__BB0_27:
	setp.gt.f64 	%p138, %fd14, 0d3FF0000000000000;
	selp.b32 	%r226, 2146435072, 0, %p138;
	setp.lt.s32 	%p139, %r29, 0;
	xor.b32  	%r227, %r226, 2146435072;
	selp.b32 	%r228, %r227, %r226, %p139;
	setp.eq.s32 	%p140, %r103, -1;
	selp.b32 	%r229, 1072693248, %r228, %p140;
	mov.b32 	%r230, 0;
	mov.b64 	%fd796, {%r230, %r229};
	bra.uni 	$L__BB0_30;
$L__BB0_28:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r218, %temp}, %fd9;
	}
	and.b32  	%r219, %r22, 2147483647;
	setp.eq.s32 	%p132, %r219, 2146435072;
	setp.eq.s32 	%p133, %r218, 0;
	and.pred  	%p134, %p132, %p133;
	mov.f64 	%fd796, %fd795;
	@!%p134 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;
$L__BB0_29:
	setp.lt.s32 	%p136, %r29, 0;
	selp.b32 	%r220, 0, 2146435072, %p136;
	setp.ne.s32 	%p137, %r31, 1071644672;
	or.b32  	%r221, %r220, -2147483648;
	selp.b32 	%r222, %r221, %r220, %p137;
	selp.b32 	%r223, %r222, %r220, %p333;
	selp.b32 	%r224, %r223, %r220, %p323;
	mov.b32 	%r225, 0;
	mov.b64 	%fd796, {%r225, %r224};
$L__BB0_30:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r32}, %fd13;
	}
	bfe.u32 	%r231, %r32, 20, 11;
	add.s32 	%r232, %r231, -1012;
	mov.b64 	%rd48, %fd13;
	shl.b64 	%rd4, %rd48, %r232;
	setp.eq.s64 	%p338, %rd4, -9223372036854775808;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd13;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd205, [retval0+0];
	} // callseq 3
	cvt.rzi.f64.f64 	%fd770, %fd13;
	@%p71 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;
$L__BB0_32:
	setp.eq.s64 	%p144, %rd4, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r233, %temp}, %fd205;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r234}, %fd205;
	}
	xor.b32  	%r235, %r234, -2147483648;
	mov.b64 	%fd206, {%r233, %r235};
	selp.f64 	%fd207, %fd206, %fd205, %p144;
	selp.f64 	%fd208, %fd207, %fd205, %p323;
	setp.neu.f64 	%p146, %fd770, %fd13;
	selp.f64 	%fd210, 0dFFF8000000000000, %fd208, %p146;
	selp.f64 	%fd797, %fd210, %fd208, %p323;
	mov.pred 	%p334, %p338;
	bra.uni 	$L__BB0_33;
$L__BB0_31:
	setp.eq.s64 	%p147, %rd4, -9223372036854775808;
	abs.f64 	%fd211, %fd13;
	setp.neu.f64 	%p148, %fd211, 0d3FE0000000000000;
	and.pred  	%p334, %p148, %p147;
	selp.b32 	%r236, %r22, 0, %p334;
	setp.lt.s32 	%p149, %r32, 0;
	or.b32  	%r237, %r236, 2146435072;
	selp.b32 	%r238, %r237, %r236, %p149;
	mov.b32 	%r239, 0;
	mov.b64 	%fd797, {%r239, %r238};
$L__BB0_33:
	add.f64 	%fd46, %fd13, %fd9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r240}, %fd46;
	}
	and.b32  	%r33, %r240, 2146435072;
	setp.ne.s32 	%p150, %r33, 2146435072;
	mov.f64 	%fd798, %fd797;
	@%p150 bra 	$L__BB0_40;
	.loc	1 0 33
	mov.f64 	%fd798, %fd46;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_40;
	abs.f64 	%fd212, %fd13;
	setp.nan.f64 	%p152, %fd212, %fd212;
	mov.f64 	%fd798, %fd46;
	@%p152 bra 	$L__BB0_40;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r241, %temp}, %fd13;
	}
	and.b32  	%r34, %r32, 2147483647;
	setp.eq.s32 	%p153, %r34, 2146435072;
	setp.eq.s32 	%p154, %r241, 0;
	and.pred  	%p155, %p153, %p154;
	@!%p155 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;
$L__BB0_37:
	setp.gt.f64 	%p162, %fd14, 0d3FF0000000000000;
	selp.b32 	%r250, 2146435072, 0, %p162;
	setp.lt.s32 	%p163, %r32, 0;
	xor.b32  	%r251, %r250, 2146435072;
	selp.b32 	%r252, %r251, %r250, %p163;
	setp.eq.s32 	%p164, %r103, -1;
	selp.b32 	%r253, 1072693248, %r252, %p164;
	mov.b32 	%r254, 0;
	mov.b64 	%fd798, {%r254, %r253};
	bra.uni 	$L__BB0_40;
$L__BB0_38:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r242, %temp}, %fd9;
	}
	and.b32  	%r243, %r22, 2147483647;
	setp.eq.s32 	%p156, %r243, 2146435072;
	setp.eq.s32 	%p157, %r242, 0;
	and.pred  	%p158, %p156, %p157;
	mov.f64 	%fd798, %fd797;
	@!%p158 bra 	$L__BB0_40;
	bra.uni 	$L__BB0_39;
$L__BB0_39:
	setp.lt.s32 	%p160, %r32, 0;
	selp.b32 	%r244, 0, 2146435072, %p160;
	setp.ne.s32 	%p161, %r34, 1071644672;
	or.b32  	%r245, %r244, -2147483648;
	selp.b32 	%r246, %r245, %r244, %p161;
	selp.b32 	%r247, %r246, %r244, %p334;
	selp.b32 	%r248, %r247, %r244, %p323;
	mov.b32 	%r249, 0;
	mov.b64 	%fd798, {%r249, %r248};
$L__BB0_40:
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd10;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd213, [retval0+0];
	} // callseq 4
	@%p71 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_41;
$L__BB0_42:
	setp.eq.s64 	%p169, %rd1, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r255, %temp}, %fd213;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r256}, %fd213;
	}
	xor.b32  	%r257, %r256, -2147483648;
	mov.b64 	%fd214, {%r255, %r257};
	selp.f64 	%fd215, %fd214, %fd213, %p169;
	selp.f64 	%fd216, %fd215, %fd213, %p323;
	setp.neu.f64 	%p170, %fd767, %fd10;
	selp.f64 	%fd218, 0dFFF8000000000000, %fd216, %p170;
	selp.f64 	%fd799, %fd218, %fd216, %p323;
	bra.uni 	$L__BB0_43;
$L__BB0_41:
	setp.eq.s64 	%p171, %rd1, -9223372036854775808;
	abs.f64 	%fd219, %fd10;
	setp.neu.f64 	%p172, %fd219, 0d3FE0000000000000;
	and.pred  	%p335, %p172, %p171;
	selp.b32 	%r258, %r22, 0, %p335;
	setp.lt.s32 	%p173, %r23, 0;
	or.b32  	%r259, %r258, 2146435072;
	selp.b32 	%r260, %r259, %r258, %p173;
	mov.b32 	%r261, 0;
	mov.b64 	%fd799, {%r261, %r260};
$L__BB0_43:
	.loc	1 0 33
	mov.f64 	%fd800, %fd799;
	.loc	1 43 33
	@%p78 bra 	$L__BB0_50;
	.loc	1 0 33
	mov.f64 	%fd800, %fd19;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_50;
	abs.f64 	%fd220, %fd10;
	setp.nan.f64 	%p176, %fd220, %fd220;
	mov.f64 	%fd800, %fd19;
	@%p176 bra 	$L__BB0_50;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r262, %temp}, %fd10;
	}
	and.b32  	%r35, %r23, 2147483647;
	setp.eq.s32 	%p177, %r35, 2146435072;
	setp.eq.s32 	%p178, %r262, 0;
	and.pred  	%p179, %p177, %p178;
	@!%p179 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_47;
$L__BB0_47:
	setp.gt.f64 	%p186, %fd14, 0d3FF0000000000000;
	selp.b32 	%r271, 2146435072, 0, %p186;
	setp.lt.s32 	%p187, %r23, 0;
	xor.b32  	%r272, %r271, 2146435072;
	selp.b32 	%r273, %r272, %r271, %p187;
	setp.eq.s32 	%p188, %r103, -1;
	selp.b32 	%r274, 1072693248, %r273, %p188;
	mov.b32 	%r275, 0;
	mov.b64 	%fd800, {%r275, %r274};
	bra.uni 	$L__BB0_50;
$L__BB0_48:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r263, %temp}, %fd9;
	}
	and.b32  	%r264, %r22, 2147483647;
	setp.eq.s32 	%p180, %r264, 2146435072;
	setp.eq.s32 	%p181, %r263, 0;
	and.pred  	%p182, %p180, %p181;
	mov.f64 	%fd800, %fd799;
	@!%p182 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_49;
$L__BB0_49:
	setp.lt.s32 	%p184, %r23, 0;
	selp.b32 	%r265, 0, 2146435072, %p184;
	setp.ne.s32 	%p185, %r35, 1071644672;
	or.b32  	%r266, %r265, -2147483648;
	selp.b32 	%r267, %r266, %r265, %p185;
	selp.b32 	%r268, %r267, %r265, %p335;
	selp.b32 	%r269, %r268, %r265, %p323;
	mov.b32 	%r270, 0;
	mov.b64 	%fd800, {%r270, %r269};
$L__BB0_50:
	{ // callseq 5, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd221, [retval0+0];
	} // callseq 5
	@%p71 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_51;
$L__BB0_52:
	setp.eq.s64 	%p190, %rd2, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r276, %temp}, %fd221;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r277}, %fd221;
	}
	xor.b32  	%r278, %r277, -2147483648;
	mov.b64 	%fd222, {%r276, %r278};
	selp.f64 	%fd223, %fd222, %fd221, %p190;
	selp.f64 	%fd224, %fd223, %fd221, %p323;
	setp.neu.f64 	%p192, %fd768, %fd11;
	selp.f64 	%fd226, 0dFFF8000000000000, %fd224, %p192;
	selp.f64 	%fd801, %fd226, %fd224, %p323;
	bra.uni 	$L__BB0_53;
$L__BB0_51:
	setp.eq.s64 	%p193, %rd2, -9223372036854775808;
	abs.f64 	%fd227, %fd11;
	setp.neu.f64 	%p194, %fd227, 0d3FE0000000000000;
	and.pred  	%p336, %p194, %p193;
	selp.b32 	%r279, %r22, 0, %p336;
	setp.lt.s32 	%p195, %r26, 0;
	or.b32  	%r280, %r279, 2146435072;
	selp.b32 	%r281, %r280, %r279, %p195;
	mov.b32 	%r282, 0;
	mov.b64 	%fd801, {%r282, %r281};
$L__BB0_53:
	.loc	1 0 33
	mov.f64 	%fd802, %fd801;
	.loc	1 43 33
	@%p102 bra 	$L__BB0_60;
	.loc	1 0 33
	mov.f64 	%fd802, %fd28;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_60;
	abs.f64 	%fd228, %fd11;
	setp.nan.f64 	%p198, %fd228, %fd228;
	mov.f64 	%fd802, %fd28;
	@%p198 bra 	$L__BB0_60;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r283, %temp}, %fd11;
	}
	and.b32  	%r36, %r26, 2147483647;
	setp.eq.s32 	%p199, %r36, 2146435072;
	setp.eq.s32 	%p200, %r283, 0;
	and.pred  	%p201, %p199, %p200;
	@!%p201 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;
$L__BB0_57:
	setp.gt.f64 	%p208, %fd14, 0d3FF0000000000000;
	selp.b32 	%r292, 2146435072, 0, %p208;
	setp.lt.s32 	%p209, %r26, 0;
	xor.b32  	%r293, %r292, 2146435072;
	selp.b32 	%r294, %r293, %r292, %p209;
	setp.eq.s32 	%p210, %r103, -1;
	selp.b32 	%r295, 1072693248, %r294, %p210;
	mov.b32 	%r296, 0;
	mov.b64 	%fd802, {%r296, %r295};
	bra.uni 	$L__BB0_60;
$L__BB0_58:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r284, %temp}, %fd9;
	}
	and.b32  	%r285, %r22, 2147483647;
	setp.eq.s32 	%p202, %r285, 2146435072;
	setp.eq.s32 	%p203, %r284, 0;
	and.pred  	%p204, %p202, %p203;
	mov.f64 	%fd802, %fd801;
	@!%p204 bra 	$L__BB0_60;
	bra.uni 	$L__BB0_59;
$L__BB0_59:
	setp.lt.s32 	%p206, %r26, 0;
	selp.b32 	%r286, 0, 2146435072, %p206;
	setp.ne.s32 	%p207, %r36, 1071644672;
	or.b32  	%r287, %r286, -2147483648;
	selp.b32 	%r288, %r287, %r286, %p207;
	selp.b32 	%r289, %r288, %r286, %p336;
	selp.b32 	%r290, %r289, %r286, %p323;
	mov.b32 	%r291, 0;
	mov.b64 	%fd802, {%r291, %r290};
$L__BB0_60:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r106, %rs1;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r107, %rs3;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r114, %rs25;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r115, %rs27;
	// end inline asm
	.loc	1 43 33
	{ // callseq 6, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd229, [retval0+0];
	} // callseq 6
	@%p71 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_61;
$L__BB0_62:
	setp.eq.s64 	%p212, %rd3, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r297, %temp}, %fd229;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r298}, %fd229;
	}
	xor.b32  	%r299, %r298, -2147483648;
	mov.b64 	%fd230, {%r297, %r299};
	selp.f64 	%fd231, %fd230, %fd229, %p212;
	selp.f64 	%fd232, %fd231, %fd229, %p323;
	setp.neu.f64 	%p214, %fd769, %fd12;
	selp.f64 	%fd234, 0dFFF8000000000000, %fd232, %p214;
	selp.f64 	%fd803, %fd234, %fd232, %p323;
	bra.uni 	$L__BB0_63;
$L__BB0_61:
	setp.eq.s64 	%p215, %rd3, -9223372036854775808;
	abs.f64 	%fd235, %fd12;
	setp.neu.f64 	%p216, %fd235, 0d3FE0000000000000;
	and.pred  	%p337, %p216, %p215;
	selp.b32 	%r300, %r22, 0, %p337;
	setp.lt.s32 	%p217, %r29, 0;
	or.b32  	%r301, %r300, 2146435072;
	selp.b32 	%r302, %r301, %r300, %p217;
	mov.b32 	%r303, 0;
	mov.b64 	%fd803, {%r303, %r302};
$L__BB0_63:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r108, %rs5;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r116, %rs29;
	// end inline asm
	mov.b32 	%f1, %r106;
	mov.b32 	%f2, %r107;
	mov.b32 	%f9, %r114;
	mov.b32 	%f10, %r115;
	setp.eq.s32 	%p94, %r103, 1;
	setp.eq.f64 	%p95, %fd10, 0d0000000000000000;
	setp.eq.f64 	%p119, %fd11, 0d0000000000000000;
	.loc	1 43 33
	setp.eq.f64 	%p143, %fd12, 0d0000000000000000;
	setp.eq.f64 	%p167, %fd13, 0d0000000000000000;
	mov.f64 	%fd804, %fd803;
	@%p126 bra 	$L__BB0_70;
	.loc	1 0 33
	mov.f64 	%fd804, %fd37;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_70;
	abs.f64 	%fd236, %fd12;
	setp.nan.f64 	%p220, %fd236, %fd236;
	mov.f64 	%fd804, %fd37;
	@%p220 bra 	$L__BB0_70;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r304, %temp}, %fd12;
	}
	and.b32  	%r37, %r29, 2147483647;
	setp.eq.s32 	%p221, %r37, 2146435072;
	setp.eq.s32 	%p222, %r304, 0;
	and.pred  	%p223, %p221, %p222;
	@!%p223 bra 	$L__BB0_68;
	bra.uni 	$L__BB0_67;
$L__BB0_67:
	setp.gt.f64 	%p230, %fd14, 0d3FF0000000000000;
	selp.b32 	%r313, 2146435072, 0, %p230;
	setp.lt.s32 	%p231, %r29, 0;
	xor.b32  	%r314, %r313, 2146435072;
	selp.b32 	%r315, %r314, %r313, %p231;
	setp.eq.s32 	%p232, %r103, -1;
	selp.b32 	%r316, 1072693248, %r315, %p232;
	mov.b32 	%r317, 0;
	mov.b64 	%fd804, {%r317, %r316};
	bra.uni 	$L__BB0_70;
$L__BB0_68:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r305, %temp}, %fd9;
	}
	and.b32  	%r306, %r22, 2147483647;
	setp.eq.s32 	%p224, %r306, 2146435072;
	setp.eq.s32 	%p225, %r305, 0;
	and.pred  	%p226, %p224, %p225;
	mov.f64 	%fd804, %fd803;
	@!%p226 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_69;
$L__BB0_69:
	setp.lt.s32 	%p228, %r29, 0;
	selp.b32 	%r307, 0, 2146435072, %p228;
	setp.ne.s32 	%p229, %r37, 1071644672;
	or.b32  	%r308, %r307, -2147483648;
	selp.b32 	%r309, %r308, %r307, %p229;
	selp.b32 	%r310, %r309, %r307, %p337;
	selp.b32 	%r311, %r310, %r307, %p323;
	mov.b32 	%r312, 0;
	mov.b64 	%fd804, {%r312, %r311};
$L__BB0_70:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r109, %rs7;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r117, %rs31;
	// end inline asm
	mov.b32 	%f3, %r108;
	mov.b32 	%f11, %r116;
	selp.f32 	%f17, %f1, %f9, %p67;
	selp.f32 	%f18, %f2, %f10, %p67;
	or.pred  	%p4, %p94, %p95;
	or.pred  	%p8, %p94, %p119;
	.loc	1 43 33
	or.pred  	%p12, %p94, %p143;
	or.pred  	%p16, %p94, %p167;
	{ // callseq 7, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd13;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd237, [retval0+0];
	} // callseq 7
	@%p71 bra 	$L__BB0_72;
	bra.uni 	$L__BB0_71;
$L__BB0_72:
	setp.eq.s64 	%p234, %rd4, -9223372036854775808;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r318, %temp}, %fd237;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r319}, %fd237;
	}
	xor.b32  	%r320, %r319, -2147483648;
	mov.b64 	%fd238, {%r318, %r320};
	selp.f64 	%fd239, %fd238, %fd237, %p234;
	selp.f64 	%fd240, %fd239, %fd237, %p323;
	setp.neu.f64 	%p236, %fd770, %fd13;
	selp.f64 	%fd242, 0dFFF8000000000000, %fd240, %p236;
	selp.f64 	%fd805, %fd242, %fd240, %p323;
	bra.uni 	$L__BB0_73;
$L__BB0_71:
	setp.eq.s64 	%p237, %rd4, -9223372036854775808;
	abs.f64 	%fd243, %fd13;
	setp.neu.f64 	%p238, %fd243, 0d3FE0000000000000;
	and.pred  	%p338, %p238, %p237;
	selp.b32 	%r321, %r22, 0, %p338;
	setp.lt.s32 	%p239, %r32, 0;
	or.b32  	%r322, %r321, 2146435072;
	selp.b32 	%r323, %r322, %r321, %p239;
	mov.b32 	%r324, 0;
	mov.b64 	%fd805, {%r324, %r323};
$L__BB0_73:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r110, %rs9;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r118, %rs33;
	// end inline asm
	mov.b32 	%f4, %r109;
	mov.b32 	%f12, %r117;
	selp.f32 	%f19, %f3, %f11, %p67;
	add.u64 	%rd25, %SP, 0;
	cvt.f64.f32 	%fd1, %f17;
	cvt.f64.f32 	%fd2, %f18;
	.loc	1 43 33
	selp.f64 	%fd23, 0d3FF0000000000000, %fd792, %p4;
	selp.f64 	%fd32, 0d3FF0000000000000, %fd794, %p8;
	selp.f64 	%fd41, 0d3FF0000000000000, %fd796, %p12;
	selp.f64 	%fd50, 0d3FF0000000000000, %fd798, %p16;
	selp.f64 	%fd58, 0d3FF0000000000000, %fd800, %p4;
	mov.f64 	%fd806, %fd805;
	@%p150 bra 	$L__BB0_80;
	.loc	1 0 33
	mov.f64 	%fd806, %fd46;
	.loc	1 43 33
	@%p330 bra 	$L__BB0_80;
	abs.f64 	%fd244, %fd13;
	setp.nan.f64 	%p242, %fd244, %fd244;
	mov.f64 	%fd806, %fd46;
	@%p242 bra 	$L__BB0_80;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r325, %temp}, %fd13;
	}
	and.b32  	%r38, %r32, 2147483647;
	setp.eq.s32 	%p243, %r38, 2146435072;
	setp.eq.s32 	%p244, %r325, 0;
	and.pred  	%p245, %p243, %p244;
	@!%p245 bra 	$L__BB0_78;
	bra.uni 	$L__BB0_77;
$L__BB0_77:
	setp.gt.f64 	%p252, %fd14, 0d3FF0000000000000;
	selp.b32 	%r334, 2146435072, 0, %p252;
	setp.lt.s32 	%p253, %r32, 0;
	xor.b32  	%r335, %r334, 2146435072;
	selp.b32 	%r336, %r335, %r334, %p253;
	setp.eq.s32 	%p254, %r103, -1;
	selp.b32 	%r337, 1072693248, %r336, %p254;
	mov.b32 	%r338, 0;
	mov.b64 	%fd806, {%r338, %r337};
	bra.uni 	$L__BB0_80;
$L__BB0_78:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r326, %temp}, %fd9;
	}
	and.b32  	%r327, %r22, 2147483647;
	setp.eq.s32 	%p246, %r327, 2146435072;
	setp.eq.s32 	%p247, %r326, 0;
	and.pred  	%p248, %p246, %p247;
	mov.f64 	%fd806, %fd805;
	@!%p248 bra 	$L__BB0_80;
	bra.uni 	$L__BB0_79;
$L__BB0_79:
	setp.lt.s32 	%p250, %r32, 0;
	selp.b32 	%r328, 0, 2146435072, %p250;
	setp.ne.s32 	%p251, %r38, 1071644672;
	or.b32  	%r329, %r328, -2147483648;
	selp.b32 	%r330, %r329, %r328, %p251;
	selp.b32 	%r331, %r330, %r328, %p338;
	selp.b32 	%r332, %r331, %r328, %p323;
	mov.b32 	%r333, 0;
	mov.b64 	%fd806, {%r333, %r332};
$L__BB0_80:
	.loc	1 0 33
	// begin inline asm
	cvt.f32.bf16 %r111, %rs11;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r119, %rs35;
	// end inline asm
	selp.f64 	%fd66, 0d3FF0000000000000, %fd802, %p8;
	mov.b32 	%f5, %r110;
	mov.b32 	%f13, %r118;
	selp.f32 	%f20, %f4, %f12, %p67;
	cvt.f64.f32 	%fd3, %f19;
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd25;
	  cvt.u32.u64 	%r1, %tmp; }
	.loc	1 45 20
	mov.b64 	%rd51, %fd23;
	mov.u64 	%rd68, 4607182418800017408;
	// begin inline asm
	div.rn.f64 %rd49, %rd68, %rd51;
	// end inline asm
	mov.b64 	%fd246, %rd49;
	mov.b64 	%rd54, %fd32;
	// begin inline asm
	div.rn.f64 %rd52, %rd68, %rd54;
	// end inline asm
	mov.b64 	%fd247, %rd52;
	mov.b64 	%rd57, %fd41;
	// begin inline asm
	div.rn.f64 %rd55, %rd68, %rd57;
	// end inline asm
	mov.b64 	%fd248, %rd55;
	mov.b64 	%rd60, %fd50;
	// begin inline asm
	div.rn.f64 %rd58, %rd68, %rd60;
	// end inline asm
	mov.b64 	%rd63, %fd58;
	.loc	1 49 20
	mul.f64 	%fd82, %fd246, %fd1;
	mul.f64 	%fd83, %fd247, %fd2;
	.loc	1 50 26
	{
	.reg .b32 %temp; 
	mov.b64 	{%r339, %temp}, %fd82;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r340}, %fd82;
	}
	and.b32  	%r341, %r340, 2147483647;
	setp.eq.s32 	%p255, %r341, 2146435072;
	setp.eq.s32 	%p256, %r339, 0;
	and.pred  	%p25, %p255, %p256;
	mov.f64 	%fd771, 0d3FF921FB54442D18;
	mov.f64 	%fd772, 0d3C91A62633145C00;
	mov.f64 	%fd773, 0d397B839A252049C0;
	abs.f64 	%fd774, %fd82;
	mul.f64 	%fd775, %fd82, 0d3FE45F306DC9C883;
	mov.f64 	%fd790, 0d0000000000000000;
	@%p25 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_81;
$L__BB0_137:
	mul.rn.f64 	%fd808, %fd82, %fd790;
	mov.b32 	%r478, 1;
	bra.uni 	$L__BB0_84;
$L__BB0_81:
	cvt.rni.s32.f64 	%r477, %fd775;
	st.local.u32 	[%r1], %r477;
	cvt.rn.f64.s32 	%fd256, %r477;
	neg.f64 	%fd257, %fd256;
	fma.rn.f64 	%fd259, %fd257, %fd771, %fd82;
	fma.rn.f64 	%fd261, %fd257, %fd772, %fd259;
	fma.rn.f64 	%fd808, %fd257, %fd773, %fd261;
	setp.ltu.f64 	%p257, %fd774, 0d41E0000000000000;
	@%p257 bra 	$L__BB0_83;
	{ // callseq 8, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd82;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd808, [retval0+0];
	} // callseq 8
	ld.local.u32 	%r477, [%r1];
$L__BB0_83:
	add.s32 	%r478, %r477, 1;
$L__BB0_84:
	.loc	1 0 26
	// begin inline asm
	cvt.f32.bf16 %r112, %rs13;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r120, %rs37;
	// end inline asm
	selp.f64 	%fd74, 0d3FF0000000000000, %fd804, %p12;
	mov.b32 	%f6, %r111;
	mov.b32 	%f14, %r119;
	mov.b64 	%rd66, %fd66;
	selp.f32 	%f21, %f5, %f13, %p68;
	// begin inline asm
	div.rn.f64 %rd61, %rd68, %rd63;
	// end inline asm
	cvt.f64.f32 	%fd4, %f20;
	mov.b64 	%fd249, %rd58;
	mul.f64 	%fd84, %fd248, %fd3;
	.loc	1 50 26
	and.b32  	%r343, %r478, 1;
	shl.b32 	%r344, %r343, 3;
	mul.wide.u32 	%rd74, %r344, 8;
	mov.u64 	%rd75, __cudart_sin_cos_coeffs;
	add.s64 	%rd76, %rd75, %rd74;
	ld.global.nc.f64 	%fd267, [%rd76+8];
	ld.global.nc.f64 	%fd269, [%rd76+16];
	ld.global.nc.f64 	%fd271, [%rd76+24];
	ld.global.nc.f64 	%fd273, [%rd76+32];
	ld.global.nc.f64 	%fd275, [%rd76+40];
	ld.global.nc.f64 	%fd277, [%rd76+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r346, %temp}, %fd83;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r347}, %fd83;
	}
	and.b32  	%r348, %r347, 2147483647;
	setp.eq.s32 	%p260, %r348, 2146435072;
	setp.eq.s32 	%p261, %r346, 0;
	and.pred  	%p26, %p260, %p261;
	abs.f64 	%fd776, %fd83;
	mul.f64 	%fd777, %fd83, 0d3FE45F306DC9C883;
	@%p26 bra 	$L__BB0_138;
	bra.uni 	$L__BB0_85;
$L__BB0_138:
	mul.rn.f64 	%fd810, %fd83, %fd790;
	mov.b32 	%r480, 1;
	bra.uni 	$L__BB0_88;
$L__BB0_85:
	cvt.rni.s32.f64 	%r479, %fd777;
	st.local.u32 	[%r1], %r479;
	cvt.rn.f64.s32 	%fd288, %r479;
	neg.f64 	%fd289, %fd288;
	fma.rn.f64 	%fd291, %fd289, %fd771, %fd83;
	fma.rn.f64 	%fd293, %fd289, %fd772, %fd291;
	fma.rn.f64 	%fd810, %fd289, %fd773, %fd293;
	setp.ltu.f64 	%p262, %fd776, 0d41E0000000000000;
	@%p262 bra 	$L__BB0_87;
	{ // callseq 9, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd83;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd810, [retval0+0];
	} // callseq 9
	ld.local.u32 	%r479, [%r1];
$L__BB0_87:
	add.s32 	%r480, %r479, 1;
$L__BB0_88:
	.loc	1 0 26
	// begin inline asm
	cvt.f32.bf16 %r113, %rs15;
	// end inline asm
	// begin inline asm
	cvt.f32.bf16 %r121, %rs39;
	// end inline asm
	selp.f64 	%fd245, 0d3FF0000000000000, %fd806, %p16;
	mov.b32 	%f7, %r112;
	mov.b32 	%f15, %r120;
	mov.b64 	%rd69, %fd74;
	selp.f32 	%f22, %f6, %f14, %p68;
	// begin inline asm
	div.rn.f64 %rd64, %rd68, %rd66;
	// end inline asm
	cvt.f64.f32 	%fd5, %f21;
	mov.b64 	%fd250, %rd61;
	mul.f64 	%fd85, %fd249, %fd4;
	.loc	1 50 26
	and.b32  	%r350, %r480, 1;
	shl.b32 	%r351, %r350, 3;
	mul.wide.u32 	%rd78, %r351, 8;
	add.s64 	%rd80, %rd75, %rd78;
	ld.global.nc.f64 	%fd299, [%rd80+8];
	ld.global.nc.f64 	%fd301, [%rd80+16];
	ld.global.nc.f64 	%fd303, [%rd80+24];
	ld.global.nc.f64 	%fd305, [%rd80+32];
	ld.global.nc.f64 	%fd307, [%rd80+40];
	ld.global.nc.f64 	%fd309, [%rd80+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r353, %temp}, %fd84;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r354}, %fd84;
	}
	and.b32  	%r355, %r354, 2147483647;
	setp.eq.s32 	%p265, %r355, 2146435072;
	setp.eq.s32 	%p266, %r353, 0;
	and.pred  	%p27, %p265, %p266;
	abs.f64 	%fd778, %fd84;
	mul.f64 	%fd779, %fd84, 0d3FE45F306DC9C883;
	@%p27 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_89;
$L__BB0_139:
	mul.rn.f64 	%fd812, %fd84, %fd790;
	mov.b32 	%r482, 1;
	bra.uni 	$L__BB0_92;
$L__BB0_89:
	cvt.rni.s32.f64 	%r481, %fd779;
	st.local.u32 	[%r1], %r481;
	cvt.rn.f64.s32 	%fd320, %r481;
	neg.f64 	%fd321, %fd320;
	fma.rn.f64 	%fd323, %fd321, %fd771, %fd84;
	fma.rn.f64 	%fd325, %fd321, %fd772, %fd323;
	fma.rn.f64 	%fd812, %fd321, %fd773, %fd325;
	setp.ltu.f64 	%p267, %fd778, 0d41E0000000000000;
	@%p267 bra 	$L__BB0_91;
	{ // callseq 10, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd84;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd812, [retval0+0];
	} // callseq 10
	ld.local.u32 	%r481, [%r1];
$L__BB0_91:
	add.s32 	%r482, %r481, 1;
$L__BB0_92:
	.loc	1 0 26
	mov.b32 	%f8, %r113;
	mov.b32 	%f16, %r121;
	mov.b64 	%rd72, %fd245;
	selp.f32 	%f23, %f7, %f15, %p68;
	// begin inline asm
	div.rn.f64 %rd67, %rd68, %rd69;
	// end inline asm
	cvt.f64.f32 	%fd6, %f22;
	mov.b64 	%fd251, %rd64;
	mul.f64 	%fd86, %fd250, %fd5;
	.loc	1 50 26
	and.b32  	%r357, %r482, 1;
	shl.b32 	%r358, %r357, 3;
	mul.wide.u32 	%rd82, %r358, 8;
	add.s64 	%rd84, %rd75, %rd82;
	ld.global.nc.f64 	%fd331, [%rd84+8];
	ld.global.nc.f64 	%fd333, [%rd84+16];
	ld.global.nc.f64 	%fd335, [%rd84+24];
	ld.global.nc.f64 	%fd337, [%rd84+32];
	ld.global.nc.f64 	%fd339, [%rd84+40];
	ld.global.nc.f64 	%fd341, [%rd84+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r360, %temp}, %fd85;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r361}, %fd85;
	}
	and.b32  	%r362, %r361, 2147483647;
	setp.eq.s32 	%p270, %r362, 2146435072;
	setp.eq.s32 	%p271, %r360, 0;
	and.pred  	%p28, %p270, %p271;
	abs.f64 	%fd780, %fd85;
	mul.f64 	%fd781, %fd85, 0d3FE45F306DC9C883;
	@%p28 bra 	$L__BB0_140;
	bra.uni 	$L__BB0_93;
$L__BB0_140:
	mul.rn.f64 	%fd814, %fd85, %fd790;
	mov.b32 	%r484, 1;
	bra.uni 	$L__BB0_96;
$L__BB0_93:
	cvt.rni.s32.f64 	%r483, %fd781;
	st.local.u32 	[%r1], %r483;
	cvt.rn.f64.s32 	%fd352, %r483;
	neg.f64 	%fd353, %fd352;
	fma.rn.f64 	%fd355, %fd353, %fd771, %fd85;
	fma.rn.f64 	%fd357, %fd353, %fd772, %fd355;
	fma.rn.f64 	%fd814, %fd353, %fd773, %fd357;
	setp.ltu.f64 	%p272, %fd780, 0d41E0000000000000;
	@%p272 bra 	$L__BB0_95;
	{ // callseq 11, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd814, [retval0+0];
	} // callseq 11
	ld.local.u32 	%r483, [%r1];
$L__BB0_95:
	add.s32 	%r484, %r483, 1;
$L__BB0_96:
	.loc	1 0 26
	setp.eq.s32 	%p258, %r343, 0;
	setp.eq.s32 	%p263, %r350, 0;
	setp.eq.s32 	%p268, %r357, 0;
	selp.f32 	%f24, %f8, %f16, %p68;
	// begin inline asm
	div.rn.f64 %rd70, %rd68, %rd72;
	// end inline asm
	cvt.f64.f32 	%fd7, %f23;
	mov.b64 	%fd252, %rd67;
	mul.f64 	%fd87, %fd251, %fd6;
	.loc	1 50 26
	and.b32  	%r364, %r484, 1;
	shl.b32 	%r365, %r364, 3;
	mul.wide.u32 	%rd86, %r365, 8;
	add.s64 	%rd88, %rd75, %rd86;
	setp.eq.s32 	%p273, %r364, 0;
	ld.global.nc.f64 	%fd363, [%rd88+8];
	ld.global.nc.f64 	%fd365, [%rd88+16];
	ld.global.nc.f64 	%fd367, [%rd88+24];
	ld.global.nc.f64 	%fd369, [%rd88+32];
	ld.global.nc.f64 	%fd371, [%rd88+40];
	ld.global.nc.f64 	%fd373, [%rd88+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r367, %temp}, %fd86;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r368}, %fd86;
	}
	and.b32  	%r369, %r368, 2147483647;
	setp.eq.s32 	%p275, %r369, 2146435072;
	setp.eq.s32 	%p276, %r367, 0;
	and.pred  	%p29, %p275, %p276;
	abs.f64 	%fd782, %fd86;
	mul.f64 	%fd783, %fd86, 0d3FE45F306DC9C883;
	@%p29 bra 	$L__BB0_141;
	bra.uni 	$L__BB0_97;
$L__BB0_141:
	mul.rn.f64 	%fd816, %fd86, %fd790;
	mov.b32 	%r486, 1;
	bra.uni 	$L__BB0_100;
$L__BB0_97:
	cvt.rni.s32.f64 	%r485, %fd783;
	st.local.u32 	[%r1], %r485;
	cvt.rn.f64.s32 	%fd384, %r485;
	neg.f64 	%fd385, %fd384;
	fma.rn.f64 	%fd387, %fd385, %fd771, %fd86;
	fma.rn.f64 	%fd389, %fd385, %fd772, %fd387;
	fma.rn.f64 	%fd816, %fd385, %fd773, %fd389;
	setp.ltu.f64 	%p277, %fd782, 0d41E0000000000000;
	@%p277 bra 	$L__BB0_99;
	{ // callseq 12, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd86;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd816, [retval0+0];
	} // callseq 12
	ld.local.u32 	%r485, [%r1];
$L__BB0_99:
	add.s32 	%r486, %r485, 1;
$L__BB0_100:
	.loc	1 0 26
	mul.rn.f64 	%fd265, %fd808, %fd808;
	selp.f64 	%fd266, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p258;
	mul.rn.f64 	%fd297, %fd810, %fd810;
	selp.f64 	%fd298, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p263;
	mul.rn.f64 	%fd329, %fd812, %fd812;
	selp.f64 	%fd330, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p268;
	mul.rn.f64 	%fd361, %fd814, %fd814;
	selp.f64 	%fd362, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p273;
	cvt.f64.f32 	%fd8, %f24;
	mov.b64 	%fd253, %rd70;
	mul.f64 	%fd88, %fd252, %fd7;
	.loc	1 50 26
	and.b32  	%r371, %r486, 1;
	shl.b32 	%r372, %r371, 3;
	mul.wide.u32 	%rd90, %r372, 8;
	add.s64 	%rd92, %rd75, %rd90;
	mul.rn.f64 	%fd393, %fd816, %fd816;
	setp.eq.s32 	%p278, %r371, 0;
	selp.f64 	%fd394, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p278;
	ld.global.nc.f64 	%fd395, [%rd92+8];
	ld.global.nc.f64 	%fd397, [%rd92+16];
	ld.global.nc.f64 	%fd399, [%rd92+24];
	ld.global.nc.f64 	%fd401, [%rd92+32];
	ld.global.nc.f64 	%fd403, [%rd92+40];
	ld.global.nc.f64 	%fd405, [%rd92+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r374, %temp}, %fd87;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r375}, %fd87;
	}
	and.b32  	%r376, %r375, 2147483647;
	setp.eq.s32 	%p280, %r376, 2146435072;
	setp.eq.s32 	%p281, %r374, 0;
	and.pred  	%p30, %p280, %p281;
	abs.f64 	%fd784, %fd87;
	mul.f64 	%fd785, %fd87, 0d3FE45F306DC9C883;
	@%p30 bra 	$L__BB0_142;
	bra.uni 	$L__BB0_101;
$L__BB0_142:
	mul.rn.f64 	%fd818, %fd87, %fd790;
	mov.b32 	%r488, 1;
	bra.uni 	$L__BB0_104;
$L__BB0_101:
	cvt.rni.s32.f64 	%r487, %fd785;
	st.local.u32 	[%r1], %r487;
	cvt.rn.f64.s32 	%fd416, %r487;
	neg.f64 	%fd417, %fd416;
	fma.rn.f64 	%fd419, %fd417, %fd771, %fd87;
	fma.rn.f64 	%fd421, %fd417, %fd772, %fd419;
	fma.rn.f64 	%fd818, %fd417, %fd773, %fd421;
	setp.ltu.f64 	%p282, %fd784, 0d41E0000000000000;
	@%p282 bra 	$L__BB0_103;
	{ // callseq 13, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd87;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd818, [retval0+0];
	} // callseq 13
	ld.local.u32 	%r487, [%r1];
$L__BB0_103:
	add.s32 	%r488, %r487, 1;
$L__BB0_104:
	.loc	1 0 26
	fma.rn.f64 	%fd268, %fd266, %fd265, %fd267;
	fma.rn.f64 	%fd300, %fd298, %fd297, %fd299;
	fma.rn.f64 	%fd332, %fd330, %fd329, %fd331;
	fma.rn.f64 	%fd364, %fd362, %fd361, %fd363;
	fma.rn.f64 	%fd396, %fd394, %fd393, %fd395;
	mul.f64 	%fd89, %fd253, %fd8;
	.loc	1 50 26
	and.b32  	%r378, %r488, 1;
	shl.b32 	%r379, %r378, 3;
	mul.wide.u32 	%rd94, %r379, 8;
	add.s64 	%rd96, %rd75, %rd94;
	mul.rn.f64 	%fd425, %fd818, %fd818;
	setp.eq.s32 	%p283, %r378, 0;
	selp.f64 	%fd426, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p283;
	ld.global.nc.f64 	%fd427, [%rd96+8];
	fma.rn.f64 	%fd428, %fd426, %fd425, %fd427;
	ld.global.nc.f64 	%fd429, [%rd96+16];
	ld.global.nc.f64 	%fd431, [%rd96+24];
	ld.global.nc.f64 	%fd433, [%rd96+32];
	ld.global.nc.f64 	%fd435, [%rd96+40];
	ld.global.nc.f64 	%fd437, [%rd96+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r381, %temp}, %fd88;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r382}, %fd88;
	}
	and.b32  	%r383, %r382, 2147483647;
	setp.eq.s32 	%p285, %r383, 2146435072;
	setp.eq.s32 	%p286, %r381, 0;
	and.pred  	%p31, %p285, %p286;
	abs.f64 	%fd786, %fd88;
	mul.f64 	%fd787, %fd88, 0d3FE45F306DC9C883;
	@%p31 bra 	$L__BB0_143;
	bra.uni 	$L__BB0_105;
$L__BB0_143:
	mul.rn.f64 	%fd820, %fd88, %fd790;
	mov.b32 	%r490, 1;
	bra.uni 	$L__BB0_108;
$L__BB0_105:
	cvt.rni.s32.f64 	%r489, %fd787;
	st.local.u32 	[%r1], %r489;
	cvt.rn.f64.s32 	%fd448, %r489;
	neg.f64 	%fd449, %fd448;
	fma.rn.f64 	%fd451, %fd449, %fd771, %fd88;
	fma.rn.f64 	%fd453, %fd449, %fd772, %fd451;
	fma.rn.f64 	%fd820, %fd449, %fd773, %fd453;
	setp.ltu.f64 	%p287, %fd786, 0d41E0000000000000;
	@%p287 bra 	$L__BB0_107;
	{ // callseq 14, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd88;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd820, [retval0+0];
	} // callseq 14
	ld.local.u32 	%r489, [%r1];
$L__BB0_107:
	add.s32 	%r490, %r489, 1;
$L__BB0_108:
	.loc	1 0 26
	fma.rn.f64 	%fd270, %fd268, %fd265, %fd269;
	fma.rn.f64 	%fd302, %fd300, %fd297, %fd301;
	fma.rn.f64 	%fd334, %fd332, %fd329, %fd333;
	fma.rn.f64 	%fd366, %fd364, %fd361, %fd365;
	fma.rn.f64 	%fd398, %fd396, %fd393, %fd397;
	.loc	1 50 26
	fma.rn.f64 	%fd430, %fd428, %fd425, %fd429;
	and.b32  	%r385, %r490, 1;
	shl.b32 	%r386, %r385, 3;
	mul.wide.u32 	%rd98, %r386, 8;
	add.s64 	%rd100, %rd75, %rd98;
	mul.rn.f64 	%fd457, %fd820, %fd820;
	setp.eq.s32 	%p288, %r385, 0;
	selp.f64 	%fd458, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p288;
	ld.global.nc.f64 	%fd459, [%rd100+8];
	fma.rn.f64 	%fd460, %fd458, %fd457, %fd459;
	ld.global.nc.f64 	%fd461, [%rd100+16];
	fma.rn.f64 	%fd462, %fd460, %fd457, %fd461;
	ld.global.nc.f64 	%fd463, [%rd100+24];
	ld.global.nc.f64 	%fd465, [%rd100+32];
	ld.global.nc.f64 	%fd467, [%rd100+40];
	ld.global.nc.f64 	%fd469, [%rd100+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r388, %temp}, %fd89;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r389}, %fd89;
	}
	and.b32  	%r390, %r389, 2147483647;
	setp.eq.s32 	%p290, %r390, 2146435072;
	setp.eq.s32 	%p291, %r388, 0;
	and.pred  	%p32, %p290, %p291;
	abs.f64 	%fd788, %fd89;
	mul.f64 	%fd789, %fd89, 0d3FE45F306DC9C883;
	@%p32 bra 	$L__BB0_144;
	bra.uni 	$L__BB0_109;
$L__BB0_144:
	.loc	1 0 26
	mov.b32 	%r492, 1;
	.loc	1 50 26
	mul.rn.f64 	%fd822, %fd89, %fd790;
	bra.uni 	$L__BB0_112;
$L__BB0_109:
	cvt.rni.s32.f64 	%r491, %fd789;
	st.local.u32 	[%r1], %r491;
	cvt.rn.f64.s32 	%fd480, %r491;
	neg.f64 	%fd481, %fd480;
	fma.rn.f64 	%fd483, %fd481, %fd771, %fd89;
	fma.rn.f64 	%fd485, %fd481, %fd772, %fd483;
	fma.rn.f64 	%fd822, %fd481, %fd773, %fd485;
	setp.ltu.f64 	%p292, %fd788, 0d41E0000000000000;
	@%p292 bra 	$L__BB0_111;
	{ // callseq 15, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd89;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd822, [retval0+0];
	} // callseq 15
	ld.local.u32 	%r491, [%r1];
$L__BB0_111:
	add.s32 	%r492, %r491, 1;
$L__BB0_112:
	.loc	1 0 26
	fma.rn.f64 	%fd272, %fd270, %fd265, %fd271;
	fma.rn.f64 	%fd304, %fd302, %fd297, %fd303;
	fma.rn.f64 	%fd336, %fd334, %fd329, %fd335;
	fma.rn.f64 	%fd368, %fd366, %fd361, %fd367;
	fma.rn.f64 	%fd400, %fd398, %fd393, %fd399;
	.loc	1 50 26
	fma.rn.f64 	%fd432, %fd430, %fd425, %fd431;
	fma.rn.f64 	%fd464, %fd462, %fd457, %fd463;
	and.b32  	%r392, %r492, 1;
	shl.b32 	%r393, %r392, 3;
	mul.wide.u32 	%rd102, %r393, 8;
	add.s64 	%rd104, %rd75, %rd102;
	mul.rn.f64 	%fd489, %fd822, %fd822;
	setp.eq.s32 	%p293, %r392, 0;
	selp.f64 	%fd490, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p293;
	ld.global.nc.f64 	%fd491, [%rd104+8];
	fma.rn.f64 	%fd492, %fd490, %fd489, %fd491;
	ld.global.nc.f64 	%fd493, [%rd104+16];
	fma.rn.f64 	%fd494, %fd492, %fd489, %fd493;
	ld.global.nc.f64 	%fd495, [%rd104+24];
	fma.rn.f64 	%fd496, %fd494, %fd489, %fd495;
	ld.global.nc.f64 	%fd497, [%rd104+32];
	ld.global.nc.f64 	%fd499, [%rd104+40];
	ld.global.nc.f64 	%fd501, [%rd104+48];
	.loc	1 52 26
	@%p25 bra 	$L__BB0_145;
	bra.uni 	$L__BB0_113;
$L__BB0_145:
	mul.rn.f64 	%fd823, %fd82, %fd790;
	mov.b32 	%r493, 0;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	cvt.rni.s32.f64 	%r493, %fd775;
	st.local.u32 	[%r1], %r493;
	cvt.rn.f64.s32 	%fd512, %r493;
	neg.f64 	%fd513, %fd512;
	fma.rn.f64 	%fd515, %fd513, %fd771, %fd82;
	fma.rn.f64 	%fd517, %fd513, %fd772, %fd515;
	fma.rn.f64 	%fd823, %fd513, %fd773, %fd517;
	setp.ltu.f64 	%p295, %fd774, 0d41E0000000000000;
	@%p295 bra 	$L__BB0_115;
	{ // callseq 16, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd82;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd823, [retval0+0];
	} // callseq 16
	ld.local.u32 	%r493, [%r1];
$L__BB0_115:
	.loc	1 0 26
	fma.rn.f64 	%fd274, %fd272, %fd265, %fd273;
	fma.rn.f64 	%fd306, %fd304, %fd297, %fd305;
	fma.rn.f64 	%fd338, %fd336, %fd329, %fd337;
	fma.rn.f64 	%fd370, %fd368, %fd361, %fd369;
	fma.rn.f64 	%fd402, %fd400, %fd393, %fd401;
	fma.rn.f64 	%fd434, %fd432, %fd425, %fd433;
	fma.rn.f64 	%fd466, %fd464, %fd457, %fd465;
	fma.rn.f64 	%fd498, %fd496, %fd489, %fd497;
	.loc	1 52 26
	and.b32  	%r396, %r493, 1;
	shl.b32 	%r397, %r396, 3;
	mul.wide.u32 	%rd106, %r397, 8;
	add.s64 	%rd108, %rd75, %rd106;
	mul.rn.f64 	%fd521, %fd823, %fd823;
	setp.eq.s32 	%p296, %r396, 0;
	selp.f64 	%fd522, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p296;
	ld.global.nc.f64 	%fd523, [%rd108+8];
	fma.rn.f64 	%fd524, %fd522, %fd521, %fd523;
	ld.global.nc.f64 	%fd525, [%rd108+16];
	fma.rn.f64 	%fd526, %fd524, %fd521, %fd525;
	ld.global.nc.f64 	%fd527, [%rd108+24];
	fma.rn.f64 	%fd528, %fd526, %fd521, %fd527;
	ld.global.nc.f64 	%fd529, [%rd108+32];
	fma.rn.f64 	%fd530, %fd528, %fd521, %fd529;
	ld.global.nc.f64 	%fd531, [%rd108+40];
	ld.global.nc.f64 	%fd533, [%rd108+48];
	@%p26 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_116;
$L__BB0_146:
	mul.rn.f64 	%fd824, %fd83, %fd790;
	mov.b32 	%r494, 0;
	bra.uni 	$L__BB0_118;
$L__BB0_116:
	cvt.rni.s32.f64 	%r494, %fd777;
	st.local.u32 	[%r1], %r494;
	cvt.rn.f64.s32 	%fd544, %r494;
	neg.f64 	%fd545, %fd544;
	fma.rn.f64 	%fd547, %fd545, %fd771, %fd83;
	fma.rn.f64 	%fd549, %fd545, %fd772, %fd547;
	fma.rn.f64 	%fd824, %fd545, %fd773, %fd549;
	setp.ltu.f64 	%p298, %fd776, 0d41E0000000000000;
	@%p298 bra 	$L__BB0_118;
	{ // callseq 17, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd83;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd824, [retval0+0];
	} // callseq 17
	ld.local.u32 	%r494, [%r1];
$L__BB0_118:
	.loc	1 0 26
	fma.rn.f64 	%fd276, %fd274, %fd265, %fd275;
	fma.rn.f64 	%fd308, %fd306, %fd297, %fd307;
	fma.rn.f64 	%fd340, %fd338, %fd329, %fd339;
	fma.rn.f64 	%fd372, %fd370, %fd361, %fd371;
	fma.rn.f64 	%fd404, %fd402, %fd393, %fd403;
	fma.rn.f64 	%fd436, %fd434, %fd425, %fd435;
	fma.rn.f64 	%fd468, %fd466, %fd457, %fd467;
	fma.rn.f64 	%fd500, %fd498, %fd489, %fd499;
	.loc	1 52 26
	fma.rn.f64 	%fd532, %fd530, %fd521, %fd531;
	and.b32  	%r400, %r494, 1;
	shl.b32 	%r401, %r400, 3;
	mul.wide.u32 	%rd110, %r401, 8;
	add.s64 	%rd112, %rd75, %rd110;
	mul.rn.f64 	%fd553, %fd824, %fd824;
	setp.eq.s32 	%p299, %r400, 0;
	selp.f64 	%fd554, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p299;
	ld.global.nc.f64 	%fd555, [%rd112+8];
	fma.rn.f64 	%fd556, %fd554, %fd553, %fd555;
	ld.global.nc.f64 	%fd557, [%rd112+16];
	fma.rn.f64 	%fd558, %fd556, %fd553, %fd557;
	ld.global.nc.f64 	%fd559, [%rd112+24];
	fma.rn.f64 	%fd560, %fd558, %fd553, %fd559;
	ld.global.nc.f64 	%fd561, [%rd112+32];
	fma.rn.f64 	%fd562, %fd560, %fd553, %fd561;
	ld.global.nc.f64 	%fd563, [%rd112+40];
	fma.rn.f64 	%fd564, %fd562, %fd553, %fd563;
	ld.global.nc.f64 	%fd565, [%rd112+48];
	@%p27 bra 	$L__BB0_147;
	bra.uni 	$L__BB0_119;
$L__BB0_147:
	mul.rn.f64 	%fd825, %fd84, %fd790;
	mov.b32 	%r495, 0;
	bra.uni 	$L__BB0_121;
$L__BB0_119:
	cvt.rni.s32.f64 	%r495, %fd779;
	st.local.u32 	[%r1], %r495;
	cvt.rn.f64.s32 	%fd576, %r495;
	neg.f64 	%fd577, %fd576;
	fma.rn.f64 	%fd579, %fd577, %fd771, %fd84;
	fma.rn.f64 	%fd581, %fd577, %fd772, %fd579;
	fma.rn.f64 	%fd825, %fd577, %fd773, %fd581;
	setp.ltu.f64 	%p301, %fd778, 0d41E0000000000000;
	@%p301 bra 	$L__BB0_121;
	{ // callseq 18, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd84;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd825, [retval0+0];
	} // callseq 18
	ld.local.u32 	%r495, [%r1];
$L__BB0_121:
	.loc	1 0 26
	fma.rn.f64 	%fd278, %fd276, %fd265, %fd277;
	mov.f64 	%fd280, 0d3FF0000000000000;
	fma.rn.f64 	%fd310, %fd308, %fd297, %fd309;
	fma.rn.f64 	%fd342, %fd340, %fd329, %fd341;
	fma.rn.f64 	%fd374, %fd372, %fd361, %fd373;
	fma.rn.f64 	%fd406, %fd404, %fd393, %fd405;
	fma.rn.f64 	%fd438, %fd436, %fd425, %fd437;
	fma.rn.f64 	%fd470, %fd468, %fd457, %fd469;
	fma.rn.f64 	%fd502, %fd500, %fd489, %fd501;
	.loc	1 52 26
	fma.rn.f64 	%fd534, %fd532, %fd521, %fd533;
	fma.rn.f64 	%fd566, %fd564, %fd553, %fd565;
	and.b32  	%r404, %r495, 1;
	shl.b32 	%r405, %r404, 3;
	mul.wide.u32 	%rd114, %r405, 8;
	add.s64 	%rd116, %rd75, %rd114;
	mul.rn.f64 	%fd585, %fd825, %fd825;
	setp.eq.s32 	%p302, %r404, 0;
	selp.f64 	%fd586, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p302;
	ld.global.nc.f64 	%fd587, [%rd116+8];
	fma.rn.f64 	%fd588, %fd586, %fd585, %fd587;
	ld.global.nc.f64 	%fd589, [%rd116+16];
	fma.rn.f64 	%fd590, %fd588, %fd585, %fd589;
	ld.global.nc.f64 	%fd591, [%rd116+24];
	fma.rn.f64 	%fd592, %fd590, %fd585, %fd591;
	ld.global.nc.f64 	%fd593, [%rd116+32];
	fma.rn.f64 	%fd594, %fd592, %fd585, %fd593;
	ld.global.nc.f64 	%fd595, [%rd116+40];
	fma.rn.f64 	%fd596, %fd594, %fd585, %fd595;
	ld.global.nc.f64 	%fd597, [%rd116+48];
	fma.rn.f64 	%fd598, %fd596, %fd585, %fd597;
	@%p28 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_122;
$L__BB0_148:
	mul.rn.f64 	%fd826, %fd85, %fd790;
	mov.b32 	%r496, 0;
	bra.uni 	$L__BB0_124;
$L__BB0_122:
	cvt.rni.s32.f64 	%r496, %fd781;
	st.local.u32 	[%r1], %r496;
	cvt.rn.f64.s32 	%fd608, %r496;
	neg.f64 	%fd609, %fd608;
	fma.rn.f64 	%fd611, %fd609, %fd771, %fd85;
	fma.rn.f64 	%fd613, %fd609, %fd772, %fd611;
	fma.rn.f64 	%fd826, %fd609, %fd773, %fd613;
	setp.ltu.f64 	%p304, %fd780, 0d41E0000000000000;
	@%p304 bra 	$L__BB0_124;
	{ // callseq 19, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd826, [retval0+0];
	} // callseq 19
	ld.local.u32 	%r496, [%r1];
$L__BB0_124:
	.loc	1 0 26
	fma.rn.f64 	%fd279, %fd278, %fd808, %fd808;
	fma.rn.f64 	%fd281, %fd278, %fd265, %fd280;
	fma.rn.f64 	%fd311, %fd310, %fd810, %fd810;
	fma.rn.f64 	%fd313, %fd310, %fd297, %fd280;
	fma.rn.f64 	%fd343, %fd342, %fd812, %fd812;
	fma.rn.f64 	%fd345, %fd342, %fd329, %fd280;
	fma.rn.f64 	%fd375, %fd374, %fd814, %fd814;
	fma.rn.f64 	%fd377, %fd374, %fd361, %fd280;
	fma.rn.f64 	%fd407, %fd406, %fd816, %fd816;
	fma.rn.f64 	%fd409, %fd406, %fd393, %fd280;
	fma.rn.f64 	%fd439, %fd438, %fd818, %fd818;
	fma.rn.f64 	%fd441, %fd438, %fd425, %fd280;
	fma.rn.f64 	%fd471, %fd470, %fd820, %fd820;
	fma.rn.f64 	%fd473, %fd470, %fd457, %fd280;
	fma.rn.f64 	%fd503, %fd502, %fd822, %fd822;
	fma.rn.f64 	%fd505, %fd502, %fd489, %fd280;
	.loc	1 52 26
	fma.rn.f64 	%fd535, %fd534, %fd823, %fd823;
	fma.rn.f64 	%fd537, %fd534, %fd521, %fd280;
	fma.rn.f64 	%fd567, %fd566, %fd824, %fd824;
	fma.rn.f64 	%fd569, %fd566, %fd553, %fd280;
	fma.rn.f64 	%fd599, %fd598, %fd825, %fd825;
	fma.rn.f64 	%fd601, %fd598, %fd585, %fd280;
	and.b32  	%r408, %r496, 1;
	shl.b32 	%r409, %r408, 3;
	mul.wide.u32 	%rd118, %r409, 8;
	add.s64 	%rd120, %rd75, %rd118;
	mul.rn.f64 	%fd617, %fd826, %fd826;
	setp.eq.s32 	%p305, %r408, 0;
	selp.f64 	%fd618, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p305;
	ld.global.nc.f64 	%fd619, [%rd120+8];
	fma.rn.f64 	%fd620, %fd618, %fd617, %fd619;
	ld.global.nc.f64 	%fd621, [%rd120+16];
	fma.rn.f64 	%fd622, %fd620, %fd617, %fd621;
	ld.global.nc.f64 	%fd623, [%rd120+24];
	fma.rn.f64 	%fd624, %fd622, %fd617, %fd623;
	ld.global.nc.f64 	%fd625, [%rd120+32];
	fma.rn.f64 	%fd626, %fd624, %fd617, %fd625;
	ld.global.nc.f64 	%fd627, [%rd120+40];
	fma.rn.f64 	%fd628, %fd626, %fd617, %fd627;
	ld.global.nc.f64 	%fd629, [%rd120+48];
	fma.rn.f64 	%fd630, %fd628, %fd617, %fd629;
	fma.rn.f64 	%fd631, %fd630, %fd826, %fd826;
	fma.rn.f64 	%fd633, %fd630, %fd617, %fd280;
	@%p29 bra 	$L__BB0_149;
	bra.uni 	$L__BB0_125;
$L__BB0_149:
	mul.rn.f64 	%fd827, %fd86, %fd790;
	mov.b32 	%r497, 0;
	bra.uni 	$L__BB0_127;
$L__BB0_125:
	cvt.rni.s32.f64 	%r497, %fd783;
	st.local.u32 	[%r1], %r497;
	cvt.rn.f64.s32 	%fd640, %r497;
	neg.f64 	%fd641, %fd640;
	fma.rn.f64 	%fd643, %fd641, %fd771, %fd86;
	fma.rn.f64 	%fd645, %fd641, %fd772, %fd643;
	fma.rn.f64 	%fd827, %fd641, %fd773, %fd645;
	setp.ltu.f64 	%p307, %fd782, 0d41E0000000000000;
	@%p307 bra 	$L__BB0_127;
	{ // callseq 20, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd86;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd827, [retval0+0];
	} // callseq 20
	ld.local.u32 	%r497, [%r1];
$L__BB0_127:
	.loc	1 0 26
	selp.f64 	%fd282, %fd279, %fd281, %p258;
	and.b32  	%r345, %r478, 2;
	mov.f64 	%fd284, 0dBFF0000000000000;
	selp.f64 	%fd314, %fd311, %fd313, %p263;
	and.b32  	%r352, %r480, 2;
	selp.f64 	%fd346, %fd343, %fd345, %p268;
	and.b32  	%r359, %r482, 2;
	selp.f64 	%fd378, %fd375, %fd377, %p273;
	and.b32  	%r366, %r484, 2;
	selp.f64 	%fd410, %fd407, %fd409, %p278;
	and.b32  	%r373, %r486, 2;
	selp.f64 	%fd442, %fd439, %fd441, %p283;
	and.b32  	%r380, %r488, 2;
	selp.f64 	%fd474, %fd471, %fd473, %p288;
	and.b32  	%r387, %r490, 2;
	selp.f64 	%fd506, %fd503, %fd505, %p293;
	and.b32  	%r394, %r492, 2;
	.loc	1 52 26
	selp.f64 	%fd538, %fd535, %fd537, %p296;
	and.b32  	%r398, %r493, 2;
	selp.f64 	%fd570, %fd567, %fd569, %p299;
	and.b32  	%r402, %r494, 2;
	selp.f64 	%fd602, %fd599, %fd601, %p302;
	and.b32  	%r406, %r495, 2;
	selp.f64 	%fd634, %fd631, %fd633, %p305;
	and.b32  	%r410, %r496, 2;
	and.b32  	%r412, %r497, 1;
	shl.b32 	%r413, %r412, 3;
	mul.wide.u32 	%rd122, %r413, 8;
	add.s64 	%rd124, %rd75, %rd122;
	mul.rn.f64 	%fd649, %fd827, %fd827;
	setp.eq.s32 	%p308, %r412, 0;
	selp.f64 	%fd650, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p308;
	ld.global.nc.f64 	%fd651, [%rd124+8];
	fma.rn.f64 	%fd652, %fd650, %fd649, %fd651;
	ld.global.nc.f64 	%fd653, [%rd124+16];
	fma.rn.f64 	%fd654, %fd652, %fd649, %fd653;
	ld.global.nc.f64 	%fd655, [%rd124+24];
	fma.rn.f64 	%fd656, %fd654, %fd649, %fd655;
	ld.global.nc.f64 	%fd657, [%rd124+32];
	fma.rn.f64 	%fd658, %fd656, %fd649, %fd657;
	ld.global.nc.f64 	%fd659, [%rd124+40];
	fma.rn.f64 	%fd660, %fd658, %fd649, %fd659;
	ld.global.nc.f64 	%fd661, [%rd124+48];
	fma.rn.f64 	%fd662, %fd660, %fd649, %fd661;
	fma.rn.f64 	%fd663, %fd662, %fd827, %fd827;
	fma.rn.f64 	%fd665, %fd662, %fd649, %fd280;
	selp.f64 	%fd666, %fd663, %fd665, %p308;
	and.b32  	%r414, %r497, 2;
	@%p30 bra 	$L__BB0_150;
	bra.uni 	$L__BB0_128;
$L__BB0_150:
	mul.rn.f64 	%fd828, %fd87, %fd790;
	mov.b32 	%r498, 0;
	bra.uni 	$L__BB0_130;
$L__BB0_128:
	cvt.rni.s32.f64 	%r498, %fd785;
	st.local.u32 	[%r1], %r498;
	cvt.rn.f64.s32 	%fd672, %r498;
	neg.f64 	%fd673, %fd672;
	fma.rn.f64 	%fd675, %fd673, %fd771, %fd87;
	fma.rn.f64 	%fd677, %fd673, %fd772, %fd675;
	fma.rn.f64 	%fd828, %fd673, %fd773, %fd677;
	setp.ltu.f64 	%p310, %fd784, 0d41E0000000000000;
	@%p310 bra 	$L__BB0_130;
	{ // callseq 21, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd87;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd828, [retval0+0];
	} // callseq 21
	ld.local.u32 	%r498, [%r1];
$L__BB0_130:
	.loc	1 0 26
	setp.eq.s32 	%p259, %r345, 0;
	fma.rn.f64 	%fd285, %fd282, %fd284, %fd790;
	setp.eq.s32 	%p264, %r352, 0;
	fma.rn.f64 	%fd317, %fd314, %fd284, %fd790;
	setp.eq.s32 	%p269, %r359, 0;
	fma.rn.f64 	%fd349, %fd346, %fd284, %fd790;
	setp.eq.s32 	%p274, %r366, 0;
	fma.rn.f64 	%fd381, %fd378, %fd284, %fd790;
	setp.eq.s32 	%p279, %r373, 0;
	fma.rn.f64 	%fd413, %fd410, %fd284, %fd790;
	setp.eq.s32 	%p284, %r380, 0;
	fma.rn.f64 	%fd445, %fd442, %fd284, %fd790;
	setp.eq.s32 	%p289, %r387, 0;
	fma.rn.f64 	%fd477, %fd474, %fd284, %fd790;
	setp.eq.s32 	%p294, %r394, 0;
	fma.rn.f64 	%fd509, %fd506, %fd284, %fd790;
	.loc	1 52 26
	setp.eq.s32 	%p297, %r398, 0;
	fma.rn.f64 	%fd541, %fd538, %fd284, %fd790;
	setp.eq.s32 	%p300, %r402, 0;
	fma.rn.f64 	%fd573, %fd570, %fd284, %fd790;
	setp.eq.s32 	%p303, %r406, 0;
	fma.rn.f64 	%fd605, %fd602, %fd284, %fd790;
	setp.eq.s32 	%p306, %r410, 0;
	fma.rn.f64 	%fd637, %fd634, %fd284, %fd790;
	setp.eq.s32 	%p309, %r414, 0;
	fma.rn.f64 	%fd669, %fd666, %fd284, %fd790;
	and.b32  	%r416, %r498, 1;
	shl.b32 	%r417, %r416, 3;
	mul.wide.u32 	%rd126, %r417, 8;
	add.s64 	%rd128, %rd75, %rd126;
	mul.rn.f64 	%fd681, %fd828, %fd828;
	setp.eq.s32 	%p311, %r416, 0;
	selp.f64 	%fd682, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p311;
	ld.global.nc.f64 	%fd683, [%rd128+8];
	fma.rn.f64 	%fd684, %fd682, %fd681, %fd683;
	ld.global.nc.f64 	%fd685, [%rd128+16];
	fma.rn.f64 	%fd686, %fd684, %fd681, %fd685;
	ld.global.nc.f64 	%fd687, [%rd128+24];
	fma.rn.f64 	%fd688, %fd686, %fd681, %fd687;
	ld.global.nc.f64 	%fd689, [%rd128+32];
	fma.rn.f64 	%fd690, %fd688, %fd681, %fd689;
	ld.global.nc.f64 	%fd691, [%rd128+40];
	fma.rn.f64 	%fd692, %fd690, %fd681, %fd691;
	ld.global.nc.f64 	%fd693, [%rd128+48];
	fma.rn.f64 	%fd694, %fd692, %fd681, %fd693;
	fma.rn.f64 	%fd695, %fd694, %fd828, %fd828;
	fma.rn.f64 	%fd697, %fd694, %fd681, %fd280;
	selp.f64 	%fd698, %fd695, %fd697, %p311;
	and.b32  	%r418, %r498, 2;
	setp.eq.s32 	%p312, %r418, 0;
	fma.rn.f64 	%fd701, %fd698, %fd284, %fd790;
	@%p31 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_131;
$L__BB0_151:
	mul.rn.f64 	%fd829, %fd88, %fd790;
	mov.b32 	%r499, 0;
	bra.uni 	$L__BB0_133;
$L__BB0_131:
	cvt.rni.s32.f64 	%r499, %fd787;
	st.local.u32 	[%r1], %r499;
	cvt.rn.f64.s32 	%fd704, %r499;
	neg.f64 	%fd705, %fd704;
	fma.rn.f64 	%fd707, %fd705, %fd771, %fd88;
	fma.rn.f64 	%fd709, %fd705, %fd772, %fd707;
	fma.rn.f64 	%fd829, %fd705, %fd773, %fd709;
	setp.ltu.f64 	%p313, %fd786, 0d41E0000000000000;
	@%p313 bra 	$L__BB0_133;
	{ // callseq 22, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd88;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd829, [retval0+0];
	} // callseq 22
	ld.local.u32 	%r499, [%r1];
$L__BB0_133:
	.loc	1 0 26
	ld.param.u64 	%rd6, [triton__param_3];
	ld.param.u64 	%rd5, [triton__param_2];
	selp.f64 	%fd95, %fd282, %fd285, %p259;
	selp.f64 	%fd101, %fd314, %fd317, %p264;
	selp.f64 	%fd107, %fd346, %fd349, %p269;
	selp.f64 	%fd113, %fd378, %fd381, %p274;
	selp.f64 	%fd119, %fd410, %fd413, %p279;
	selp.f64 	%fd125, %fd442, %fd445, %p284;
	selp.f64 	%fd131, %fd474, %fd477, %p289;
	selp.f64 	%fd137, %fd506, %fd509, %p294;
	.loc	1 52 26
	selp.f64 	%fd142, %fd538, %fd541, %p297;
	selp.f64 	%fd147, %fd570, %fd573, %p300;
	selp.f64 	%fd152, %fd602, %fd605, %p303;
	selp.f64 	%fd157, %fd634, %fd637, %p306;
	selp.f64 	%fd162, %fd666, %fd669, %p309;
	selp.f64 	%fd167, %fd698, %fd701, %p312;
	and.b32  	%r420, %r499, 1;
	shl.b32 	%r421, %r420, 3;
	mul.wide.u32 	%rd130, %r421, 8;
	add.s64 	%rd132, %rd75, %rd130;
	mul.rn.f64 	%fd713, %fd829, %fd829;
	setp.eq.s32 	%p314, %r420, 0;
	selp.f64 	%fd714, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p314;
	ld.global.nc.f64 	%fd715, [%rd132+8];
	fma.rn.f64 	%fd716, %fd714, %fd713, %fd715;
	ld.global.nc.f64 	%fd717, [%rd132+16];
	fma.rn.f64 	%fd718, %fd716, %fd713, %fd717;
	ld.global.nc.f64 	%fd719, [%rd132+24];
	fma.rn.f64 	%fd720, %fd718, %fd713, %fd719;
	ld.global.nc.f64 	%fd721, [%rd132+32];
	fma.rn.f64 	%fd722, %fd720, %fd713, %fd721;
	ld.global.nc.f64 	%fd723, [%rd132+40];
	fma.rn.f64 	%fd724, %fd722, %fd713, %fd723;
	ld.global.nc.f64 	%fd725, [%rd132+48];
	fma.rn.f64 	%fd726, %fd724, %fd713, %fd725;
	fma.rn.f64 	%fd727, %fd726, %fd829, %fd829;
	fma.rn.f64 	%fd729, %fd726, %fd713, %fd280;
	selp.f64 	%fd730, %fd727, %fd729, %p314;
	and.b32  	%r422, %r499, 2;
	setp.eq.s32 	%p315, %r422, 0;
	fma.rn.f64 	%fd733, %fd730, %fd284, %fd790;
	selp.f64 	%fd172, %fd730, %fd733, %p315;
	@%p32 bra 	$L__BB0_152;
	bra.uni 	$L__BB0_134;
$L__BB0_152:
	.loc	1 0 26
	mov.b32 	%r500, 0;
	.loc	1 52 26
	mul.rn.f64 	%fd830, %fd89, %fd790;
	bra.uni 	$L__BB0_136;
$L__BB0_134:
	cvt.rni.s32.f64 	%r500, %fd789;
	st.local.u32 	[%r1], %r500;
	cvt.rn.f64.s32 	%fd736, %r500;
	neg.f64 	%fd737, %fd736;
	fma.rn.f64 	%fd739, %fd737, %fd771, %fd89;
	fma.rn.f64 	%fd741, %fd737, %fd772, %fd739;
	fma.rn.f64 	%fd830, %fd737, %fd773, %fd741;
	setp.ltu.f64 	%p316, %fd788, 0d41E0000000000000;
	@%p316 bra 	$L__BB0_136;
	{ // callseq 23, 0
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd89;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd830, [retval0+0];
	} // callseq 23
	ld.local.u32 	%r500, [%r1];
$L__BB0_136:
	and.b32  	%r440, %r500, 1;
	shl.b32 	%r441, %r440, 3;
	mul.wide.u32 	%rd138, %r441, 8;
	add.s64 	%rd140, %rd75, %rd138;
	mul.rn.f64 	%fd745, %fd830, %fd830;
	setp.eq.s32 	%p321, %r440, 0;
	selp.f64 	%fd746, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p321;
	ld.global.nc.f64 	%fd747, [%rd140+8];
	fma.rn.f64 	%fd748, %fd746, %fd745, %fd747;
	ld.global.nc.f64 	%fd749, [%rd140+16];
	fma.rn.f64 	%fd750, %fd748, %fd745, %fd749;
	ld.global.nc.f64 	%fd751, [%rd140+24];
	fma.rn.f64 	%fd752, %fd750, %fd745, %fd751;
	ld.global.nc.f64 	%fd753, [%rd140+32];
	fma.rn.f64 	%fd754, %fd752, %fd745, %fd753;
	ld.global.nc.f64 	%fd755, [%rd140+40];
	fma.rn.f64 	%fd756, %fd754, %fd745, %fd755;
	ld.global.nc.f64 	%fd757, [%rd140+48];
	fma.rn.f64 	%fd758, %fd756, %fd745, %fd757;
	fma.rn.f64 	%fd759, %fd758, %fd830, %fd830;
	fma.rn.f64 	%fd761, %fd758, %fd745, %fd280;
	selp.f64 	%fd762, %fd759, %fd761, %p321;
	and.b32  	%r442, %r500, 2;
	setp.eq.s32 	%p322, %r442, 0;
	fma.rn.f64 	%fd765, %fd762, %fd284, %fd790;
	selp.f64 	%fd766, %fd762, %fd765, %p322;
	.loc	1 51 21
	cvt.rn.f32.f64 	%f25, %fd137;
	cvt.rn.f32.f64 	%f26, %fd131;
	cvt.rn.f32.f64 	%f27, %fd125;
	cvt.rn.f32.f64 	%f28, %fd119;
	cvt.rn.f32.f64 	%f29, %fd113;
	cvt.rn.f32.f64 	%f30, %fd107;
	cvt.rn.f32.f64 	%f31, %fd101;
	cvt.rn.f32.f64 	%f32, %fd95;
	.loc	1 53 21
	cvt.rn.f32.f64 	%f33, %fd142;
	cvt.rn.f32.f64 	%f34, %fd147;
	cvt.rn.f32.f64 	%f35, %fd152;
	cvt.rn.f32.f64 	%f36, %fd157;
	cvt.rn.f32.f64 	%f37, %fd162;
	cvt.rn.f32.f64 	%f38, %fd167;
	cvt.rn.f32.f64 	%f39, %fd172;
	cvt.rn.f32.f64 	%f40, %fd766;
	.loc	1 54 35
	shl.b32 	%r443, %r19, 7;
	shl.b32 	%r444, %r20, 7;
	.loc	1 54 31
	add.s32 	%r445, %r443, %r21;
	add.s32 	%r446, %r444, %r21;
	.loc	1 54 25
	mul.wide.s32 	%rd141, %r445, 4;
	add.s64 	%rd134, %rd5, %rd141;
	mul.wide.s32 	%rd142, %r446, 4;
	add.s64 	%rd135, %rd5, %rd142;
	.loc	1 54 48
	mov.b32 	%r424, %f32;
	mov.b32 	%r425, %f31;
	mov.b32 	%r426, %f30;
	mov.b32 	%r427, %f29;
	// begin inline asm
	@%p317 st.global.v4.b32 [ %rd134 + 0 ], { %r424, %r425, %r426, %r427 };
	// end inline asm
	mov.b32 	%r428, %f28;
	mov.b32 	%r429, %f27;
	mov.b32 	%r430, %f26;
	mov.b32 	%r431, %f25;
	// begin inline asm
	@%p318 st.global.v4.b32 [ %rd135 + 0 ], { %r428, %r429, %r430, %r431 };
	// end inline asm
	.loc	1 55 25
	add.s64 	%rd136, %rd6, %rd141;
	add.s64 	%rd137, %rd6, %rd142;
	.loc	1 55 48
	mov.b32 	%r432, %f33;
	mov.b32 	%r433, %f34;
	mov.b32 	%r434, %f35;
	mov.b32 	%r435, %f36;
	// begin inline asm
	@%p317 st.global.v4.b32 [ %rd136 + 0 ], { %r432, %r433, %r434, %r435 };
	// end inline asm
	mov.b32 	%r436, %f37;
	mov.b32 	%r437, %f38;
	mov.b32 	%r438, %f39;
	mov.b32 	%r439, %f40;
	// begin inline asm
	@%p318 st.global.v4.b32 [ %rd137 + 0 ], { %r436, %r437, %r438, %r439 };
	// end inline asm
	.loc	1 55 4
	ret;
$L__tmp1:
$L__func_end0:

}
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<86>;
	.reg .f64 	%fd<5>;
$L__func_begin1:

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd4;
	}
	bfe.u32 	%r4, %r22, 20, 11;
	setp.eq.s32 	%p1, %r4, 2047;
	@%p1 bra 	$L__BB1_13;
	add.u64 	%rd27, %SP, 0;
	{ .reg .b64 %tmp;
	  cvta.to.local.u64 	%tmp, %rd27;
	  cvt.u32.u64 	%r1, %tmp; }
	shr.u32 	%r3, %r22, 20;
	add.s32 	%r23, %r4, -1024;
	shr.u32 	%r5, %r23, 6;
	mov.b32 	%r24, 15;
	sub.s32 	%r43, %r24, %r5;
	mov.b32 	%r25, 19;
	sub.s32 	%r26, %r25, %r5;
	setp.lt.u32 	%p2, %r23, 128;
	selp.b32 	%r45, 18, %r26, %p2;
	setp.ge.s32 	%p3, %r43, %r45;
	@%p3 bra 	$L__BB1_14;
	mov.b64 	%rd28, %fd4;
	shl.b64 	%rd29, %rd28, 11;
	or.b64  	%rd38, %rd29, -9223372036854775808;
	neg.s32 	%r44, %r5;
	mul.wide.s32 	%rd32, %r44, 8;
	mov.u64 	%rd33, __cudart_i2opi_d;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd77, %rd34, 120;
	mov.u64 	%rd79, 0;
	mov.u32 	%r42, %r1;
$L__BB1_3:
	.pragma "nounroll";
	ld.global.nc.u64 	%rd37, [%rd77];
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd37;    
	mov.b64         {blo,bhi}, %rd38;    
	mov.b64         {clo,chi}, %rd79;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd35, {r0,r1};      
	mov.b64         %rd79, {r2,r3};      
	}
	// end inline asm
	st.local.u64 	[%r42], %rd35;
	add.s32 	%r43, %r43, 1;
	add.s32 	%r42, %r42, 8;
	add.s64 	%rd77, %rd77, 8;
	setp.lt.s32 	%p4, %r43, %r45;
	@%p4 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_4;
$L__BB1_14:
	neg.s32 	%r44, %r5;
	mov.u64 	%rd79, 0;
	mov.u32 	%r45, %r43;
$L__BB1_4:
	ld.param.u64 	%rd26, [__internal_trig_reduction_slowpathd_param_1];
	and.b32  	%r46, %r22, -2147483648;
	sub.s32 	%r27, %r45, %r44;
	shl.b32 	%r28, %r27, 3;
	add.s32 	%r29, %r1, %r28;
	st.local.u64 	[%r29+-120], %rd79;
	and.b32  	%r16, %r3, 63;
	ld.local.u64 	%rd81, [%r1+16];
	ld.local.u64 	%rd80, [%r1+24];
	setp.eq.s32 	%p5, %r16, 0;
	mov.b32 	%r41, 64;
	@%p5 bra 	$L__BB1_6;
	sub.s32 	%r31, %r41, %r16;
	shl.b64 	%rd40, %rd80, %r16;
	shr.u64 	%rd41, %rd81, %r31;
	or.b64  	%rd80, %rd40, %rd41;
	shl.b64 	%rd42, %rd81, %r16;
	ld.local.u64 	%rd43, [%r1+8];
	shr.u64 	%rd44, %rd43, %r31;
	or.b64  	%rd81, %rd44, %rd42;
$L__BB1_6:
	shr.u64 	%rd45, %rd80, 62;
	cvt.u32.u64 	%r32, %rd45;
	shr.u64 	%rd46, %rd81, 62;
	shl.b64 	%rd47, %rd80, 2;
	or.b64  	%rd84, %rd47, %rd46;
	shl.b64 	%rd83, %rd81, 2;
	bfe.u64 	%rd48, %rd80, 61, 1;
	cvt.u32.u64 	%r33, %rd48;
	add.s32 	%r34, %r33, %r32;
	setp.eq.s32 	%p6, %r46, 0;
	neg.s32 	%r35, %r34;
	selp.b32 	%r36, %r34, %r35, %p6;
	st.u32 	[%rd26], %r36;
	setp.gt.s64 	%p7, %rd84, -1;
	@%p7 bra 	$L__BB1_8;
	xor.b32  	%r46, %r46, -2147483648;
	mov.u64 	%rd51, 0;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd51;
	mov.b64         {a2,a3}, %rd51;
	mov.b64         {b0,b1}, %rd83;
	mov.b64         {b2,b3}, %rd84;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd83, {r0,r1};
	mov.b64         %rd84, {r2,r3};
	}
	// end inline asm
$L__BB1_8:
	clz.b64 	%r47, %rd84;
	setp.eq.s32 	%p8, %r47, 0;
	@%p8 bra 	$L__BB1_10;
	shl.b64 	%rd55, %rd84, %r47;
	sub.s32 	%r38, %r41, %r47;
	shr.u64 	%rd56, %rd83, %r38;
	or.b64  	%rd84, %rd56, %rd55;
$L__BB1_10:
	mov.u64 	%rd60, -3958705157555305931;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd84;   
	mov.b64         {blo,bhi}, %rd60;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd63, {r0,r1};     
	mov.b64         %rd85, {r2,r3};     
	}
	// end inline asm
	setp.lt.s64 	%p9, %rd85, 1;
	@%p9 bra 	$L__BB1_12;
	add.s32 	%r47, %r47, 1;
	// begin inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd63;
	mov.b64         {a2,a3}, %rd85;
	mov.b64         {b0,b1}, %rd63;
	mov.b64         {b2,b3}, %rd85;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd61, {r0,r1};
	mov.b64         %rd85, {r2,r3};
	}
	// end inline asm
$L__BB1_12:
	mov.b32 	%r39, 1022;
	sub.s32 	%r40, %r39, %r47;
	cvt.u64.u32 	%rd67, %r40;
	cvt.u64.u32 	%rd68, %r46;
	shl.b64 	%rd69, %rd68, 32;
	shl.b64 	%rd70, %rd67, 52;
	add.s64 	%rd71, %rd85, 1;
	shr.u64 	%rd72, %rd71, 10;
	add.s64 	%rd73, %rd72, 1;
	shr.u64 	%rd74, %rd73, 1;
	add.s64 	%rd75, %rd70, %rd74;
	or.b64  	%rd76, %rd75, %rd69;
	mov.b64 	%fd4, %rd76;
$L__BB1_13:
	st.param.f64 	[func_retval0+0], %fd4;
	ret;
$L__func_end1:

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<134>;
$L__func_begin2:

	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd12;
	}
	shr.u32 	%r50, %r49, 20;
	setp.gt.u32 	%p1, %r49, 1048575;
	@%p1 bra 	$L__BB2_2;
	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd13;
	}
	shr.u32 	%r16, %r49, 20;
	add.s32 	%r50, %r16, -54;
$L__BB2_2:
	ld.param.f64 	%fd11, [__internal_accurate_pow_param_1];
	add.s32 	%r51, %r50, -1023;
	and.b32  	%r17, %r49, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd132, {%r48, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB2_4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd132;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd132;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd132, {%r19, %r21};
	add.s32 	%r51, %r50, -1022;
$L__BB2_4:
	add.f64 	%fd14, %fd132, 0dBFF0000000000000;
	add.f64 	%fd15, %fd132, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd15;
	neg.f64 	%fd17, %fd15;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd16, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd16, %fd16;
	mul.f64 	%fd22, %fd14, %fd21;
	fma.rn.f64 	%fd23, %fd14, %fd21, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd14, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd14, %fd39;
	mul.f64 	%fd42, %fd21, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd48, %fd43, %fd47;
	sub.f64 	%fd49, %fd43, %fd48;
	add.f64 	%fd50, %fd47, %fd49;
	mul.rn.f64 	%fd51, %fd23, %fd23;
	neg.f64 	%fd52, %fd51;
	fma.rn.f64 	%fd53, %fd23, %fd23, %fd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd54, {%r22, %r24};
	fma.rn.f64 	%fd55, %fd23, %fd54, %fd53;
	mul.rn.f64 	%fd56, %fd51, %fd23;
	neg.f64 	%fd57, %fd56;
	fma.rn.f64 	%fd58, %fd51, %fd23, %fd57;
	fma.rn.f64 	%fd59, %fd51, %fd42, %fd58;
	fma.rn.f64 	%fd60, %fd55, %fd23, %fd59;
	mul.rn.f64 	%fd61, %fd48, %fd56;
	neg.f64 	%fd62, %fd61;
	fma.rn.f64 	%fd63, %fd48, %fd56, %fd62;
	fma.rn.f64 	%fd64, %fd48, %fd60, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd56, %fd64;
	add.f64 	%fd66, %fd61, %fd65;
	sub.f64 	%fd67, %fd61, %fd66;
	add.f64 	%fd68, %fd65, %fd67;
	add.f64 	%fd69, %fd23, %fd66;
	sub.f64 	%fd70, %fd23, %fd69;
	add.f64 	%fd71, %fd66, %fd70;
	add.f64 	%fd72, %fd68, %fd71;
	fma.rn.f64 	%fd73, %fd21, %fd41, %fd72;
	add.f64 	%fd74, %fd69, %fd73;
	sub.f64 	%fd75, %fd69, %fd74;
	add.f64 	%fd76, %fd73, %fd75;
	xor.b32  	%r25, %r51, -2147483648;
	mov.b32 	%r26, 1127219200;
	mov.b64 	%fd77, {%r25, %r26};
	mov.b32 	%r27, -2147483648;
	mov.b64 	%fd78, {%r27, %r26};
	sub.f64 	%fd79, %fd77, %fd78;
	mov.f64 	%fd80, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd81, %fd79, %fd80, %fd74;
	neg.f64 	%fd82, %fd79;
	fma.rn.f64 	%fd83, %fd82, %fd80, %fd81;
	sub.f64 	%fd84, %fd83, %fd74;
	sub.f64 	%fd85, %fd76, %fd84;
	mov.f64 	%fd86, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd87, %fd79, %fd86, %fd85;
	add.f64 	%fd88, %fd81, %fd87;
	sub.f64 	%fd89, %fd81, %fd88;
	add.f64 	%fd90, %fd87, %fd89;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd11;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd11;
	}
	shl.b32 	%r30, %r28, 1;
	setp.gt.u32 	%p3, %r30, -33554433;
	and.b32  	%r31, %r28, -15728641;
	selp.b32 	%r32, %r31, %r28, %p3;
	mov.b64 	%fd91, {%r29, %r32};
	mul.rn.f64 	%fd4, %fd88, %fd91;
	neg.f64 	%fd92, %fd4;
	fma.rn.f64 	%fd93, %fd88, %fd91, %fd92;
	fma.rn.f64 	%fd5, %fd90, %fd91, %fd93;
	add.f64 	%fd6, %fd4, %fd5;
	mov.f64 	%fd94, 0d4338000000000000;
	mov.f64 	%fd95, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd96, %fd6, %fd95, %fd94;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd96;
	}
	mov.f64 	%fd97, 0dC338000000000000;
	add.rn.f64 	%fd98, %fd96, %fd97;
	mov.f64 	%fd99, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd100, %fd98, %fd99, %fd6;
	mov.f64 	%fd101, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd102, %fd98, %fd101, %fd100;
	mov.f64 	%fd103, 0d3E928AF3FCA213EA;
	mov.f64 	%fd104, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd105, %fd104, %fd102, %fd103;
	mov.f64 	%fd106, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd107, %fd105, %fd102, %fd106;
	mov.f64 	%fd108, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd109, %fd107, %fd102, %fd108;
	mov.f64 	%fd110, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd111, %fd109, %fd102, %fd110;
	mov.f64 	%fd112, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd113, %fd111, %fd102, %fd112;
	mov.f64 	%fd114, 0d3F81111111122322;
	fma.rn.f64 	%fd115, %fd113, %fd102, %fd114;
	mov.f64 	%fd116, 0d3FA55555555502A1;
	fma.rn.f64 	%fd117, %fd115, %fd102, %fd116;
	mov.f64 	%fd118, 0d3FC5555555555511;
	fma.rn.f64 	%fd119, %fd117, %fd102, %fd118;
	mov.f64 	%fd120, 0d3FE000000000000B;
	fma.rn.f64 	%fd121, %fd119, %fd102, %fd120;
	fma.rn.f64 	%fd122, %fd121, %fd102, %fd18;
	fma.rn.f64 	%fd123, %fd122, %fd102, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd123;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd123;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd133, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd6;
	}
	mov.b32 	%f2, %r35;
	abs.ftz.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB2_7;
	setp.lt.f64 	%p5, %fd6, 0d0000000000000000;
	add.f64 	%fd124, %fd6, 0d7FF0000000000000;
	selp.f64 	%fd133, 0d0000000000000000, %fd124, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB2_7;
	shr.u32 	%r36, %r13, 31;
	add.s32 	%r37, %r13, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd125, {%r14, %r40};
	sub.s32 	%r41, %r13, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.b32 	%r44, 0;
	mov.b64 	%fd126, {%r44, %r43};
	mul.f64 	%fd133, %fd126, %fd125;
$L__BB2_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd133;
	}
	and.b32  	%r47, %r46, 2147483647;
	setp.eq.s32 	%p7, %r47, 2146435072;
	setp.eq.s32 	%p8, %r45, 0;
	sub.f64 	%fd127, %fd4, %fd6;
	add.f64 	%fd128, %fd5, %fd127;
	fma.rn.f64 	%fd129, %fd133, %fd128, %fd133;
	selp.f64 	%fd130, %fd133, %fd129, %p8;
	selp.f64 	%fd131, %fd130, %fd129, %p7;
	st.param.f64 	[func_retval0+0], %fd131;
	ret;
$L__func_end2:

}
	.file	1 "/opt/inductor_cache/7n/c7nstbowtgi55jtwomxgxgq6lxqdhex7xlu6bo3bor2b7w3fuzu2.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 116
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 55
.b8 110
.b8 115
.b8 116
.b8 98
.b8 111
.b8 119
.b8 116
.b8 103
.b8 105
.b8 53
.b8 53
.b8 106
.b8 116
.b8 119
.b8 111
.b8 109
.b8 120
.b8 103
.b8 120
.b8 103
.b8 113
.b8 54
.b8 108
.b8 120
.b8 113
.b8 100
.b8 104
.b8 101
.b8 120
.b8 55
.b8 120
.b8 108
.b8 117
.b8 54
.b8 98
.b8 111
.b8 51
.b8 98
.b8 111
.b8 114
.b8 50
.b8 98
.b8 55
.b8 119
.b8 51
.b8 102
.b8 117
.b8 122
.b8 117
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 110
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
